{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/SurfLocation.js\";\nimport React, { useState } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport WaveUtils from '../utils/WaveUtils.js';\nimport Tide from './Tide.js';\nimport WaterTemp from './WaterTemp.js';\nimport AirTemp from './AirTemp.js';\nimport WindDirection from './WindDirection.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport Dialog from '../functional/Dialog.js';\nimport swell1 from '../../assets/images/wavePrimary.png';\nimport swell2 from '../../assets/images/waveSecondaryB.png';\nimport N from '../../assets/images/windN.png';\nimport NE from '../../assets/images/windNE.png';\nimport E from '../../assets/images/windE.png';\nimport SE from '../../assets/images/windSE.png';\nimport S from '../../assets/images/windS.png';\nimport SW from '../../assets/images/windSW.png';\nimport W from '../../assets/images/windW.png';\nimport NW from '../../assets/images/windNW.png';\nimport tide from '../../assets/images/tide.png';\nimport PostDirectory from './PostDirectory.js';\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\n\nconst SurfLocation = ({\n  state,\n  item,\n  matches,\n  regionMatch\n}) => {\n  const {\n    edit,\n    windDirection,\n    windSpeed,\n    windGusts,\n    swell1Direction,\n    swell2Direction,\n    swell1Angle,\n    swell2Angle,\n    swell1Height,\n    swell2Height,\n    swell1Interval,\n    swell2Interval,\n    tide,\n    height,\n    stars\n  } = state;\n  const [status, setStatus] = useState({\n    module: 'SurfLocation',\n    logged: false,\n    edit: edit,\n    windDirection: windDirection,\n    windSpeed: windSpeed,\n    windGusts: windGusts,\n    swell1Direction: swell1Direction,\n    swell2Direction: swell2Direction,\n    swell1Angle: swell1Angle,\n    swell2Angle: swell2Angle,\n    swell1Height: swell1Height,\n    swell2Height: swell2Height,\n    swell1Interval: swell1Interval,\n    swell2Interval: swell2Interval,\n    tide: tide,\n    height: height,\n    stars: stars\n  });\n  const posts = new PostDirectory();\n\n  const getStarKind = kind => {\n    let classes = \"shaka r-20 p-2\";\n    classes = kind === \"wind\" ? classes + \" bg-white\" : classes;\n    return classes;\n  };\n\n  const getTideIcon = /*#__PURE__*/React.createElement(\"img\", {\n    src: tide,\n    className: `mb--5 ${getStarKind(\"tide\")}`,\n    alt: \"tide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  });\n\n  const getSwellIcon = id => {\n    if (id === 1) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: swell1,\n        className: `mb--5 ${getStarKind(\"tide\")}`,\n        alt: \"swell1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: swell2,\n        className: `mb--5 ${getStarKind(\"tide\")}`,\n        alt: \"swell2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  const getWindIcon = () => {\n    const windDirection = status.windDirection;\n\n    if (windDirection === \"N\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: N,\n        className: `mb--5 ${getStarKind(\"tide\")}`,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"NE\" || windDirection === \"NNE\" || windDirection === \"ENE\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: NE,\n        className: `mb--5 ${getStarKind(\"tide\")}`,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"E\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: E,\n        className: `mb--5 ${getStarKind(\"tide\")}`,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"SE\" || windDirection === \"SSE\" || windDirection === \"ESE\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: SE,\n        className: `mb--5 ${getStarKind(\"tide\")}`,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"S\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: S,\n        className: `mb--5 ${getStarKind(\"tide\")}`,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"SW\" || windDirection === \"SSW\" || windDirection === \"WSW\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: SW,\n        className: `mb--5 ${getStarKind(\"tide\")}`,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"W\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: W,\n        className: `mb--5 ${getStarKind(\"tide\")}`,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"NW\" || windDirection === \"NNW\" || windDirection === \"WNW\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: NW,\n        className: `mb--5 ${getStarKind(\"tide\")}`,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  const getMatchIcon = kind => {\n    let icon = kind === \"swell1\" ? \"swell1\" : \"swell2\";\n    icon = kind === \"wind\" ? \"wind\" : icon;\n    icon = kind === \"tide\" ? \"tide\" : icon;\n\n    if (kind === \"swell1\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: swell1,\n        className: getStarKind(kind),\n        alt: kind,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 20\n        }\n      });\n    } else if (kind === \"swell2\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: swell2,\n        className: getStarKind(kind),\n        alt: kind,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 20\n        }\n      });\n    } else if (kind === \"tide\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: tide,\n        className: getStarKind(kind),\n        alt: kind,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 20\n        }\n      });\n    } else if (kind === \"wind\") {\n      const windDirection = status.windDirection;\n\n      if (windDirection === \"N\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: N,\n          className: getStarKind(kind),\n          alt: kind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 24\n          }\n        });\n      } else if (windDirection === \"NE\" || windDirection === \"NNE\" || windDirection === \"ENE\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: NE,\n          className: getStarKind(kind),\n          alt: kind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 24\n          }\n        });\n      } else if (windDirection === \"E\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: E,\n          className: getStarKind(kind),\n          alt: kind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 24\n          }\n        });\n      } else if (windDirection === \"SE\" || windDirection === \"SSE\" || windDirection === \"ESE\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: SE,\n          className: getStarKind(kind),\n          alt: kind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 24\n          }\n        });\n      } else if (windDirection === \"S\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: S,\n          className: getStarKind(kind),\n          alt: kind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 24\n          }\n        });\n      } else if (windDirection === \"SW\" || windDirection === \"SSW\" || windDirection === \"WSW\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: SW,\n          className: getStarKind(kind),\n          alt: kind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 24\n          }\n        });\n      } else if (windDirection === \"W\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: W,\n          className: getStarKind(kind),\n          alt: kind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 24\n          }\n        });\n      } else if (windDirection === \"NW\" || windDirection === \"NNW\" || windDirection === \"WNW\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: NW,\n          className: getStarKind(kind),\n          alt: kind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 24\n          }\n        });\n      }\n    }\n  };\n\n  const secondsToSec = () => \"sec\";\n\n  const getStarDetails = kind => {\n    let details = \"\";\n    const {\n      height,\n      windSpeed,\n      windGusts,\n      swell1Height,\n      swell1Angle,\n      swell1Interval,\n      swell2Height,\n      swell2Angle,\n      swell2Interval\n    } = status;\n    details = kind === \"tide\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bold color-neogreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 39\n      }\n    }, height, \"'\") : details;\n    details = kind === \"wind\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bold color-neogreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 39\n      }\n    }, windSpeed, \"-\", windGusts, \"kts\") : details;\n    details = kind === \"swell1\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bold color-neogreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 46\n      }\n    }, `${swell1Height}${swell1Height.includes(\"ft\") ? \"\" : \"'\"}`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bold color-neogreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 151\n      }\n    }, swell1Angle, \"\\xB0\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bold color-neogreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 208\n      }\n    }, swell1Interval.replace(\" seconds\", secondsToSec()))) : details;\n    details = kind === \"swell2\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bold color-neogreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 46\n      }\n    }, `${swell2Height}${swell2Height.includes(\"ft\") ? \"\" : \"'\"}`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bold color-neogreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 151\n      }\n    }, swell2Angle, \"\\xB0\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bold color-neogreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 208\n      }\n    }, swell2Interval.replace(\" seconds\", secondsToSec()))) : details;\n    return details;\n  };\n\n  const getState = kind => {\n    const {\n      swell1Direction,\n      swell2Direction,\n      tide,\n      windDirection\n    } = status;\n\n    if (kind === \"swell1\") {\n      return swell1Direction;\n    } else if (kind === \"swell2\") {\n      return swell2Direction;\n    } else if (kind === \"tide\") {\n      return tide;\n    } else if (kind === \"wind\") {\n      return windDirection;\n    }\n  };\n\n  const star = matchKind => /*#__PURE__*/React.createElement(\"div\", {\n    key: getKey(\"star\"),\n    className: \"flex3Column bg-lite mr-5 ml-5 p-10 r-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, getMatchIcon(matchKind), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"greet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, getState(matchKind), getStarDetails(matchKind)));\n\n  const getStars = stars => stars.map(currentStar => star(currentStar));\n\n  const generateNewLogId = () => {\n    const date = new Date();\n    const st = date.toDateString().replace(/ /g, \"\");\n    const nd = date.toLocaleTimeString().replace(/ /g, \"\");\n    localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n    const newId = `${st}${nd}`;\n    console.log(`LogId: generateNewLogId => status.logId: ${newId}`);\n    return newId;\n  };\n\n  const goToLog = () => window.location.pathname = \"/reactor/SurfLog\";\n\n  const createLog = item => {\n    localStorage.setItem('spot', item.name);\n    const recordId = generateNewLogId();\n    let getCurrentTime = new Date();\n    const year = getCurrentTime.getFullYear();\n    const currentMonth = getCurrentTime.getMonth() + 1;\n    const month = currentMonth < 10 ? `0${currentMonth}` : currentMonth;\n    const currentDate = getCurrentTime.getDate();\n    const date = currentDate < 10 ? `0${currentDate}` : currentDate;\n    const currentHour = getCurrentTime.getHours();\n    const hours = currentHour < 10 ? `0${currentHour}` : currentHour;\n    const startHour = currentHour - 1 < 10 ? `0${currentHour - 1}` : currentHour - 1;\n    const currentMinutes = getCurrentTime.getMinutes();\n    const minutes = currentMinutes < 10 ? `0${currentMinutes}` : currentMinutes;\n    const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n    const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n    getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n\n    const getWaveHeight = height => {\n      const heights = [\"knee high\", \"waist high\", \"shoulder high\", \"head high\", \"over head\", \"foot over head\", \"couple of feet over head\", \"couple of feet over head\", \"couple of feet over head\", \"couple of feet over head\", \"couple of feet overhead\", \"double over head\", \"double over head\", \"double over head\", \"triple over head\", \"triple over head\", \"triple over head\", \"triple over head\"];\n      height = height.replace(\"ft\", \"\");\n      height = Number(height) - 1;\n      height = height < 0 ? heights[0] : heights[height];\n      return height;\n    };\n\n    const getWindMPH = () => {\n      let mph = Number(status.windGusts) + 1;\n      mph = mph + \"mph\";\n      return mph;\n    };\n\n    const getSurface = () => {\n      const surfaces = [\"oily glass\", \"glassy\", \"textured\", \"choppy\", \"victory at sea\"];\n      let surface = Math.floor((Number(status.windGusts) + 1) / 3);\n      surface = surfaces > 3 ? surfaces[4] : surfaces[surface];\n      return surface;\n    };\n\n    const getWindOrientation = () => {\n      const directions = {\n        \"N\": \"sideshore => lefts\",\n        \"NE\": \"sideshore => lefts\",\n        \"ENE\": \"offshore\",\n        \"NNE\": \"offshore\",\n        \"NW\": \"onshore\",\n        \"NNW\": \"sideshore => lefts\",\n        \"W\": \"onshore\",\n        \"WNW\": \"onshore\",\n        \"E\": \"offshore\",\n        \"ESE\": \"sideshore => rights\",\n        \"S\": \"sideshore => rights\",\n        \"SE\": \"sideshore => rights\",\n        \"SSE\": \"sideshore => rights\",\n        \"WSW\": \"onshore\",\n        \"SW\": \"sideshore => rights\",\n        \"SSW\": \"sideshore => rights\"\n      };\n      return directions[status.windDirection];\n    };\n\n    const getNotes = () => {\n      const {\n        height,\n        tide,\n        windDirection,\n        swell1Height,\n        swell1Angle,\n        swell1Direction,\n        swell1Interval\n      } = status;\n      let notes = `${swell1Height}(${getWaveHeight(swell1Height)})`;\n      notes = `${notes} out of the ${swell1Direction}`;\n      notes = `${notes}(${swell1Angle})`;\n      notes = `${notes} at ${swell1Interval}.`;\n      notes = `${notes} It was a ${tide} tide`;\n      notes = `${notes}(${Number(height).toFixed(0)}ft).`;\n      notes = `${notes} the wind was ${getWindOrientation()} out of the ${windDirection} at ${getWindMPH()}.`;\n      notes = `${notes} The conditions were ${getSurface()}.`;\n      return notes;\n    };\n\n    const logObj = {\n      Day: {\n        Date: `${year}-${month}-${date}T${hours}:${minutes}:00.000Z`,\n        Day: date,\n        Month: month,\n        Year: year\n      },\n      Location: {\n        Break: item.name\n      },\n      Surf: {\n        Height: getWaveHeight(status.swell1Height),\n        Report: status.swell1Height,\n        Shape: \"close-outs\"\n      },\n      Swell1: {\n        Height: status.swell1Height,\n        Direction: status.swell1Direction,\n        Angle: status.swell1Angle,\n        Interval: status.swell1Interval\n      },\n      Swell2: {\n        Height: status.swell2Height,\n        Direction: status.swell2Direction,\n        Angle: status.swell2Angle,\n        Interval: status.swell2Interval\n      },\n      Swell3: {\n        Height: \"1ft\",\n        Direction: \"NW\",\n        Angle: \"180\",\n        Interval: \"6 seconds\"\n      },\n      Tide: {\n        Phase: status.tide,\n        Height: Number(status.height).toFixed(0) + \"ft\"\n      },\n      Wind: {\n        Direction: status.windDirection,\n        Orientation: getWindOrientation(),\n        MPH: getWindMPH(),\n        Surface: getSurface()\n      },\n      Conditions: {\n        Conditions: \"Good\"\n      },\n      Comments: {\n        \"notes\": getNotes()\n      }\n    }; //return logObj;\n\n    let postDirectory = posts.getDirectory();\n    let post = \"\";\n\n    const logIt = () => {\n      postDirectory.push(recordId);\n      postDirectory = JSON.stringify(postDirectory);\n      console.log(`postDirectory: ${postDirectory}`);\n      post = JSON.stringify(logObj, null, 2);\n      console.log(`post: ${post}`);\n      localStorage.setItem(recordId, post); //localStorage.setItem(\"postDirectory\", postDirectory);\n\n      posts.add(recordId);\n    };\n\n    logIt();\n    goToLog();\n    /*\n    this.setState({\n        recordId: recordId,\n        logged: true\n    })\n    */\n  };\n\n  const logLocation = item => status.logged === true ? alert(\"log already exists\") : createLog(item);\n\n  const logLocationButton = item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 16\n      }\n    }, localStorage.getItem(\"edit\") === \"true\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(WaveUtils, {\n      state: status,\n      item: item,\n      logLocation: () => logLocation(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 33\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App button bg-yellow color-black p-10 r-10 mt-20\",\n      onClick: () => logLocation(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 25\n      }\n    }, \"Log Session\"));\n  };\n\n  const editLogButton = () => {\n    return /*#__PURE__*/React.createElement(Link, {\n      className: \"noUnderline\",\n      key: getKey(\"link\"),\n      to: {\n        pathname: '/SurfLog?logId=ThuApr3020209:19:28PM',\n        state: {\n          logId: status.recordId\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App button bg-yellow color-black p-10 r-10 mt-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }\n    }, \"Edit Log\"));\n  };\n\n  const statusClass = status => status === true ? \"color-neogreen\" : \"color-yellow\";\n\n  const subStatusClass = status => status === true ? \"color-orange\" : \"color-yellow\";\n\n  const swell1Match = item => item.swell.indexOf(swell1Direction) > -1 ? true : false;\n\n  const swell2Match = item => item.swell.indexOf(swell2Direction) > -1 ? true : false;\n\n  const windMatch = item => item.wind.indexOf(windDirection) > -1 ? true : false;\n\n  const tideMatch = item => item.tide.indexOf(tide) > -1 ? true : false;\n\n  const swell2DirectionMatch = direction => direction === swell2Direction ? true : false;\n\n  const windDirectionMatch = direction => direction.wind === windDirection ? true : false;\n\n  const tideDirectionMatch = direction => direction.tide === tide ? true : false;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: getKey(\"loc\")\n    /*onClick={() => this.props.editLocation()}*/\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"r-10 m-10 p-20 bg-dkGreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"width100Percent flexContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 21\n    }\n  }, getStars(matches)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-10 navBranding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"greet color-yellow p-5 bg-dkGreen mt-15 mb-10 r-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 21\n    }\n  }, `${regionMatch} miles`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexContainer m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"columnRight pr-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-neogreen bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 29\n    }\n  }, \"Swell: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-neogreen bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 29\n    }\n  }, \"Wind: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-neogreen bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 29\n    }\n  }, \"Tide: \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"columnLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 29\n    }\n  }, item.swell.map((swell, i) => /*#__PURE__*/React.createElement(\"span\", {\n    key: getKey(\"swell\"),\n    className: swell === status.swell1Direction ? statusClass(swell1Match(item)) : subStatusClass(swell2DirectionMatch(swell)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 64\n    }\n  }, swell, i + 1 === item.swell.length ? \"\" : \", \"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: statusClass(windMatch(item)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 29\n    }\n  }, item.wind.map((wind, i) => /*#__PURE__*/React.createElement(\"span\", {\n    key: getKey(\"wind\"),\n    className: statusClass(windDirectionMatch({\n      wind\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 61\n    }\n  }, wind, i + 1 === item.wind.length ? \"\" : \", \"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: statusClass(tideMatch(item)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 29\n    }\n  }, item.tide.map((tide, i) => /*#__PURE__*/React.createElement(\"span\", {\n    key: getKey(\"tide\"),\n    className: statusClass(tideDirectionMatch({\n      tide\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 102\n    }\n  }, tide, i + 1 === item.tide.length ? \"\" : \", \")))))), //(status.logged) ? editLogButton() : logLocationButton(item)\n  logLocationButton(item)));\n};\n\nexport default SurfLocation;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/SurfLocation.js"],"names":["React","useState","getKey","WaveUtils","Tide","WaterTemp","AirTemp","WindDirection","Selector","Dialog","swell1","swell2","N","NE","E","SE","S","SW","W","NW","tide","PostDirectory","BrowserRouter","Router","Switch","Link","Route","SurfLocation","state","item","matches","regionMatch","edit","windDirection","windSpeed","windGusts","swell1Direction","swell2Direction","swell1Angle","swell2Angle","swell1Height","swell2Height","swell1Interval","swell2Interval","height","stars","status","setStatus","module","logged","posts","getStarKind","kind","classes","getTideIcon","getSwellIcon","id","getWindIcon","getMatchIcon","icon","secondsToSec","getStarDetails","details","includes","replace","getState","star","matchKind","getStars","map","currentStar","generateNewLogId","date","Date","st","toDateString","nd","toLocaleTimeString","localStorage","setItem","newId","console","log","goToLog","window","location","pathname","createLog","name","recordId","getCurrentTime","year","getFullYear","currentMonth","getMonth","month","currentDate","getDate","currentHour","getHours","hours","startHour","currentMinutes","getMinutes","minutes","getEndTime","getStartTime","getWaveHeight","heights","Number","getWindMPH","mph","getSurface","surfaces","surface","Math","floor","getWindOrientation","directions","getNotes","notes","toFixed","logObj","Day","Month","Year","Location","Break","Surf","Height","Report","Shape","Swell1","Direction","Angle","Interval","Swell2","Swell3","Phase","Wind","Orientation","MPH","Surface","Conditions","Comments","postDirectory","getDirectory","post","logIt","push","JSON","stringify","add","logLocation","alert","logLocationButton","getItem","editLogButton","logId","statusClass","subStatusClass","swell1Match","swell","indexOf","swell2Match","windMatch","wind","tideMatch","swell2DirectionMatch","direction","windDirectionMatch","tideDirectionMatch","i","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,CAAP,MAAc,+BAAd;AACA,OAAOC,EAAP,MAAe,gCAAf;AACA,OAAOC,CAAP,MAAc,+BAAd;AACA,OAAOC,EAAP,MAAe,gCAAf;AACA,OAAOC,CAAP,MAAc,+BAAd;AACA,OAAOC,EAAP,MAAe,gCAAf;AACA,OAAOC,CAAP,MAAc,+BAAd;AACA,OAAOC,EAAP,MAAe,gCAAf;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,IAAzC,EAA+CC,KAA/C,QAA2D,kBAA3D;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA;AAAvB,CAAD,KAAyC;AAE1D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,aAAR;AAAuBC,IAAAA,SAAvB;AAAkCC,IAAAA,SAAlC;AAA6CC,IAAAA,eAA7C;AAA8DC,IAAAA,eAA9D;AAA+EC,IAAAA,WAA/E;AAA4FC,IAAAA,WAA5F;AAAyGC,IAAAA,YAAzG;AAAuHC,IAAAA,YAAvH;AAAqIC,IAAAA,cAArI;AAAqJC,IAAAA,cAArJ;AAAqKvB,IAAAA,IAArK;AAA2KwB,IAAAA,MAA3K;AAAmLC,IAAAA;AAAnL,MAA6LjB,KAAnM;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsB9C,QAAQ,CAAC;AACjC+C,IAAAA,MAAM,EAAE,cADyB;AAEjCC,IAAAA,MAAM,EAAE,KAFyB;AAGjCjB,IAAAA,IAAI,EAAEA,IAH2B;AAIjCC,IAAAA,aAAa,EAAEA,aAJkB;AAKjCC,IAAAA,SAAS,EAAEA,SALsB;AAMjCC,IAAAA,SAAS,EAAEA,SANsB;AAOjCC,IAAAA,eAAe,EAAEA,eAPgB;AAQjCC,IAAAA,eAAe,EAAEA,eARgB;AASjCC,IAAAA,WAAW,EAAEA,WAToB;AAUjCC,IAAAA,WAAW,EAAEA,WAVoB;AAWjCC,IAAAA,YAAY,EAAEA,YAXmB;AAYjCC,IAAAA,YAAY,EAAEA,YAZmB;AAajCC,IAAAA,cAAc,EAAEA,cAbiB;AAcjCC,IAAAA,cAAc,EAAEA,cAdiB;AAejCvB,IAAAA,IAAI,EAAEA,IAf2B;AAgBjCwB,IAAAA,MAAM,EAAEA,MAhByB;AAiBjCC,IAAAA,KAAK,EAAEA;AAjB0B,GAAD,CAApC;AAoBA,QAAMK,KAAK,GAAG,IAAI7B,aAAJ,EAAd;;AACA,QAAM8B,WAAW,GAAIC,IAAD,IAAU;AAC1B,QAAIC,OAAO,GAAG,gBAAd;AACAA,IAAAA,OAAO,GAAID,IAAI,KAAK,MAAV,GAAqBC,OAAO,GAAG,WAA/B,GAA8CA,OAAxD;AACA,WAAOA,OAAP;AACH,GAJD;;AAKA,QAAMC,WAAW,gBAAG;AAAK,IAAA,GAAG,EAAElC,IAAV;AAAgB,IAAA,SAAS,EAAG,SAAQ+B,WAAW,CAAC,MAAD,CAAS,EAAxD;AAA2D,IAAA,GAAG,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB;;AACA,QAAMI,YAAY,GAAIC,EAAD,IAAQ;AACzB,QAAIA,EAAE,KAAK,CAAX,EAAc;AACV,0BAAO;AAAK,QAAA,GAAG,EAAE9C,MAAV;AAAkB,QAAA,SAAS,EAAG,SAAQyC,WAAW,CAAC,MAAD,CAAS,EAA1D;AAA6D,QAAA,GAAG,EAAC,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO;AACH,0BAAO;AAAK,QAAA,GAAG,EAAExC,MAAV;AAAkB,QAAA,SAAS,EAAG,SAAQwC,WAAW,CAAC,MAAD,CAAS,EAA1D;AAA6D,QAAA,GAAG,EAAC,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ,GAND;;AAOA,QAAMM,WAAW,GAAG,MAAM;AACtB,UAAMxB,aAAa,GAAGa,MAAM,CAACb,aAA7B;;AACA,QAAIA,aAAa,KAAK,GAAtB,EAA2B;AACvB,0BAAO;AAAK,QAAA,GAAG,EAAErB,CAAV;AAAa,QAAA,SAAS,EAAG,SAAQuC,WAAW,CAAC,MAAD,CAAS,EAArD;AAAwD,QAAA,GAAG,EAAElB,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO,IAAKA,aAAa,KAAK,IAAnB,IAA6BA,aAAa,KAAK,KAA/C,IAA0DA,aAAa,KAAK,KAAhF,EAAwF;AAC3F,0BAAO;AAAK,QAAA,GAAG,EAAEpB,EAAV;AAAc,QAAA,SAAS,EAAG,SAAQsC,WAAW,CAAC,MAAD,CAAS,EAAtD;AAAyD,QAAA,GAAG,EAAElB,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,MAEA,IAAIA,aAAa,KAAK,GAAtB,EAA2B;AAC9B,0BAAO;AAAK,QAAA,GAAG,EAAEnB,CAAV;AAAa,QAAA,SAAS,EAAG,SAAQqC,WAAW,CAAC,MAAD,CAAS,EAArD;AAAwD,QAAA,GAAG,EAAElB,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,MAEA,IAAKA,aAAa,KAAK,IAAnB,IAA6BA,aAAa,KAAK,KAA/C,IAA0DA,aAAa,KAAK,KAAhF,EAAwF;AAC3F,0BAAO;AAAK,QAAA,GAAG,EAAElB,EAAV;AAAc,QAAA,SAAS,EAAG,SAAQoC,WAAW,CAAC,MAAD,CAAS,EAAtD;AAAyD,QAAA,GAAG,EAAElB,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,MAEA,IAAIA,aAAa,KAAK,GAAtB,EAA2B;AAC9B,0BAAO;AAAK,QAAA,GAAG,EAAEjB,CAAV;AAAa,QAAA,SAAS,EAAG,SAAQmC,WAAW,CAAC,MAAD,CAAS,EAArD;AAAwD,QAAA,GAAG,EAAElB,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,MAEA,IAAKA,aAAa,KAAK,IAAnB,IAA6BA,aAAa,KAAK,KAA/C,IAA0DA,aAAa,KAAK,KAAhF,EAAwF;AAC3F,0BAAO;AAAK,QAAA,GAAG,EAAEhB,EAAV;AAAc,QAAA,SAAS,EAAG,SAAQkC,WAAW,CAAC,MAAD,CAAS,EAAtD;AAAyD,QAAA,GAAG,EAAElB,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,MAEA,IAAIA,aAAa,KAAK,GAAtB,EAA2B;AAC9B,0BAAO;AAAK,QAAA,GAAG,EAAEf,CAAV;AAAa,QAAA,SAAS,EAAG,SAAQiC,WAAW,CAAC,MAAD,CAAS,EAArD;AAAwD,QAAA,GAAG,EAAElB,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,MAEA,IAAKA,aAAa,KAAK,IAAnB,IAA6BA,aAAa,KAAK,KAA/C,IAA0DA,aAAa,KAAK,KAAhF,EAAwF;AAC3F,0BAAO;AAAK,QAAA,GAAG,EAAEd,EAAV;AAAc,QAAA,SAAS,EAAG,SAAQgC,WAAW,CAAC,MAAD,CAAS,EAAtD;AAAyD,QAAA,GAAG,EAAElB,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ,GAnBD;;AAoBA,QAAMyB,YAAY,GAAIN,IAAD,IAAU;AAC3B,QAAIO,IAAI,GAAIP,IAAI,KAAK,QAAV,GAAsB,QAAtB,GAAiC,QAA5C;AACAO,IAAAA,IAAI,GAAIP,IAAI,KAAK,MAAV,GAAoB,MAApB,GAA6BO,IAApC;AACAA,IAAAA,IAAI,GAAIP,IAAI,KAAK,MAAV,GAAoB,MAApB,GAA6BO,IAApC;;AACA,QAAIP,IAAI,KAAK,QAAb,EAAuB;AACnB,0BAAO;AAAK,QAAA,GAAG,EAAE1C,MAAV;AAAkB,QAAA,SAAS,EAAEyC,WAAW,CAACC,IAAD,CAAxC;AAAgD,QAAA,GAAG,EAAEA,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO,IAAIA,IAAI,KAAK,QAAb,EAAuB;AAC1B,0BAAO;AAAK,QAAA,GAAG,EAAEzC,MAAV;AAAkB,QAAA,SAAS,EAAEwC,WAAW,CAACC,IAAD,CAAxC;AAAgD,QAAA,GAAG,EAAEA,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,MAEA,IAAIA,IAAI,KAAK,MAAb,EAAqB;AACxB,0BAAO;AAAK,QAAA,GAAG,EAAEhC,IAAV;AAAgB,QAAA,SAAS,EAAE+B,WAAW,CAACC,IAAD,CAAtC;AAA8C,QAAA,GAAG,EAAEA,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,MAEA,IAAIA,IAAI,KAAK,MAAb,EAAqB;AACxB,YAAMnB,aAAa,GAAGa,MAAM,CAACb,aAA7B;;AACA,UAAIA,aAAa,KAAK,GAAtB,EAA2B;AACvB,4BAAO;AAAK,UAAA,GAAG,EAAErB,CAAV;AAAa,UAAA,SAAS,EAAEuC,WAAW,CAACC,IAAD,CAAnC;AAA2C,UAAA,GAAG,EAAEA,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,MAEO,IAAKnB,aAAa,KAAK,IAAnB,IAA6BA,aAAa,KAAK,KAA/C,IAA0DA,aAAa,KAAK,KAAhF,EAAwF;AAC3F,4BAAO;AAAK,UAAA,GAAG,EAAEpB,EAAV;AAAc,UAAA,SAAS,EAAEsC,WAAW,CAACC,IAAD,CAApC;AAA4C,UAAA,GAAG,EAAEA,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,MAEA,IAAInB,aAAa,KAAK,GAAtB,EAA2B;AAC9B,4BAAO;AAAK,UAAA,GAAG,EAAEnB,CAAV;AAAa,UAAA,SAAS,EAAEqC,WAAW,CAACC,IAAD,CAAnC;AAA2C,UAAA,GAAG,EAAEA,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,MAEA,IAAKnB,aAAa,KAAK,IAAnB,IAA6BA,aAAa,KAAK,KAA/C,IAA0DA,aAAa,KAAK,KAAhF,EAAwF;AAC3F,4BAAO;AAAK,UAAA,GAAG,EAAElB,EAAV;AAAc,UAAA,SAAS,EAAEoC,WAAW,CAACC,IAAD,CAApC;AAA4C,UAAA,GAAG,EAAEA,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,MAEA,IAAInB,aAAa,KAAK,GAAtB,EAA2B;AAC9B,4BAAO;AAAK,UAAA,GAAG,EAAEjB,CAAV;AAAa,UAAA,SAAS,EAAEmC,WAAW,CAACC,IAAD,CAAnC;AAA2C,UAAA,GAAG,EAAEA,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,MAEA,IAAKnB,aAAa,KAAK,IAAnB,IAA6BA,aAAa,KAAK,KAA/C,IAA0DA,aAAa,KAAK,KAAhF,EAAwF;AAC3F,4BAAO;AAAK,UAAA,GAAG,EAAEhB,EAAV;AAAc,UAAA,SAAS,EAAEkC,WAAW,CAACC,IAAD,CAApC;AAA4C,UAAA,GAAG,EAAEA,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,MAEA,IAAInB,aAAa,KAAK,GAAtB,EAA2B;AAC9B,4BAAO;AAAK,UAAA,GAAG,EAAEf,CAAV;AAAa,UAAA,SAAS,EAAEiC,WAAW,CAACC,IAAD,CAAnC;AAA2C,UAAA,GAAG,EAAEA,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,MAEA,IAAKnB,aAAa,KAAK,IAAnB,IAA6BA,aAAa,KAAK,KAA/C,IAA0DA,aAAa,KAAK,KAAhF,EAAwF;AAC3F,4BAAO;AAAK,UAAA,GAAG,EAAEd,EAAV;AAAc,UAAA,SAAS,EAAEgC,WAAW,CAACC,IAAD,CAApC;AAA4C,UAAA,GAAG,EAAEA,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ;AACJ,GA9BD;;AA+BA,QAAMQ,YAAY,GAAG,MAAM,KAA3B;;AACA,QAAMC,cAAc,GAAIT,IAAD,IAAU;AAC7B,QAAIU,OAAO,GAAG,EAAd;AACA,UAAM;AAAClB,MAAAA,MAAD;AAASV,MAAAA,SAAT;AAAoBC,MAAAA,SAApB;AAA+BK,MAAAA,YAA/B;AAA6CF,MAAAA,WAA7C;AAAyDI,MAAAA,cAAzD;AAAyED,MAAAA,YAAzE;AAAuFF,MAAAA,WAAvF;AAAoGI,MAAAA;AAApG,QAAsHG,MAA5H;AACAgB,IAAAA,OAAO,GAAIV,IAAI,KAAK,MAAV,gBAAoB;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCR,MAAtC,MAApB,GAA2EkB,OAArF;AACAA,IAAAA,OAAO,GAAIV,IAAI,KAAK,MAAV,gBAAoB;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsClB,SAAtC,OAAkDC,SAAlD,QAApB,GAA4F2B,OAAtG;AACAA,IAAAA,OAAO,GAAIV,IAAI,KAAK,QAAV,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuC,GAAEZ,YAAa,GAAGA,YAAY,CAACuB,QAAb,CAAsB,IAAtB,CAAD,GAAgC,EAAhC,GAAqC,GAAI,EAAjG,CAAL,eAA8G;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCzB,WAAtC,SAA9G,eAAuK;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCI,cAAc,CAACsB,OAAf,CAAuB,UAAvB,EAAkCJ,YAAY,EAA9C,CAAtC,CAAvK,CAAtB,GAAoSE,OAA9S;AACAA,IAAAA,OAAO,GAAIV,IAAI,KAAK,QAAV,gBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuC,GAAEX,YAAa,GAAGA,YAAY,CAACsB,QAAb,CAAsB,IAAtB,CAAD,GAAgC,EAAhC,GAAqC,GAAI,EAAjG,CAAL,eAA8G;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCxB,WAAtC,SAA9G,eAAuK;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCI,cAAc,CAACqB,OAAf,CAAuB,UAAvB,EAAkCJ,YAAY,EAA9C,CAAtC,CAAvK,CAAtB,GAAoSE,OAA9S;AACA,WAAOA,OAAP;AACH,GARD;;AASA,QAAMG,QAAQ,GAAIb,IAAD,IAAU;AACvB,UAAM;AAAEhB,MAAAA,eAAF;AAAmBC,MAAAA,eAAnB;AAAoCjB,MAAAA,IAApC;AAA0Ca,MAAAA;AAA1C,QAA4Da,MAAlE;;AACA,QAAIM,IAAI,KAAK,QAAb,EAAuB;AACnB,aAAOhB,eAAP;AACH,KAFD,MAEO,IAAIgB,IAAI,KAAK,QAAb,EAAuB;AAC1B,aAAOf,eAAP;AACH,KAFM,MAEA,IAAIe,IAAI,KAAK,MAAb,EAAqB;AACxB,aAAOhC,IAAP;AACH,KAFM,MAEA,IAAIgC,IAAI,KAAK,MAAb,EAAqB;AACxB,aAAOnB,aAAP;AACH;AACJ,GAXD;;AAYA,QAAMiC,IAAI,GAAIC,SAAD,iBAAe;AAAK,IAAA,GAAG,EAAEjE,MAAM,CAAC,MAAD,CAAhB;AAA0B,IAAA,SAAS,EAAC,yCAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACHwD,YAAY,CAACS,SAAD,CADT,eAEJ;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,QAAQ,CAACE,SAAD,CAAhC,EAA6CN,cAAc,CAACM,SAAD,CAA3D,CAFI,CAA5B;;AAIA,QAAMC,QAAQ,GAAIvB,KAAD,IAAWA,KAAK,CAACwB,GAAN,CAAWC,WAAD,IAAiBJ,IAAI,CAACI,WAAD,CAA/B,CAA5B;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,EAAE,GAAGF,IAAI,CAACG,YAAL,GAAoBX,OAApB,CAA4B,IAA5B,EAAiC,EAAjC,CAAX;AACA,UAAMY,EAAE,GAAGJ,IAAI,CAACK,kBAAL,GAA0Bb,OAA1B,CAAkC,IAAlC,EAAuC,EAAvC,CAAX;AACAc,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAoC,GAAEL,EAAG,GAAEE,EAAG,EAA9C;AACA,UAAMI,KAAK,GAAI,GAAEN,EAAG,GAAEE,EAAG,EAAzB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAa,4CAA2CF,KAAM,EAA9D;AACA,WAAOA,KAAP;AACH,GARD;;AASA,QAAMG,OAAO,GAAG,MAAMC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA2B,kBAAjD;;AACA,QAAMC,SAAS,GAAI1D,IAAD,IAAU;AACxBiD,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BlD,IAAI,CAAC2D,IAAlC;AACA,UAAMC,QAAQ,GAAGlB,gBAAgB,EAAjC;AACA,QAAImB,cAAc,GAAG,IAAIjB,IAAJ,EAArB;AACA,UAAMkB,IAAI,GAAGD,cAAc,CAACE,WAAf,EAAb;AACA,UAAMC,YAAY,GAAGH,cAAc,CAACI,QAAf,KAA0B,CAA/C;AACA,UAAMC,KAAK,GAAKF,YAAD,GAAe,EAAhB,GAAuB,IAAIA,YAAc,EAAzC,GAA6CA,YAA3D;AACA,UAAMG,WAAW,GAAGN,cAAc,CAACO,OAAf,EAApB;AACA,UAAMzB,IAAI,GAAIwB,WAAW,GAAC,EAAb,GAAoB,IAAGA,WAAY,EAAnC,GAAuCA,WAApD;AACA,UAAME,WAAW,GAAGR,cAAc,CAACS,QAAf,EAApB;AACA,UAAMC,KAAK,GAAIF,WAAW,GAAC,EAAb,GAAoB,IAAGA,WAAY,EAAnC,GAAuCA,WAArD;AACA,UAAMG,SAAS,GAAKH,WAAW,GAAC,CAAb,GAAgB,EAAjB,GAAwB,IAAIA,WAAW,GAAC,CAAG,EAA3C,GAAgDA,WAAW,GAAC,CAA9E;AACA,UAAMI,cAAc,GAAGZ,cAAc,CAACa,UAAf,EAAvB;AACA,UAAMC,OAAO,GAAIF,cAAc,GAAC,EAAhB,GAAuB,IAAGA,cAAe,EAAzC,GAA6CA,cAA7D;AACA,UAAMG,UAAU,GAAI,GAAEd,IAAK,GAAEI,KAAM,GAAEvB,IAAK,MAAK4B,KAAM,IAAGI,OAAQ,EAAhE;AACA,UAAME,YAAY,GAAI,GAAEf,IAAK,GAAEI,KAAM,GAAEvB,IAAK,MAAK6B,SAAU,KAA3D;AACAX,IAAAA,cAAc,GAAI,GAAEC,IAAK,GAAEI,KAAM,GAAEvB,IAAK,MAAK4B,KAAM,IAAGI,OAAQ,EAA9D;;AACA,UAAMG,aAAa,GAAI/D,MAAD,IAAY;AAC9B,YAAMgE,OAAO,GAAG,CAAC,WAAD,EAAc,YAAd,EAA4B,eAA5B,EAA6C,WAA7C,EAA0D,WAA1D,EAAuE,gBAAvE,EAAyF,0BAAzF,EAAqH,0BAArH,EAAgJ,0BAAhJ,EAA2K,0BAA3K,EAAsM,yBAAtM,EAAgO,kBAAhO,EAAmP,kBAAnP,EAAsQ,kBAAtQ,EAAyR,kBAAzR,EAA4S,kBAA5S,EAA+T,kBAA/T,EAAkV,kBAAlV,CAAhB;AACAhE,MAAAA,MAAM,GAAGA,MAAM,CAACoB,OAAP,CAAe,IAAf,EAAoB,EAApB,CAAT;AACApB,MAAAA,MAAM,GAAGiE,MAAM,CAACjE,MAAD,CAAN,GAAiB,CAA1B;AACAA,MAAAA,MAAM,GAAIA,MAAM,GAAC,CAAR,GAAagE,OAAO,CAAC,CAAD,CAApB,GAA0BA,OAAO,CAAChE,MAAD,CAA1C;AACA,aAAOA,MAAP;AACH,KAND;;AAQA,UAAMkE,UAAU,GAAG,MAAM;AACrB,UAAIC,GAAG,GAAGF,MAAM,CAAC/D,MAAM,CAACX,SAAR,CAAN,GAAyB,CAAnC;AACA4E,MAAAA,GAAG,GAAGA,GAAG,GAAG,KAAZ;AACA,aAAOA,GAAP;AACH,KAJD;;AAKA,UAAMC,UAAU,GAAG,MAAM;AACrB,YAAMC,QAAQ,GAAG,CAAC,YAAD,EAAe,QAAf,EAAyB,UAAzB,EAAqC,QAArC,EAA+C,gBAA/C,CAAjB;AACA,UAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACP,MAAM,CAAC/D,MAAM,CAACX,SAAR,CAAN,GAAyB,CAA1B,IAA6B,CAAxC,CAAd;AACA+E,MAAAA,OAAO,GAAID,QAAQ,GAAG,CAAZ,GAAiBA,QAAQ,CAAC,CAAD,CAAzB,GAA+BA,QAAQ,CAACC,OAAD,CAAjD;AACA,aAAOA,OAAP;AACH,KALD;;AAMA,UAAMG,kBAAkB,GAAG,MAAM;AAC7B,YAAMC,UAAU,GAAG;AACf,aAAK,oBADU;AAEf,cAAM,oBAFS;AAGf,eAAO,UAHQ;AAIf,eAAO,UAJQ;AAKf,cAAM,SALS;AAMf,eAAO,oBANQ;AAOf,aAAK,SAPU;AAQf,eAAO,SARQ;AASf,aAAK,UATU;AAUf,eAAO,qBAVQ;AAWf,aAAK,qBAXU;AAYf,cAAM,qBAZS;AAaf,eAAO,qBAbQ;AAcf,eAAO,SAdQ;AAef,cAAM,qBAfS;AAgBf,eAAO;AAhBQ,OAAnB;AAkBA,aAAOA,UAAU,CAACxE,MAAM,CAACb,aAAR,CAAjB;AACH,KApBD;;AAqBA,UAAMsF,QAAQ,GAAG,MAAM;AACnB,YAAM;AAAE3E,QAAAA,MAAF;AAAUxB,QAAAA,IAAV;AAAgBa,QAAAA,aAAhB;AAA+BO,QAAAA,YAA/B;AAA6CF,QAAAA,WAA7C;AAA0DF,QAAAA,eAA1D;AAA2EM,QAAAA;AAA3E,UAA8FI,MAApG;AACA,UAAI0E,KAAK,GAAI,GAAEhF,YAAa,IAAGmE,aAAa,CAACnE,YAAD,CAAe,GAA3D;AACAgF,MAAAA,KAAK,GAAI,GAAEA,KAAM,eAAcpF,eAAgB,EAA/C;AACAoF,MAAAA,KAAK,GAAI,GAAEA,KAAM,IAAGlF,WAAY,GAAhC;AACAkF,MAAAA,KAAK,GAAI,GAAEA,KAAM,OAAM9E,cAAe,GAAtC;AACA8E,MAAAA,KAAK,GAAI,GAAEA,KAAM,aAAYpG,IAAK,OAAlC;AACAoG,MAAAA,KAAK,GAAI,GAAEA,KAAM,IAAGX,MAAM,CAACjE,MAAD,CAAN,CAAe6E,OAAf,CAAuB,CAAvB,CAA0B,MAA9C;AACAD,MAAAA,KAAK,GAAI,GAAEA,KAAM,iBAAgBH,kBAAkB,EAAG,eAAcpF,aAAc,OAAM6E,UAAU,EAAG,GAArG;AACAU,MAAAA,KAAK,GAAI,GAAEA,KAAM,wBAAuBR,UAAU,EAAG,GAArD;AACA,aAAOQ,KAAP;AACH,KAXD;;AAYA,UAAME,MAAM,GAAG;AACXC,MAAAA,GAAG,EAAE;AACDlD,QAAAA,IAAI,EAAG,GAAEkB,IAAK,IAAGI,KAAM,IAAGvB,IAAK,IAAG4B,KAAM,IAAGI,OAAQ,UADlD;AAEDmB,QAAAA,GAAG,EAAEnD,IAFJ;AAGDoD,QAAAA,KAAK,EAAE7B,KAHN;AAID8B,QAAAA,IAAI,EAAElC;AAJL,OADM;AAOXmC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAElG,IAAI,CAAC2D;AADN,OAPC;AAUXwC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEtB,aAAa,CAAC7D,MAAM,CAACN,YAAR,CADnB;AAEF0F,QAAAA,MAAM,EAAEpF,MAAM,CAACN,YAFb;AAGF2F,QAAAA,KAAK,EAAE;AAHL,OAVK;AAeXC,MAAAA,MAAM,EAAE;AACJH,QAAAA,MAAM,EAAEnF,MAAM,CAACN,YADX;AAEJ6F,QAAAA,SAAS,EAAEvF,MAAM,CAACV,eAFd;AAGJkG,QAAAA,KAAK,EAAExF,MAAM,CAACR,WAHV;AAIJiG,QAAAA,QAAQ,EAAEzF,MAAM,CAACJ;AAJb,OAfG;AAqBX8F,MAAAA,MAAM,EAAE;AACJP,QAAAA,MAAM,EAAEnF,MAAM,CAACL,YADX;AAEJ4F,QAAAA,SAAS,EAAEvF,MAAM,CAACT,eAFd;AAGJiG,QAAAA,KAAK,EAAExF,MAAM,CAACP,WAHV;AAIJgG,QAAAA,QAAQ,EAAEzF,MAAM,CAACH;AAJb,OArBG;AA2BX8F,MAAAA,MAAM,EAAE;AACJR,QAAAA,MAAM,EAAE,KADJ;AAEJI,QAAAA,SAAS,EAAE,IAFP;AAGJC,QAAAA,KAAK,EAAE,KAHH;AAIJC,QAAAA,QAAQ,EAAE;AAJN,OA3BG;AAiCXnI,MAAAA,IAAI,EAAE;AACFsI,QAAAA,KAAK,EAAE5F,MAAM,CAAC1B,IADZ;AAEF6G,QAAAA,MAAM,EAAEpB,MAAM,CAAC/D,MAAM,CAACF,MAAR,CAAN,CAAsB6E,OAAtB,CAA8B,CAA9B,IAAiC;AAFvC,OAjCK;AAqCXkB,MAAAA,IAAI,EAAE;AACFN,QAAAA,SAAS,EAAEvF,MAAM,CAACb,aADhB;AAEF2G,QAAAA,WAAW,EAAEvB,kBAAkB,EAF7B;AAGFwB,QAAAA,GAAG,EAAE/B,UAAU,EAHb;AAIFgC,QAAAA,OAAO,EAAE9B,UAAU;AAJjB,OArCK;AA2CX+B,MAAAA,UAAU,EAAE;AACRA,QAAAA,UAAU,EAAE;AADJ,OA3CD;AA8CXC,MAAAA,QAAQ,EAAE;AACN,iBAASzB,QAAQ;AADX;AA9CC,KAAf,CArEwB,CAuHxB;;AACA,QAAI0B,aAAa,GAAG/F,KAAK,CAACgG,YAAN,EAApB;AACA,QAAIC,IAAI,GAAG,EAAX;;AACA,UAAMC,KAAK,GAAG,MAAM;AAChBH,MAAAA,aAAa,CAACI,IAAd,CAAmB5D,QAAnB;AACAwD,MAAAA,aAAa,GAAGK,IAAI,CAACC,SAAL,CAAeN,aAAf,CAAhB;AACAhE,MAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiB+D,aAAc,EAA5C;AACAE,MAAAA,IAAI,GAAGG,IAAI,CAACC,SAAL,CAAe7B,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAP;AACAzC,MAAAA,OAAO,CAACC,GAAR,CAAa,SAAQiE,IAAK,EAA1B;AACArE,MAAAA,YAAY,CAACC,OAAb,CAAqBU,QAArB,EAA+B0D,IAA/B,EANgB,CAOhB;;AACAjG,MAAAA,KAAK,CAACsG,GAAN,CAAU/D,QAAV;AACH,KATD;;AAUA2D,IAAAA,KAAK;AACLjE,IAAAA,OAAO;AACP;AACR;AACA;AACA;AACA;AACA;AACK,GA5ID;;AA6IA,QAAMsE,WAAW,GAAI5H,IAAD,IAAWiB,MAAM,CAACG,MAAP,KAAkB,IAAnB,GAA2ByG,KAAK,CAAC,oBAAD,CAAhC,GAAyDnE,SAAS,CAAC1D,IAAD,CAAhG;;AACA,QAAM8H,iBAAiB,GAAI9H,IAAD,IAAU;AAChC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEUiD,YAAY,CAAC8E,OAAb,CAAqB,MAArB,MAAiC,MAAlC,gBAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACpC,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE9G,MAAlB;AAA0B,MAAA,IAAI,EAAEjB,IAAhC;AAAsC,MAAA,WAAW,EAAE,MAAM4H,WAAW,CAAC5H,IAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoC,CAA5C,gBAIA;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAkE,MAAA,OAAO,EAAE,MAAM4H,WAAW,CAAC5H,IAAD,CAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANT,CAAP;AAWH,GAZD;;AAaA,QAAMgI,aAAa,GAAG,MAAM;AACxB,wBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,GAAG,EAAE3J,MAAM,CAAC,MAAD,CAAzC;AAAmD,MAAA,EAAE,EAAE;AACnDoF,QAAAA,QAAQ,EAAE,sCADyC;AAEnD1D,QAAAA,KAAK,EAAE;AACHkI,UAAAA,KAAK,EAAEhH,MAAM,CAAC2C;AADX;AAF4C,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CADJ;AAYH,GAbD;;AAeA,QAAMsE,WAAW,GAAIjH,MAAD,IAAaA,MAAM,KAAK,IAAZ,GAAoB,gBAApB,GAAuC,cAAvE;;AACA,QAAMkH,cAAc,GAAIlH,MAAD,IAAaA,MAAM,KAAK,IAAZ,GAAoB,cAApB,GAAqC,cAAxE;;AACA,QAAMmH,WAAW,GAAIpI,IAAD,IAAWA,IAAI,CAACqI,KAAL,CAAWC,OAAX,CAAmB/H,eAAnB,IAAoC,CAAC,CAAtC,GAA2C,IAA3C,GAAkD,KAAhF;;AACA,QAAMgI,WAAW,GAAIvI,IAAD,IAAWA,IAAI,CAACqI,KAAL,CAAWC,OAAX,CAAmB9H,eAAnB,IAAoC,CAAC,CAAtC,GAA2C,IAA3C,GAAkD,KAAhF;;AACA,QAAMgI,SAAS,GAAIxI,IAAD,IAAWA,IAAI,CAACyI,IAAL,CAAUH,OAAV,CAAkBlI,aAAlB,IAAiC,CAAC,CAAnC,GAAwC,IAAxC,GAA+C,KAA3E;;AACA,QAAMsI,SAAS,GAAI1I,IAAD,IAAWA,IAAI,CAACT,IAAL,CAAU+I,OAAV,CAAkB/I,IAAlB,IAAwB,CAAC,CAA1B,GAA+B,IAA/B,GAAsC,KAAlE;;AACA,QAAMoJ,oBAAoB,GAAIC,SAAD,IAAgBA,SAAS,KAAGpI,eAAb,GAAgC,IAAhC,GAAuC,KAAnF;;AACA,QAAMqI,kBAAkB,GAAID,SAAD,IAAgBA,SAAS,CAACH,IAAV,KAAmBrI,aAApB,GAAqC,IAArC,GAA4C,KAAtF;;AACA,QAAM0I,kBAAkB,GAAIF,SAAD,IAAgBA,SAAS,CAACrJ,IAAV,KAAmBA,IAApB,GAA4B,IAA5B,GAAmC,KAA7E;;AACA,sBACI;AAAK,IAAA,GAAG,EAAElB,MAAM,CAAC,KAAD;AAAS;AAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDkE,QAAQ,CAACtC,OAAD,CAAxD,CADR,eAEQ;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCD,IAAI,CAAC2D,IAAzC,CAFR,eAGQ;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqE,GAAEzD,WAAY,QAAnF,CAHR,eAII;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,IAAI,CAACqI,KAAL,CAAW7F,GAAX,CAAe,CAAC6F,KAAD,EAAQU,CAAR,kBAAc;AAAM,IAAA,GAAG,EAAE1K,MAAM,CAAC,OAAD,CAAjB;AAA4B,IAAA,SAAS,EAAGgK,KAAK,KAAKpH,MAAM,CAACV,eAAlB,GAAqC2H,WAAW,CAACE,WAAW,CAACpI,IAAD,CAAZ,CAAhD,GAAsEmI,cAAc,CAACQ,oBAAoB,CAACN,KAAD,CAArB,CAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2JA,KAA3J,EAAoKU,CAAC,GAAC,CAAH,KAAU/I,IAAI,CAACqI,KAAL,CAAWW,MAAtB,GAA+B,EAA/B,GAAoC,IAAtM,CAA7B,CAAN,CADJ,eAEI;AAAK,IAAA,SAAS,EAAEd,WAAW,CAACM,SAAS,CAACxI,IAAD,CAAV,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACyI,IAAL,CAAUjG,GAAV,CAAc,CAACiG,IAAD,EAAOM,CAAP,kBAAa;AAAM,IAAA,GAAG,EAAE1K,MAAM,CAAC,MAAD,CAAjB;AAA2B,IAAA,SAAS,EAAE6J,WAAW,CAACW,kBAAkB,CAAC;AAACJ,MAAAA;AAAD,KAAD,CAAnB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,IADD,EACSM,CAAC,GAAC,CAAH,KAAU/I,IAAI,CAACyI,IAAL,CAAUO,MAArB,GAA8B,EAA9B,GAAmC,IAD1C,CAA3B,CADL,CAFJ,eAOI;AAAK,IAAA,SAAS,EAAEd,WAAW,CAACQ,SAAS,CAAC1I,IAAD,CAAV,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CA,IAAI,CAACT,IAAL,CAAUiD,GAAV,CAAc,CAACjD,IAAD,EAAMwJ,CAAN,kBAAY;AAAM,IAAA,GAAG,EAAE1K,MAAM,CAAC,MAAD,CAAjB;AAA2B,IAAA,SAAS,EAAE6J,WAAW,CAACY,kBAAkB,CAAC;AAACvJ,MAAAA;AAAD,KAAD,CAAnB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgFA,IAAhF,EAAwFwJ,CAAC,GAAC,CAAH,KAAU/I,IAAI,CAACT,IAAL,CAAUyJ,MAArB,GAA8B,EAA9B,GAAmC,IAAzH,CAA1B,CAA/C,CAPJ,CANJ,CADJ,CAJJ,EAwBQ;AACAlB,EAAAA,iBAAiB,CAAC9H,IAAD,CAzBzB,CADJ,CADJ;AAgCH,CAhVD;;AAiVA,eAAeF,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport WaveUtils from '../utils/WaveUtils.js';\nimport Tide from './Tide.js';\nimport WaterTemp from './WaterTemp.js';\nimport AirTemp from './AirTemp.js';\nimport WindDirection from './WindDirection.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport Dialog from '../functional/Dialog.js';\nimport swell1 from '../../assets/images/wavePrimary.png'\nimport swell2 from '../../assets/images/waveSecondaryB.png'\nimport N from '../../assets/images/windN.png'\nimport NE from '../../assets/images/windNE.png'\nimport E from '../../assets/images/windE.png'\nimport SE from '../../assets/images/windSE.png'\nimport S from '../../assets/images/windS.png'\nimport SW from '../../assets/images/windSW.png'\nimport W from '../../assets/images/windW.png'\nimport NW from '../../assets/images/windNW.png'\nimport tide from '../../assets/images/tide.png'\nimport PostDirectory from './PostDirectory.js';\nimport {BrowserRouter as Router, Switch, Link, Route} from 'react-router-dom';\n\nconst SurfLocation = ({state, item, matches, regionMatch}) => {\n    \n    const { edit, windDirection, windSpeed, windGusts, swell1Direction, swell2Direction, swell1Angle, swell2Angle, swell1Height, swell2Height, swell1Interval, swell2Interval, tide, height, stars } = state;\n    const [status, setStatus] = useState({\n        module: 'SurfLocation',\n        logged: false,\n        edit: edit,\n        windDirection: windDirection,\n        windSpeed: windSpeed, \n        windGusts: windGusts,\n        swell1Direction: swell1Direction, \n        swell2Direction: swell2Direction,\n        swell1Angle: swell1Angle,\n        swell2Angle: swell2Angle,\n        swell1Height: swell1Height,\n        swell2Height: swell2Height,\n        swell1Interval: swell1Interval,\n        swell2Interval: swell2Interval,\n        tide: tide, \n        height: height,\n        stars: stars\n    });\n\n    const posts = new PostDirectory();\n    const getStarKind = (kind) => {\n        let classes = \"shaka r-20 p-2\";\n        classes = (kind === \"wind\") ? (classes + \" bg-white\") : classes; \n        return classes;\n    }\n    const getTideIcon = <img src={tide} className={`mb--5 ${getStarKind(\"tide\")}`} alt=\"tide\" />;\n    const getSwellIcon = (id) => {\n        if (id === 1) {\n            return <img src={swell1} className={`mb--5 ${getStarKind(\"tide\")}`} alt=\"swell1\" />\n        } else {\n            return <img src={swell2} className={`mb--5 ${getStarKind(\"tide\")}`} alt=\"swell2\" />;\n        }\n    }\n    const getWindIcon = () => {\n        const windDirection = status.windDirection;\n        if (windDirection === \"N\") {\n            return <img src={N} className={`mb--5 ${getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if ((windDirection === \"NE\") || (windDirection === \"NNE\") || (windDirection === \"ENE\")) {\n            return <img src={NE} className={`mb--5 ${getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if (windDirection === \"E\") {\n            return <img src={E} className={`mb--5 ${getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if ((windDirection === \"SE\") || (windDirection === \"SSE\") || (windDirection === \"ESE\")) {\n            return <img src={SE} className={`mb--5 ${getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if (windDirection === \"S\") {\n            return <img src={S} className={`mb--5 ${getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if ((windDirection === \"SW\") || (windDirection === \"SSW\") || (windDirection === \"WSW\")) {\n            return <img src={SW} className={`mb--5 ${getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if (windDirection === \"W\") {\n            return <img src={W} className={`mb--5 ${getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if ((windDirection === \"NW\") || (windDirection === \"NNW\") || (windDirection === \"WNW\")) {\n            return <img src={NW} className={`mb--5 ${getStarKind(\"tide\")}`} alt={windDirection} />;\n        }\n    }\n    const getMatchIcon = (kind) => {\n        let icon = (kind === \"swell1\") ? \"swell1\" : \"swell2\";\n        icon = (kind === \"wind\") ? \"wind\" : icon;\n        icon = (kind === \"tide\") ? \"tide\" : icon;\n        if (kind === \"swell1\") {\n            return <img src={swell1} className={getStarKind(kind)} alt={kind} />\n        } else if (kind === \"swell2\") {\n            return <img src={swell2} className={getStarKind(kind)} alt={kind} />;\n        } else if (kind === \"tide\") {\n            return <img src={tide} className={getStarKind(kind)} alt={kind} />;\n        } else if (kind === \"wind\") {\n            const windDirection = status.windDirection;\n            if (windDirection === \"N\") {\n                return <img src={N} className={getStarKind(kind)} alt={kind} />;\n            } else if ((windDirection === \"NE\") || (windDirection === \"NNE\") || (windDirection === \"ENE\")) {\n                return <img src={NE} className={getStarKind(kind)} alt={kind} />;\n            } else if (windDirection === \"E\") {\n                return <img src={E} className={getStarKind(kind)} alt={kind} />;\n            } else if ((windDirection === \"SE\") || (windDirection === \"SSE\") || (windDirection === \"ESE\")) {\n                return <img src={SE} className={getStarKind(kind)} alt={kind} />;\n            } else if (windDirection === \"S\") {\n                return <img src={S} className={getStarKind(kind)} alt={kind} />;\n            } else if ((windDirection === \"SW\") || (windDirection === \"SSW\") || (windDirection === \"WSW\")) {\n                return <img src={SW} className={getStarKind(kind)} alt={kind} />;\n            } else if (windDirection === \"W\") {\n                return <img src={W} className={getStarKind(kind)} alt={kind} />;\n            } else if ((windDirection === \"NW\") || (windDirection === \"NNW\") || (windDirection === \"WNW\")) {\n                return <img src={NW} className={getStarKind(kind)} alt={kind} />;\n            }\n        }\n    }\n    const secondsToSec = () => \"sec\"\n    const getStarDetails = (kind) => {\n        let details = \"\";\n        const {height, windSpeed, windGusts, swell1Height, swell1Angle,swell1Interval, swell2Height, swell2Angle, swell2Interval} = status;\n        details = (kind === \"tide\") ? <div className=\"bold color-neogreen\">{height}'</div> : details;\n        details = (kind === \"wind\") ? <div className=\"bold color-neogreen\">{windSpeed}-{windGusts}kts</div> : details;\n        details = (kind === \"swell1\") ? <div><div className=\"bold color-neogreen\">{`${swell1Height}${(swell1Height.includes(\"ft\")) ? \"\" : \"'\"}`}</div><div className=\"bold color-neogreen\">{swell1Angle}°</div><div className=\"bold color-neogreen\">{swell1Interval.replace(\" seconds\",secondsToSec())}</div></div> : details;\n        details = (kind === \"swell2\") ? <div><div className=\"bold color-neogreen\">{`${swell2Height}${(swell2Height.includes(\"ft\")) ? \"\" : \"'\"}`}</div><div className=\"bold color-neogreen\">{swell2Angle}°</div><div className=\"bold color-neogreen\">{swell2Interval.replace(\" seconds\",secondsToSec())}</div></div> : details;\n        return details\n    }\n    const getState = (kind) => {\n        const { swell1Direction, swell2Direction, tide, windDirection } = status;\n        if (kind === \"swell1\") {\n            return swell1Direction;\n        } else if (kind === \"swell2\") {\n            return swell2Direction;\n        } else if (kind === \"tide\") {\n            return tide;\n        } else if (kind === \"wind\") {\n            return windDirection;\n        }\n    }\n    const star = (matchKind) => <div key={getKey(\"star\")} className=\"flex3Column bg-lite mr-5 ml-5 p-10 r-10\">\n                            {getMatchIcon(matchKind)}\n                            <div className=\"greet\">{getState(matchKind)}{getStarDetails(matchKind)}</div>\n                        </div>;\n    const getStars = (stars) => stars.map((currentStar) => star(currentStar));\n    const generateNewLogId = () => {\n        const date = new Date()\n        const st = date.toDateString().replace(/ /g,\"\");\n        const nd = date.toLocaleTimeString().replace(/ /g,\"\");\n        localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n        const newId = `${st}${nd}`;\n        console.log(`LogId: generateNewLogId => status.logId: ${newId}`);\n        return newId;\n    }\n    const goToLog = () => window.location.pathname = \"/reactor/SurfLog\"\n    const createLog = (item) => {\n        localStorage.setItem('spot', item.name);\n        const recordId = generateNewLogId();\n        let getCurrentTime = new Date();\n        const year = getCurrentTime.getFullYear();\n        const currentMonth = getCurrentTime.getMonth()+1;\n        const month = ((currentMonth)<10) ? `0${(currentMonth)}` : currentMonth;\n        const currentDate = getCurrentTime.getDate();\n        const date = (currentDate<10) ? `0${currentDate}` : currentDate;\n        const currentHour = getCurrentTime.getHours();\n        const hours = (currentHour<10) ? `0${currentHour}` : currentHour;\n        const startHour = ((currentHour-1)<10) ? `0${(currentHour-1)}` : (currentHour-1);\n        const currentMinutes = getCurrentTime.getMinutes();\n        const minutes = (currentMinutes<10) ? `0${currentMinutes}` : currentMinutes;\n        const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n        getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        const getWaveHeight = (height) => {\n            const heights = [\"knee high\", \"waist high\", \"shoulder high\", \"head high\", \"over head\", \"foot over head\", \"couple of feet over head\", \"couple of feet over head\",\"couple of feet over head\",\"couple of feet over head\",\"couple of feet overhead\",\"double over head\",\"double over head\",\"double over head\",\"triple over head\",\"triple over head\",\"triple over head\",\"triple over head\"]\n            height = height.replace(\"ft\",\"\");     \n            height = Number(height) - 1;\n            height = (height<0) ? heights[0] : heights[height];\n            return height;     \n        }\n        \n        const getWindMPH = () => {\n            let mph = Number(status.windGusts)+1;\n            mph = mph + \"mph\";\n            return mph\n        }\n        const getSurface = () => {\n            const surfaces = [\"oily glass\", \"glassy\", \"textured\", \"choppy\", \"victory at sea\"];\n            let surface = Math.floor((Number(status.windGusts)+1)/3);\n            surface = (surfaces > 3) ? surfaces[4] : surfaces[surface];\n            return surface;\n        }\n        const getWindOrientation = () => {\n            const directions = {\n                \"N\": \"sideshore => lefts\",\n                \"NE\": \"sideshore => lefts\",\n                \"ENE\": \"offshore\",\n                \"NNE\": \"offshore\",\n                \"NW\": \"onshore\",\n                \"NNW\": \"sideshore => lefts\",\n                \"W\": \"onshore\",\n                \"WNW\": \"onshore\",\n                \"E\": \"offshore\",\n                \"ESE\": \"sideshore => rights\",\n                \"S\": \"sideshore => rights\",\n                \"SE\": \"sideshore => rights\",\n                \"SSE\": \"sideshore => rights\",\n                \"WSW\": \"onshore\",\n                \"SW\": \"sideshore => rights\",\n                \"SSW\": \"sideshore => rights\"\n            }\n            return directions[status.windDirection]\n        }\n        const getNotes = () => {\n            const { height, tide, windDirection, swell1Height, swell1Angle, swell1Direction, swell1Interval } = status;\n            let notes = `${swell1Height}(${getWaveHeight(swell1Height)})`;\n            notes = `${notes} out of the ${swell1Direction}`;\n            notes = `${notes}(${swell1Angle})`;\n            notes = `${notes} at ${swell1Interval}.`;\n            notes = `${notes} It was a ${tide} tide`;\n            notes = `${notes}(${Number(height).toFixed(0)}ft).`;\n            notes = `${notes} the wind was ${getWindOrientation()} out of the ${windDirection} at ${getWindMPH()}.`;\n            notes = `${notes} The conditions were ${getSurface()}.`;\n            return notes;\n        }\n        const logObj = {\n            Day: {\n                Date: `${year}-${month}-${date}T${hours}:${minutes}:00.000Z`,\n                Day: date,\n                Month: month,\n                Year: year\n            },\n            Location: {\n                Break: item.name\n            },\n            Surf: {\n                Height: getWaveHeight(status.swell1Height),\n                Report: status.swell1Height,\n                Shape: \"close-outs\"\n            },\n            Swell1: {\n                Height: status.swell1Height,\n                Direction: status.swell1Direction,\n                Angle: status.swell1Angle,\n                Interval: status.swell1Interval,\n            },\n            Swell2: {\n                Height: status.swell2Height,\n                Direction: status.swell2Direction,\n                Angle: status.swell2Angle,\n                Interval: status.swell2Interval,\n            },\n            Swell3: {\n                Height: \"1ft\",\n                Direction: \"NW\",\n                Angle: \"180\",\n                Interval: \"6 seconds\",\n            },\n            Tide: {\n                Phase: status.tide,\n                Height: Number(status.height).toFixed(0)+\"ft\"\n            },\n            Wind: {\n                Direction: status.windDirection,\n                Orientation: getWindOrientation(),\n                MPH: getWindMPH(),\n                Surface: getSurface()\n            },\n            Conditions: {\n                Conditions: \"Good\"\n            },\n            Comments: {\n                \"notes\": getNotes()\n            }\n        }\n        //return logObj;\n        let postDirectory = posts.getDirectory();\n        let post = \"\";\n        const logIt = () => {\n            postDirectory.push(recordId);\n            postDirectory = JSON.stringify(postDirectory);\n            console.log(`postDirectory: ${postDirectory}`)\n            post = JSON.stringify(logObj, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n            //localStorage.setItem(\"postDirectory\", postDirectory);\n            posts.add(recordId);\n        }\n        logIt();\n        goToLog();\n        /*\n        this.setState({\n            recordId: recordId,\n            logged: true\n        })\n        */\n    };\n    const logLocation = (item) => (status.logged === true) ? alert(\"log already exists\") : createLog(item);\n    const logLocationButton = (item) => {\n        return <div>\n                    {\n                        (localStorage.getItem(\"edit\") === \"true\") ? <div>\n                                <WaveUtils state={status} item={item} logLocation={() => logLocation(item)}></WaveUtils>\n                            </div>\n                        :\n                        <div className=\"App button bg-yellow color-black p-10 r-10 mt-20\" onClick={() => logLocation(item)}>\n                            Log Session\n                        </div>\n                    }\n                </div>\n    }\n    const editLogButton = () => {\n        return (\n            <Link className=\"noUnderline\" key={getKey(\"link\")} to={{\n                pathname: '/SurfLog?logId=ThuApr3020209:19:28PM',\n                state: {\n                    logId: status.recordId\n                }\n            }}>\n                <div className=\"App button bg-yellow color-black p-10 r-10 mt-20\">\n                    Edit Log\n                </div>\n            </Link>\n        );\n    }\n    \n    const statusClass = (status) => (status === true) ? \"color-neogreen\" : \"color-yellow\"; \n    const subStatusClass = (status) => (status === true) ? \"color-orange\" : \"color-yellow\"; \n    const swell1Match = (item) => (item.swell.indexOf(swell1Direction)>-1) ? true : false;\n    const swell2Match = (item) => (item.swell.indexOf(swell2Direction)>-1) ? true : false;\n    const windMatch = (item) => (item.wind.indexOf(windDirection)>-1) ? true : false;\n    const tideMatch = (item) => (item.tide.indexOf(tide)>-1) ? true : false;\n    const swell2DirectionMatch = (direction) => (direction===swell2Direction) ? true : false;\n    const windDirectionMatch = (direction) => (direction.wind === windDirection) ? true : false;\n    const tideDirectionMatch = (direction) => (direction.tide === tide) ? true : false;\n    return (\n        <div key={getKey(\"loc\")} /*onClick={() => this.props.editLocation()}*/>\n            <div className=\"r-10 m-10 p-20 bg-dkGreen\">\n                    <div className=\"width100Percent flexContainer\">{getStars(matches)}</div>\n                    <div className=\"mt-10 navBranding\">{item.name}</div>\n                    <div className=\"greet color-yellow p-5 bg-dkGreen mt-15 mb-10 r-5\">{`${regionMatch} miles`}</div>\n                <div className=\"flexContainer\">\n                    <div className=\"flexContainer m-auto\">\n                        <div className=\"columnRight pr-10\">\n                            <div className=\"color-neogreen bold\">Swell: </div>\n                            <div className=\"color-neogreen bold\">Wind: </div>\n                            <div className=\"color-neogreen bold\">Tide: </div>\n                        </div>\n                        <div className=\"columnLeft\">\n                            <div>{item.swell.map((swell, i) => <span key={getKey(\"swell\")} className={(swell === status.swell1Direction) ? statusClass(swell1Match(item)) : subStatusClass(swell2DirectionMatch(swell))}>{swell}{((i+1) === item.swell.length)? \"\" : \", \"}</span>)}</div>\n                            <div className={statusClass(windMatch(item))}>\n                                {item.wind.map((wind, i) => <span key={getKey(\"wind\")} className={statusClass(windDirectionMatch({wind}))}>\n                                                            {wind}{((i+1) === item.wind.length)? \"\" : \", \"}\n                                                        </span>)}\n                            </div>\n                            <div className={statusClass(tideMatch(item))}>{item.tide.map((tide,i) => <span key={getKey(\"tide\")} className={statusClass(tideDirectionMatch({tide}))}>{tide}{((i+1) === item.tide.length)? \"\" : \", \"}</span>)}</div>\n                        </div>\n                    </div>\n                    \n                </div>\n                {\n                    //(status.logged) ? editLogButton() : logLocationButton(item)\n                    logLocationButton(item)\n                }\n            </div>\n        </div>\n    );\n}\nexport default SurfLocation;"]},"metadata":{},"sourceType":"module"}