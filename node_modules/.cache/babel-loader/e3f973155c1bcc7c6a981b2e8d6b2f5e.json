{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js\";\nimport React from 'react';\nimport PostDirectory from './PostDirectory.js';\nimport templateData from './TemplateDate.js';\n\nconst LogId = ({\n  logId,\n  childRef\n}) => {\n  const postDirectory = new PostDirectory();\n  logId = logId === null || logId === undefined ? postDirectory.getLastId() : logId;\n  const log = JSON.parse(localStorage.getItem(logId)) === null ? getLogTemplate : JSON.parse(localStorage.getItem(logId));\n\n  const getDate = () => log.Day.Date;\n\n  const generateNewLogId = () => {\n    const date = new Date();\n    const st = date.toDateString().replace(/ /g, \"\");\n    const nd = date.toLocaleTimeString().replace(/ /g, \"\");\n    localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n    const newId = `${st}${nd}`;\n    console.log(`LogId: generateNewLogId => logId: ${newId}`);\n    return newId;\n  };\n\n  const setLogId = (logId, log) => this.setState({\n    logId: logId,\n    log: log\n  });\n\n  const getLogId = () => logId;\n\n  console.log(`LastLogId => render: this.state.logId: ${logId} - this.state.log: ${log}`);\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  }, \"Count: \", postDirectory.length);\n};\n\nexport default LogId;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js"],"names":["React","PostDirectory","templateData","LogId","logId","childRef","postDirectory","undefined","getLastId","log","JSON","parse","localStorage","getItem","getLogTemplate","getDate","Day","Date","generateNewLogId","date","st","toDateString","replace","nd","toLocaleTimeString","setItem","newId","console","setLogId","setState","getLogId","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAEjC,QAAMC,aAAa,GAAG,IAAIL,aAAJ,EAAtB;AACAG,EAAAA,KAAK,GAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKG,SAA7B,GAA0CD,aAAa,CAACE,SAAd,EAA1C,GAAsEJ,KAA9E;AACA,QAAMK,GAAG,GAAIC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBT,KAArB,CAAX,MAA4C,IAA7C,GAAqDU,cAArD,GAAsEJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBT,KAArB,CAAX,CAAlF;;AACA,QAAMW,OAAO,GAAG,MAAMN,GAAG,CAACO,GAAJ,CAAQC,IAA9B;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,IAAI,GAAG,IAAIF,IAAJ,EAAb;AACA,UAAMG,EAAE,GAAGD,IAAI,CAACE,YAAL,GAAoBC,OAApB,CAA4B,IAA5B,EAAiC,EAAjC,CAAX;AACA,UAAMC,EAAE,GAAGJ,IAAI,CAACK,kBAAL,GAA0BF,OAA1B,CAAkC,IAAlC,EAAuC,EAAvC,CAAX;AACAV,IAAAA,YAAY,CAACa,OAAb,CAAqB,YAArB,EAAoC,GAAEL,EAAG,GAAEG,EAAG,EAA9C;AACA,UAAMG,KAAK,GAAI,GAAEN,EAAG,GAAEG,EAAG,EAAzB;AACAI,IAAAA,OAAO,CAAClB,GAAR,CAAa,qCAAoCiB,KAAM,EAAvD;AACA,WAAOA,KAAP;AACH,GARD;;AASA,QAAME,QAAQ,GAAG,CAACxB,KAAD,EAAQK,GAAR,KAAgB,KAAKoB,QAAL,CAAc;AAC3CzB,IAAAA,KAAK,EAAEA,KADoC;AAE3CK,IAAAA,GAAG,EAAEA;AAFsC,GAAd,CAAjC;;AAIA,QAAMqB,QAAQ,GAAG,MAAM1B,KAAvB;;AACAuB,EAAAA,OAAO,CAAClB,GAAR,CAAa,0CAAyCL,KAAM,sBAAqBK,GAAI,EAArF;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWH,aAAa,CAACyB,MAAzB,CAAP;AACH,CAtBD;;AAuBA,eAAe5B,KAAf","sourcesContent":["import React from 'react';\nimport PostDirectory from './PostDirectory.js';\nimport templateData from './TemplateDate.js';\n\nconst LogId = ({logId, childRef}) => {\n    \n    const postDirectory = new PostDirectory();\n    logId = (logId === null || logId === undefined) ? postDirectory.getLastId() : logId;\n    const log = (JSON.parse(localStorage.getItem(logId)) === null) ? getLogTemplate : JSON.parse(localStorage.getItem(logId));\n    const getDate = () => log.Day.Date;\n    const generateNewLogId = () => {\n        const date = new Date()\n        const st = date.toDateString().replace(/ /g,\"\");\n        const nd = date.toLocaleTimeString().replace(/ /g,\"\");\n        localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n        const newId = `${st}${nd}`;\n        console.log(`LogId: generateNewLogId => logId: ${newId}`);\n        return newId;\n    }\n    const setLogId = (logId, log) => this.setState({\n        logId: logId,\n        log: log\n    });\n    const getLogId = () => logId;  \n    console.log(`LastLogId => render: this.state.logId: ${logId} - this.state.log: ${log}`);\n    return <p>Count: {postDirectory.length}</p> \n}\nexport default LogId;"]},"metadata":{},"sourceType":"module"}