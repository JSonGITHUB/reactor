{"ast":null,"code":"var toGallons=function toGallons(liter){return liter*.264172;};var tryConvert=function tryConvert(volume,convert){var input=parseFloat(volume);if(Number.isNaN(input)){return'';}var output=convert(input);var rounded=Math.round(output*1000)/1000;return rounded.toString();};var toLiters=function toLiters(gallon){return gallon*3.78541;};export{toGallons,tryConvert,toLiters};","map":{"version":3,"names":["toGallons","liter","tryConvert","volume","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","toLiters","gallon"],"sources":["/Users/js/Dev/my-first-reactor/src/components/converter/LiquidVerdict.js"],"sourcesContent":["const toGallons = (liter) => (liter * .264172);\nconst tryConvert = (volume, convert) => {\n    const input = parseFloat(volume);\n    if (Number.isNaN(input)) {\n        return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n};\nconst toLiters = (gallon) => (gallon * 3.78541);\nexport {\n    toGallons,\n    tryConvert,\n    toLiters\n}"],"mappings":"AAAA,GAAM,CAAAA,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,KAAK,QAAM,CAAAA,KAAK,CAAG,OAAO,EAAC,CAC9C,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,MAAM,CAAEC,OAAO,CAAK,CACpC,GAAM,CAAAC,KAAK,CAAGC,UAAU,CAACH,MAAM,CAAC,CAChC,GAAII,MAAM,CAACC,KAAK,CAACH,KAAK,CAAC,CAAE,CACrB,MAAO,EAAE,CACb,CACA,GAAM,CAAAI,MAAM,CAAGL,OAAO,CAACC,KAAK,CAAC,CAC7B,GAAM,CAAAK,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAAG,IAAI,CAAC,CAAG,IAAI,CAChD,MAAO,CAAAC,OAAO,CAACG,QAAQ,CAAC,CAAC,CAC7B,CAAC,CACD,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,MAAM,QAAM,CAAAA,MAAM,CAAG,OAAO,EAAC,CAC/C,OACIf,SAAS,CACTE,UAAU,CACVY,QAAQ"},"metadata":{},"sourceType":"module"}