{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport SurfingScores from './SurfingScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport jerseyColors from './JerseyColors.js';\nimport getSurfTotal from './GetSurfTotal.js';\nimport surfScoring from './SurfScoring.js';\nimport findTwoHighestIndices from './FindTwoHighestIndices.js';\nimport rankStatus from './RankStatus.js';\nimport initPlayers from './InitPlayers.js';\nimport initNewPlayer from './InitNewPlayer.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreKeeper = () => {\n  _s();\n  const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n  const winners = [5, 10, 11, 15, 20, 21];\n  const dominoWinners = [50, 100, 150, 200];\n  const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n  const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || []);\n  const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n  const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n  const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n  const [heatLength, setHeatLength] = useState(Number(localStorage.getItem('winner')));\n  const [waveCount, setWaveCount] = useState(['', '', '', '', '', '', '', '', '', '']);\n  const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || []);\n  const darts = game !== 'darts' ? false : true;\n  const dominos = game !== 'dominos' ? false : true;\n  const surf = game !== 'surf' ? false : true;\n  const golf = game !== 'golf' ? false : true;\n  const cricketKey = (player, index) => `${player.player || player.name}Cricket${index}`;\n  const golfKey = (player, index) => `${player.player || player.name}Golf${index}`;\n  const surfKey = (player, index) => `${player.player || player.name}Surf${index}`;\n  const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n  const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n  const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n  const dominoScoring = [50, 100, 150, 200];\n  const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n  const [showButtons, setShowButtons] = useState(false);\n  useEffect(() => {\n    if (JSON.stringify(players, null, 2) !== '[]') {\n      const surfersScores = [];\n      localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n      localStorage.setItem('players', JSON.stringify(players));\n      setShowButtons(false);\n    }\n  }, [players]);\n  useEffect(() => {\n    localStorage.setItem('golfPars', JSON.stringify(golfPars));\n  }, [golfPars]);\n  useEffect(() => {\n    if (!localStorage.getItem('players') || localStorage.getItem('players') === '[]') {\n      //const playersValue = localStorage.getItem('players');\n      //alert(`localStorage.players: ${playersValue}`)\n      //alert('Length:', playersValue.length);\n      newPlayer();\n    }\n    const newPlayers = [...players];\n    if (!players[0].cricketScores || !players[1].cricketScores) {\n      if (!players[0].cricketScores) {\n        newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n        newPlayers[0].dartsScore = 0;\n      }\n      if (!players[1].cricketScores) {\n        newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n        newPlayers[1].dartsScore = 0;\n      }\n    }\n    const initGolfStats = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n    if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n      newPlayers[0].golfPutts = golfScoring;\n      newPlayers[0].golfFW = initGolfStats;\n      newPlayers[0].golfGIR = initGolfStats;\n    }\n    if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n      newPlayers[1].golfPutts = golfScoring;\n      newPlayers[1].golfFW = initGolfStats;\n      newPlayers[1].golfGIR = initGolfStats;\n    }\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  }, []);\n  const setGameInProgress = playerIndex => {\n    if (playerIndex > 0) {\n      if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n        localStorage.setItem('gameStatus', 'inProgress');\n      }\n    }\n    localStorage.setItem(`player${playerIndex}`, 'loser');\n    return false;\n  };\n  const isWinner = playerIndex => getDartTotal(players[playerIndex]) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n  const setGameOver = playerIndex => {\n    localStorage.setItem('gameStatus', 'gameOver');\n    localStorage.setItem(`player${playerIndex}`, 'winner');\n    return true;\n  };\n  if (darts && winner !== 21) {\n    localStorage.setItem('winner', 21);\n    setWinner(Number(localStorage.getItem('winner')));\n  }\n  const getDartTotal = player => {\n    const cricketScores = String(player.cricketScores).split(',');\n    let total = 0;\n    const addToTotal = value => total = total + value;\n    cricketScores.map((score, index) => addToTotal(Number(score)));\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const getDominoTotal = index => {\n    const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n    const total = newScores[index];\n    console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`);\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const updateScores = () => {\n    const newPlayers = JSON.parse(localStorage.getItem('players'));\n    setPlayers(newPlayers);\n  };\n  const set21 = () => {\n    if (darts) {\n      localStorage.setItem('winner', 21);\n      setWinner(Number(localStorage.getItem('winner')));\n    }\n  };\n  const selectGame = (groupTitle, label, selected) => {\n    localStorage.setItem('game', selected);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setGame(localStorage.getItem('game'));\n    set21();\n  };\n  const selectWinner = (groupTitle, label, selected) => {\n    localStorage.setItem('winner', selected);\n    setWinner(Number(localStorage.getItem('winner')));\n  };\n  const clear = event => {\n    //alert('Note was cleared: ' + event.value);\n    localStorage.setItem('players', JSON.stringify(initPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const reset = event => {\n    let newPlayers = JSON.parse(localStorage.getItem('players'));\n    const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n    const id = (player, index) => {\n      if (darts) {\n        return cricketKey(player, index);\n      } else if (dominos) {\n        return getDominoKey(player, index);\n      } else if (golf) {\n        return golfKey(player, index);\n      } else if (surf) {\n        return surfKey(player, index);\n      }\n      return player.player || player.name;\n    };\n    const initValue = 0;\n    if (darts) {\n      newPlayers.map(player => {\n        player.dartsScore = 0;\n        player.cricketScores = [0, 0, 0, 0, 0, 0, 0];\n      });\n    } else if (golf) {\n      newPlayers.map(player => {\n        player.golfScore = 0;\n        player.golfScores = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n        player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n        player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      });\n    } else if (dominos) {\n      newPlayers[0].dominoScore = 0;\n      newPlayers[1].dominoScore = 0;\n    } else if (surf) {\n      newPlayers.map((player, index) => {\n        player.surfScores = surfScoring;\n        player.surfScore = 0;\n        player.surfPriority = 0;\n      });\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => getSurfTotal(b) - getSurfTotal(a));\n      newPlayers = [...sortedPlayers];\n    } else {\n      newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n    }\n    localStorage.setItem('gameStatus', 'inProgress');\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n    getScore();\n  };\n  const newPlayer = () => {\n    const newPlayer = prompt('Enter new name', '');\n    const initializedNewPlayer = initNewPlayer(newPlayer);\n    let newPlayers = [...players];\n    if (newPlayer !== null) {\n      newPlayers.push(initializedNewPlayer);\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n  };\n  const addPlayer = event => {\n    newPlayer();\n  };\n  const editPlayer = index => {\n    const newPlayer = prompt('Enter new name', players[index].name);\n    if (newPlayer !== null) {\n      let newPlayers = [...players];\n      newPlayers[index].name = newPlayer;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      //console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n  };\n  const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n  const deletePlayer = index => {\n    console.log(`deletePlayer => ${index}`);\n    const newPlayers = [...players].slice();\n    newPlayers.splice(index, 1);\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const deleteAthlete = playerId => {\n    const newPlayers = [...players];\n    newPlayers.splice(playerId, 1);\n    setPlayers(newPlayers);\n  };\n  /*\n  const getSurferIndexWithPriority = (priorityIndex) => {\n      for (let i = 0; i < players.length; i++) {\n          if (Number(players[i].surfPriority) === priorityIndex) {\n              return i;\n          }\n      }\n      return null;\n  }\n  const losePriority = (selectedPriority) => {\n      const newPlayers = [...players];\n      newPlayers.map((player, index) => {\n          if (player.surfPriority == selectedPriority) {\n              player.surfPriority = newPlayers.length;\n          } else if (player.surfPriority != 1 && selectedPriority != newPlayers.length) {\n              const shift = player.surfPriority - 1;\n              player.surfPriority = (shift > 0) ? shift : newPlayers.length;\n          }\n      });\n      localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n      setPlayers(newPlayers);\n  }\n  const shiftPriority = (priorityIndex) => {\n      const newPlayers = [...players];\n      newPlayers.map((player, index) => {\n          if (player.surfPriority === (priorityIndex - 1)) {\n              player.surfPriority = priorityIndex;\n          } else if (player.surfPriority === priorityIndex) {\n              player.surfPriority = (priorityIndex - 1);\n          }\n      });\n      localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n      setPlayers(newPlayers);\n  }\n  const resetSurfersScores = (playerId) => {\n      const newPlayers = [...players];\n      newPlayers[playerId].surfScore = 0;\n      newPlayers[playerId].surfScores = surfScoring;\n      setPlayers(newPlayers);\n      getScore();\n  }\n  const getJerseyColorSelector = (playerId, color, index) => <button className={`bg-${color} ht-45 width50px button r-10`} onClick={() => selectJersey(playerId, index)}></button>;\n  const editSurfer = (playerId) => <div className='m-10 p-10 r-10 bg-darker'>\n          <div className='size30 p-10'>Name:</div>\n          <button className={`bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10`} onClick={() => editPlayer(playerId)}>{players[playerId].name}</button>\n          <div className='size30 p-10'>Jersey color:</div>\n          <div>\n              {jerseyColors.map((color,index) => \n                  index === Math.ceil(jerseyColors.length / 2) ? (\n                      <React.Fragment key={index}>\n                          <br />\n                          {getJerseyColorSelector(playerId, color, index)}\n                      </React.Fragment>\n                  ) : (\n                      getJerseyColorSelector(playerId, color, index)\n                  )\n              )}\n          </div>\n          <div>\n              <button className='bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10 m-5' onClick={() => resetSurfersScores(playerId)}>\n                  Reset Scores\n              </button>\n              <button className='bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10 m-5' onClick={() => deleteAthlete(playerId)}>\n                  Delete Athlete\n              </button>\n          </div>\n      </div>\n  const getSurfTotal = (player) => {\n      let total = 0;\n      const score = (index) => player.surfScores[index];\n      const addToTotal = (value) => total = total + value;\n      surfScoring.map((target, index) => {\n              addToTotal(Number(score(index)))\n          }\n      );\n      return total;\n  }\n  const isTieScore = (index) => {\n      const score = scoreTotal(index, players);\n      if (index !== 0) {\n          if (score === scoreTotal(index - 1, players)) {\n              return true;\n          }\n      }\n      return false;\n  }\n  const place = (index) => (isTieScore(index) && (index !== 0)) ? index : (index + 1);\n  const placeSuffix = (index) => rank[(isTieScore(index) && (index !== 0)) ? (index-1) : (index > 2) ? 3 : (index)];\n  const position = (index) => `${place} ${placeSuffix}`;\n  const rank = ['st', 'nd', 'rd', 'th'];\n  const getTwoHighestScores = (index) => {\n      const player = players[index];\n      const scores = player.surfScores;\n      const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n      //console.log(`getTwoHighestScores => playerIndex: ${index} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n      return {\n          highScoreIndex: highestIndex,\n          secondHighScoreIndex: secondHighestIndex\n      };\n  };\n  const getScoreTotal = (index) => {\n      const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n      const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n      const score = (highestScore + secondHighestScore);\n      return score;\n  }\n  const highestScore = (index, playersArray) => {\n      return playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n  }\n  const secondHighestScore = (index, playersArray) => playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n  const scoreTotal = (index, playersArray) => Number(highestScore(index, playersArray) + secondHighestScore(index, playersArray)).toFixed(2);\n   const selectJersey = (playerId, selection) => {\n      const newPlayers = [...players];\n      newPlayers[playerId].surfJerseyColor = (selection);\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      setPlayers(newPlayers);\n  }\n  */\n  const scorecards = () => {\n    const scorecard = (playerIndex, scoreIndex, score) => {\n      const player = players[playerIndex];\n      if (darts) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`);\n        return /*#__PURE__*/_jsxDEV(CricketScore, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateScores: updateScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 24\n        }, this);\n      }\n      if (dominos) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(Dominos, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          scoreTotal: player.dominoScore || 0,\n          treeTotal: score,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          getDominoTotal: getDominoTotal,\n          updateScores: updateScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 24\n        }, this);\n      }\n      if (golf) {\n        console.log(`${game} - scorecard => player:${player.player || player.name}`);\n        console.log(`scoreIndex: ${scoreIndex}`);\n        console.log(`score: ${player.golfScores[scoreIndex]}`);\n        console.log(`scorecards => par: ${score}`);\n        return /*#__PURE__*/_jsxDEV(ScoreCard, {\n          game: game,\n          players: players,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateScores: updateScores,\n          winner: golfPars[scoreIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 24\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(ScoreCard, {\n        game: game,\n        players: players,\n        playerIndex: playerIndex,\n        scoreIndex: scoreIndex,\n        editPlayer: editPlayer,\n        deletePlayer: deletePlayer,\n        updateScores: updateScores,\n        winner: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 20\n      }, this);\n    };\n    /////////////////////////////////\n    const setSurfScore = (playerId, index, score) => {\n      const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n      const newPlayers = [...players];\n      const currentScore = newPlayers[playerId].surfScores[index];\n      const edit = currentScore !== '' && currentScore !== 0 ? false : true;\n      newPlayers[playerId].surfScores[index] = Number(newScore);\n      newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n      if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n        newPlayers.map((player, index) => {\n          if (index === playerId) {\n            player.surfPriority = players.length;\n          } else if (player.surfPriority != 0) {\n            player.surfPriority = player.surfPriority - 1;\n          }\n        });\n      }\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n      console.log('setSurfScore => sortedPlayers: ', sortedPlayers);\n      localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n      setPlayers(sortedPlayers);\n    };\n    const get2ndHighestScore = playerId => {\n      const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n      const secondHighestId = highestScores[1];\n      return players[playerId].surfScores[secondHighestId];\n    };\n    const getSurfScore = index => {\n      const newPlayers = [...players];\n      const surfScore = scoreTotal(index, newPlayers);\n      newPlayers[index].score = surfScore;\n      newPlayers[index].surfScore = surfScore;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      return surfScore;\n    };\n    const getWave = (playerId, index, score) => {\n      const player = players[playerId];\n      const theScore = player.surfScores[index];\n      const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n      const highestId = highestScores[0];\n      const secondHighestId = highestScores[1];\n      const firstScore = index === highestId ? true : false;\n      const secondScore = index === secondHighestId ? true : false;\n      const getClasses = firstScore || secondScore ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n      const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column r-10\",\n        onClick: () => setSurfScore(playerId, index, score),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"size30 bold color-yellow bg-dkYellow w-100 p-10\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ht-40 ${getClasses}`,\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 17\n        }, this)]\n      }, getKey(`wave${playerId}${index}${score}`), true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 26\n      }, this);\n      return wave;\n    };\n    const surferScores = (player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flexContainer ht-50 r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex2Column contentLeft r-10-lft m-0 w-75 p-10`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bold\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"size25 mt--10\",\n              children: place(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"size15 mt--10\",\n              children: placeSuffix(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bold\",\n            onClick: () => setShowButtons(showButtons !== false ? false : index),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"size30 mt-5 mb-5\",\n              children: (player.player || player.name).split(' ')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"size20\",\n              children: player.name.indexOf(' ') !== -1 ? player.name.substring(player.name.indexOf(' ') + 1) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"size40 bold\",\n            children: getScoreTotal(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 bold\",\n            children: rankStatus(players, index, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 17\n        }, this)]\n      }, getKey(`${index}${player.player || player.name}`), true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showButtons === index && editSurfer(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-scroll color-white copyright ml-10 mr-10 mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container mt-10\",\n              children: players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 13\n      }, this)]\n    }, getKey(`${index}${player.player || player.name}`), true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 49\n    }, this);\n\n    /////////////////////////////////\n    const surfingScores = (player, index) => {\n      return surferScores(player, index);\n      /*if (players != undefined && index != undefined && player != undefined) {\n          return <SurfingScores\n              players={players}\n              player={player}\n              index={index}\n              surfScoring={surfScoring}\n              setPlayers={setPlayers}\n              key={getKey(index)}\n          >\n          </SurfingScores>\n      } \n      */\n    };\n\n    const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n    const dartScores = () => dartScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(0, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(1, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 68\n    }, this));\n    const editGolfPar = hole => {\n      const newPars = [...golfPars];\n      const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n      newPars[hole] = newPar;\n      setGolfPars(newPars);\n    };\n    const golfScores = () => golfScoring.map((hole, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentCenter bg-dark r-10 m-5 mt-35\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"copyright greet color-yellow\",\n            children: \"Hole:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size40 bold pt-5 pl-15 pr-15 bg-dark r-10\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"copyright greet color-yellow\",\n            children: \"Par:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size20 bold color-lite mt--5\",\n            children: golfPars[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex2Column p-5\",\n            children: scorecard(0, index, golfPars[index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex2Column p-5\",\n            children: scorecard(1, index, golfPars[index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 13\n      }, this)\n    }, getKey(hole), false, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 67\n    }, this));\n    const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index));\n    const dominoScores = () => dominoScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent contentCenter p-5\",\n        children: scorecard(0, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"r-5 font50 color-yellow m-auto w-100\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent contentCenter p-5\",\n        children: scorecard(1, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 72\n    }, this));\n    const isDominoWinner = playerIndex => getDominoTotal(playerIndex) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const dartClass = playerIndex => 'color-yellow flex3Column p-20 size25 bold' + (isWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dominoClass = playerIndex => 'color-yellow flex3Column p-20 size25 bold' + (isDominoWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dartScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDartTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDartTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 13\n      }, this), dartScores()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 38\n    }, this);\n    const golfScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy m-5 mb-20 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: players[0].golfScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10  size40 white\",\n            children: players[1].golfScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollHeight500\",\n        children: golfScores()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 38\n    }, this);\n    const dominoScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDominoTotal(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDominoTotal(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 13\n      }, this), dominoScores()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 40\n    }, this);\n    if (darts) return dartScoreboard();\n    if (dominos) return dominoScoreboard();\n    if (golf) return golfScoreboard();\n    //if (surf) return surfScoreboard\n    if (surf) return surfingScoreboard();else return renderedItems();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fadeIn mt--30\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-10\",\n      children: [/*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"game\",\n        label: \"item.description\",\n        items: games,\n        selected: game,\n        onChange: selectGame,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: darts || dominos ? '98%' : '65%'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 17\n      }, this), darts || golf ? /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Selector, {\n        className: \"fl-left\",\n        groupTitle: \"winner\",\n        label: \"i.description\",\n        items: dominos ? dominoWinners : surf ? heatLengths : winners,\n        selected: winner,\n        onChange: selectWinner,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: \"30%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 27\n      }, this), surf ? /*#__PURE__*/_jsxDEV(SurfScores, {\n        players: players,\n        heatLength: winner,\n        isWinner: isWinner,\n        getSurferIndexWithPriority: getSurferIndexWithPriority,\n        shiftPriority: shiftPriority,\n        losePriority: losePriority\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrollHeight450\",\n      children: scorecards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow\",\n          onClick: () => addPlayer(),\n          children: \"add player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black\",\n          onClick: () => reset(),\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow\",\n          onClick: () => clear(),\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 652,\n    columnNumber: 9\n  }, this);\n};\n_s(ScoreKeeper, \"UF6Rgp2mNJ8Nfpeu4QYyreqEZkM=\");\n_c = ScoreKeeper;\nexport default ScoreKeeper;\nvar _c;\n$RefreshReg$(_c, \"ScoreKeeper\");","map":{"version":3,"names":["React","useState","useEffect","ScoreCard","CricketScore","Dominos","SurfScores","SurfingScores","Selector","getKey","jerseyColors","getSurfTotal","surfScoring","findTwoHighestIndices","rankStatus","initPlayers","initNewPlayer","jsxDEV","_jsxDEV","ScoreKeeper","_s","games","winners","dominoWinners","heatLengths","players","setPlayers","JSON","parse","localStorage","getItem","game","setGame","initScores","winner","setWinner","Number","heatLength","setHeatLength","waveCount","setWaveCount","surfersScores","setSurfersScores","darts","dominos","surf","golf","cricketKey","player","index","name","golfKey","surfKey","parsDefault","dartScoring","golfScoring","golfPars","setGolfPars","dominoScoring","gameStatus","setGameStatus","showButtons","setShowButtons","stringify","setItem","newPlayer","newPlayers","cricketScores","dartsScore","initGolfStats","golfPutts","golfFW","golfGIR","setGameInProgress","playerIndex","isWinner","getDartTotal","setGameOver","String","split","total","addToTotal","value","map","score","getDominoTotal","newScores","dominoScore","console","log","updateScores","set21","selectGame","groupTitle","label","selected","selectWinner","clear","event","reset","getDominoKey","id","initValue","golfScore","golfScores","surfScores","surfScore","surfPriority","sortedPlayers","sort","a","b","getScore","prompt","initializedNewPlayer","push","addPlayer","editPlayer","window","location","pathname","deletePlayer","slice","splice","deleteAthlete","playerId","scorecards","scorecard","scoreIndex","fileName","_jsxFileName","lineNumber","columnNumber","scoreTotal","treeTotal","setSurfScore","newScore","currentScore","edit","length","get2ndHighestScore","highestScores","secondHighestId","getSurfScore","getWave","theScore","highestId","firstScore","secondScore","getClasses","wave","className","onClick","children","surferScores","surfJerseyColor","place","placeSuffix","indexOf","substring","getScoreTotal","editSurfer","surfingScores","renderedItems","dartScores","editGolfPar","hole","newPars","newPar","surfingScoreboard","dominoScores","isDominoWinner","dartClass","dominoClass","dartScoreboard","Fragment","golfScoreboard","dominoScoreboard","items","onChange","fontSize","padding","width","getSurferIndexWithPriority","shiftPriority","losePriority","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport SurfingScores from './SurfingScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport jerseyColors from './JerseyColors.js';\nimport getSurfTotal from './GetSurfTotal.js';\nimport surfScoring from './SurfScoring.js';\nimport findTwoHighestIndices from './FindTwoHighestIndices.js';\nimport rankStatus from './RankStatus.js';\nimport initPlayers from './InitPlayers.js';\nimport initNewPlayer from './InitNewPlayer.js';\n\nconst ScoreKeeper = () => {\n    \n    const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n    const winners = [5, 10, 11, 15, 20, 21];\n    const dominoWinners = [50, 100, 150, 200];\n    const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || []);\n    const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n    const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n    const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n    const [heatLength, setHeatLength] = useState(Number(localStorage.getItem('winner')));\n    const [waveCount, setWaveCount] = useState(['', '', '', '', '', '', '', '', '', '']);\n    const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n    const darts = (game !== 'darts') ? false : true;\n    const dominos = (game !== 'dominos') ? false : true;\n    const surf = (game !== 'surf') ? false : true;\n    const golf = (game !== 'golf') ? false : true;\n    const cricketKey = (player, index) => `${(player.player || player.name)}Cricket${index}`;\n    const golfKey = (player, index) => `${(player.player || player.name)}Golf${index}`;\n    const surfKey = (player, index) => `${(player.player || player.name)}Surf${index}`;\n    const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n    const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n    const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n    const dominoScoring = [50, 100, 150, 200];\n    const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n    const [showButtons, setShowButtons] = useState(false);\n\n    useEffect(() => {\n        if (JSON.stringify(players, null, 2) !== '[]') {\n            const surfersScores = [];\n            localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n            localStorage.setItem('players', JSON.stringify(players));\n            setShowButtons(false)\n        }\n    }, [players]);\n\n    useEffect(() => {\n        localStorage.setItem('golfPars', JSON.stringify(golfPars));\n    }, [golfPars]);\n\n    useEffect(() => {\n        if (!localStorage.getItem('players') || (localStorage.getItem('players') === '[]')) {\n            //const playersValue = localStorage.getItem('players');\n            //alert(`localStorage.players: ${playersValue}`)\n            //alert('Length:', playersValue.length);\n            newPlayer();\n        }\n        const newPlayers = [...players];\n        if (!players[0].cricketScores || !players[1].cricketScores) {\n            if (!players[0].cricketScores) {\n                newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[0].dartsScore = 0;\n            }\n            if (!players[1].cricketScores) {\n                newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[1].dartsScore = 0;\n            }\n        }\n        const initGolfStats = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n        if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n            newPlayers[0].golfPutts = golfScoring;\n            newPlayers[0].golfFW = initGolfStats;\n            newPlayers[0].golfGIR = initGolfStats;\n        }\n        if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n            newPlayers[1].golfPutts = golfScoring;\n            newPlayers[1].golfFW = initGolfStats;\n            newPlayers[1].golfGIR = initGolfStats;\n        }\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }, []);\n\n    const setGameInProgress = (playerIndex) => {\n        if (playerIndex > 0) {\n            if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n                localStorage.setItem('gameStatus', 'inProgress')\n            }\n        }\n        localStorage.setItem(`player${playerIndex}`, 'loser');\n        return false;\n    }\n    const isWinner = (playerIndex) => (getDartTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const setGameOver = (playerIndex) => {\n        localStorage.setItem('gameStatus', 'gameOver');\n        localStorage.setItem(`player${playerIndex}`, 'winner');\n        return true;\n    }\n    if (darts && winner !== 21) {\n        localStorage.setItem('winner', 21);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const getDartTotal = (player) => {\n        const cricketScores = String(player.cricketScores).split(',');\n        let total = 0;\n        const addToTotal = (value) => total = total + value;\n        cricketScores.map((score, index) => addToTotal(Number(score)));\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const getDominoTotal = (index) => {\n        const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n        const total = newScores[index];\n        console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const updateScores = () => {\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        setPlayers(newPlayers);\n    }\n    const set21 = () => {\n        if (darts) {\n            localStorage.setItem('winner', 21);\n            setWinner(Number(localStorage.getItem('winner')));\n        }\n    }\n    const selectGame = (groupTitle, label, selected) => {\n        localStorage.setItem('game', selected)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setGame(localStorage.getItem('game'));\n        set21();\n    }\n    const selectWinner = (groupTitle, label, selected) => {\n        localStorage.setItem('winner', selected)\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const clear = (event) => {\n        //alert('Note was cleared: ' + event.value);\n        localStorage.setItem('players', JSON.stringify(initPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n    const reset = (event) => {\n        let newPlayers = JSON.parse(localStorage.getItem('players'));\n        const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n\n        const id = (player, index) => {\n            if (darts) {\n                return cricketKey(player, index);\n            } else if (dominos) {\n                return getDominoKey(player, index);\n            } else if (golf) {\n                return golfKey(player, index);\n            } else if (surf) {\n                return surfKey(player, index);\n            }\n            return (player.player || player.name);\n        }\n        const initValue = 0;\n        if (darts) {\n            newPlayers.map((player) => {\n                player.dartsScore = 0;\n                player.cricketScores = [0, 0, 0, 0, 0, 0, 0];\n            });\n        } else if (golf) {\n            newPlayers.map((player) => {\n                player.golfScore = 0;\n                player.golfScores = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n                player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            });\n        } else if (dominos) {\n            newPlayers[0].dominoScore = 0;\n            newPlayers[1].dominoScore = 0;\n        } else if (surf) {\n            newPlayers.map((player, index) => {\n                player.surfScores = surfScoring;\n                player.surfScore = 0;\n                player.surfPriority = 0;\n            });\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => getSurfTotal(b) - getSurfTotal(a));\n            newPlayers = [...sortedPlayers];\n        } else {\n            newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n        }\n        localStorage.setItem('gameStatus', 'inProgress');\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        getScore();\n    }\n    const newPlayer = () => {\n        const newPlayer = prompt('Enter new name', '');\n        const initializedNewPlayer = initNewPlayer(newPlayer);\n        let newPlayers = [...players];\n        if (newPlayer !== null) {\n            newPlayers.push(initializedNewPlayer);\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n    }\n    const addPlayer = (event) => {\n        newPlayer();\n    }\n    const editPlayer = (index) => {\n        const newPlayer = prompt('Enter new name', players[index].name);\n        if (newPlayer !== null) {\n            let newPlayers = [...players];\n            newPlayers[index].name = newPlayer;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            //console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n\n    const deletePlayer = (index) => {\n        console.log(`deletePlayer => ${index}`)\n        const newPlayers = [...players].slice();\n        newPlayers.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    };\n    const deleteAthlete = (playerId) => {\n        const newPlayers = [...players];\n        newPlayers.splice(playerId, 1);\n        setPlayers(newPlayers);\n    }\n    /*\n    const getSurferIndexWithPriority = (priorityIndex) => {\n        for (let i = 0; i < players.length; i++) {\n            if (Number(players[i].surfPriority) === priorityIndex) {\n                return i;\n            }\n        }\n        return null;\n    }\n    const losePriority = (selectedPriority) => {\n        const newPlayers = [...players];\n        newPlayers.map((player, index) => {\n            if (player.surfPriority == selectedPriority) {\n                player.surfPriority = newPlayers.length;\n            } else if (player.surfPriority != 1 && selectedPriority != newPlayers.length) {\n                const shift = player.surfPriority - 1;\n                player.surfPriority = (shift > 0) ? shift : newPlayers.length;\n            }\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n        setPlayers(newPlayers);\n    }\n    const shiftPriority = (priorityIndex) => {\n        const newPlayers = [...players];\n        newPlayers.map((player, index) => {\n            if (player.surfPriority === (priorityIndex - 1)) {\n                player.surfPriority = priorityIndex;\n            } else if (player.surfPriority === priorityIndex) {\n                player.surfPriority = (priorityIndex - 1);\n            }\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n        setPlayers(newPlayers);\n    }\n    const resetSurfersScores = (playerId) => {\n        const newPlayers = [...players];\n        newPlayers[playerId].surfScore = 0;\n        newPlayers[playerId].surfScores = surfScoring;\n        setPlayers(newPlayers);\n        getScore();\n    }\n    const getJerseyColorSelector = (playerId, color, index) => <button className={`bg-${color} ht-45 width50px button r-10`} onClick={() => selectJersey(playerId, index)}></button>;\n    const editSurfer = (playerId) => <div className='m-10 p-10 r-10 bg-darker'>\n            <div className='size30 p-10'>Name:</div>\n            <button className={`bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10`} onClick={() => editPlayer(playerId)}>{players[playerId].name}</button>\n            <div className='size30 p-10'>Jersey color:</div>\n            <div>\n                {jerseyColors.map((color,index) => \n                    index === Math.ceil(jerseyColors.length / 2) ? (\n                        <React.Fragment key={index}>\n                            <br />\n                            {getJerseyColorSelector(playerId, color, index)}\n                        </React.Fragment>\n                    ) : (\n                        getJerseyColorSelector(playerId, color, index)\n                    )\n                )}\n            </div>\n            <div>\n                <button className='bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10 m-5' onClick={() => resetSurfersScores(playerId)}>\n                    Reset Scores\n                </button>\n                <button className='bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10 m-5' onClick={() => deleteAthlete(playerId)}>\n                    Delete Athlete\n                </button>\n            </div>\n        </div>\n    const getSurfTotal = (player) => {\n        let total = 0;\n        const score = (index) => player.surfScores[index];\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n                addToTotal(Number(score(index)))\n            }\n        );\n        return total;\n    }\n    const isTieScore = (index) => {\n        const score = scoreTotal(index, players);\n        if (index !== 0) {\n            if (score === scoreTotal(index - 1, players)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    const place = (index) => (isTieScore(index) && (index !== 0)) ? index : (index + 1);\n    const placeSuffix = (index) => rank[(isTieScore(index) && (index !== 0)) ? (index-1) : (index > 2) ? 3 : (index)];\n    const position = (index) => `${place} ${placeSuffix}`;\n    const rank = ['st', 'nd', 'rd', 'th'];\n    const getTwoHighestScores = (index) => {\n        const player = players[index];\n        const scores = player.surfScores;\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n        //console.log(`getTwoHighestScores => playerIndex: ${index} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            highScoreIndex: highestIndex,\n            secondHighScoreIndex: secondHighestIndex\n        };\n    };\n    const getScoreTotal = (index) => {\n        const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n        const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n        const score = (highestScore + secondHighestScore);\n        return score;\n    }\n    const highestScore = (index, playersArray) => {\n        return playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n    }\n    const secondHighestScore = (index, playersArray) => playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n    const scoreTotal = (index, playersArray) => Number(highestScore(index, playersArray) + secondHighestScore(index, playersArray)).toFixed(2);\n\n    const selectJersey = (playerId, selection) => {\n        const newPlayers = [...players];\n        newPlayers[playerId].surfJerseyColor = (selection);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(newPlayers);\n    }\n    */\n    const scorecards = () => {\n        const scorecard = (playerIndex, scoreIndex, score) => {\n            const player = players[playerIndex];\n            if (darts) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`)\n                return <CricketScore\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (dominos) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`)\n                return <Dominos\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    scoreTotal={player.dominoScore || 0}\n                    treeTotal={score}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    getDominoTotal={getDominoTotal}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (golf) {\n                console.log(`${game} - scorecard => player:${player.player || player.name}`);\n                console.log(`scoreIndex: ${scoreIndex}`);\n                console.log(`score: ${player.golfScores[scoreIndex]}`);\n                console.log(`scorecards => par: ${score}`);\n                return <ScoreCard\n                    game={game}\n                    players={players}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={golfPars[scoreIndex]}\n                />\n            }\n            return <ScoreCard\n                game={game}\n                players={players}\n                playerIndex={playerIndex}\n                scoreIndex={scoreIndex}\n                editPlayer={editPlayer}\n                deletePlayer={deletePlayer}\n                updateScores={updateScores}\n                winner={winner}\n            />\n        }\n        /////////////////////////////////\n        const setSurfScore = (playerId, index, score) => {\n            const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n            const newPlayers = [...players];\n            const currentScore = newPlayers[playerId].surfScores[index];\n            const edit = (currentScore !== '' && currentScore !== 0) ? false : true;\n            newPlayers[playerId].surfScores[index] = Number(newScore);\n            newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n            if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n                newPlayers.map((player, index) => {\n                    if (index === playerId) {\n                        player.surfPriority = players.length;\n                    } else if (player.surfPriority != 0) {\n                        player.surfPriority = player.surfPriority - 1;\n                    }\n                });\n            }\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n\n            console.log('setSurfScore => sortedPlayers: ', sortedPlayers)\n\n            localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n            setPlayers(sortedPlayers);\n        }\n        const get2ndHighestScore = (playerId) => {\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const secondHighestId = highestScores[1];\n            return players[playerId].surfScores[secondHighestId];\n        }\n        const getSurfScore = (index) => {\n            const newPlayers = [...players];\n            const surfScore = scoreTotal(index, newPlayers);\n\n            newPlayers[index].score = surfScore;\n            newPlayers[index].surfScore = surfScore;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            return surfScore;\n        };\n        const getWave = (playerId, index, score) => {\n            const player = players[playerId];\n            const theScore = player.surfScores[index];\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const highestId = highestScores[0];\n            const secondHighestId = highestScores[1];\n            const firstScore = (index === highestId) ? true : false;\n            const secondScore = (index === secondHighestId) ? true : false;\n            const getClasses = (firstScore || secondScore) ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n            const wave = <div className=\"column r-10\" onClick={() => setSurfScore(playerId, index, score)} key={getKey(`wave${playerId}${index}${score}`)}>\n                <div className='size30 bold color-yellow bg-dkYellow w-100 p-10'>{index + 1}</div>\n                <div className={`ht-40 ${getClasses}`}>{score}</div>\n            </div>\n            return wave\n        }\n        const surferScores = (player, index) => <div className='button' key={getKey(`${index}${(player.player || player.name)}`)}>\n            <div className={`flexContainer ht-50 r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`} key={getKey(`${index}${(player.player || player.name)}`)}>\n                <div className={`flex2Column contentLeft r-10-lft m-0 w-75 p-10`}>\n                    <div className='bold'>\n                        <span className='size25 mt--10'>\n                            {place(index)}\n                        </span>\n                        <span className='size15 mt--10'>\n                            {placeSuffix(index)}\n                        </span>\n                    </div>\n                    <div className='bold' onClick={()=>setShowButtons((showButtons!==false)?false:index)}>\n                        <div className='size30 mt-5 mb-5'>\n                            {(player.player || player.name).split(' ')[0]}\n                        </div>\n                        <div className='size20'>\n                            {(player.name.indexOf(' ') !== -1)?player.name.substring(player.name.indexOf(' ') + 1):null}\n                        </div>\n                    </div>\n                </div>\n                <div className={`r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`}>\n                    <div className='size40 bold'>{getScoreTotal(index)}</div>\n                    <div className='mt-10 bold'>{rankStatus(players, index, false)}</div>\n                </div>\n            </div>\n            <div>\n                {showButtons === index && (\n                editSurfer(index)\n            )}\n            </div>\n            <div>\n                <div>\n                    <div className='h-scroll color-white copyright ml-10 mr-10 mt-5'>\n                        <div className=\"container mt-10\">\n                            {players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        /////////////////////////////////\n        const surfingScores = (player, index) => {\n            return surferScores(player, index);\n            /*if (players != undefined && index != undefined && player != undefined) {\n                return <SurfingScores\n                    players={players}\n                    player={player}\n                    index={index}\n                    surfScoring={surfScoring}\n                    setPlayers={setPlayers}\n                    key={getKey(index)}\n                >\n                </SurfingScores>\n            } \n            */\n        }\n\n        const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n\n        const dartScores = () => dartScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex3Column p-5'>\n                {scorecard(0, index, 0)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(1, index, 0)}\n            </div>\n        </div>);\n\n        const editGolfPar = (hole) => {\n            const newPars = [...golfPars];\n            const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n            newPars[hole] = newPar;\n            setGolfPars(newPars);\n        }\n\n        const golfScores = () => golfScoring.map((hole, index) => <div key={getKey(hole)}>\n            <div className='contentCenter bg-dark r-10 m-5 mt-35'>\n                <div>\n                    <span className='copyright greet color-yellow'>\n                        Hole:\n                    </span>\n                    <span className='size40 bold pt-5 pl-15 pr-15 bg-dark r-10'>\n                        {index + 1}\n                    </span>\n                    <span className='copyright greet color-yellow'>\n                        Par:\n                    </span>\n                    <span className='size20 bold color-lite mt--5'>\n                        {golfPars[index]}\n                    </span>\n                </div>\n                <div className='flexContainer'>\n                    <div className='flex2Column p-5'>\n                        {scorecard(0, index, golfPars[index])}\n                    </div>\n                    <div className='flex2Column p-5'>\n                        {scorecard(1, index, golfPars[index])}\n                    </div>\n                </div>\n            </div>\n        </div>);\n\n        const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index));\n\n        const dominoScores = () => dominoScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(0, index, score)}\n            </div>\n            <div className='r-5 font50 color-yellow m-auto w-100'>\n                {score}\n            </div>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(1, index, score)}\n            </div>\n        </div>);\n\n        const isDominoWinner = (playerIndex) => (getDominoTotal(playerIndex) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n\n        const dartClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        const dominoClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isDominoWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n\n        const dartScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>{players[0].player || players[0].name}:<div className='mt-10 size40 white'>{getDartTotal(players[0])}</div></div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>{players[1].player || players[1].name}:<div className='mt-10 size40 white'>{getDartTotal(players[1])}</div></div>\n            </div>\n            {dartScores()}\n        </React.Fragment>\n\n        const golfScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy m-5 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>\n                    {players[0].player || players[0].name}:<div className='mt-10 size40 white'>{players[0].golfScore}</div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>\n                    {players[1].player || players[1].name}:<div className='mt-10  size40 white'>{players[1].golfScore}</div>\n                </div>\n            </div>\n            <div className='scrollHeight500'>\n                {golfScores()}\n            </div>\n        </React.Fragment>\n\n        const dominoScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10'>\n                <div className={dominoClass(0)}>\n                    {players[0].player || players[0].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(0)}\n                    </div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dominoClass(1)}>\n                    {players[1].player || players[1].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(1)}\n                    </div>\n                </div>\n            </div>\n            {dominoScores()}\n        </React.Fragment>\n            \n        if (darts) return dartScoreboard()\n        if (dominos) return dominoScoreboard()\n        if (golf) return golfScoreboard()\n        //if (surf) return surfScoreboard\n        if (surf) return surfingScoreboard()\n        else return renderedItems();\n    }\n\n    return (\n        <div className='fadeIn mt--30'>\n            <div className='mb-10'>\n                <Selector\n                    groupTitle='game'\n                    label='item.description'\n                    items={games}\n                    selected={game}\n                    onChange={selectGame}\n                    fontSize='25'\n                    padding='10px'\n                    width={(darts || dominos) ? '98%' : '65%'}\n                />\n                {\n                    (darts || golf)\n                        ? <React.Fragment></React.Fragment>\n                        : <Selector className='fl-left'\n                            groupTitle='winner'\n                            label='i.description'\n                            items={(dominos) ? dominoWinners : ((surf) ? heatLengths : winners)}\n                            selected={winner}\n                            onChange={selectWinner}\n                            fontSize='25'\n                            padding='10px'\n                            width='30%'\n                        />\n                }\n                {(surf) ?\n                    <SurfScores\n                        players={players}\n                        heatLength={winner}\n                        isWinner={isWinner}\n                        getSurferIndexWithPriority={getSurferIndexWithPriority}\n                        shiftPriority={shiftPriority}\n                        losePriority={losePriority}\n                    ></SurfScores>\n                    :\n                    <React.Fragment></React.Fragment>\n\n                }\n            </div>\n            <div className='scrollHeight450'>\n                {scorecards()}\n            </div>\n            <div className='flexContainer width-100-percent'>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow' onClick={() => addPlayer()}>add player</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black' onClick={() => reset()}>reset</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow' onClick={() => clear()}>clear</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScoreKeeper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}