{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/site/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../../actions';\nimport LocalAuth from './LocalAuth.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass GoogleAuth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getId());\n      } else {\n        this.props.signOut();\n      }\n    };\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n    this.setSignIn = () => {\n      //console.log(`GoogleAuth => setSignIn => localSignIn: ${!this.state.localSignIn}`)\n      this.setState({\n        localSignIn: !this.state.localSignIn\n      });\n      return this.props.setSignIn();\n    };\n    console.log(`GoogleAuth => props.isSignedIn: ${this.props.isSignedIn}`);\n    this.state = {\n      localSignIn: false\n    };\n  }\n  componentDidMount() {\n    console.log(`GoogleAuth => componentDidMount(): ${JSON.stringify(this.props, null, 2)}`);\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '708928164694-1hej0sd42volq7ng5enucjbhr6n18fl8.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n  renderAuthButton() {\n    //console.log(`GoogleAuth => this.props.isSignedIn: ${this.props.isSignedIn}`)\n    //console.log(`GoogleAuth => this.state.localSignIn: ${this.state.localSignIn}`)\n\n    if (this.props.isSignedIn === null) {\n      return /*#__PURE__*/_jsxDEV(LocalAuth, {\n        isSignedIn: this.state.localSignIn,\n        setSignIn: this.setSignIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this);\n    } else if (this.state.localSignIn || this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"larger middle aligned icon user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), \"Sign Out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"larger middle aligned icon user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), \"Sign In with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n}\nconst mapStateToProps = state => {\n  //console.log(`GoogleAuth => mapStateToProps => state: ${JSON.stringify(state,null,2)}`);\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"names":["React","connect","signIn","signOut","LocalAuth","jsxDEV","_jsxDEV","GoogleAuth","Component","constructor","props","onAuthChange","isSignedIn","auth","currentUser","get","getId","onSignInClick","onSignOutClick","setSignIn","setState","localSignIn","state","console","log","componentDidMount","JSON","stringify","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","children","render","Fragment","mapStateToProps"],"sources":["/Users/js/Dev/my-first-reactor/src/components/site/GoogleAuth.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../../actions';\nimport LocalAuth from './LocalAuth.js';\n\nclass GoogleAuth extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(`GoogleAuth => props.isSignedIn: ${this.props.isSignedIn}`)\n    this.state = {\n      localSignIn: false\n    };\n  }\n  componentDidMount() {\n    console.log(`GoogleAuth => componentDidMount(): ${JSON.stringify(this.props,null,2)}`)\n    \n    window.gapi.load('client:auth2', () => {\n      window.gapi.client\n        .init({\n          clientId:\n            '708928164694-1hej0sd42volq7ng5enucjbhr6n18fl8.apps.googleusercontent.com',\n          scope: 'email'\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = isSignedIn => {\n    if (isSignedIn) {\n      this.props.signIn(this.auth.currentUser.get().getId());\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n  setSignIn = () => {\n    //console.log(`GoogleAuth => setSignIn => localSignIn: ${!this.state.localSignIn}`)\n    this.setState({ localSignIn: !this.state.localSignIn });\n    return this.props.setSignIn();\n  };\n\n  renderAuthButton() {\n    //console.log(`GoogleAuth => this.props.isSignedIn: ${this.props.isSignedIn}`)\n    //console.log(`GoogleAuth => this.state.localSignIn: ${this.state.localSignIn}`)\n\n    if (this.props.isSignedIn === null) {\n      return <LocalAuth \n                isSignedIn={this.state.localSignIn}\n                setSignIn={this.setSignIn}\n              />\n    } else if (this.state.localSignIn || this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui google button\">\n          <i className=\"larger middle aligned icon user\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui google button\">\n          <i className=\"larger middle aligned icon user\" />\n          Sign In with Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <React.Fragment>{this.renderAuthButton()}</React.Fragment>;\n  }\n}\n\nconst mapStateToProps = state => {\n  //console.log(`GoogleAuth => mapStateToProps => state: ${JSON.stringify(state,null,2)}`);\n  return { isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(\n  mapStateToProps,\n  { signIn, signOut }\n)(GoogleAuth);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}