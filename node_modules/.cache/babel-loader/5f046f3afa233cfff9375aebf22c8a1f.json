{"ast":null,"code":"import _toConsumableArray from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/* backup pre hooks 1/7/21\nimport React, { useState, useEffect } from 'react';\nconst PostDirectory = () => {\n\n    const [postDirectory, setPostDirectory] = useState(localStorage.getItem(\"postDirectory\") === null) ? [] : JSON.parse(localStorage.getItem(\"postDirectory\"));        \n    const [uniquePosts, setUniquePosts] = useState([...new Set(postDirectory)]);\n    const [index, setIndex] = useState(uniquePosts.indexOf(null));\n    if (index > -1) {\n        setUniquePosts(uniquePosts.splice(index, 1));\n    }\n    localStorage.setItem(\"postDirectory\", JSON.stringify(uniquePosts));\n    \n    useEffect(() => {\n        setPostDirectory(uniquePosts);\n    }, []);\n\n    const getDirectory = () => postDirectory;\n    const removeLastId = () => setPostDirectory(postDirectory.pop());\n\n    const deleteLast = () => {\n         console.log(`PostDirectory => deleteLast()`)\n         setPostDirectory(removeLastId());\n         localStorage.setItem(\"postDirectory\", JSON.stringify(postDirectory))\n     }\n     const add = (id) => {\n         console.log(`PostDirectory => add(${id})`);\n         const pDirectory = postDirectory;\n         pDirectory.push(id)\n         setPostDirectory(pDirectory);\n         localStorage.setItem(\"postDirectory\", JSON.stringify(pDirectory))\n     }\n     \n     const getLastIndex = () => Number(postDirectory.length-1);\n     const getLastId = () => postDirectory[getLastIndex()];\n     const get2ndToLastId = () => postDirectory[getLastIndex()-1];\n     const getStorageItem = (id) => localStorage.getItem(id)\n     const getLastItem = () => (localStorage.getItem(getLastId()) === null) ? JSON.parse(getStorageItem(get2ndToLastId())) : JSON.parse(getStorageItem(getLastId()));\n     \n     return <p>Count: {postDirectory.length}</p> \n     \n }\n export default PostDirectory;\n\n*/import React from'react';var PostDirectory=/*#__PURE__*/function(_React$Component){_inherits(PostDirectory,_React$Component);var _super=_createSuper(PostDirectory);function PostDirectory(props){var _this;_classCallCheck(this,PostDirectory);_this=_super.call(this,props);_this.getDirectory=function(){return _this.postDirectory;};_this.removeLastId=function(){return _this.postDirectory.pop();};_this.deleteLast=function(){console.log(\"PostDirectory => deleteLast()\");_this.postDirectory=_this.removeLastId();localStorage.setItem(\"postDirectory\",JSON.stringify(_this.postDirectory));_this.setState({postDirectory:_this.postDirectory});};_this.add=function(id){console.log(\"PostDirectory => add(\".concat(id,\")\"));_this.postDirectory.push(id);localStorage.setItem(\"postDirectory\",JSON.stringify(_this.postDirectory));};_this.delete=function(id){console.log(\"PostDirectory => delete(\".concat(id,\")\"));var index=_this.postDirectory.indexOf(String(id));console.log(\"\".concat(index,\" of \").concat(_this.postDirectory.length));_this.postDirectory.splice(index,1);console.log(\"\".concat(index,\" of \").concat(_this.postDirectory.length));localStorage.setItem(\"postDirectory\",JSON.stringify(_this.postDirectory));localStorage.removeItem(id);localStorage.setItem(\"lastPostId\",\"\".concat(_this.postDirectory[_this.postDirectory.length-1]));_this.setState({postDirectory:_this.postDirectory});};_this.getLastIndex=function(){return Number(_this.state.postDirectory.length-1);};_this.getLastId=function(){return _this.state.postDirectory[_this.getLastIndex()];};_this.get2ndToLastId=function(){return _this.state.postDirectory[_this.getLastIndex()-1];};_this.getStorageItem=function(id){return localStorage.getItem(id);};_this.getLastItem=function(){return localStorage.getItem(_this.getLastId())===null?JSON.parse(_this.getStorageItem(_this.get2ndToLastId())):JSON.parse(_this.getStorageItem(_this.getLastId()));};_this.postDirectory=localStorage.getItem(\"postDirectory\")===null?[]:JSON.parse(localStorage.getItem(\"postDirectory\"));_this.uniquePosts=_toConsumableArray(new Set(_this.postDirectory));var _index=_this.uniquePosts.indexOf(null);if(_index>-1){_this.uniquePosts.splice(_index,1);}localStorage.setItem(\"postDirectory\",JSON.stringify(_this.uniquePosts));_this.state={postDirectory:_this.uniquePosts};return _this;}_createClass(PostDirectory,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"p\",null,\"Count: \",this.state.postDirectory.length);}}]);return PostDirectory;}(React.Component);export default PostDirectory;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/PostDirectory.js"],"names":["React","PostDirectory","props","getDirectory","postDirectory","removeLastId","pop","deleteLast","console","log","localStorage","setItem","JSON","stringify","setState","add","id","push","delete","index","indexOf","String","length","splice","removeItem","getLastIndex","Number","state","getLastId","get2ndToLastId","getStorageItem","getItem","getLastItem","parse","uniquePosts","Set","Component"],"mappings":"iuBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,GACMC,CAAAA,a,0HAEF,uBAAYC,KAAZ,CAAmB,+CACf,uBAAMA,KAAN,EADe,MAclBC,YAdkB,CAcH,iBAAM,OAAKC,aAAX,EAdG,OAelBC,YAfkB,CAeH,iBAAM,OAAKD,aAAL,CAAmBE,GAAnB,EAAN,EAfG,OAgBlBC,UAhBkB,CAgBL,UAAM,CACfC,OAAO,CAACC,GAAR,kCACA,MAAKL,aAAL,CAAqB,MAAKC,YAAL,EAArB,CACAK,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAsCC,IAAI,CAACC,SAAL,CAAe,MAAKT,aAApB,CAAtC,EACA,MAAKU,QAAL,CAAc,CACVV,aAAa,CAAE,MAAKA,aADV,CAAd,EAGH,CAvBiB,OAwBlBW,GAxBkB,CAwBZ,SAACC,EAAD,CAAQ,CACVR,OAAO,CAACC,GAAR,gCAAoCO,EAApC,OACA,MAAKZ,aAAL,CAAmBa,IAAnB,CAAwBD,EAAxB,EACAN,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAsCC,IAAI,CAACC,SAAL,CAAe,MAAKT,aAApB,CAAtC,EACH,CA5BiB,OA6BlBc,MA7BkB,CA6BT,SAACF,EAAD,CAAQ,CACbR,OAAO,CAACC,GAAR,mCAAuCO,EAAvC,OACA,GAAMG,CAAAA,KAAK,CAAG,MAAKf,aAAL,CAAmBgB,OAAnB,CAA2BC,MAAM,CAACL,EAAD,CAAjC,CAAd,CACAR,OAAO,CAACC,GAAR,WAAeU,KAAf,gBAA2B,MAAKf,aAAL,CAAmBkB,MAA9C,GACA,MAAKlB,aAAL,CAAmBmB,MAAnB,CAA0BJ,KAA1B,CAAiC,CAAjC,EACAX,OAAO,CAACC,GAAR,WAAeU,KAAf,gBAA2B,MAAKf,aAAL,CAAmBkB,MAA9C,GACAZ,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAsCC,IAAI,CAACC,SAAL,CAAe,MAAKT,aAApB,CAAtC,EACAM,YAAY,CAACc,UAAb,CAAwBR,EAAxB,EACAN,YAAY,CAACC,OAAb,CAAqB,YAArB,WAAsC,MAAKP,aAAL,CAAmB,MAAKA,aAAL,CAAmBkB,MAAnB,CAA0B,CAA7C,CAAtC,GACA,MAAKR,QAAL,CAAc,CACVV,aAAa,CAAE,MAAKA,aADV,CAAd,EAGH,CAzCiB,OA0ClBqB,YA1CkB,CA0CH,iBAAMC,CAAAA,MAAM,CAAC,MAAKC,KAAL,CAAWvB,aAAX,CAAyBkB,MAAzB,CAAgC,CAAjC,CAAZ,EA1CG,OA2ClBM,SA3CkB,CA2CN,iBAAM,OAAKD,KAAL,CAAWvB,aAAX,CAAyB,MAAKqB,YAAL,EAAzB,CAAN,EA3CM,OA4ClBI,cA5CkB,CA4CD,iBAAM,OAAKF,KAAL,CAAWvB,aAAX,CAAyB,MAAKqB,YAAL,GAAoB,CAA7C,CAAN,EA5CC,OA6ClBK,cA7CkB,CA6CD,SAACd,EAAD,QAAQN,CAAAA,YAAY,CAACqB,OAAb,CAAqBf,EAArB,CAAR,EA7CC,OA8ClBgB,WA9CkB,CA8CJ,iBAAOtB,CAAAA,YAAY,CAACqB,OAAb,CAAqB,MAAKH,SAAL,EAArB,IAA2C,IAA5C,CAAoDhB,IAAI,CAACqB,KAAL,CAAW,MAAKH,cAAL,CAAoB,MAAKD,cAAL,EAApB,CAAX,CAApD,CAA6GjB,IAAI,CAACqB,KAAL,CAAW,MAAKH,cAAL,CAAoB,MAAKF,SAAL,EAApB,CAAX,CAAnH,EA9CI,CAEf,MAAKxB,aAAL,CAAsBM,YAAY,CAACqB,OAAb,CAAqB,eAArB,IAA0C,IAA3C,CAAmD,EAAnD,CAAwDnB,IAAI,CAACqB,KAAL,CAAWvB,YAAY,CAACqB,OAAb,CAAqB,eAArB,CAAX,CAA7E,CACA,MAAKG,WAAL,oBAAuB,GAAIC,CAAAA,GAAJ,CAAQ,MAAK/B,aAAb,CAAvB,EACA,GAAMe,CAAAA,MAAK,CAAG,MAAKe,WAAL,CAAiBd,OAAjB,CAAyB,IAAzB,CAAd,CACA,GAAID,MAAK,CAAG,CAAC,CAAb,CAAgB,CACZ,MAAKe,WAAL,CAAiBX,MAAjB,CAAwBJ,MAAxB,CAA+B,CAA/B,EACH,CACDT,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAsCC,IAAI,CAACC,SAAL,CAAe,MAAKqB,WAApB,CAAtC,EACA,MAAKP,KAAL,CAAa,CACTvB,aAAa,CAAE,MAAK8B,WADX,CAAb,CATe,aAYlB,C,iEAmCS,CACD,mBAAO,uCAAW,KAAKP,KAAL,CAAWvB,aAAX,CAAyBkB,MAApC,CAAP,CACP,C,2BAnDsBtB,KAAK,CAACoC,S,EAsDjC,cAAenC,CAAAA,aAAf","sourcesContent":["/* backup pre hooks 1/7/21\nimport React, { useState, useEffect } from 'react';\nconst PostDirectory = () => {\n\n    const [postDirectory, setPostDirectory] = useState(localStorage.getItem(\"postDirectory\") === null) ? [] : JSON.parse(localStorage.getItem(\"postDirectory\"));        \n    const [uniquePosts, setUniquePosts] = useState([...new Set(postDirectory)]);\n    const [index, setIndex] = useState(uniquePosts.indexOf(null));\n    if (index > -1) {\n        setUniquePosts(uniquePosts.splice(index, 1));\n    }\n    localStorage.setItem(\"postDirectory\", JSON.stringify(uniquePosts));\n    \n    useEffect(() => {\n        setPostDirectory(uniquePosts);\n    }, []);\n\n    const getDirectory = () => postDirectory;\n    const removeLastId = () => setPostDirectory(postDirectory.pop());\n\n    const deleteLast = () => {\n         console.log(`PostDirectory => deleteLast()`)\n         setPostDirectory(removeLastId());\n         localStorage.setItem(\"postDirectory\", JSON.stringify(postDirectory))\n     }\n     const add = (id) => {\n         console.log(`PostDirectory => add(${id})`);\n         const pDirectory = postDirectory;\n         pDirectory.push(id)\n         setPostDirectory(pDirectory);\n         localStorage.setItem(\"postDirectory\", JSON.stringify(pDirectory))\n     }\n     \n     const getLastIndex = () => Number(postDirectory.length-1);\n     const getLastId = () => postDirectory[getLastIndex()];\n     const get2ndToLastId = () => postDirectory[getLastIndex()-1];\n     const getStorageItem = (id) => localStorage.getItem(id)\n     const getLastItem = () => (localStorage.getItem(getLastId()) === null) ? JSON.parse(getStorageItem(get2ndToLastId())) : JSON.parse(getStorageItem(getLastId()));\n     \n     return <p>Count: {postDirectory.length}</p> \n     \n }\n export default PostDirectory;\n\n*/\nimport React from 'react';\nclass PostDirectory extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.postDirectory = (localStorage.getItem(\"postDirectory\") === null) ? [] : JSON.parse(localStorage.getItem(\"postDirectory\"));        \n        this.uniquePosts = [...new Set(this.postDirectory)];\n        const index = this.uniquePosts.indexOf(null);\n        if (index > -1) {\n            this.uniquePosts.splice(index, 1);\n        }\n        localStorage.setItem(\"postDirectory\", JSON.stringify(this.uniquePosts))\n        this.state = {\n            postDirectory: this.uniquePosts,\n        };\n    }\n    \n     getDirectory = () => this.postDirectory;\n     removeLastId = () => this.postDirectory.pop();\n     deleteLast = () => {\n         console.log(`PostDirectory => deleteLast()`)\n         this.postDirectory = this.removeLastId();\n         localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory))\n         this.setState({\n             postDirectory: this.postDirectory\n         }); \n     }\n     add = (id) => {\n         console.log(`PostDirectory => add(${id})`);\n         this.postDirectory.push(id);\n         localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory))\n     }\n     delete = (id) => {\n         console.log(`PostDirectory => delete(${id})`)\n         const index = this.postDirectory.indexOf(String(id));\n         console.log(`${index} of ${this.postDirectory.length}`)\n         this.postDirectory.splice(index, 1);\n         console.log(`${index} of ${this.postDirectory.length}`)\n         localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory))\n         localStorage.removeItem(id);\n         localStorage.setItem(\"lastPostId\", `${this.postDirectory[this.postDirectory.length-1]}`);\n         this.setState({\n             postDirectory: this.postDirectory\n         });\n     }\n     getLastIndex = () => Number(this.state.postDirectory.length-1);\n     getLastId = () => this.state.postDirectory[this.getLastIndex()];\n     get2ndToLastId = () => this.state.postDirectory[this.getLastIndex()-1];\n     getStorageItem = (id) => localStorage.getItem(id)\n     getLastItem = () => (localStorage.getItem(this.getLastId()) === null) ? JSON.parse(this.getStorageItem(this.get2ndToLastId())) : JSON.parse(this.getStorageItem(this.getLastId()));\n     render() {      \n             return <p>Count: {this.state.postDirectory.length}</p> \n     }\n     \n }\n export default PostDirectory;"]},"metadata":{},"sourceType":"module"}