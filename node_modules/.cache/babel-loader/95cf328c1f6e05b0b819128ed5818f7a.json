{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/streams/StreamForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass StreamForm extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.renderInput = _ref => {\n      let {\n        input,\n        label,\n        meta\n      } = _ref;\n      const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...input,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    };\n    this.onSubmit = formValues => {\n      this.props.onSubmit(formValues);\n    };\n  }\n  renderError(_ref2) {\n    let {\n      error,\n      touched\n    } = _ref2;\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-neogreen bold p-10\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error p-20 r-5 bg-soft m-10\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green glassy p-10 r-5\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst validate = formValues => {\n  const errors = {};\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n  if (!formValues.description) {\n    errors.description = 'You must enter a description';\n  }\n  return errors;\n};\nexport default reduxForm({\n  form: 'streamForm',\n  validate\n})(StreamForm);","map":{"version":3,"names":["React","Field","reduxForm","jsxDEV","_jsxDEV","StreamForm","Component","constructor","arguments","renderInput","_ref","input","label","meta","className","error","touched","children","fileName","_jsxFileName","lineNumber","columnNumber","autoComplete","renderError","onSubmit","formValues","props","_ref2","render","handleSubmit","name","component","validate","errors","title","description","form"],"sources":["/Users/js/Dev/my-first-reactor/src/components/streams/StreamForm.js"],"sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamForm extends React.Component {\n    renderError({ error, touched }) {\n        if (touched && error) {\n            return (\n                <div className=\"ui error\">\n                    <div className=\"color-neogreen bold p-10\">{error}</div>\n                </div>\n            );\n        }\n    };\n    renderInput = ({ input, label, meta }) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\" />\n                {this.renderError(meta)}\n            </div>\n        );\n    };\n    onSubmit = formValues => {\n        this.props.onSubmit(formValues);\n    };\n    render() {\n        return (\n            <form\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\n                className=\"ui form error p-20 r-5 bg-soft m-10\"\n            >\n                <Field \n                    name=\"title\" \n                    component={this.renderInput} \n                    label=\"Enter Title\" \n                />\n                <Field\n                    name=\"description\"\n                    component={this.renderInput}\n                    label=\"Enter Description\"\n                />\n                <button className=\"bg-green glassy p-10 r-5\">\n                    Submit\n                </button>\n            </form>\n        );\n    }\n}\n\nconst validate = formValues => {\n    const errors = {};\n    if (!formValues.title) { errors.title = 'You must enter a title' }\n    if (!formValues.description) { errors.description = 'You must enter a description' }\n    return errors;\n};\n\nexport default reduxForm({\n    form: 'streamForm',\n    validate\n})(StreamForm);"],"mappings":"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"},"metadata":{},"sourceType":"module"}