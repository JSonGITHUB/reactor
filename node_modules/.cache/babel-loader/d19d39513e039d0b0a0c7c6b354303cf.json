{"ast":null,"code":"import _classCallCheck from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import getKey from'../utils/KeyGenerator.js';var TextColorizer=/*#__PURE__*/function(_React$Component){_inherits(TextColorizer,_React$Component);var _super=_createSuper(TextColorizer);function TextColorizer(props){var _this;_classCallCheck(this,TextColorizer);_this=_super.call(this,props);_this.class=_this.props.class;_this.text=_this.props.text;return _this;}_createClass(TextColorizer,[{key:\"render\",value:function render(){var yourClassName=\"\";var colors=[\"color-green\",\"color-yellow\",\"color-red\"];var colorIndex=0;var resetColorIndex=function resetColorIndex(){colorIndex=0;return colorIndex;};var nextIndex=function nextIndex(){colorIndex++;return colorIndex;};var getNextColor=function getNextColor(){return colorIndex>=colors.length-1?resetColorIndex():nextIndex();};return/*#__PURE__*/React.createElement(\"div\",{className:this.class},this.text.split('').map(function(listValue,index){yourClassName=colors[getNextColor()];return/*#__PURE__*/React.createElement(\"span\",{key:getKey(listValue),className:yourClassName},listValue);}));}}]);return TextColorizer;}(React.Component);export default TextColorizer;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/TextColorizer.js"],"names":["React","getKey","TextColorizer","props","class","text","yourClassName","colors","colorIndex","resetColorIndex","nextIndex","getNextColor","length","split","map","listValue","index","Component"],"mappings":"okBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,C,GAEMC,CAAAA,a,0HAEF,uBAAYC,KAAZ,CAAmB,+CACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,MAAKD,KAAL,CAAWC,KAAxB,CACA,MAAKC,IAAL,CAAY,MAAKF,KAAL,CAAWE,IAAvB,CAHe,aAIlB,C,iEAEQ,CACL,GAAIC,CAAAA,aAAa,CAAG,EAApB,CACA,GAAMC,CAAAA,MAAM,CAAG,CAAC,aAAD,CAAgB,cAAhB,CAAgC,WAAhC,CAAf,CACA,GAAIC,CAAAA,UAAU,CAAG,CAAjB,CACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1BD,UAAU,CAAG,CAAb,CACA,MAAOA,CAAAA,UAAP,CACH,CAHD,CAIA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpBF,UAAU,GACV,MAAOA,CAAAA,UAAP,CACH,CAHD,CAIA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SAAOH,CAAAA,UAAU,EAAID,MAAM,CAACK,MAAP,CAAc,CAA7B,CAAkCH,eAAe,EAAjD,CAAsDC,SAAS,EAArE,EAArB,CACA,mBACI,2BAAK,SAAS,CAAE,KAAKN,KAArB,EACK,KAAKC,IAAL,CAAUQ,KAAV,CAAgB,EAAhB,EAAoBC,GAApB,CAAwB,SAASC,SAAT,CAAoBC,KAApB,CAA0B,CAC/CV,aAAa,CAAGC,MAAM,CAACI,YAAY,EAAb,CAAtB,CACA,mBAAO,4BAAM,GAAG,CAAEV,MAAM,CAACc,SAAD,CAAjB,CAA8B,SAAS,CAAET,aAAzC,EAAyDS,SAAzD,CAAP,CACH,CAHA,CADL,CADJ,CAQH,C,2BA7BuBf,KAAK,CAACiB,S,EAgClC,cAAef,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport getKey from '../utils/KeyGenerator.js';\n\nclass TextColorizer extends React.Component {\n    text;\n    constructor(props) {\n        super(props);\n        this.class = this.props.class;\n        this.text = this.props.text;\n    }\n\n    render() {\n        let yourClassName = \"\";\n        const colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n        let colorIndex = 0;\n        const resetColorIndex = () => {\n            colorIndex = 0\n            return colorIndex\n        }\n        const nextIndex = () => {\n            colorIndex++\n            return colorIndex\n        }\n        const getNextColor = () => (colorIndex >= colors.length-1) ? resetColorIndex() : nextIndex();\n        return (\n            <div className={this.class}>\n                {this.text.split('').map(function(listValue, index){\n                    yourClassName = colors[getNextColor()];\n                    return <span key={getKey(listValue)} className={yourClassName}>{listValue}</span>;\n                })}\n            </div>\n        );\n    }\n}\n\nexport default TextColorizer;  "]},"metadata":{},"sourceType":"module"}