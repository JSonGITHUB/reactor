{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRatesConfig.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport menu from '../../assets/images/menuYellow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExchangeRatesConfig = _ref => {\n  _s();\n  let {\n    onExchangeRatesChange\n  } = _ref;\n  const [exchangeRates, setExchangeRates] = useState({\n    USD: 1,\n    MXN: 17.16,\n    // Mexican Peso\n    NIO: 36.55,\n    // Nicaraguan Cordovas\n    CRC: 541.23,\n    // Costa Rican Colones\n    IDR: 15045.30,\n    // Indonesian Rupiah\n    AUD: 1.50 // Australian Dollar\n  });\n\n  const [settings, setSettings] = useState(false);\n  useEffect(() => {\n    const savedExchangeRates = localStorage.getItem('exchangeRates');\n    if (savedExchangeRates) {\n      setExchangeRates(JSON.parse(savedExchangeRates));\n      onExchangeRatesChange(exchangeRates);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n    onExchangeRatesChange(exchangeRates);\n  }, [exchangeRates]);\n  useEffect(() => {\n    localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n    onExchangeRatesChange(exchangeRates); // Invoke the callback when rates change\n  }, [exchangeRates, onExchangeRatesChange]);\n  const toggleSettings = () => {\n    setSettings(!settings);\n  };\n  const handleRateChange = event => {\n    if (event.key === 'Enter') {\n      setExchangeRates(prevState => ({\n        ...prevState,\n        [rate]: value\n      }));\n      onExchangeRatesChange(exchangeRates);\n      toggleSettings();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"color-yellow button\",\n        src: menu,\n        alt: \"open menu\",\n        onClick: () => toggleSettings()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), settings ? Object.keys(exchangeRates).map(rate => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"p-20 m-5 color-lite bold\",\n        htmlFor: rate,\n        children: rate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"p-20 m-5 color-lite bold bg-black\",\n        type: \"number\",\n        id: rate,\n        value: exchangeRates[rate],\n        onKeyDown: handleRateChange(rate, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this)]\n    }, rate, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ExchangeRatesConfig, \"s4Zqg1zN1y4+ZzuBV2bRaEOUIfQ=\");\n_c = ExchangeRatesConfig;\nexport default ExchangeRatesConfig;\nvar _c;\n$RefreshReg$(_c, \"ExchangeRatesConfig\");","map":{"version":3,"names":["React","useState","useEffect","menu","jsxDEV","_jsxDEV","ExchangeRatesConfig","_ref","_s","onExchangeRatesChange","exchangeRates","setExchangeRates","USD","MXN","NIO","CRC","IDR","AUD","settings","setSettings","savedExchangeRates","localStorage","getItem","JSON","parse","setItem","stringify","toggleSettings","handleRateChange","event","key","prevState","rate","value","children","className","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","htmlFor","type","id","onKeyDown","e","target","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRatesConfig.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport menu from '../../assets/images/menuYellow.png';\n\nconst ExchangeRatesConfig = ({ onExchangeRatesChange }) => {\n\n    const [exchangeRates, setExchangeRates] = useState({\n        USD: 1,\n        MXN: 17.16,   // Mexican Peso\n        NIO: 36.55,   // Nicaraguan Cordovas\n        CRC: 541.23,    // Costa Rican Colones\n        IDR: 15045.30,  // Indonesian Rupiah\n        AUD: 1.50,    // Australian Dollar\n    });\n\n    const [settings, setSettings] = useState(false)\n\n    useEffect(() => {\n        const savedExchangeRates = localStorage.getItem('exchangeRates');\n        if (savedExchangeRates) {\n            setExchangeRates(JSON.parse(savedExchangeRates));\n            onExchangeRatesChange(exchangeRates);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n        onExchangeRatesChange(exchangeRates);\n    }, [exchangeRates]);\n\n    useEffect(() => {\n        localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n        onExchangeRatesChange(exchangeRates); // Invoke the callback when rates change\n    }, [exchangeRates, onExchangeRatesChange]);\n\n    const toggleSettings = () => {\n        setSettings(!settings)\n    }\n\n    const handleRateChange = (event) => {\n        if (event.key === 'Enter') {\n            setExchangeRates(prevState => ({\n                ...prevState,\n                [rate]: value\n            }));\n            onExchangeRatesChange(exchangeRates);\n            toggleSettings();\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <img className='color-yellow button' src={menu} alt=\"open menu\" onClick={() => toggleSettings()} />\n            </div>\n            {settings ? (\n                Object.keys(exchangeRates).map(rate => (\n                    <div key={rate}>\n                        <label\n                            className='p-20 m-5 color-lite bold'\n                            htmlFor={rate}\n                        >\n                            {rate}\n                        </label>\n                        <input\n                            className='p-20 m-5 color-lite bold bg-black'\n                            type=\"number\"\n                            id={rate}\n                            value={exchangeRates[rate]}\n                            onKeyDown={handleRateChange(rate, e.target.value)}\n                        />\n                    </div>\n                ))\n            ) : (\n                <div></div>\n            )}\n        </div>\n    );\n\n};\n\nexport default ExchangeRatesConfig;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,mBAAmB,GAAGC,IAAA,IAA+B;EAAAC,EAAA;EAAA,IAA9B;IAAEC;EAAsB,CAAC,GAAAF,IAAA;EAElD,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC;IAC/CW,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,KAAK;IAAI;IACdC,GAAG,EAAE,KAAK;IAAI;IACdC,GAAG,EAAE,MAAM;IAAK;IAChBC,GAAG,EAAE,QAAQ;IAAG;IAChBC,GAAG,EAAE,IAAI,CAAK;EAClB,CAAC,CAAC;;EAEF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACZ,MAAMkB,kBAAkB,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAChE,IAAIF,kBAAkB,EAAE;MACpBT,gBAAgB,CAACY,IAAI,CAACC,KAAK,CAACJ,kBAAkB,CAAC,CAAC;MAChDX,qBAAqB,CAACC,aAAa,CAAC;IACxC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENR,SAAS,CAAC,MAAM;IACZmB,YAAY,CAACI,OAAO,CAAC,eAAe,EAAEF,IAAI,CAACG,SAAS,CAAChB,aAAa,CAAC,CAAC;IACpED,qBAAqB,CAACC,aAAa,CAAC;EACxC,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnBR,SAAS,CAAC,MAAM;IACZmB,YAAY,CAACI,OAAO,CAAC,eAAe,EAAEF,IAAI,CAACG,SAAS,CAAChB,aAAa,CAAC,CAAC;IACpED,qBAAqB,CAACC,aAAa,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACA,aAAa,EAAED,qBAAqB,CAAC,CAAC;EAE1C,MAAMkB,cAAc,GAAGA,CAAA,KAAM;IACzBR,WAAW,CAAC,CAACD,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAChC,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACvBnB,gBAAgB,CAACoB,SAAS,KAAK;QAC3B,GAAGA,SAAS;QACZ,CAACC,IAAI,GAAGC;MACZ,CAAC,CAAC,CAAC;MACHxB,qBAAqB,CAACC,aAAa,CAAC;MACpCiB,cAAc,CAAC,CAAC;IACpB;EACJ,CAAC;EAED,oBACItB,OAAA;IAAA6B,QAAA,gBACI7B,OAAA;MAAA6B,QAAA,eACI7B,OAAA;QAAK8B,SAAS,EAAC,qBAAqB;QAACC,GAAG,EAAEjC,IAAK;QAACkC,GAAG,EAAC,WAAW;QAACC,OAAO,EAAEA,CAAA,KAAMX,cAAc,CAAC;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG,CAAC,EACLxB,QAAQ,GACLyB,MAAM,CAACC,IAAI,CAAClC,aAAa,CAAC,CAACmC,GAAG,CAACb,IAAI,iBAC/B3B,OAAA;MAAA6B,QAAA,gBACI7B,OAAA;QACI8B,SAAS,EAAC,0BAA0B;QACpCW,OAAO,EAAEd,IAAK;QAAAE,QAAA,EAEbF;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRrC,OAAA;QACI8B,SAAS,EAAC,mCAAmC;QAC7CY,IAAI,EAAC,QAAQ;QACbC,EAAE,EAAEhB,IAAK;QACTC,KAAK,EAAEvB,aAAa,CAACsB,IAAI,CAAE;QAC3BiB,SAAS,EAAErB,gBAAgB,CAACI,IAAI,EAAEkB,CAAC,CAACC,MAAM,CAAClB,KAAK;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA,GAbIV,IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAcT,CACR,CAAC,gBAEFrC,OAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CACb;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGd,CAAC;AAAClC,EAAA,CA3EIF,mBAAmB;AAAA8C,EAAA,GAAnB9C,mBAAmB;AA6EzB,eAAeA,mBAAmB;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}