{"ast":null,"code":"import _objectSpread from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Loader from'../utils/Loader.js';//import tide from '../../assets/images/tide.png'\nimport arrowDown from'../../assets/images/ArrowDown.png';import arrowUp from'../../assets/images/ArrowUp.png';var Tide=function Tide(_ref){var setTide=_ref.setTide,display=_ref.display,isMotionOn=_ref.isMotionOn;var _useState=useState({tide:null,tideDirection:localStorage.tideDirection||\"?\",height:null}),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var getCurrentTime=function getCurrentTime(){var currentTime=new Date();var year=currentTime.getFullYear();var currentMonth=currentTime.getMonth()+1;var month=currentMonth<10?\"0\".concat(currentMonth):currentMonth;var currentDate=currentTime.getDate();var date=currentDate<10?\"0\".concat(currentDate):currentDate;var currentHour=currentTime.getHours();var hours=currentHour<10?\"0\".concat(currentHour):currentHour;var startHour=currentHour-1<10?\"0\".concat(currentHour-1):currentHour-1;var currentMinutes=currentTime.getMinutes();var minutes=currentMinutes<10?\"0\".concat(currentMinutes):currentMinutes;var getEndTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(hours,\":\").concat(minutes);var getStartTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(startHour,\":00\");currentTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(hours,\":\").concat(minutes);return{hours:hours,minutes:minutes,date:date,month:month,year:year,currentTime:currentTime,startTime:getStartTime,endTime:getEndTime};};var getTideData=function getTideData(){console.log(\"getTideData ->\");var data;var returnJSON=function returnJSON(response){return response.json();};var returnRejection=function returnRejection(response){return Promise.reject({status:response.status,data:data});};var validate=function validate(response){return response.ok?returnJSON(response):returnRejection(response);};console.log(\"Tide   - getStartTime: \".concat(getCurrentTime().startTime,\" => getEndTime: \").concat(getCurrentTime().endTime));var uriMLLW=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime().startTime,\"&end_date=\").concat(getCurrentTime().endTime,\"&station=9410230&product=water_level&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriMHHW=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime().currentTime,\"&end_date=\").concat(getCurrentTime().currentTime,\"&station=9410230&product=water_level&datum=MHHW&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriMHW=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime().currentTime,\"&end_date=\").concat(getCurrentTime().currentTime,\"&station=9410230&product=water_level&datum=MHW&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriMTL=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime().currentTime,\"&end_date=\").concat(getCurrentTime().currentTime,\"&station=9410230&product=water_level&datum=MTL&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriMSL=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime().currentTime,\"&end_date=\").concat(getCurrentTime().currentTime,\"&station=9410230&product=water_level&datum=MSL&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriNAVD=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime().currentTime,\"&end_date=\").concat(getCurrentTime().currentTime,\"&station=9410230&product=water_level&datum=NAVD&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriSTND=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime().currentTime,\"&end_date=\").concat(getCurrentTime().currentTime,\"&station=9410230&product=water_level&datum=STND&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriLaJolla=\"https://tidesandcurrents.noaa.gov/api/datagetter?product=predictions&amp;application=NOS.COOPS.TAC.WL&amp;begin_date=20201020&amp;end_date=20201021&amp;datum=MLLW&amp;station=9410230&amp;time_zone=lst_ldt&amp;units=english&amp;interval=hilo&amp;format=json\";var uri=uriMLLW;var proxyurl=\"https://cors-anywhere.herokuapp.com/\";var parseTideData=function parseTideData(data){var waterLevel=Number(data.data[data.data.length-1].v).toFixed(1)||1;console.log(\"tideData => \".concat(JSON.stringify(data,null,2)));setTide(waterLevel);setStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{station:data.metadata.name,tide:waterLevel>3?\"high\":waterLevel<2?\"low\":\"medium\",height:waterLevel});});};var getTideHour=function getTideHour(tide){return Number(tide.t.split(\" \")[1].split(\":\")[0]);};var getTideMinutes=function getTideMinutes(tide){return Number(tide.t.split(\" \")[1].split(\":\")[1]);};//        const getTideTime = (tide) => (getTideHour(tide) === getCurrentTime().hours) ? getTideHour(tide) : tide;\nvar getTideTime=function getTideTime(tide){return\"\".concat(getTideHour(tide),\":\").concat(getTideMinutes(tide));};var getTideHeight=function getTideHeight(tide){return Number(tide.v);};//const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime().currentTime}&end_date=${getCurrentTime().currentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n//const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\nfetch(proxyurl+uri).then(function(response){return validate(response);}).then(function(data){var waterLevel=Number(data.data[data.data.length-1].v).toFixed(1);console.log(\"tideData => \".concat(JSON.stringify(data,null,2),\" \\ncurrentTime: \").concat(getCurrentTime().hours,\":\").concat(getCurrentTime().minutes,\"\\nwaterLever: \").concat(waterLevel));setTide(waterLevel);setStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{station:data.metadata.name,tide:waterLevel>3?\"high\":waterLevel<2?\"low\":\"medium\",height:waterLevel});});}).catch(function(err){return console.log(\"Something went wrong!\\nuri: \".concat(uri,\" \\npath: \").concat(window.location.pathname,\"\\n\"),err);});};var getDirection=function getDirection(){console.log(\"getDirection ->\");var data;var returnJSON=function returnJSON(response){return response.json();};var returnRejection=function returnRejection(response){return Promise.reject({status:response.status,data:data});};var validate=function validate(response){return response.ok?returnJSON(response):returnRejection(response);};console.log(\"Tide   - getStartTime: \".concat(getCurrentTime().startTime,\" => getEndTime: \").concat(getCurrentTime().endTime));var tideDaily=\"https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?product=predictions&amp;application=NOS.COOPS.TAC.WL&amp;begin_date=\".concat(getCurrentTime().year).concat(getCurrentTime().month).concat(getCurrentTime().date,\"&amp;end_date=\").concat(getCurrentTime().year).concat(getCurrentTime().month).concat(getCurrentTime().date,\"&amp;datum=MLLW&amp;station=9410230&amp;time_zone=lst_ldt&amp;units=english&amp;interval=hilo&amp;format=json\");var uri=tideDaily;var proxyurl=\"https://cors-anywhere.herokuapp.com/\";console.log(\"tideDaily: \".concat(tideDaily));var getTideHour=function getTideHour(tide){return Number(tide.t.split(\" \")[1].split(\":\")[0]);};var getTideMinutes=function getTideMinutes(tide){return Number(tide.t.split(\" \")[1].split(\":\")[1]);};//        const getTideTime = (tide) => (getTideHour(tide) === getCurrentTime().hours) ? getTideHour(tide) : tide;\nvar getTideTime=function getTideTime(tide){return\"\".concat(getTideHour(tide),\":\").concat(getTideMinutes(tide));};var getTideHeight=function getTideHeight(tide){return Number(tide.v);};var getTide=function getTide(tide){return tide.type;};//const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime().currentTime}&end_date=${getCurrentTime().currentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\nfetch(uri).then(function(response){return validate(response);}).then(function(data){console.log(\"tideDirection => \".concat(JSON.stringify(data,null,2)));var minutes=data.predictions.map(function(tide){return getTideMinutes(tide);});var hours=data.predictions.map(function(tide){return getTideHour(tide);});var times=data.predictions.map(function(tide){return getTideTime(tide);});var heights=data.predictions.map(function(tide){return getTideHeight(tide);});var tides=data.predictions.map(function(tide){return getTide(tide);});var checkTide=function checkTide(hour){return hour>=getCurrentTime().hours;};var nextTideIndex=hours.findIndex(checkTide);var pastLastTide=Number(getCurrentTime().hours-hours[nextTideIndex-1]);var minutesUntilNextTide=function minutesUntilNextTide(){return Number(minutes[nextTideIndex]-getCurrentTime().minutes);};var hoursUntilNextTide=function hoursUntilNextTide(){return Number(hours[nextTideIndex]-getCurrentTime().hours);};var untilNextTide=function untilNextTide(){return hoursUntilNextTide()<1?minutesUntilNextTide():hoursUntilNextTide();};var closerTideIndex=pastLastTide>=untilNextTide()?nextTideIndex:nextTideIndex-1;var nextTide=tides[nextTideIndex];var nextHeight=heights[nextTideIndex];var lastHeight=heights[nextTideIndex-1];var nextHour=Number(times[nextTideIndex].split(':')[0])>12?Number(times[nextTideIndex].split(':')[0])-12:Number(times[nextTideIndex].split(':')[0]);var nextMinutes=times[nextTideIndex].split(':')[1]<10?\"0\".concat(times[nextTideIndex].split(':')[1]):times[nextTideIndex].split(':')[1];var nextTime=\"\".concat(nextHour,\":\").concat(nextMinutes);var lastTide=tides[nextTideIndex-1];var convertTide=function convertTide(tide){return tide==='L'?'low':'high';};var getCurrentTide=convertTide(tides[closerTideIndex]);var currentTide=pastLastTide!==untilNextTide()?getCurrentTide:'medium';console.log(\"CURRENT \".concat(currentTide,\" HOUR: \").concat(getCurrentTime().hours,\" TIMES: \").concat(hours,\"\\n next \").concat(nextTide,\" tide in \").concat(untilNextTide(),\" hours\\n previous \").concat(lastTide,\" tide was \").concat(pastLastTide,\" hours ago tideMinutes: \").concat(getCurrentTime().minutes));setStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{tide:currentTide,tideDirection:nextTide==='L'?\"DOWN\":\"UP\",previousTide:lastHeight,nextTide:nextHeight,nextPhase:convertTide(nextTide),nextTime:nextTime,untilNextTide:untilNextTide()});});}).catch(function(err){return console.log(\"Something went wrong!\\nuri: \".concat(uri,\" \\npath: \").concat(window.location.pathname,\"\\n\"),err);});};var getAllData=function getAllData(){getTideData();getDirection();};useEffect(function(){getAllData();/*  \t\t\n        const timerID = setInterval(\n            () => getAllData(),\n            300000\n        );\n        return function cleanUp () {\n            clearInterval(timerID);\n        }\n        */},[]);var previousTide=function previousTide(){return localStorage.getItem(\"tide\")?Number(localStorage.getItem(\"tide\")):0;};var notEqual=function notEqual(){return Number(previousTide())!==Number(status.height)?true:false;};var greaterThan=function greaterThan(){return Number(previousTide())>Number(status.height)?true:false;};var getDownArrow=function getDownArrow(){localStorage.setItem(\"tideDirection\",\"DOWN\");return/*#__PURE__*/React.createElement(\"img\",{className:\"arrows mb--2\",src:arrowDown});};var getUpArrow=function getUpArrow(){localStorage.setItem(\"tideDirection\",\"UP\");return/*#__PURE__*/React.createElement(\"img\",{className:\"arrows mb--2\",src:arrowUp});};var getTideDirection=function getTideDirection(){return status.tideDirection===\"DOWN\"?getDownArrow():getUpArrow();};//getTideDirection = () => (notEqual() && greaterThan()) ? \"DOWN\" : status.tideDirection;\nvar setLocalTide=function setLocalTide(){return localStorage.setItem(\"tide\",Number(status.height));};var setLocalTideDirection=function setLocalTideDirection(){return localStorage.setItem(\"tideDirection\",status.tideDirection);};var fixHours=function fixHours(){return getCurrentTime().hours>12?Number(getCurrentTime().hours-12):getCurrentTime().hours;};var getCurrentTide=function getCurrentTide(){return/*#__PURE__*/React.createElement(\"div\",{className:\"r-10 m-5 p-10 bg-lite white\"},/*#__PURE__*/React.createElement(\"div\",null,getTideDirection()),/*#__PURE__*/React.createElement(\"div\",null,status.height,\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"greet\"},\" ft. \"),status.tide),/*#__PURE__*/React.createElement(\"div\",{className:\"description pt-10\"},\"from: \",/*#__PURE__*/React.createElement(\"span\",{className:\"greet bold\"},status.previousTide?status.previousTide.toFixed(1):'',\"' \"),display==='narrow'?/*#__PURE__*/React.createElement(\"br\",null):'',\"to: \",/*#__PURE__*/React.createElement(\"span\",{className:\"greet bold\"},status.nextTide?status.nextTide.toFixed(1):'',\"'\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"greet bold\"},status.nextPhase,\" in \",status.untilNextTide,\" \",display==='narrow'?'hr':'hour',status.untilNextTide===1?'':'s',\" \"),/*#__PURE__*/React.createElement(\"br\",null),\"at: \",/*#__PURE__*/React.createElement(\"span\",{className:\"greet bold\"},status.nextTime)));};var percent='twentyfivePercent mt--70 mb--70';var loading=function loading(){return/*#__PURE__*/React.createElement(\"div\",{className:percent},/*#__PURE__*/React.createElement(Loader,{isMotionOn:isMotionOn}));};//console.log(`tide direction: ${status.tideDirection} previous height: ${previousTide()} height: ${status.height} == ${previousTide() === Number(status.height)}`)\nsetLocalTide();setLocalTideDirection();return/*#__PURE__*/React.createElement(\"div\",null,getCurrentTide());};export default Tide;/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/ /* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/Tide.js"],"names":["React","useState","useEffect","Loader","arrowDown","arrowUp","Tide","setTide","display","isMotionOn","tide","tideDirection","localStorage","height","status","setStatus","getCurrentTime","currentTime","Date","year","getFullYear","currentMonth","getMonth","month","currentDate","getDate","date","currentHour","getHours","hours","startHour","currentMinutes","getMinutes","minutes","getEndTime","getStartTime","startTime","endTime","getTideData","console","log","data","returnJSON","response","json","returnRejection","Promise","reject","validate","ok","uriMLLW","uriMHHW","uriMHW","uriMTL","uriMSL","uriNAVD","uriSTND","uriLaJolla","uri","proxyurl","parseTideData","waterLevel","Number","length","v","toFixed","JSON","stringify","prevState","station","metadata","name","getTideHour","t","split","getTideMinutes","getTideTime","getTideHeight","fetch","then","catch","err","window","location","pathname","getDirection","tideDaily","getTide","type","predictions","map","times","heights","tides","checkTide","hour","nextTideIndex","findIndex","pastLastTide","minutesUntilNextTide","hoursUntilNextTide","untilNextTide","closerTideIndex","nextTide","nextHeight","lastHeight","nextHour","nextMinutes","nextTime","lastTide","convertTide","getCurrentTide","currentTide","previousTide","nextPhase","getAllData","getItem","notEqual","greaterThan","getDownArrow","setItem","getUpArrow","getTideDirection","setLocalTide","setLocalTideDirection","fixHours","percent","loading"],"mappings":"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":["import React, {useState, useEffect} from 'react';\nimport Loader from '../utils/Loader.js';\n//import tide from '../../assets/images/tide.png'\nimport arrowDown from '../../assets/images/ArrowDown.png';\nimport arrowUp from '../../assets/images/ArrowUp.png';\n\nconst Tide = ({setTide, display, isMotionOn}) => {\n    \n    const [status, setStatus] = useState({\n        tide: null,\n        tideDirection: localStorage.tideDirection || \"?\",\n        height: null\n    })\n\n    const getCurrentTime = () => {\n        let currentTime = new Date();\n        const year = currentTime.getFullYear();\n        const currentMonth = currentTime.getMonth()+1;\n        const month = ((currentMonth)<10) ? `0${(currentMonth)}` : currentMonth;\n        const currentDate = currentTime.getDate();\n        const date = (currentDate<10) ? `0${currentDate}` : currentDate;\n        const currentHour = currentTime.getHours();\n        const hours = (currentHour<10) ? `0${currentHour}` : currentHour;\n        const startHour = ((currentHour-1)<10) ? `0${(currentHour-1)}` : (currentHour-1);\n        const currentMinutes = currentTime.getMinutes();\n        const minutes = (currentMinutes<10) ? `0${currentMinutes}` : currentMinutes;\n        const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n        currentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        return (\n            {   \n                hours,\n                minutes,\n                date,\n                month,\n                year,\n                currentTime,\n                startTime: getStartTime,\n                endTime: getEndTime\n            }\n        )\n    }\n    const getTideData = () => {\n        console.log(`getTideData ->`);\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        \n        console.log(`Tide   - getStartTime: ${getCurrentTime().startTime} => getEndTime: ${getCurrentTime().endTime}`)\n        const uriMLLW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime().startTime}&end_date=${getCurrentTime().endTime}&station=9410230&product=water_level&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMHHW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime().currentTime}&end_date=${getCurrentTime().currentTime}&station=9410230&product=water_level&datum=MHHW&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMHW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime().currentTime}&end_date=${getCurrentTime().currentTime}&station=9410230&product=water_level&datum=MHW&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMTL = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime().currentTime}&end_date=${getCurrentTime().currentTime}&station=9410230&product=water_level&datum=MTL&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMSL = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime().currentTime}&end_date=${getCurrentTime().currentTime}&station=9410230&product=water_level&datum=MSL&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriNAVD = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime().currentTime}&end_date=${getCurrentTime().currentTime}&station=9410230&product=water_level&datum=NAVD&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriSTND = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime().currentTime}&end_date=${getCurrentTime().currentTime}&station=9410230&product=water_level&datum=STND&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriLaJolla = `https://tidesandcurrents.noaa.gov/api/datagetter?product=predictions&amp;application=NOS.COOPS.TAC.WL&amp;begin_date=20201020&amp;end_date=20201021&amp;datum=MLLW&amp;station=9410230&amp;time_zone=lst_ldt&amp;units=english&amp;interval=hilo&amp;format=json`;\n        const uri = uriMLLW;\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n        const parseTideData = (data) => {\n            const waterLevel = Number(data.data[data.data.length - 1].v).toFixed(1) || 1;\n            console.log(`tideData => ${JSON.stringify(data, null, 2)}`)\n            setTide(waterLevel)\n            setStatus(prevState => ({\n                ...prevState,\n                station: data.metadata.name,\n                tide:(waterLevel > 3) ? \"high\" : (waterLevel < 2) ? \"low\" : \"medium\",\n                height: waterLevel\n            }));\n        }\n        const getTideHour = (tide) => Number(tide.t.split(\" \")[1].split(\":\")[0]);\n        const getTideMinutes = (tide) => Number(tide.t.split(\" \")[1].split(\":\")[1]);\n//        const getTideTime = (tide) => (getTideHour(tide) === getCurrentTime().hours) ? getTideHour(tide) : tide;\n        const getTideTime = (tide) => `${getTideHour(tide)}:${getTideMinutes(tide)}`;\n        const getTideHeight = (tide) => Number(tide.v);\n        //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime().currentTime}&end_date=${getCurrentTime().currentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        fetch(proxyurl + uri)\n            .then(response => validate(response))\n            .then(data => {\n                const waterLevel = Number(data.data[data.data.length - 1].v).toFixed(1);\n                console.log(`tideData => ${JSON.stringify(data, null, 2)} \\ncurrentTime: ${getCurrentTime().hours}:${getCurrentTime().minutes}\\nwaterLever: ${waterLevel}`);\n                setTide(waterLevel);\n                setStatus(prevState => ({\n                    ...prevState,\n                    station: data.metadata.name,\n                    tide:(waterLevel > 3) ? \"high\" : (waterLevel < 2) ? \"low\" : \"medium\",\n                    height: waterLevel\n                }));\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n\n    }\n    const getDirection = () => {\n        console.log(`getDirection ->`);\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        console.log(`Tide   - getStartTime: ${getCurrentTime().startTime} => getEndTime: ${getCurrentTime().endTime}`)\n        const tideDaily = `https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?product=predictions&amp;application=NOS.COOPS.TAC.WL&amp;begin_date=${getCurrentTime().year}${getCurrentTime().month}${getCurrentTime().date}&amp;end_date=${getCurrentTime().year}${getCurrentTime().month}${getCurrentTime().date}&amp;datum=MLLW&amp;station=9410230&amp;time_zone=lst_ldt&amp;units=english&amp;interval=hilo&amp;format=json`;\n        const uri = tideDaily;\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n        console.log(`tideDaily: ${tideDaily}`)\n        const getTideHour = (tide) => Number(tide.t.split(\" \")[1].split(\":\")[0]);\n        const getTideMinutes = (tide) => Number(tide.t.split(\" \")[1].split(\":\")[1]);\n//        const getTideTime = (tide) => (getTideHour(tide) === getCurrentTime().hours) ? getTideHour(tide) : tide;\n        const getTideTime = (tide) => `${getTideHour(tide)}:${getTideMinutes(tide)}`;\n        const getTideHeight = (tide) => Number(tide.v);\n        const getTide = (tide) => tide.type;\n        //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime().currentTime}&end_date=${getCurrentTime().currentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                console.log(`tideDirection => ${JSON.stringify(data, null, 2)}`);\n                const minutes = data.predictions.map((tide) => getTideMinutes(tide));\n                const hours = data.predictions.map((tide) => getTideHour(tide));\n                const times = data.predictions.map((tide) => getTideTime(tide));\n                const heights = data.predictions.map((tide) => getTideHeight(tide));\n                const tides = data.predictions.map((tide) => getTide(tide));\n                const checkTide = (hour) => hour >= getCurrentTime().hours;\n                const nextTideIndex = hours.findIndex(checkTide);\n                const pastLastTide = Number(getCurrentTime().hours-hours[nextTideIndex-1]);\n                const minutesUntilNextTide = () => Number(minutes[nextTideIndex]-getCurrentTime().minutes);\n                const hoursUntilNextTide = () => Number(hours[nextTideIndex]-getCurrentTime().hours);\n                const untilNextTide = () => (hoursUntilNextTide() < 1) ? minutesUntilNextTide() : hoursUntilNextTide();\n                const closerTideIndex = (pastLastTide >= untilNextTide()) ? nextTideIndex : (nextTideIndex-1);\n                const nextTide = tides[nextTideIndex];\n                const nextHeight = heights[nextTideIndex];\n                const lastHeight = heights[nextTideIndex-1];\n                const nextHour = (Number(times[nextTideIndex].split(':')[0])>12) ? (Number(times[nextTideIndex].split(':')[0])-12) : Number(times[nextTideIndex].split(':')[0]);\n                const nextMinutes = (times[nextTideIndex].split(':')[1] < 10) ? `0${times[nextTideIndex].split(':')[1]}` : times[nextTideIndex].split(':')[1];\n                const nextTime = `${nextHour}:${nextMinutes}`;\n                const lastTide = tides[nextTideIndex-1];\n                const convertTide = (tide) => (tide === 'L') ? 'low' : 'high';\n                const getCurrentTide = convertTide(tides[closerTideIndex]);\n                const currentTide = ((pastLastTide !== untilNextTide())) ? getCurrentTide : 'medium';\n                console.log(`CURRENT ${currentTide} HOUR: ${getCurrentTime().hours} TIMES: ${hours}\\n next ${nextTide} tide in ${untilNextTide()} hours\\n previous ${lastTide} tide was ${pastLastTide} hours ago tideMinutes: ${getCurrentTime().minutes}`);\n                setStatus(prevState => ({\n                    ...prevState,\n                    tide: currentTide,\n                    tideDirection: (nextTide === 'L') ? \"DOWN\" : \"UP\",\n                    previousTide: lastHeight,\n                    nextTide: nextHeight,\n                    nextPhase: convertTide(nextTide),\n                    nextTime: nextTime,\n                    untilNextTide: untilNextTide()\n                }))\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n\n    }\n    const getAllData = () => {\n        getTideData();\n        getDirection();\n    }\n    useEffect(() => {   \n        getAllData();\n        /*  \t\t\n        const timerID = setInterval(\n            () => getAllData(),\n            300000\n        );\n        return function cleanUp () {\n            clearInterval(timerID);\n        }\n        */\n    },[]);\n    const previousTide = () => (localStorage.getItem(\"tide\")) ? Number(localStorage.getItem(\"tide\")) : 0;\n    const notEqual = () => (Number(previousTide()) !== Number(status.height)) ? true : false;\n    const greaterThan = () => (Number(previousTide()) > Number(status.height)) ? true : false;\n    const getDownArrow = () => {\n        localStorage.setItem(\"tideDirection\", \"DOWN\")\n        return <img className='arrows mb--2' src={arrowDown} />\n    }\n    const getUpArrow = () => { \n        localStorage.setItem(\"tideDirection\", \"UP\")\n        return <img className='arrows mb--2' src={arrowUp} />\n    }\n    const getTideDirection = () => (status.tideDirection === \"DOWN\") ? getDownArrow() : getUpArrow();\n    //getTideDirection = () => (notEqual() && greaterThan()) ? \"DOWN\" : status.tideDirection;\n    const setLocalTide = () => localStorage.setItem(\"tide\", Number(status.height));\n    const setLocalTideDirection = () => localStorage.setItem(\"tideDirection\", status.tideDirection);\n    const fixHours = () => (getCurrentTime().hours>12) ? Number(getCurrentTime().hours - 12) : getCurrentTime().hours;\n\n    const getCurrentTide = () => <div className=\"r-10 m-5 p-10 bg-lite white\">\n                            <div>{getTideDirection()}</div>\n                            <div>{status.height} <span className=\"greet\"> ft. </span>{status.tide}</div>\n                            <div className='description pt-10'>\n                                from: <span className='greet bold'>{(status.previousTide) ? status.previousTide.toFixed(1) : ''}' </span>\n                                {(display === 'narrow') ? <br/> : ''}to: <span className='greet bold'>{(status.nextTide) ? status.nextTide.toFixed(1) : ''}'</span><br/>\n                                <span className='greet bold'>{status.nextPhase} in {status.untilNextTide} {(display === 'narrow') ? 'hr' : 'hour'}{status.untilNextTide === 1 ? '' : 's'} </span><br/>\n                                at: <span className='greet bold'>{status.nextTime}</span>\n                            </div>\n                        </div>;\n\n    const percent = 'twentyfivePercent mt--70 mb--70';\n    const loading = () => <div className={percent}>\n                        <Loader isMotionOn={isMotionOn}/>\n                    </div>;\n\n    \n    //console.log(`tide direction: ${status.tideDirection} previous height: ${previousTide()} height: ${status.height} == ${previousTide() === Number(status.height)}`)\n    setLocalTide();\n    setLocalTideDirection();\n    return <div>{getCurrentTide()}</div>\n}\n\nexport default Tide;\n/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/\n\n/* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/\n"]},"metadata":{},"sourceType":"module"}