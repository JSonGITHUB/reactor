{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/WaveFinder.js\";\nimport React from 'react';\nimport getKey from './utils/KeyGenerator.js';\nimport Geolocator from './utils/Geolocator.js';\nimport Selector from './forms/FunctionalSelector.js';\nimport Dialog from './functional/Dialog.js';\n\nclass WaveFinder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nextStep = () => this.state.step === 3 ? 0 : this.state.step + 1;\n\n    this.currentPositionExists = () => this.state.longitude ? true : false;\n\n    this.updateCurrentLocation = (longitude, latitude) => {\n      console.log(`UPDATING CURRENT POSITION ======> longitude: ${longitude} latitude: ${latitude}`);\n      this.setState({\n        longitude,\n        latitude\n      });\n    };\n\n    this.handleTideSelection = (groupTitle, label, selected) => {\n      localStorage.setItem(\"tide\", selected);\n      this.setState({\n        pause: false,\n        tide: selected\n      });\n    };\n\n    this.handleSwell1Selection = (groupTitle, label, selected) => {\n      localStorage.setItem(\"swell1Direction\", selected);\n      this.setState({\n        pause: false,\n        swell1Direction: selected\n      });\n    };\n\n    this.handleSwell2Selection = (groupTitle, label, selected) => {\n      localStorage.setItem(\"swell2Direction\", selected);\n      this.setState({\n        pause: false,\n        swell2Direction: selected\n      });\n    };\n\n    this.handleWindSelection = (groupTitle, label, selected) => {\n      localStorage.setItem(\"windDirection\", selected);\n      this.setState({\n        pause: false,\n        windDirection: selected\n      });\n    };\n\n    this.handleDistanceSelection = event => {\n      const target = event.target;\n      localStorage.setItem(\"distance\", target.value);\n      this.setState({\n        pause: false,\n        distance: target.value\n      });\n    };\n\n    this.pause = event => this.setState({\n      pause: true\n    });\n\n    this.swellSelector = (id, swellDirection) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column bg-dkYellow r-10 m-5 p-15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 45\n      }\n    }, \"Swell\", id, \":\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(Selector, {\n      groupTitle: `Swell${id}`,\n      selected: swellDirection,\n      label: \"Direction\",\n      items: [\"W\", \"WSW\", \"WNW\", \"E\", \"ESE\", \"ENE\", \"N\", \"NE\", \"NNE\", \"NW\", \"NNW\", \"S\", \"SE\", \"SSE\", \"SW\", \"SSW\"],\n      onChange: id === 1 ? this.handleSwell1Selection : this.handleSwell2Selection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 33\n      }\n    }));\n\n    this.tideSelector = tide => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column bg-dkYellow r-10 m-5 p-15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 30\n      }\n    }, \"Tide:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(Selector, {\n      groupTitle: \"Tide\",\n      selected: tide,\n      label: \"current\",\n      items: [\"low\", \"medium\", \"hign\"],\n      onChange: this.handleTideSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 33\n      }\n    }));\n\n    this.windSelector = windDirection => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column bg-dkYellow r-10 m-5 p-15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 39\n      }\n    }, \"Wind:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(Selector, {\n      groupTitle: \"Wind\",\n      selected: windDirection,\n      label: \"Direction\",\n      items: [\"W\", \"WSW\", \"WNW\", \"E\", \"ESE\", \"ENE\", \"N\", \"NE\", \"NNE\", \"NW\", \"NNW\", \"S\", \"SE\", \"SSE\", \"SW\", \"SSW\"],\n      onChange: this.handleWindSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 29\n      }\n    }));\n\n    this.getStars = stars => stars.map(star => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navBranding color-orange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 47\n      }\n    }, \"*\"));\n\n    const getLocal = item => localStorage.getItem(item);\n\n    const getProps = item => props[item];\n\n    const getDefault = item => getLocal(item) === null ? getProps(item) : getLocal(item);\n\n    this.state = {\n      step: 0,\n      pause: false,\n      date: new Date(),\n      tide: getDefault(\"tide\"),\n      swell1Direction: getDefault(\"swell1Direction\"),\n      swell2Direction: getDefault(\"swell2Direction\"),\n      windDirection: getDefault(\"windDirection\"),\n      distance: getDefault(\"distance\"),\n      locations: [{\n        \"name\": \"HB: 17th St.\",\n        \"latitude\": 33.663781,\n        \"longitude\": -118.013605,\n        \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"HB: Taco Bell Reef\",\n        \"latitude\": 33.657999,\n        \"longitude\": -118.006578,\n        \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"HB: North Peir\",\n        \"latitude\": 33.655927,\n        \"longitude\": -118.003874,\n        \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"HB: South Peir\",\n        \"latitude\": 33.655534,\n        \"longitude\": -118.003145,\n        \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"HB: River Jetties\",\n        \"latitude\": 33.630302,\n        \"longitude\": -117.961721,\n        \"swell\": [\"SSE\", \"S\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\", \"high\"]\n      }, {\n        \"name\": \"Salt Creek\",\n        \"latitude\": 33.475456,\n        \"longitude\": -117.722133,\n        \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"SE\", \"S\"],\n        \"tide\": [\"medium\", \"high\"]\n      }, {\n        \"name\": \"Lowers\",\n        \"latitude\": 33.382848,\n        \"longitude\": -117.588214,\n        \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"O-Side: Harbor North\",\n        \"latitude\": 33.206684,\n        \"longitude\": -117.397452,\n        \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\", \"SSE\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\", \"high\"]\n      }, {\n        \"name\": \"O-Side: Harbor South\",\n        \"latitude\": 33.202483,\n        \"longitude\": -117.392796,\n        \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"medium\", \"high\"]\n      }, {\n        \"name\": \"O-Side: Pier North\",\n        \"latitude\": 33.194686,\n        \"longitude\": -117.385226,\n        \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"O-Side: Pier South\",\n        \"latitude\": 33.193630,\n        \"longitude\": -117.384826,\n        \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"medium\", \"high\"]\n      }, {\n        \"name\": \"Carlsbad\",\n        \"latitude\": 33.144850,\n        \"longitude\": -117.343638,\n        \"swell\": [\"WNW\", \"W\", \"SW\", \"SSW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Ponto: Jetties\",\n        \"latitude\": 33.086801,\n        \"longitude\": -117.313695,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Sea Bluff\",\n        \"latitude\": 33.081980,\n        \"longitude\": -117.311783,\n        \"swell\": [\"W\", \"NW\", \"SW\", \"SSW\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Grandview\",\n        \"latitude\": 33.076397,\n        \"longitude\": -117.310334,\n        \"swell\": [\"W\", \"NW\", \"SW\", \"SSW\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Beacons\",\n        \"latitude\": 33.065118,\n        \"longitude\": -117.305518,\n        \"swell\": [\"W\", \"NW\", \"SW\", \"SSW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"D Street\",\n        \"latitude\": 33.046486,\n        \"longitude\": -117.298161,\n        \"swell\": [\"W\", \"WNW\", \"NW\", \"SW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Swamis\",\n        \"latitude\": 33.034592,\n        \"longitude\": -117.292734,\n        \"swell\": [\"W\", \"NW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Pipes\",\n        \"latitude\": 33.026892,\n        \"longitude\": -117.287915,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Traps\",\n        \"latitude\": 33.025580,\n        \"longitude\": -117.287165,\n        \"swell\": [\"NW\", \"W\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Cardiff Reef\",\n        \"latitude\": 33.015631,\n        \"longitude\": -117.282085,\n        \"swell\": [\"NW\", \"W\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Georges\",\n        \"latitude\": 33.010952,\n        \"longitude\": -117.280085,\n        \"swell\": [\"NW\", \"W\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Seaside Reef\",\n        \"latitude\": 33.001613,\n        \"longitude\": -117.278393,\n        \"swell\": [\"NW\", \"W\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Del Mar\",\n        \"latitude\": 32.976395,\n        \"longitude\": -117.270974,\n        \"swell\": [\"SW\", \"W\", \"NW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\", \"medium\", \"high\"]\n      }, {\n        \"name\": \"Torrey Pines\",\n        \"latitude\": 32.938600,\n        \"longitude\": -117.261978,\n        \"swell\": [\"SW\", \"WNW\", \"NW\"],\n        \"wind\": [\"NE\", \"E\", \"SE\"],\n        \"tide\": [\"medium\", \"high\"]\n      }, {\n        \"name\": \"Blacks\",\n        \"latitude\": 32.881882,\n        \"longitude\": -117.252467,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\", \"SE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Scripps\",\n        \"latitude\": 32.865358,\n        \"longitude\": -117.254981,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\", \"SE\", \"S\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"La Jolla Shores\",\n        \"latitude\": 32.858424,\n        \"longitude\": -117.256791,\n        \"swell\": [\"W\", \"NW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"Mission Beach\",\n        \"latitude\": 32.767649,\n        \"longitude\": -117.252731,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\", \"S\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"OB Jetti\",\n        \"latitude\": 32.754755,\n        \"longitude\": -117.253815,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"OB Avalanche\",\n        \"latitude\": 32.751873,\n        \"longitude\": -117.252972,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"OB Pier\",\n        \"latitude\": 32.747869,\n        \"longitude\": -117.253615,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"Sunset Cliffs\",\n        \"latitude\": 32.725570,\n        \"longitude\": -117.258111,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"Rosarito\",\n        \"latitude\": 32.333760,\n        \"longitude\": -117.056838,\n        \"swell\": [\"S\", \"SW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"K-38s\",\n        \"latitude\": 32.259594,\n        \"longitude\": -116.987307,\n        \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"NE\", \"E\"],\n        \"tide\": [\"medium\", \"low\"]\n      }, {\n        \"name\": \"Gaviotas\",\n        \"latitude\": 32.252500,\n        \"longitude\": -116.961600,\n        \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"NE\", \"ENE\", \"E\", \"ESE\", \"SE\"],\n        \"tide\": [\"high\", \"medium\", \"low\"]\n      }, {\n        \"name\": \"La Fonda\",\n        \"latitude\": 32.121058,\n        \"longitude\": -116.885713,\n        \"swell\": [\"SW\", \"W\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\", \"low\"]\n      }, {\n        \"name\": \"Punta Baja\",\n        \"latitude\": 29.954293,\n        \"longitude\": -115.807737,\n        \"swell\": [\"SW\", \"SSW\", \"S\", \"WNW\", \"W\"],\n        \"wind\": [\"N\", \"NE\"],\n        \"tide\": [\"high\", \"medium\", \"low\"]\n      }, {\n        \"name\": \"Elijandros\",\n        \"latitude\": 28.706507,\n        \"longitude\": -114.288678,\n        \"swell\": [\"W\", \"WNW\", \"NW\"],\n        \"wind\": [\"N\", \"NE\", \"E\", \"NW\"],\n        \"tide\": [\"high\", \"medium\", \"low\"]\n      }, {\n        \"name\": \"Harbor\",\n        \"latitude\": 28.666795,\n        \"longitude\": -114.239317,\n        \"swell\": [\"WNW\", \"NW\"],\n        \"wind\": [\"N\"],\n        \"tide\": [\"medium\", \"low\"]\n      }, {\n        \"name\": \"Notch\",\n        \"latitude\": 28.666800,\n        \"longitude\": -114.224431,\n        \"swell\": [\"WNW\", \"NW\"],\n        \"wind\": [\"N\"],\n        \"tide\": [\"medium\", \"low\"]\n      }, {\n        \"name\": \"Wall\",\n        \"latitude\": 28.566481,\n        \"longitude\": -114.158590,\n        \"swell\": [\"W\", \"WNW\", \"NW\"],\n        \"wind\": [\"N\", \"NE\", \"ENE\"],\n        \"tide\": [\"high\", \"medium\", \"low\"]\n      }, {\n        \"name\": \"Abreojos\",\n        \"latitude\": 26.722327,\n        \"longitude\": -113.546932,\n        \"swell\": [\"S\"],\n        \"wind\": [\"N\", \"NE\"],\n        \"tide\": [\"high\", \"medium\"]\n      }, {\n        \"name\": \"Scorpion Bay\",\n        \"latitude\": 26.239488,\n        \"longitude\": -112.477709,\n        \"swell\": [\"SW\", \"SSW\"],\n        \"wind\": [\"N\"],\n        \"tide\": [\"medium\", \"low\"]\n      }, {\n        \"name\": \"Estuary\",\n        \"latitude\": 23.050415,\n        \"longitude\": -109.678612,\n        \"swell\": [\"S\", \"SE\"],\n        \"wind\": [\"N\"],\n        \"tide\": [\"high\", \"medium\", \"low\"]\n      }, {\n        \"name\": \"Colorados\",\n        \"latitude\": 11.406466,\n        \"longitude\": -86.048310,\n        \"swell\": [\"SW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"high\", \"medium\"]\n      }]\n    };\n    this.handleTideSelection = this.handleTideSelection.bind(this);\n    this.handleWindSelection = this.handleWindSelection.bind(this);\n    this.handleSwell1Selection = this.handleSwell1Selection.bind(this);\n    this.handleSwell2Selection = this.handleSwell2Selection.bind(this);\n    this.handleDistanceSelection = this.handleDistanceSelection.bind(this);\n  }\n  /*\n  componentDidMount() {\n      \n      let data;\n      const returnJSON = (response) => response.json();\n      const returnRejection = (response) => Promise.reject({status: response.status, data});\n      const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n      const uri = 'https://jsongithub.github.io/portfolio/assets/data/gpsData.json';\n      fetch(uri)\n          .then(response => validate(response))\n          .then(data => {\n              this.setState({\n                  isLoaded: true,\n                  locations: data\n              })\n          })\n          .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n      \n  }\n  */\n\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    if (this.state.pause === false) {\n      this.setState({\n        step: this.nextStep(),\n        date: new Date()\n      });\n    }\n  }\n\n  render() {\n    console.log(`currentPositionExists: ${this.currentPositionExists()}`);\n    const {\n      locations,\n      windDirection,\n      swell1Direction,\n      swell2Direction,\n      tide,\n      step\n    } = this.state;\n\n    const swell1Match = item => item.swell.indexOf(swell1Direction) > -1 ? true : false;\n\n    const swell2Match = item => item.swell.indexOf(swell2Direction) > -1 ? true : false;\n\n    const windMatch = item => item.wind.indexOf(windDirection) > -1 ? true : false;\n\n    const tideMatch = item => item.tide.indexOf(tide) > -1 ? true : false;\n\n    const swell1DirectionMatch = direction => direction.swell === swell1Direction ? true : false;\n\n    const swell2DirectionMatch = direction => direction === swell2Direction ? true : false;\n\n    const windDirectionMatch = direction => direction.wind === windDirection ? true : false;\n\n    const tideDirectionMatch = direction => direction.tide === tide ? true : false;\n\n    const distance = item => Math.abs(item.latitude - this.state.latitude) + Math.abs(item.longitude - this.state.longitude); //.01 - 1 mile\n\n\n    const distanceRange = Number(this.state.distance) * .01;\n\n    const regionMatch = item => distance(item) < distanceRange ? distance(item) : false;\n\n    let count = 0;\n\n    const match = item => {\n      const matches = [];\n      let matchesCount = swell1Match(item) ? matches.push(\"swell1\") : matches;\n      matchesCount = swell2Match(item) ? matches.push(\"swell2\") : matches;\n      matchesCount = windMatch(item) ? matches.push(\"wind\") : matches;\n      matchesCount = tideMatch(item) ? matches.push(\"tide\") : matches;\n      console.log(`matches => ${item.name} - ${matches}`);\n      return matches;\n    };\n\n    const statusClass = status => status === true ? \"color-neogreen\" : \"color-yellow\";\n\n    const subStatusClass = status => status === true ? \"color-orange\" : \"color-yellow\";\n\n    const getMatchingLocation = item => {\n      const matches = match(item);\n      console.log(`getMatchingLocation => matches:${matches}`);\n\n      if (regionMatch(item) !== false) {\n        if (matches.length > 3) {\n          count = count + 1;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: getKey(\"loc\"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 28\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"r-10 m-10 p-20 bg-dkGreen\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"navBranding white bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 37\n            }\n          }, this.getStars(matches), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 65\n            }\n          }), item.name, \" \", `( ${(regionMatch(item) / .01).toFixed(0)} miles)`), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"flexContainer\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"flexContainer m-auto\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"columnRight pr-10\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"color-neogreen bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 49\n            }\n          }, \"Swell: \"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"color-neogreen bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 49\n            }\n          }, \"Wind: \"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"color-neogreen bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 49\n            }\n          }, \"Tide: \")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"columnLeft\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 49\n            }\n          }, item.swell.map((swell, i) => /*#__PURE__*/React.createElement(\"span\", {\n            className: swell1Match({\n              swell\n            }) ? statusClass(swell1Match(item)) : subStatusClass(swell2DirectionMatch(swell)),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 84\n            }\n          }, swell, i + 1 === item.swell.length ? \"\" : \", \"))), /*#__PURE__*/React.createElement(\"div\", {\n            className: statusClass(windMatch(item)),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 49\n            }\n          }, item.wind.map((wind, i) => /*#__PURE__*/React.createElement(\"span\", {\n            className: statusClass(windDirectionMatch({\n              wind\n            })),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 81\n            }\n          }, wind, i + 1 === item.wind.length ? \"\" : \", \"))), /*#__PURE__*/React.createElement(\"div\", {\n            className: statusClass(tideMatch(item)),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 49\n            }\n          }, item.tide.map((tide, i) => /*#__PURE__*/React.createElement(\"span\", {\n            className: statusClass(tideDirectionMatch({\n              tide\n            })),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 122\n            }\n          }, tide, i + 1 === item.tide.length ? \"\" : \", \"))))))));\n        }\n      }\n    };\n\n    const matchingLocations = () => locations.map(item => getMatchingLocation(item));\n\n    const getLocations = matchingLocations();\n    const date = this.state.date.toLocaleTimeString();\n    const time = date.replace(\" \", \"\").toLocaleLowerCase();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-content fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      title: \"Wave Finder\",\n      message: \"select current conditions:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"white pointer\",\n      onMouseDown: this.pause,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 25\n      }\n    }, time), /*#__PURE__*/React.createElement(Geolocator, {\n      currentPositionExists: this.currentPositionExists,\n      returnCurrentPosition: this.updateCurrentLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bg-darker p-15 r-10 m-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 29\n      }\n    }, this.swellSelector(1, swell1Direction), this.swellSelector(2, swell2Direction), this.tideSelector(tide), this.windSelector(windDirection)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bg-dkYellow r-10 m-5 p-15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 33\n      }\n    }, \"Miles:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"mt-10 p-5 r-10\",\n      name: \"distance\",\n      type: \"number\",\n      value: this.state.distance,\n      onChange: this.handleDistanceSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"color-neogreen bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 25\n      }\n    }, count, \" waves\"), \" out of \", locations.length, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 109\n      }\n    }), \"are in a \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"color-neogreen bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 34\n      }\n    }, this.state.distance), \" mile radius\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 112\n      }\n    }), \"and prefer \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"color-neogreen bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 36\n      }\n    }, swell1Direction, \" \"), \"and \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"color-orange bold p-5 r-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 103\n      }\n    }, swell2Direction, \" \"), \"swell with \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"color-neogreen bold bg-dkGreen p-5 r-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 183\n      }\n    }, tide, \" \"), \"tide:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 30\n      }\n    }), getLocations)));\n  }\n\n}\n\nexport default WaveFinder;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/WaveFinder.js"],"names":["React","getKey","Geolocator","Selector","Dialog","WaveFinder","Component","constructor","props","nextStep","state","step","currentPositionExists","longitude","updateCurrentLocation","latitude","console","log","setState","handleTideSelection","groupTitle","label","selected","localStorage","setItem","pause","tide","handleSwell1Selection","swell1Direction","handleSwell2Selection","swell2Direction","handleWindSelection","windDirection","handleDistanceSelection","event","target","value","distance","swellSelector","id","swellDirection","tideSelector","windSelector","getStars","stars","map","star","getLocal","item","getItem","getProps","getDefault","date","Date","locations","bind","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","render","swell1Match","swell","indexOf","swell2Match","windMatch","wind","tideMatch","swell1DirectionMatch","direction","swell2DirectionMatch","windDirectionMatch","tideDirectionMatch","Math","abs","distanceRange","Number","regionMatch","count","match","matches","matchesCount","push","name","statusClass","status","subStatusClass","getMatchingLocation","length","toFixed","i","matchingLocations","getLocations","toLocaleTimeString","time","replace","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getKey from './utils/KeyGenerator.js';\nimport Geolocator from './utils/Geolocator.js';\nimport Selector from './forms/FunctionalSelector.js';\nimport Dialog from './functional/Dialog.js';\n\nclass WaveFinder extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        const getLocal = (item) => localStorage.getItem(item);\n        const getProps = (item) => props[item];\n        const getDefault = (item) => (getLocal(item) === null) ? getProps(item) : getLocal(item);\n        this.state = {\n            step: 0,\n            pause: false,\n            date: new Date(),\n            tide: getDefault(\"tide\"),\n            swell1Direction: getDefault(\"swell1Direction\"),\n            swell2Direction: getDefault(\"swell2Direction\"),\n            windDirection: getDefault(\"windDirection\"),\n            distance: getDefault(\"distance\"),\n            locations: [{\n                \"name\": \"HB: 17th St.\",\n                \"latitude\": 33.663781,\n                \"longitude\": -118.013605,\n                \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"HB: Taco Bell Reef\",\n                \"latitude\": 33.657999,\n                \"longitude\": -118.006578,\n                \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"HB: North Peir\",\n                \"latitude\": 33.655927,\n                \"longitude\": -118.003874,\n                \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"HB: South Peir\",\n                \"latitude\": 33.655534,\n                \"longitude\": -118.003145,\n                \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"HB: River Jetties\",\n                \"latitude\": 33.630302,\n                \"longitude\": -117.961721,\n                \"swell\": [\"SSE\", \"S\", \"SW\",\"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\", \"high\"]\n            },\n            {\n                \"name\": \"Salt Creek\",\n                \"latitude\": 33.475456,\n                \"longitude\": -117.722133,\n                \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"SE\", \"S\"],\n                \"tide\": [\"medium\", \"high\"]\n            },\n            {\n                \"name\": \"Lowers\",\n                \"latitude\": 33.382848,\n                \"longitude\": -117.588214,\n                \"swell\": [\"S\", \"SW\",\"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"O-Side: Harbor North\",\n                \"latitude\": 33.206684,\n                \"longitude\": -117.397452,\n                \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\", \"SSE\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\", \"high\"]\n            },\n            {\n                \"name\": \"O-Side: Harbor South\",\n                \"latitude\": 33.202483,\n                \"longitude\": -117.392796,\n                \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"medium\", \"high\"]\n            },\n            {\n                \"name\": \"O-Side: Pier North\",\n                \"latitude\": 33.194686,\n                \"longitude\": -117.385226,\n                \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"O-Side: Pier South\",\n                \"latitude\": 33.193630,\n                \"longitude\": -117.384826,\n                \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"medium\", \"high\"]\n            },\n            {\n                \"name\": \"Carlsbad\",\n                \"latitude\": 33.144850,\n                \"longitude\": -117.343638,\n                \"swell\": [\"WNW\", \"W\", \"SW\", \"SSW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Ponto: Jetties\",\n                \"latitude\": 33.086801,\n                \"longitude\": -117.313695,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Sea Bluff\",\n                \"latitude\": 33.081980,\n                \"longitude\": -117.311783,\n                \"swell\": [\"W\", \"NW\", \"SW\", \"SSW\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Grandview\",\n                \"latitude\": 33.076397,\n                \"longitude\": -117.310334,\n                \"swell\": [\"W\", \"NW\", \"SW\", \"SSW\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Beacons\",\n                \"latitude\": 33.065118,\n                \"longitude\": -117.305518,\n                \"swell\": [\"W\", \"NW\", \"SW\", \"SSW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"D Street\",\n                \"latitude\": 33.046486,\n                \"longitude\": -117.298161,\n                \"swell\": [\"W\", \"WNW\", \"NW\", \"SW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Swamis\",\n                \"latitude\": 33.034592,\n                \"longitude\": -117.292734,\n                \"swell\": [\"W\", \"NW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Pipes\",\n                \"latitude\": 33.026892,\n                \"longitude\": -117.287915,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Traps\",\n                \"latitude\": 33.025580,\n                \"longitude\": -117.287165,\n                \"swell\": [\"NW\",\"W\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Cardiff Reef\",\n                \"latitude\": 33.015631,\n                \"longitude\": -117.282085,\n                \"swell\": [\"NW\",\"W\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Georges\",\n                \"latitude\": 33.010952,\n                \"longitude\": -117.280085,\n                \"swell\": [\"NW\",\"W\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Seaside Reef\",\n                \"latitude\": 33.001613,\n                \"longitude\": -117.278393,\n                \"swell\": [\"NW\",\"W\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Del Mar\",\n                \"latitude\": 32.976395,\n                \"longitude\": -117.270974,\n                \"swell\": [\"SW\", \"W\", \"NW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"low\", \"medium\", \"high\"]\n            },\n            {\n                \"name\": \"Torrey Pines\",\n                \"latitude\": 32.938600,\n                \"longitude\": -117.261978,\n                \"swell\": [\"SW\", \"WNW\", \"NW\"],\n                \"wind\": [\"NE\", \"E\", \"SE\"],\n                \"tide\": [\"medium\", \"high\"]\n            },\n            {\n                \"name\": \"Blacks\",\n                \"latitude\": 32.881882,\n                \"longitude\": -117.252467,\n                \"swell\": [\"W\",\"NW\", \"SW\"],\n                \"wind\": [\"E\", \"SE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Scripps\",\n                \"latitude\": 32.865358,\n                \"longitude\": -117.254981,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\", \"SE\", \"S\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"La Jolla Shores\",\n                \"latitude\": 32.858424,\n                \"longitude\": -117.256791,\n                \"swell\": [\"W\", \"NW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"Mission Beach\",\n                \"latitude\": 32.767649,\n                \"longitude\": -117.252731,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\", \"S\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"OB Jetti\",\n                \"latitude\": 32.754755,\n                \"longitude\": -117.253815,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"OB Avalanche\",\n                \"latitude\": 32.751873,\n                \"longitude\": -117.252972,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"OB Pier\",\n                \"latitude\": 32.747869,\n                \"longitude\": -117.253615,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"Sunset Cliffs\",\n                \"latitude\": 32.725570,\n                \"longitude\": -117.258111,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"Rosarito\",\n                \"latitude\": 32.333760,\n                \"longitude\": -117.056838,\n                \"swell\": [\"S\", \"SW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"K-38s\",\n                \"latitude\": 32.259594,\n                \"longitude\": -116.987307,\n                \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n                \"wind\": [\"NE\",\"E\"],\n                \"tide\": [\"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Gaviotas\",\n                \"latitude\": 32.252500,\n                \"longitude\": -116.961600,\n                \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n                \"wind\": [\"NE\", \"ENE\", \"E\", \"ESE\", \"SE\"],\n                \"tide\": [\"high\", \"medium\", \"low\"]\n            },\n            {\n                \"name\": \"La Fonda\",\n                \"latitude\": 32.121058,\n                \"longitude\": -116.885713,\n                \"swell\": [\"SW\", \"W\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Punta Baja\",\n                \"latitude\": 29.954293,\n                \"longitude\": -115.807737,\n                \"swell\": [\"SW\", \"SSW\", \"S\", \"WNW\", \"W\"],\n                \"wind\": [\"N\", \"NE\"],\n                \"tide\": [\"high\", \"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Elijandros\",\n                \"latitude\": 28.706507,\n                \"longitude\": -114.288678,\n                \"swell\": [\"W\", \"WNW\", \"NW\"],\n                \"wind\": [\"N\",\"NE\", \"E\", \"NW\"],\n                \"tide\": [\"high\", \"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Harbor\",\n                \"latitude\": 28.666795,\n                \"longitude\": -114.239317,\n                \"swell\": [\"WNW\", \"NW\"],\n                \"wind\": [\"N\"],\n                \"tide\": [\"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Notch\",\n                \"latitude\": 28.666800,\n                \"longitude\": -114.224431,\n                \"swell\": [\"WNW\", \"NW\"],\n                \"wind\": [\"N\"],\n                \"tide\": [\"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Wall\",\n                \"latitude\": 28.566481,\n                \"longitude\": -114.158590,\n                \"swell\": [\"W\", \"WNW\", \"NW\"],\n                \"wind\": [\"N\", \"NE\", \"ENE\"],\n                \"tide\": [\"high\", \"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Abreojos\",\n                \"latitude\": 26.722327,\n                \"longitude\": -113.546932,\n                \"swell\": [\"S\"],\n                \"wind\": [\"N\", \"NE\"],\n                \"tide\": [\"high\", \"medium\"]\n            },\n            {\n                \"name\": \"Scorpion Bay\",\n                \"latitude\": 26.239488,\n                \"longitude\": -112.477709,\n                \"swell\": [\"SW\",\"SSW\"],\n                \"wind\": [\"N\"],\n                \"tide\": [\"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Estuary\",\n                \"latitude\": 23.050415,\n                \"longitude\": -109.678612,\n                \"swell\": [\"S\", \"SE\"],\n                \"wind\": [\"N\"],\n                \"tide\": [\"high\", \"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Colorados\",\n                \"latitude\": 11.406466,\n                \"longitude\": -86.048310,\n                \"swell\": [\"SW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"high\", \"medium\"]\n            }]\n        };\n        this.handleTideSelection = this.handleTideSelection.bind(this);\n        this.handleWindSelection = this.handleWindSelection.bind(this);\n        this.handleSwell1Selection = this.handleSwell1Selection.bind(this);\n        this.handleSwell2Selection = this.handleSwell2Selection.bind(this);\n        this.handleDistanceSelection = this.handleDistanceSelection.bind(this);\n    }\n    /*\n    componentDidMount() {\n        \n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        const uri = 'https://jsongithub.github.io/portfolio/assets/data/gpsData.json';\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                this.setState({\n                    isLoaded: true,\n                    locations: data\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n        \n    }\n    */\n   componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    nextStep = () => (this.state.step === 3) ? 0 : this.state.step + 1;\n    tick() {\n        if (this.state.pause === false) {\n            this.setState({\n                step: this.nextStep(),\n                date: new Date()\n            });\n        }\n    }\n    currentPositionExists = () => (this.state.longitude) ? true : false;\n    updateCurrentLocation = (longitude, latitude) => {\n        console.log(`UPDATING CURRENT POSITION ======> longitude: ${longitude} latitude: ${latitude}`)\n        this.setState({\n            longitude,\n            latitude\n        })\n    }\n    handleTideSelection = (groupTitle, label, selected) => {\n        localStorage.setItem(\"tide\", selected);\n        this.setState({\n            pause: false,\n            tide: selected\n        })\n    }\n    handleSwell1Selection = (groupTitle, label, selected) => {\n        localStorage.setItem(\"swell1Direction\", selected);\n        this.setState({\n            pause: false,\n            swell1Direction: selected\n        })\n    }\n    handleSwell2Selection = (groupTitle, label, selected) => {\n        localStorage.setItem(\"swell2Direction\", selected);\n        this.setState({\n            pause: false,\n            swell2Direction: selected\n        })\n    }\n    handleWindSelection = (groupTitle, label, selected) => {\n        localStorage.setItem(\"windDirection\", selected);\n        this.setState({\n            pause: false,\n            windDirection: selected\n        })\n    }\n    handleDistanceSelection = (event) => {\n        const target = event.target;\n        localStorage.setItem(\"distance\", target.value);\n        this.setState({\n            pause: false,\n            distance: target.value\n        })\n    }\n    pause = (event) => this.setState({\n        pause: true\n    })\n    swellSelector = (id, swellDirection) => <div className=\"flex3Column bg-dkYellow r-10 m-5 p-15\">\n                                Swell{id}:<br/>\n                                <Selector\n                                    groupTitle={`Swell${id}`}\n                                    selected={swellDirection} \n                                    label=\"Direction\" \n                                    items={[\"W\", \"WSW\", \"WNW\", \"E\", \"ESE\", \"ENE\", \"N\", \"NE\", \"NNE\", \"NW\", \"NNW\", \"S\", \"SE\", \"SSE\", \"SW\", \"SSW\"]}\n                                    onChange={(id === 1) ? this.handleSwell1Selection : this.handleSwell2Selection}\n                                />\n                            </div>\n    tideSelector = (tide) => <div className=\"flex3Column bg-dkYellow r-10 m-5 p-15\">\n                                Tide:<br/>\n                                <Selector \n                                    groupTitle=\"Tide\"\n                                    selected={tide} \n                                    label=\"current\" \n                                    items={[\"low\", \"medium\", \"hign\"]}\n                                    onChange={this.handleTideSelection}\n                                />\n                            </div>\n    windSelector = (windDirection) => <div className=\"flex3Column bg-dkYellow r-10 m-5 p-15\">\n                            Wind:<br/>\n                            <Selector\n                                groupTitle=\"Wind\" \n                                selected={windDirection} \n                                label=\"Direction\"\n                                items={[\"W\", \"WSW\", \"WNW\", \"E\", \"ESE\", \"ENE\", \"N\", \"NE\", \"NNE\", \"NW\", \"NNW\", \"S\", \"SE\", \"SSE\", \"SW\", \"SSW\"]}\n                                onChange={this.handleWindSelection}\n                            />\n                        </div>\n\n    getStars = (stars) => stars.map((star) => <span className=\"navBranding color-orange\">*</span>)\n    render() {\n        console.log(`currentPositionExists: ${this.currentPositionExists()}`)\n        const {locations, windDirection, swell1Direction, swell2Direction, tide, step} = this.state;\n        const swell1Match = (item) => (item.swell.indexOf(swell1Direction)>-1) ? true : false;\n        const swell2Match = (item) => (item.swell.indexOf(swell2Direction)>-1) ? true : false;\n        const windMatch = (item) => (item.wind.indexOf(windDirection)>-1) ? true : false;\n        const tideMatch = (item) => (item.tide.indexOf(tide)>-1) ? true : false;\n        const swell1DirectionMatch = (direction) => (direction.swell===swell1Direction) ? true : false;\n        const swell2DirectionMatch = (direction) => (direction===swell2Direction) ? true : false;\n        const windDirectionMatch = (direction) => (direction.wind === windDirection) ? true : false;\n        const tideDirectionMatch = (direction) => (direction.tide === tide) ? true : false;\n        const distance = (item) => Math.abs(item.latitude - this.state.latitude)+Math.abs(item.longitude - this.state.longitude);\n        //.01 - 1 mile\n        const distanceRange = (Number(this.state.distance) * .01);\n        const regionMatch = (item) => (distance(item)<distanceRange) ? distance(item) : false\n        let count = 0;\n        const match = (item) => {\n            const matches = [];\n            let matchesCount = (swell1Match(item)) ? matches.push(\"swell1\") : matches;\n            matchesCount = (swell2Match(item)) ? matches.push(\"swell2\") : matches;\n            matchesCount = (windMatch(item)) ? matches.push(\"wind\") : matches;\n            matchesCount = (tideMatch(item)) ? matches.push(\"tide\") : matches;\n            console.log(`matches => ${item.name} - ${matches}`)\n            return matches;\n        }\n        const statusClass = (status) => (status === true) ? \"color-neogreen\" : \"color-yellow\"; \n        const subStatusClass = (status) => (status === true) ? \"color-orange\" : \"color-yellow\"; \n        const getMatchingLocation = (item) => {\n            const matches = match(item);\n            console.log(`getMatchingLocation => matches:${matches}`);\n            if (regionMatch(item) !== false) {\n                if (matches.length > 3) {\n                    count = count + 1;\n                    return <div key={getKey(\"loc\")}>\n                                <div className=\"r-10 m-10 p-20 bg-dkGreen\">\n                                    <div className=\"navBranding white bold\">\n                                        {this.getStars(matches)}<br/>\n                                        {item.name} {`( ${(regionMatch(item)/.01).toFixed(0)} miles)`}\n                                    </div>\n                                    <div className=\"flexContainer\">\n                                        <div className=\"flexContainer m-auto\">\n                                            <div className=\"columnRight pr-10\">\n                                                <div className=\"color-neogreen bold\">Swell: </div>\n                                                <div className=\"color-neogreen bold\">Wind: </div>\n                                                <div className=\"color-neogreen bold\">Tide: </div>\n                                            </div>\n                                            <div className=\"columnLeft\">\n                                                <div>{item.swell.map((swell, i) => <span className={(swell1Match({swell})) ? statusClass(swell1Match(item)) : subStatusClass(swell2DirectionMatch(swell))}>{swell}{((i+1) === item.swell.length)? \"\" : \", \"}</span>)}</div>\n                                                <div className={statusClass(windMatch(item))}>\n                                                    {item.wind.map((wind, i) => <span className={statusClass(windDirectionMatch({wind}))}>\n                                                                                {wind}{((i+1) === item.wind.length)? \"\" : \", \"}\n                                                                            </span>)}\n                                                </div>\n                                                <div className={statusClass(tideMatch(item))}>{item.tide.map((tide,i) => <span className={statusClass(tideDirectionMatch({tide}))}>{tide}{((i+1) === item.tide.length)? \"\" : \", \"}</span>)}</div>\n                                            </div>\n                                        </div>\n                                    </div>   \n                                </div>\n                            </div>\n                }\n            }\n        }\n        const matchingLocations = () => locations.map((item) => getMatchingLocation(item))\n        const getLocations = matchingLocations();\n        const date = this.state.date.toLocaleTimeString();\n        const time = date.replace(\" \",\"\").toLocaleLowerCase();\n        return ( \n            <div className=\"App-content fadeIn\">\n                <Dialog title=\"Wave Finder\" message=\"select current conditions:\"> \n                    <div className=\"white pointer\" onMouseDown={this.pause}>   \n                        <span className=\"bold\">{time}</span>\n                        <Geolocator currentPositionExists={this.currentPositionExists} returnCurrentPosition={this.updateCurrentLocation}/>\n                        <br/>\n                        <div className=\"bg-darker p-15 r-10 m-5\">\n                            <div className=\"flexContainer\">\n                                {this.swellSelector(1,swell1Direction)}\n                                {this.swellSelector(2,swell2Direction)}\n                                {this.tideSelector(tide)}\n                                {this.windSelector(windDirection)}\n                            </div>\n                            <div className=\"bg-dkYellow r-10 m-5 p-15\">\n                                <label>\n                                    Miles:<br/>\n                                    <input className=\"mt-10 p-5 r-10\"\n                                        name=\"distance\"\n                                        type=\"number\"\n                                        value={this.state.distance}\n                                        onChange={this.handleDistanceSelection}/>\n                                </label>\n                            </div>\n                        </div>\n                        <br/>\n                        <span className=\"color-neogreen bold\">{count} waves</span> out of {locations.length}<br/>\n                        are in a <span className=\"color-neogreen bold\">{this.state.distance}</span> mile radius<br/>\n                        and prefer <span className=\"color-neogreen bold\">{swell1Direction} </span>and <span className=\"color-orange bold p-5 r-5\">{swell2Direction} </span>swell with <span className=\"color-neogreen bold bg-dkGreen p-5 r-5\">{tide} </span>tide:\n                        <br/><br/>\n                        {getLocations}\n                    </div>     \n                </Dialog>  \n            </div>  \n        )\n    }\n    \n}\nexport default WaveFinder;"]},"metadata":{},"sourceType":"module"}