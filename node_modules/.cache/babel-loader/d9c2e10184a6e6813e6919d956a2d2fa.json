{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/WaveUtils.js\";\nimport React, { useState } from 'react';\n\nconst WaveUtils = ({\n  item,\n  state,\n  logLocation\n}) => {\n  // eslint-disable-next-line\n  const [status, setStatus] = useState(state);\n  const [locations, setLocations] = useState(state.locations);\n\n  const addWave = () => {\n    const swells = [];\n    const winds = [];\n    const tides = [];\n    const waveLocations = locations;\n    let i = 0;\n    let wave = prompt(\"wave: \", \"enter spot\");\n    const swellCount = prompt(\"swell count: \", \"how many directions?\");\n\n    for (i = 0; i < swellCount; i++) {\n      swells[i] = prompt(\"swell direction\", \"direction\");\n    }\n\n    const windCount = prompt(\"wind count: \", \"how many directions?\");\n\n    for (i = 0; i < windCount; i++) {\n      winds[i] = prompt(\"wind direction\", \"direction\");\n    }\n\n    const tideCount = prompt(\"tide count: \", \"how many tides?\");\n\n    for (i = 0; i < tideCount; i++) {\n      tides[i] = prompt(\"tide direction\", \"direction\");\n    }\n\n    const getObj = () => {\n      console.log(`getObj => state: ${JSON.stringify(status, null, 2)}`);\n      return {\n        name: wave,\n        latitude: localStorage.getItem(\"latitude\"),\n        longitude: localStorage.getItem(\"longitude\"),\n        swell: swells,\n        wind: winds,\n        tide: tides\n      };\n    };\n\n    waveLocations.push(getObj());\n    console.log(`add a wave... ${JSON.stringify(getObj(), null, 2)}`);\n    localStorage.setItem('locations', JSON.stringify(waveLocations));\n    setLocations(waveLocations);\n  };\n\n  const deleteWave = props => {\n    let waveLocations = JSON.parse(localStorage.getItem(\"locations\"));\n    console.log(`Props: ${JSON.stringify(props, null, 2)}`);\n    let index = 0;\n    let result = waveLocations.find(obj => {\n      index++;\n      return obj.name === props.name;\n    });\n    console.log(`delete 1 => index: ${index - 1} result: ${JSON.stringify(result, null, 2)}`);\n    console.log(`delete 2 => locations: [${index - 1}]: ${JSON.stringify(waveLocations[index - 1], null, 2)}`); ///////////////\n\n    waveLocations.splice(index - 1, 1);\n    localStorage.setItem('locations', JSON.stringify(waveLocations));\n    console.log(`delete 3 => locations: [${index - 1}]: ${waveLocations.map((location, index) => `${index} ${location.name}`)}`);\n    setLocations(waveLocations);\n  };\n\n  const editWaveSave = (location, index) => {\n    console.log(`editWaveSave() => ${JSON.stringify(location, null, 2)}`);\n    let waveLocations = JSON.parse(localStorage.getItem(\"locations\"));\n    let swells = location.swell;\n    let winds = location.wind;\n    let tides = location.tide;\n    let i = 0;\n    let wave = prompt(\"wave: \", location.name);\n    const swellCount = prompt(\"swell count: \", swells.length);\n\n    for (i = 0; i < swellCount; i++) {\n      swells[i] = prompt(\"edit swell direction\", swells[i]);\n    }\n\n    swells = swells.slice(0, swellCount);\n    const windCount = prompt(\"wind count: \", winds.length);\n\n    for (i = 0; i < windCount; i++) {\n      winds[i] = prompt(\"edit wind direction\", winds[i]);\n    }\n\n    winds = winds.slice(0, windCount);\n    const tideCount = prompt(\"tide count: \", tides.length);\n\n    for (i = 0; i < tideCount; i++) {\n      tides[i] = prompt(\"edit tide direction\", tides[i]);\n    }\n\n    tides = tides.slice(0, tideCount);\n\n    const getObj = () => {\n      return {\n        name: wave,\n        latitude: location.latitude,\n        longitude: location.longitude,\n        swell: swells,\n        wind: winds,\n        tide: tides\n      };\n    };\n\n    console.log(`locations: ${JSON.stringify(waveLocations[index], null, 2)} => will be ${JSON.stringify(getObj(), null, 2)}`);\n    waveLocations[index] = getObj();\n    console.log(`edit a wave saving... ${JSON.stringify(waveLocations[index], null, 2)}`);\n    localStorage.setItem('locations', JSON.stringify(waveLocations));\n    setLocations(waveLocations);\n  };\n\n  const editWave = props => {\n    const waveLocations = JSON.parse(localStorage.getItem(\"locations\"));\n\n    if (props.name === \"button\") {\n      console.log(`edit(${localStorage.getItem('edit')}) toggle... ${JSON.stringify(props, null, 2)}`);\n      handleEditToggle();\n    } else if (props.name === \"edit\") {\n      console.log(`edit a wave... ${JSON.stringify(item, null, 2)}`);\n      console.log(`Props: ${JSON.stringify(props, null, 2)}`);\n      let index = 0;\n      let result = waveLocations.find(obj => {\n        index++;\n        return obj.name === item.name;\n      });\n      console.log(`index: ${index} result: ${JSON.stringify(result, null, 2)}`);\n      console.log(`locations: [${index}]: ${JSON.stringify(waveLocations[index - 1], null, 2)}`);\n      editWaveSave(result, index - 1);\n    }\n  };\n\n  const handleEditToggle = () => {\n    const edit = localStorage.getItem('edit') === \"true\" ? false : true;\n    localStorage.setItem(\"edit\", edit);\n    console.log(`handleEditToggle => EDIT: ${edit}`);\n    /*\n    this.setState({\n        edit: edit\n    })\n    */\n  };\n\n  const menu = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button m-5 r-10 p-10 bg-green\",\n    onClick: () => addWave(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Add wave\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button m-5 r-10 p-10 bg-green\",\n    onClick: () => editWave({\n      \"name\": \"button\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, localStorage.getItem(\"edit\") === \"true\" ? \"Save\" : \"Edit wave\"));\n  const itemContainer = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App button bg-yellow color-black p-10 r-10 mt-20\",\n    onClick: () => logLocation(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, \"Log Session\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App button bg-red color-black p-10 r-10 mt-20\",\n    onClick: () => editWave({\n      \"name\": \"edit\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"Edit Location\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App button bg-red color-black p-10 r-10 mt-20\",\n    onClick: () => deleteWave(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"Delete Location\"));\n  console.log(`status.module: ${status.module}`);\n  return status.module === \"WaveFinder\" ? menu : itemContainer;\n};\n\nexport default WaveUtils;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/WaveUtils.js"],"names":["React","useState","WaveUtils","item","state","logLocation","status","setStatus","locations","setLocations","addWave","swells","winds","tides","waveLocations","i","wave","prompt","swellCount","windCount","tideCount","getObj","console","log","JSON","stringify","name","latitude","localStorage","getItem","longitude","swell","wind","tide","push","setItem","deleteWave","props","parse","index","result","find","obj","splice","map","location","editWaveSave","length","slice","editWave","handleEditToggle","edit","menu","itemContainer","module"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\nconst WaveUtils = ({item, state, logLocation}) => {\n    // eslint-disable-next-line\n    const [status, setStatus] = useState(state);\n    const [locations, setLocations] = useState(state.locations)\n    const addWave = () => {\n        const swells = [];\n        const winds = [];\n        const tides = [];\n        const waveLocations = locations;\n        let i=0;\n        let wave = prompt(\"wave: \", \"enter spot\");\n        const swellCount = prompt(\"swell count: \", \"how many directions?\");\n        for (i=0; i<swellCount; i++) {\n            swells[i] = prompt(\"swell direction\", \"direction\");\n        }\n        const windCount = prompt(\"wind count: \", \"how many directions?\");\n        for (i=0; i<windCount; i++) {\n            winds[i] = prompt(\"wind direction\", \"direction\");\n        }\n        const tideCount = prompt(\"tide count: \", \"how many tides?\");\n        for (i=0; i<tideCount; i++) {\n            tides[i] = prompt(\"tide direction\", \"direction\");\n        }\n        const getObj = () => {\n            console.log(`getObj => state: ${JSON.stringify(status,null,2)}`)\n            return {\n                name: wave,\n                latitude: localStorage.getItem(\"latitude\"),\n                longitude: localStorage.getItem(\"longitude\"),\n                swell: swells,\n                wind: winds,\n                tide: tides\n            }\n        }\n        waveLocations.push(getObj());\n        console.log(`add a wave... ${JSON.stringify(getObj(), null, 2)}`);\n        localStorage.setItem('locations', JSON.stringify(waveLocations));\n        setLocations(waveLocations);\n    }\n    const deleteWave = (props) => {\n        let waveLocations = JSON.parse(localStorage.getItem(\"locations\"));\n        console.log(`Props: ${JSON.stringify(props, null, 2)}`)\n        let index = 0;\n        let result = waveLocations.find(obj => {\n            index++\n            return obj.name === props.name\n        })\n        console.log(`delete 1 => index: ${index-1} result: ${JSON.stringify(result, null, 2)}`)\n        console.log(`delete 2 => locations: [${index-1}]: ${JSON.stringify(waveLocations[index-1], null, 2)}`)\n\n        ///////////////\n        waveLocations.splice(index-1, 1);\n        localStorage.setItem('locations', JSON.stringify(waveLocations))\n        console.log(`delete 3 => locations: [${index-1}]: ${waveLocations.map((location, index) => `${index} ${location.name}`)}`)\n        setLocations(waveLocations);\n    }\n    const editWaveSave = (location, index) => {\n        console.log(`editWaveSave() => ${JSON.stringify(location,null,2)}`)\n        let waveLocations = JSON.parse(localStorage.getItem(\"locations\"));\n        let swells = location.swell;\n        let winds = location.wind;\n        let tides = location.tide;\n        let i=0;\n        let wave = prompt(\"wave: \", location.name);\n        const swellCount = prompt(\"swell count: \", swells.length);\n        for (i=0; i<swellCount; i++) {\n            swells[i] = prompt(\"edit swell direction\", swells[i]);\n        }\n        swells = swells.slice(0, swellCount);\n        const windCount = prompt(\"wind count: \", winds.length);\n        for (i=0; i<windCount; i++) {\n            winds[i] = prompt(\"edit wind direction\", winds[i]);\n        }\n        winds = winds.slice(0, windCount);\n        const tideCount = prompt(\"tide count: \", tides.length);\n        for (i=0; i<tideCount; i++) {\n            tides[i] = prompt(\"edit tide direction\", tides[i]);\n        }\n        tides = tides.slice(0, tideCount);\n        const getObj = () => {\n            return {\n                name: wave,\n                latitude: location.latitude,\n                longitude: location.longitude,\n                swell: swells,\n                wind: winds,\n                tide: tides\n            }\n        }\n        console.log(`locations: ${JSON.stringify(waveLocations[index],null,2)} => will be ${JSON.stringify(getObj(),null,2)}`)\n        waveLocations[index] = getObj();\n        console.log(`edit a wave saving... ${JSON.stringify(waveLocations[index], null, 2)}`)\n        localStorage.setItem('locations', JSON.stringify(waveLocations))\n        setLocations(waveLocations);\n    }\n   \n    const editWave = (props) => {\n        const waveLocations = JSON.parse(localStorage.getItem(\"locations\"));\n        \n        if (props.name === \"button\") {\n            console.log(`edit(${localStorage.getItem('edit')}) toggle... ${JSON.stringify(props, null, 2)}`);\n            handleEditToggle()\n        } else if (props.name === \"edit\") {\n            console.log(`edit a wave... ${JSON.stringify(item, null, 2)}`);\n            console.log(`Props: ${JSON.stringify(props, null, 2)}`)\n            let index = 0;\n            let result = waveLocations.find(obj => {\n                index++\n                return obj.name === item.name\n            })\n            console.log(`index: ${index} result: ${JSON.stringify(result, null, 2)}`)\n            console.log(`locations: [${index}]: ${JSON.stringify(waveLocations[index-1], null, 2)}`)\n            editWaveSave(result, index-1);\n        }\n    }\n    const handleEditToggle = () => {\n        const edit = (localStorage.getItem('edit') === \"true\") ? false : true;\n        localStorage.setItem(\"edit\", edit);\n        console.log(`handleEditToggle => EDIT: ${edit}`)\n        /*\n        this.setState({\n            edit: edit\n        })\n        */\n    }\n    const menu = <div>\n                    <div className=\"button m-5 r-10 p-10 bg-green\" onClick={() => addWave()}>\n                        Add wave\n                    </div>\n                    <div className=\"button m-5 r-10 p-10 bg-green\" onClick={() => editWave({\"name\":\"button\"})}>\n                        {(localStorage.getItem(\"edit\") === \"true\") ? \"Save\" : \"Edit wave\"}\n                    </div>\n                </div>;\n    const itemContainer = <div>\n                    <div className=\"App button bg-yellow color-black p-10 r-10 mt-20\" onClick={() => logLocation(item)}>\n                        Log Session\n                    </div>\n                    <div className=\"App button bg-red color-black p-10 r-10 mt-20\" onClick={() => editWave({\"name\":\"edit\"})}>\n                        Edit Location\n                    </div>\n                    <div className=\"App button bg-red color-black p-10 r-10 mt-20\" onClick={() => deleteWave(item)}>\n                        Delete Location\n                    </div>\n                </div>\n    console.log(`status.module: ${status.module}`)\n    return (status.module === \"WaveFinder\") ? menu : itemContainer;\n}\nexport default WaveUtils"]},"metadata":{},"sourceType":"module"}