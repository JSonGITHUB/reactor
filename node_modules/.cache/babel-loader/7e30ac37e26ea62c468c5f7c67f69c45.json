{"ast":null,"code":"import _slicedToArray from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Timer from'./Timer.js';import Geolocator from'./utils/Geolocator.js';var Home=function Home(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),longitude=_useState2[0],setLongitude=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),latitude=_useState4[0],setLatitude=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),distance=_useState6[0],setDistance=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),tracking=_useState8[0],setTracking=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),markedLongitude=_useState10[0],setMarkedLongitude=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),markedLatitude=_useState12[0],setMarkedLatitude=_useState12[1];var calculateDistance=function calculateDistance(){var lat1=markedLatitude;var lat2=latitude;var lon1=markedLongitude;var lon2=longitude;var unit=\"feet\";console.log(\"lat1: \".concat(lat1,\" === lat2: \").concat(lat2,\") && (lon1: \").concat(lon1,\" === lon2: \").concat(lon2));if(lat1===lat2&&lon1===lon2||!lat1||!lat2||!lon1||!lon2){return 0;}else if(tracking===true){var radlat1=Math.PI*lat1/180;var radlat2=Math.PI*lat2/180;var theta=lon1-lon2;var radtheta=Math.PI*theta/180;var feetOrYards=function feetOrYards(dist){return dist*5280>30?\"\".concat((dist*1760).toFixed(2),\" yards\"):\"\".concat((dist*5280).toFixed(2),\" feet\");};var dist=Math.sin(radlat1)*Math.sin(radlat2)+Math.cos(radlat1)*Math.cos(radlat2)*Math.cos(radtheta);if(dist>1){dist=1;}dist=Math.acos(dist);dist=dist*180/Math.PI;dist=dist*60*1.1515;dist=dist<.25?feetOrYards(dist):\"\".concat(dist.toFixed(2),\" miles\");if(unit===\"Kilometers\"){dist=dist*1.609344;}if(unit===\"Nautical\"){dist=dist*0.8684;}console.log(\"DISTANCE => \".concat(dist));return dist;}return distance;};var updateCurrentLocation=function updateCurrentLocation(longitude,latitude){console.log(\"UPDATING CURRENT POSITION ======> longitude: \".concat(longitude,\" latitude: \").concat(latitude));setLongitude(longitude);setLatitude(latitude);setDistance(calculateDistance());};var startDistance=function startDistance(){setTracking(true);setMarkedLatitude(latitude);setMarkedLongitude(longitude);};var stopTracking=function stopTracking(){setTracking(false);};var getDistance=function getDistance(){return distance;};var getTracker=function getTracker(){var tracker=tracking===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"color-neogreen p-20 bold bigFont100 bg-dkGreen r-5 m-20\"},getDistance()),/*#__PURE__*/React.createElement(\"div\",{className:\"button p-20 r-5 m-20 bg-red incompletedSelector color-yellow\",onClick:stopTracking},\"Stop Tracking\")):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"color-neogreen p-20 bold bigFont100 bg-dkGreen r-5 m-20\"},distance),/*#__PURE__*/React.createElement(\"div\",{className:\"button p-20 r-5 m-20 bg-neogreen completedSelector color-black\",onClick:startDistance},\"Start Tracking\"));return tracker;};return/*#__PURE__*/React.createElement(\"div\",{className:\"App fadeIn\"},/*#__PURE__*/React.createElement(\"header\",{className:\"App-content\"},/*#__PURE__*/React.createElement(\"a\",{className:\"App-link bold greet p-20 r-10 w-200 bg-green brdr-green noUnderline\",href:\"https://jsongithub.github.io/portfolio/\",target:\"_self\",rel:\"noopener noreferrer\"},\"portfolio\"),/*#__PURE__*/React.createElement(Timer,null),\"Current position:\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Geolocator,{currentPositionExists:\"false\",returnCurrentPosition:updateCurrentLocation}),/*#__PURE__*/React.createElement(\"br\",null),getTracker()));};export default Home;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/Home.js"],"names":["React","useState","Timer","Geolocator","Home","longitude","setLongitude","latitude","setLatitude","distance","setDistance","tracking","setTracking","markedLongitude","setMarkedLongitude","markedLatitude","setMarkedLatitude","calculateDistance","lat1","lat2","lon1","lon2","unit","console","log","radlat1","Math","PI","radlat2","theta","radtheta","feetOrYards","dist","toFixed","sin","cos","acos","updateCurrentLocation","startDistance","stopTracking","getDistance","getTracker","tracker"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Timer from './Timer.js';\nimport Geolocator from './utils/Geolocator.js';\n\nconst Home = () => {\n\n    const [longitude, setLongitude] = useState(null);\n    const [latitude, setLatitude] = useState(null);\n    const [distance, setDistance] = useState(0);\n    const [tracking, setTracking] = useState(false);\n    const [markedLongitude, setMarkedLongitude] = useState(null);\n    const [markedLatitude, setMarkedLatitude] = useState(null);\n    \n    const calculateDistance = () => {\n        const lat1 = markedLatitude;\n        const lat2 = latitude;\n        const lon1 = markedLongitude;\n        const lon2 = longitude;\n        let unit = \"feet\"\n        console.log(`lat1: ${lat1} === lat2: ${lat2}) && (lon1: ${lon1} === lon2: ${lon2}`)\n        if (((lat1 === lat2) && (lon1 === lon2)) || (!lat1 || !lat2 || !lon1 || !lon2)) {\n            return 0;\n        } else if (tracking === true) {\n            const radlat1 = Math.PI * lat1/180;\n            const radlat2 = Math.PI * lat2/180;\n            const theta = lon1-lon2;\n            const radtheta = Math.PI * theta/180;\n            const feetOrYards = (dist) => ((dist*5280)>30) ? `${(dist*1760).toFixed(2)} yards` : `${(dist*5280).toFixed(2)} feet`;\n            let dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n            if (dist > 1) { dist = 1 }\n            dist = Math.acos(dist);\n            dist = dist * 180/Math.PI;\n            dist = dist * 60 * 1.1515;\n            dist = (dist<.25) ? feetOrYards(dist) : `${dist.toFixed(2)} miles`;\n            if (unit===\"Kilometers\") { dist = dist * 1.609344 }\n            if (unit===\"Nautical\") { dist = dist * 0.8684 }\n            console.log(`DISTANCE => ${dist}`)\n            return dist;\n        }\n        return distance;\n    }\n    const updateCurrentLocation = (longitude, latitude) => {\n        console.log(`UPDATING CURRENT POSITION ======> longitude: ${longitude} latitude: ${latitude}`)\n        setLongitude(longitude);\n        setLatitude(latitude);\n        setDistance(calculateDistance());\n    }\n    const startDistance = () => {\n        setTracking(true);\n        setMarkedLatitude(latitude);\n        setMarkedLongitude(longitude);\n    }\n    const stopTracking = () => {\n        setTracking(false);\n    }\n    const getDistance = () => distance;\n    const getTracker = () => {\n        const tracker = (tracking === true) \n        ? <div>\n            <div className=\"color-neogreen p-20 bold bigFont100 bg-dkGreen r-5 m-20\">{getDistance()}</div>\n            <div className=\"button p-20 r-5 m-20 bg-red incompletedSelector color-yellow\" onClick={stopTracking}>Stop Tracking</div>\n        </div>\n        : <div>\n            <div className=\"color-neogreen p-20 bold bigFont100 bg-dkGreen r-5 m-20\">{distance}</div>\n            <div className=\"button p-20 r-5 m-20 bg-neogreen completedSelector color-black\" onClick={startDistance}>Start Tracking</div>\n        </div>\n\n        return tracker;\n    }\n                \n    return (\n        <div className=\"App fadeIn\">\n            <header className=\"App-content\">\n                <a className=\"App-link bold greet p-20 r-10 w-200 bg-green brdr-green noUnderline\"\n                href=\"https://jsongithub.github.io/portfolio/\"\n                target=\"_self\"\n                rel=\"noopener noreferrer\"\n                >\n                    portfolio\n                </a>\n                {/*<Lister items={[1,2,3]} />*/}\n                <Timer/>\n                Current position:<br/>\n                <Geolocator currentPositionExists=\"false\" returnCurrentPosition={updateCurrentLocation}/><br/>\n                {getTracker()}\n            </header>\n        </div>\n    );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}