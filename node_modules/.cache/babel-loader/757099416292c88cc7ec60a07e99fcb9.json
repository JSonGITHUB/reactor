{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/SurfScores.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LongPressButton from './LongPressButton.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport ScoreCard from './ScoreCard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurfScores = _ref => {\n  _s();\n  let {\n    player,\n    scoreTotal,\n    editPlayer,\n    deletePlayer,\n    winner,\n    updateTwoPlayerScores,\n    game,\n    surfKey\n  } = _ref;\n  const initPlayers = ['You', 'Me'];\n  const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n  const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || []);\n  const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n  const [sortedPlayers, setSortedPlayers] = useState([]);\n  const [sortedScores, setSortedScores] = useState([]);\n  const [timerOn, setTimerOn] = useState(false);\n  const surfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const [timesUp, setTimesUp] = useState(false);\n  const [heatLength, setHeatLength] = useState(60 * 60);\n  const playerScores = [{\n    name: 'Player 1',\n    scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88]\n  }, {\n    name: 'Player 2',\n    scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81]\n  }, {\n    name: 'Player 3',\n    scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89]\n  }];\n  useEffect(() => {\n    const playerData = players.map((player, index) => ({\n      player,\n      score: surfersScores[index]\n    }));\n    playerData.sort((a, b) => b.score - a.score);\n    const sortedPlayers = playerData.map(data => data.player);\n    const sortedScores = playerData.map(data => data.score);\n    setSortedPlayers(sortedPlayers);\n    setSortedScores(sortedScores);\n    localStorage.setItem('players', JSON.stringify(sortedPlayers));\n    localStorage.setItem('surfersScores', JSON.stringify(sortedScores));\n  }, [players, surfersScores]);\n  useEffect(() => {\n    let intervalId;\n    if (timerOn) {\n      intervalId = setInterval(() => {\n        setTime(prevTime => {\n          const newTime = prevTime - 1;\n          if (newTime <= 0) {\n            clearInterval(intervalId);\n            setTimesUp(true);\n            return 0;\n          }\n          return newTime;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [timerOn]);\n  useEffect(() => {\n    if (timesUp) {\n      setTimerOn(false);\n      setTime(heatLength);\n      console.log(`heatLength: ${heatLength}`);\n      setTimesUp(false);\n    }\n  }, [timesUp]);\n  const toggleTimer = () => {\n    if (timerOn) {\n      setTimerOn(false);\n    } else {\n      setTimerOn(true);\n    }\n  };\n  const setTimer = (groupTitle, label, selected) => {\n    localStorage.setItem('timer', selected);\n    setTime(selected * 60);\n    setHeatLength(selected * 60);\n  };\n  const rankStatus = (player, index, score) => {\n    console.log(`ranksStatus => surfersScores player: ${player} index: ${index} score: ${score}`);\n    const winsBy = 'Wins by 7.17';\n    const needs = 'Needs 0.01';\n    if (index === 0) {\n      return winsBy;\n    }\n    return needs;\n  };\n  const surfingRanks = (player, index, score) => {\n    const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent size20 bold\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-10 p-10 w-100\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3ColumnLeft m-1 p-10\",\n        children: player\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3ColumnRight mr-10 p-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"copyright bold\",\n          children: rankStatus(player, index, score)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, getKey(player), true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 30\n    }, this);\n    return surferScores;\n  };\n  const findTwoHighestIndices = scores => {\n    let highestIndex = 0;\n    let secondHighestIndex = -1;\n    scores.forEach((score, index) => {\n      if (score > scores[highestIndex]) {\n        secondHighestIndex = highestIndex;\n        highestIndex = index;\n      } else if (secondHighestIndex === -1 || score > scores[secondHighestIndex]) {\n        secondHighestIndex = index;\n      }\n    });\n    return [highestIndex, secondHighestIndex];\n  };\n  const getWave = (playerId, index, score) => {\n    console.log(`getWave => playerId: ${playerId} index: ${index} score: ${score}`);\n    const highestScores = findTwoHighestIndices(playerScores[playerId].scores);\n    const highestId = highestScores[0];\n    const secondHighestId = highestScores[1];\n    const firstScore = index === highestId ? true : false;\n    const secondScore = index === secondHighestId ? true : false;\n    const getClasses = firstScore || secondScore ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n    const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"greet bold color-yellow bg-dkYellow w-100 p-5\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getClasses,\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 22\n    }, this);\n    return wave;\n  };\n  const addScoreForPlayer = (players, playerIndex, score) => {\n    if (playerIndex >= 0 && playerIndex < players.length) {\n      players[playerIndex].scores.push(score);\n    }\n  };\n  //addScoreForPlayer(players, 0, 94);\n  // Find the indices of the two highest scores for each player\n  const getTwoHighestScores = playerIndex => {\n    const player = playerScores[playerIndex];\n    const [highestIndex, secondHighestIndex] = findTwoHighestIndices(playerScores[playerIndex].scores);\n    console.log(`${player.name}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n    return {\n      'highScoreIndex': highestIndex,\n      'secondHighScoreIndex': secondHighestIndex\n    };\n  };\n  const floatDecimalOneDigit = number => {\n    if (Number.isInteger(number) && number >= 10 && number <= 99) {\n      return number / 10;\n    } else {\n      return null;\n    }\n  };\n  const surfingScores = (player, index, score) => {\n    console.log(`surfingScores => player: ${player} index: ${index} score:${playerScores[index].scores[0]}`);\n    const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer width-100-percent mt--10 mb--10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-10 p-5 w-100 size40 mt-10\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3ColumnLeft m-1 p-5 size40 mt-10\",\n          children: player\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3ColumnRight mr-10 p-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"size25 bold\",\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: rankStatus(player, index, score)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this)]\n      }, getKey(player), true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-scroll color-white copyright m-10\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"container mt-10\",\n              children: playerScores[index].scores.map((score, wave) => getWave(index, wave, floatDecimalOneDigit(score)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 30\n    }, this);\n    return surferScores;\n  };\n  const getSurfTotal = (player, index) => {\n    let total = 0;\n    const score = index => localStorage.getItem(surfKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    surfScoring.map((target, index) => {\n      console.log(`getSurfTotal=> ${surfKey(player, index)} ${index}: ${total}`);\n      addToTotal(Number(score(index)));\n    });\n    //console.log(`getsurfTotalplayer=> ${player}: ${total}`)\n    return total;\n  };\n  const scorecard = (player, index, score) => {\n    console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n    return /*#__PURE__*/_jsxDEV(ScoreCard, {\n      game: game,\n      player: player,\n      index: index,\n      editPlayer: editPlayer,\n      deletePlayer: deletePlayer,\n      updateTwoPlayerScores: updateTwoPlayerScores,\n      winner: winner\n    }, getKey(player), false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 16\n    }, this);\n  };\n  const surfScores = surfScoring.map((wave, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexContainer width-100-percent\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex3Column p-5\",\n      children: scorecard(index, index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-20 r-5 font50 color-yellow m-auto\",\n      children: wave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex3Column p-5\",\n      children: scorecard(index, index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this)]\n  }, getKey(wave), true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 57\n  }, this));\n  const getSurfScore = index => {\n    const newPlayer = {\n      'name': players[index],\n      'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    };\n    if (playerScores.length < players.length) {\n      playerScores.push(newPlayer);\n    }\n    const scoreTotal = floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex]));\n    return scoreTotal;\n  };\n  const surfingScoreboard = sortedPlayers.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n  const surfClass = playerIndex => 'flex3Column p-20 size25 bold' + (isWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n  const surfScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: surfClass(0),\n        children: [players[0], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-yellow mt-10\",\n          children: getSurfTotal(players[0], 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 bg-yellow navBranding w-200\",\n        children: \"vs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: surfClass(1),\n        children: [players[1], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-yellow mt-10\",\n          children: getSurfTotal(players[1], 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }, this), surfScores]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 28\n  }, this);\n  const getTimerButtonClasses = () => {\n    const timerButtonClasses = timerOn ? 'bg-red m-10 r-10 bold size20 p-20 color-light' : 'bg-green m-10 r-10 bold size20 p-20 color-light';\n    return timerButtonClasses;\n  };\n  const getTimerClasses = () => {\n    const timerClasses = time < 120 ? 'blinking-fade' : '';\n    return timerClasses;\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getTimerButtonClasses(),\n      onClick: () => toggleTimer(),\n      children: timerOn ? 'STOP' : 'START'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dkBlue m-10 r-10 bold size20 p-20 color-light0\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: getTimerClasses(),\n        children: formatTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 84\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer color-yellow bold greet ml-10 mr-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-10 p-10 w-100 bg-dkGreen m-1 r-5-lft\",\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3ColumnLeft m-1 p-10 bg-dkGreen m-1\",\n          children: \"Athlete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3ColumnRight mr-10 p-10 bg-dkGreen m-1 r-5-rt\",\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 12\n  }, this);\n};\n_s(SurfScores, \"TeQzk/2obdvGBGY5IDLiH/tbOlw=\");\n_c = SurfScores;\nexport default SurfScores;\nvar _c;\n$RefreshReg$(_c, \"SurfScores\");","map":{"version":3,"names":["React","useState","useEffect","LongPressButton","Selector","getKey","ScoreCard","jsxDEV","_jsxDEV","SurfScores","_ref","_s","player","scoreTotal","editPlayer","deletePlayer","winner","updateTwoPlayerScores","game","surfKey","initPlayers","players","setPlayers","JSON","parse","localStorage","getItem","surfersScores","setSurfersScores","time","setTime","sortedPlayers","setSortedPlayers","sortedScores","setSortedScores","timerOn","setTimerOn","surfScoring","timesUp","setTimesUp","heatLength","setHeatLength","playerScores","name","scores","playerData","map","index","score","sort","a","b","data","setItem","stringify","intervalId","setInterval","prevTime","newTime","clearInterval","console","log","toggleTimer","setTimer","groupTitle","label","selected","rankStatus","winsBy","needs","surfingRanks","surferScores","className","children","fileName","_jsxFileName","lineNumber","columnNumber","findTwoHighestIndices","highestIndex","secondHighestIndex","forEach","getWave","playerId","highestScores","highestId","secondHighestId","firstScore","secondScore","getClasses","wave","class","addScoreForPlayer","playerIndex","length","push","getTwoHighestScores","floatDecimalOneDigit","number","Number","isInteger","surfingScores","getSurfTotal","total","addToTotal","value","target","scorecard","surfScores","getSurfScore","newPlayer","highScoreIndex","secondHighScoreIndex","surfingScoreboard","surfClass","isWinner","surfScoreboard","Fragment","getTimerButtonClasses","timerButtonClasses","getTimerClasses","timerClasses","onClick","formatTime","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/SurfScores.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LongPressButton from './LongPressButton.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport ScoreCard from './ScoreCard.js';\n\nconst SurfScores = ({ player, scoreTotal, editPlayer, deletePlayer, winner, updateTwoPlayerScores, game, surfKey}) => {\n\n    const initPlayers = ['You', 'Me'];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n    const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n    const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n    const [sortedPlayers, setSortedPlayers] = useState([]);\n    const [sortedScores, setSortedScores] = useState([]);\n    const [timerOn, setTimerOn] = useState(false);\n    const surfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const [timesUp, setTimesUp] = useState(false);\n    const [heatLength, setHeatLength] = useState(60 * 60);\n    const playerScores = [\n        { name: 'Player 1', scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88] },\n        { name: 'Player 2', scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81] },\n        { name: 'Player 3', scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89] },\n    ];\n    \n    useEffect(() => {\n\n        const playerData = players.map((player, index) => ({ player, score: surfersScores[index] }));\n        playerData.sort((a, b) => b.score - a.score);\n\n        const sortedPlayers = playerData.map((data) => data.player);\n        const sortedScores = playerData.map((data) => data.score);\n\n        setSortedPlayers(sortedPlayers);\n        setSortedScores(sortedScores);\n\n        localStorage.setItem('players', JSON.stringify(sortedPlayers));\n        localStorage.setItem('surfersScores', JSON.stringify(sortedScores));\n\n    }, [players, surfersScores]);\n\n    useEffect(() => {\n        let intervalId;\n        if (timerOn) {\n            intervalId = setInterval(() => {\n                setTime((prevTime) => {\n                    const newTime = prevTime - 1;\n                    if (newTime <= 0) {\n                        clearInterval(intervalId);\n                        setTimesUp(true);\n                        return 0;\n                    }\n                    return newTime;\n                });\n            }, 1000);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [timerOn]);\n\n    useEffect(() => {\n        if (timesUp) {\n            setTimerOn(false);\n            setTime(heatLength);\n            console.log(`heatLength: ${heatLength}`)\n            setTimesUp(false);\n        }\n    }, [timesUp]);\n\n    const toggleTimer = () => {\n        if (timerOn) {\n            setTimerOn(false)\n        } else {\n            setTimerOn(true)\n        }\n    }\n\n    const setTimer = (groupTitle, label, selected) => {\n        localStorage.setItem('timer', selected);\n        setTime(selected * 60);\n        setHeatLength(selected * 60);\n    }\n\n    const rankStatus = (player, index, score) => {\n        console.log(`ranksStatus => surfersScores player: ${player} index: ${index} score: ${score}`)\n        const winsBy = 'Wins by 7.17';\n        const needs = 'Needs 0.01';\n        if (index === 0) {\n            return winsBy\n        }\n        return needs\n    }\n\n    const surfingRanks = (player, index, score) => {\n        const surferScores = <div className='flexContainer width-100-percent size20 bold' key={getKey(player)}>\n            <div className='ml-10 p-10 w-100'>{index + 1}</div>\n            <div className='flex3ColumnLeft m-1 p-10'>{player}</div>\n            <div className='flex3ColumnRight mr-10 p-10'>\n                <div>{score}</div>\n                <div className='copyright bold'>{rankStatus(player, index, score)}</div>\n            </div>\n        </div>\n        return surferScores\n    }\n\n    const findTwoHighestIndices = (scores) => {\n        let highestIndex = 0;\n        let secondHighestIndex = -1;\n\n        scores.forEach((score, index) => {\n            if (score > scores[highestIndex]) {\n                secondHighestIndex = highestIndex;\n                highestIndex = index;\n            } else if (secondHighestIndex === -1 || score > scores[secondHighestIndex]) {\n                secondHighestIndex = index;\n            }\n        });\n\n        return [highestIndex, secondHighestIndex];\n    };\n\n    const getWave = (playerId, index, score) => {\n        console.log(`getWave => playerId: ${playerId} index: ${index} score: ${score}`);\n        const highestScores = findTwoHighestIndices(playerScores[playerId].scores);\n        const highestId = highestScores[0];\n        const secondHighestId = highestScores[1];\n        const firstScore = (index === highestId) ? true : false;\n        const secondScore = (index === secondHighestId) ? true : false;\n        const getClasses = (firstScore || secondScore) ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n        const wave = <div class=\"column\">\n            <div className='greet bold color-yellow bg-dkYellow w-100 p-5'>{index + 1}</div>\n            <div className={getClasses}>{score}</div>\n        </div>\n        return wave\n    }\n\n    const addScoreForPlayer = (players, playerIndex, score) => {\n        if (playerIndex >= 0 && playerIndex < players.length) {\n            players[playerIndex].scores.push(score);\n        }\n    };\n    //addScoreForPlayer(players, 0, 94);\n    // Find the indices of the two highest scores for each player\n    const getTwoHighestScores = (playerIndex) => {\n        const player = playerScores[playerIndex];\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(playerScores[playerIndex].scores);\n        console.log(`${player.name}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            'highScoreIndex': highestIndex,\n            'secondHighScoreIndex': secondHighestIndex\n        }\n    }\n    const floatDecimalOneDigit = (number) => {\n        if (Number.isInteger(number) && number >= 10 && number <= 99) {\n            return number / 10;\n        } else {\n            return null;\n        }\n    };\n\n    const surfingScores = (player, index, score) => {\n        console.log(`surfingScores => player: ${player} index: ${index} score:${playerScores[index].scores[0]}`);\n        const surferScores = <div>\n            <div className='flexContainer width-100-percent mt--10 mb--10' key={getKey(player)}>\n                <div className='ml-10 p-5 w-100 size40 mt-10'>{index + 1}</div>\n                <div className='flex3ColumnLeft m-1 p-5 size40 mt-10'>{player}</div>\n                <div className='flex3ColumnRight mr-10 p-5'>\n                    <div className='size25 bold'>{score}</div>\n                    <div>{rankStatus(player, index, score)}</div>\n                </div>\n            </div>\n            <div>\n                <div>\n                    <div className='h-scroll color-white copyright m-10'>\n                        <div class=\"container mt-10\">\n                            {playerScores[index].scores.map((score, wave) => getWave(index, wave, floatDecimalOneDigit(score)))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        return surferScores\n    }\n\n    const getSurfTotal = (player, index) => {\n        let total = 0;\n        const score = (index) => localStorage.getItem(surfKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n            console.log(`getSurfTotal=> ${surfKey(player, index)} ${index}: ${total}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        //console.log(`getsurfTotalplayer=> ${player}: ${total}`)\n        return total;\n    }\n\n    const scorecard = (player, index, score) => {\n        \n        console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n        return <ScoreCard\n            game={game}\n            player={player}\n            index={index}\n            editPlayer={editPlayer}\n            deletePlayer={deletePlayer}\n            updateTwoPlayerScores={updateTwoPlayerScores}\n            winner={winner}\n            key={getKey(player)}\n        />\n\n    }\n\n    const surfScores = surfScoring.map((wave, index) => <div className='flexContainer width-100-percent' key={getKey(wave)}>\n            <div className='flex3Column p-5'>\n                {scorecard(index, index)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {wave}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(index, index)}\n            </div>\n        </div>);\n\n    const getSurfScore = (index) => {\n        const newPlayer = {\n            'name': players[index],\n            'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        }\n        if (playerScores.length < players.length) {\n            playerScores.push(newPlayer)\n        }\n        const scoreTotal = floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex]));\n        return scoreTotal;\n    };\n\n    const surfingScoreboard = sortedPlayers.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n\n    const surfClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        \n    const surfScoreboard = <React.Fragment>\n                <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                    <div className={surfClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getSurfTotal(players[0], 0)}</div></div>\n                    <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                    <div className={surfClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getSurfTotal(players[1], 1)}</div></div>\n                </div>\n                {surfScores}\n            </React.Fragment>\n        \n    const getTimerButtonClasses = () => {\n        const timerButtonClasses = timerOn ? 'bg-red m-10 r-10 bold size20 p-20 color-light' : 'bg-green m-10 r-10 bold size20 p-20 color-light';\n        return timerButtonClasses;\n    }\n    const getTimerClasses = () => {\n        const timerClasses = (time < 120) ? 'blinking-fade' : '';\n        return timerClasses;\n    }\n\n    return <React.Fragment>\n                <div className={getTimerButtonClasses()} onClick={() => toggleTimer()}>\n                    {(timerOn) ? 'STOP' : 'START'}\n                </div>\n                <div className='bg-dkBlue m-10 r-10 bold size20 p-20 color-light0'><span className={getTimerClasses()}>{formatTime(time)}</span></div>\n                <div>\n                    <div className='flexContainer color-yellow bold greet ml-10 mr-10'>\n                        <div className='ml-10 p-10 w-100 bg-dkGreen m-1 r-5-lft'>Rank</div>\n                        <div className='flex3ColumnLeft m-1 p-10 bg-dkGreen m-1'>Athlete</div>\n                        <div className='flex3ColumnRight mr-10 p-10 bg-dkGreen m-1 r-5-rt'>Total</div>\n                    </div>\n                </div>\n\n            </React.Fragment>\n\n}\n   \nexport default SurfScores;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,sBAAsB;AAClD,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,SAAS,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGC,IAAA,IAAmG;EAAAC,EAAA;EAAA,IAAlG;IAAEC,MAAM;IAAEC,UAAU;IAAEC,UAAU;IAAEC,YAAY;IAAEC,MAAM;IAAEC,qBAAqB;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAAT,IAAA;EAE7G,MAAMU,WAAW,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAACsB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAIN,WAAW,CAAC;EAClG,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAACsB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,CAAC;EAC3G,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAG7B,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC8B,aAAa,EAAEC,gBAAgB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgC,YAAY,EAAEC,eAAe,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMoC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACnD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACuC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;EACrD,MAAMyC,YAAY,GAAG,CACjB;IAAEC,IAAI,EAAE,UAAU;IAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAAE,CAAC,EACtE;IAAED,IAAI,EAAE,UAAU;IAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAAE,CAAC,EACtE;IAAED,IAAI,EAAE,UAAU;IAAEC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAAE,CAAC,CACzE;EAED1C,SAAS,CAAC,MAAM;IAEZ,MAAM2C,UAAU,GAAGxB,OAAO,CAACyB,GAAG,CAAC,CAAClC,MAAM,EAAEmC,KAAK,MAAM;MAAEnC,MAAM;MAAEoC,KAAK,EAAErB,aAAa,CAACoB,KAAK;IAAE,CAAC,CAAC,CAAC;IAC5FF,UAAU,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACH,KAAK,GAAGE,CAAC,CAACF,KAAK,CAAC;IAE5C,MAAMjB,aAAa,GAAGc,UAAU,CAACC,GAAG,CAAEM,IAAI,IAAKA,IAAI,CAACxC,MAAM,CAAC;IAC3D,MAAMqB,YAAY,GAAGY,UAAU,CAACC,GAAG,CAAEM,IAAI,IAAKA,IAAI,CAACJ,KAAK,CAAC;IAEzDhB,gBAAgB,CAACD,aAAa,CAAC;IAC/BG,eAAe,CAACD,YAAY,CAAC;IAE7BR,YAAY,CAAC4B,OAAO,CAAC,SAAS,EAAE9B,IAAI,CAAC+B,SAAS,CAACvB,aAAa,CAAC,CAAC;IAC9DN,YAAY,CAAC4B,OAAO,CAAC,eAAe,EAAE9B,IAAI,CAAC+B,SAAS,CAACrB,YAAY,CAAC,CAAC;EAEvE,CAAC,EAAE,CAACZ,OAAO,EAAEM,aAAa,CAAC,CAAC;EAE5BzB,SAAS,CAAC,MAAM;IACZ,IAAIqD,UAAU;IACd,IAAIpB,OAAO,EAAE;MACToB,UAAU,GAAGC,WAAW,CAAC,MAAM;QAC3B1B,OAAO,CAAE2B,QAAQ,IAAK;UAClB,MAAMC,OAAO,GAAGD,QAAQ,GAAG,CAAC;UAC5B,IAAIC,OAAO,IAAI,CAAC,EAAE;YACdC,aAAa,CAACJ,UAAU,CAAC;YACzBhB,UAAU,CAAC,IAAI,CAAC;YAChB,OAAO,CAAC;UACZ;UACA,OAAOmB,OAAO;QAClB,CAAC,CAAC;MACN,CAAC,EAAE,IAAI,CAAC;IACZ;IAEA,OAAO,MAAMC,aAAa,CAACJ,UAAU,CAAC;EAC1C,CAAC,EAAE,CAACpB,OAAO,CAAC,CAAC;EAEbjC,SAAS,CAAC,MAAM;IACZ,IAAIoC,OAAO,EAAE;MACTF,UAAU,CAAC,KAAK,CAAC;MACjBN,OAAO,CAACU,UAAU,CAAC;MACnBoB,OAAO,CAACC,GAAG,CAAE,eAAcrB,UAAW,EAAC,CAAC;MACxCD,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EAEb,MAAMwB,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAI3B,OAAO,EAAE;MACTC,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACHA,UAAU,CAAC,IAAI,CAAC;IACpB;EACJ,CAAC;EAED,MAAM2B,QAAQ,GAAGA,CAACC,UAAU,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAC9CzC,YAAY,CAAC4B,OAAO,CAAC,OAAO,EAAEa,QAAQ,CAAC;IACvCpC,OAAO,CAACoC,QAAQ,GAAG,EAAE,CAAC;IACtBzB,aAAa,CAACyB,QAAQ,GAAG,EAAE,CAAC;EAChC,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACvD,MAAM,EAAEmC,KAAK,EAAEC,KAAK,KAAK;IACzCY,OAAO,CAACC,GAAG,CAAE,wCAAuCjD,MAAO,WAAUmC,KAAM,WAAUC,KAAM,EAAC,CAAC;IAC7F,MAAMoB,MAAM,GAAG,cAAc;IAC7B,MAAMC,KAAK,GAAG,YAAY;IAC1B,IAAItB,KAAK,KAAK,CAAC,EAAE;MACb,OAAOqB,MAAM;IACjB;IACA,OAAOC,KAAK;EAChB,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAC1D,MAAM,EAAEmC,KAAK,EAAEC,KAAK,KAAK;IAC3C,MAAMuB,YAAY,gBAAG/D,OAAA;MAAKgE,SAAS,EAAC,6CAA6C;MAAAC,QAAA,gBAC7EjE,OAAA;QAAKgE,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAE1B,KAAK,GAAG;MAAC;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnDrE,OAAA;QAAKgE,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EAAE7D;MAAM;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxDrE,OAAA;QAAKgE,SAAS,EAAC,6BAA6B;QAAAC,QAAA,gBACxCjE,OAAA;UAAAiE,QAAA,EAAMzB;QAAK;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAClBrE,OAAA;UAAKgE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAEN,UAAU,CAACvD,MAAM,EAAEmC,KAAK,EAAEC,KAAK;QAAC;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC;IAAA,GAN6ExE,MAAM,CAACO,MAAM,CAAC;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOhG,CAAC;IACN,OAAON,YAAY;EACvB,CAAC;EAED,MAAMO,qBAAqB,GAAIlC,MAAM,IAAK;IACtC,IAAImC,YAAY,GAAG,CAAC;IACpB,IAAIC,kBAAkB,GAAG,CAAC,CAAC;IAE3BpC,MAAM,CAACqC,OAAO,CAAC,CAACjC,KAAK,EAAED,KAAK,KAAK;MAC7B,IAAIC,KAAK,GAAGJ,MAAM,CAACmC,YAAY,CAAC,EAAE;QAC9BC,kBAAkB,GAAGD,YAAY;QACjCA,YAAY,GAAGhC,KAAK;MACxB,CAAC,MAAM,IAAIiC,kBAAkB,KAAK,CAAC,CAAC,IAAIhC,KAAK,GAAGJ,MAAM,CAACoC,kBAAkB,CAAC,EAAE;QACxEA,kBAAkB,GAAGjC,KAAK;MAC9B;IACJ,CAAC,CAAC;IAEF,OAAO,CAACgC,YAAY,EAAEC,kBAAkB,CAAC;EAC7C,CAAC;EAED,MAAME,OAAO,GAAGA,CAACC,QAAQ,EAAEpC,KAAK,EAAEC,KAAK,KAAK;IACxCY,OAAO,CAACC,GAAG,CAAE,wBAAuBsB,QAAS,WAAUpC,KAAM,WAAUC,KAAM,EAAC,CAAC;IAC/E,MAAMoC,aAAa,GAAGN,qBAAqB,CAACpC,YAAY,CAACyC,QAAQ,CAAC,CAACvC,MAAM,CAAC;IAC1E,MAAMyC,SAAS,GAAGD,aAAa,CAAC,CAAC,CAAC;IAClC,MAAME,eAAe,GAAGF,aAAa,CAAC,CAAC,CAAC;IACxC,MAAMG,UAAU,GAAIxC,KAAK,KAAKsC,SAAS,GAAI,IAAI,GAAG,KAAK;IACvD,MAAMG,WAAW,GAAIzC,KAAK,KAAKuC,eAAe,GAAI,IAAI,GAAG,KAAK;IAC9D,MAAMG,UAAU,GAAIF,UAAU,IAAIC,WAAW,GAAI,+BAA+B,GAAG,uBAAuB;IAC1G,MAAME,IAAI,gBAAGlF,OAAA;MAAKmF,KAAK,EAAC,QAAQ;MAAAlB,QAAA,gBAC5BjE,OAAA;QAAKgE,SAAS,EAAC,+CAA+C;QAAAC,QAAA,EAAE1B,KAAK,GAAG;MAAC;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChFrE,OAAA;QAAKgE,SAAS,EAAEiB,UAAW;QAAAhB,QAAA,EAAEzB;MAAK;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;IACN,OAAOa,IAAI;EACf,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAACvE,OAAO,EAAEwE,WAAW,EAAE7C,KAAK,KAAK;IACvD,IAAI6C,WAAW,IAAI,CAAC,IAAIA,WAAW,GAAGxE,OAAO,CAACyE,MAAM,EAAE;MAClDzE,OAAO,CAACwE,WAAW,CAAC,CAACjD,MAAM,CAACmD,IAAI,CAAC/C,KAAK,CAAC;IAC3C;EACJ,CAAC;EACD;EACA;EACA,MAAMgD,mBAAmB,GAAIH,WAAW,IAAK;IACzC,MAAMjF,MAAM,GAAG8B,YAAY,CAACmD,WAAW,CAAC;IACxC,MAAM,CAACd,YAAY,EAAEC,kBAAkB,CAAC,GAAGF,qBAAqB,CAACpC,YAAY,CAACmD,WAAW,CAAC,CAACjD,MAAM,CAAC;IAClGgB,OAAO,CAACC,GAAG,CAAE,GAAEjD,MAAM,CAAC+B,IAAK,4BAA2BoC,YAAa,mCAAkCC,kBAAmB,EAAC,CAAC;IAC1H,OAAO;MACH,gBAAgB,EAAED,YAAY;MAC9B,sBAAsB,EAAEC;IAC5B,CAAC;EACL,CAAC;EACD,MAAMiB,oBAAoB,GAAIC,MAAM,IAAK;IACrC,IAAIC,MAAM,CAACC,SAAS,CAACF,MAAM,CAAC,IAAIA,MAAM,IAAI,EAAE,IAAIA,MAAM,IAAI,EAAE,EAAE;MAC1D,OAAOA,MAAM,GAAG,EAAE;IACtB,CAAC,MAAM;MACH,OAAO,IAAI;IACf;EACJ,CAAC;EAED,MAAMG,aAAa,GAAGA,CAACzF,MAAM,EAAEmC,KAAK,EAAEC,KAAK,KAAK;IAC5CY,OAAO,CAACC,GAAG,CAAE,4BAA2BjD,MAAO,WAAUmC,KAAM,UAASL,YAAY,CAACK,KAAK,CAAC,CAACH,MAAM,CAAC,CAAC,CAAE,EAAC,CAAC;IACxG,MAAM2B,YAAY,gBAAG/D,OAAA;MAAAiE,QAAA,gBACjBjE,OAAA;QAAKgE,SAAS,EAAC,+CAA+C;QAAAC,QAAA,gBAC1DjE,OAAA;UAAKgE,SAAS,EAAC,8BAA8B;UAAAC,QAAA,EAAE1B,KAAK,GAAG;QAAC;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/DrE,OAAA;UAAKgE,SAAS,EAAC,sCAAsC;UAAAC,QAAA,EAAE7D;QAAM;UAAA8D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpErE,OAAA;UAAKgE,SAAS,EAAC,4BAA4B;UAAAC,QAAA,gBACvCjE,OAAA;YAAKgE,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEzB;UAAK;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC1CrE,OAAA;YAAAiE,QAAA,EAAMN,UAAU,CAACvD,MAAM,EAAEmC,KAAK,EAAEC,KAAK;UAAC;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA,GAN0DxE,MAAM,CAACO,MAAM,CAAC;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAO7E,CAAC,eACNrE,OAAA;QAAAiE,QAAA,eACIjE,OAAA;UAAAiE,QAAA,eACIjE,OAAA;YAAKgE,SAAS,EAAC,qCAAqC;YAAAC,QAAA,eAChDjE,OAAA;cAAKmF,KAAK,EAAC,iBAAiB;cAAAlB,QAAA,EACvB/B,YAAY,CAACK,KAAK,CAAC,CAACH,MAAM,CAACE,GAAG,CAAC,CAACE,KAAK,EAAE0C,IAAI,KAAKR,OAAO,CAACnC,KAAK,EAAE2C,IAAI,EAAEO,oBAAoB,CAACjD,KAAK,CAAC,CAAC;YAAC;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;IACN,OAAON,YAAY;EACvB,CAAC;EAED,MAAM+B,YAAY,GAAGA,CAAC1F,MAAM,EAAEmC,KAAK,KAAK;IACpC,IAAIwD,KAAK,GAAG,CAAC;IACb,MAAMvD,KAAK,GAAID,KAAK,IAAKtB,YAAY,CAACC,OAAO,CAACP,OAAO,CAACP,MAAM,EAAEmC,KAAK,CAAC,CAAC,IAAI,CAAC;IAC1E,MAAMyD,UAAU,GAAIC,KAAK,IAAKF,KAAK,GAAGA,KAAK,GAAGE,KAAK;IACnDpE,WAAW,CAACS,GAAG,CAAC,CAAC4D,MAAM,EAAE3D,KAAK,KAAK;MAC/Ba,OAAO,CAACC,GAAG,CAAE,kBAAiB1C,OAAO,CAACP,MAAM,EAAEmC,KAAK,CAAE,IAAGA,KAAM,KAAIwD,KAAM,EAAC,CAAC;MAC1EC,UAAU,CAACL,MAAM,CAACnD,KAAK,CAACD,KAAK,CAAC,CAAC,CAAC;IACpC,CACA,CAAC;IACD;IACA,OAAOwD,KAAK;EAChB,CAAC;EAED,MAAMI,SAAS,GAAGA,CAAC/F,MAAM,EAAEmC,KAAK,EAAEC,KAAK,KAAK;IAExCY,OAAO,CAACC,GAAG,CAAE,GAAE3C,IAAK,0BAAyBN,MAAO,WAAUmC,KAAM,WAAUC,KAAM,EAAC,CAAC;IACtF,oBAAOxC,OAAA,CAACF,SAAS;MACbY,IAAI,EAAEA,IAAK;MACXN,MAAM,EAAEA,MAAO;MACfmC,KAAK,EAAEA,KAAM;MACbjC,UAAU,EAAEA,UAAW;MACvBC,YAAY,EAAEA,YAAa;MAC3BE,qBAAqB,EAAEA,qBAAsB;MAC7CD,MAAM,EAAEA;IAAO,GACVX,MAAM,CAACO,MAAM,CAAC;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAEN,CAAC;EAED,MAAM+B,UAAU,GAAGvE,WAAW,CAACS,GAAG,CAAC,CAAC4C,IAAI,EAAE3C,KAAK,kBAAKvC,OAAA;IAAKgE,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC5FjE,OAAA;MAAKgE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC3BkC,SAAS,CAAC5D,KAAK,EAAEA,KAAK;IAAC;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACNrE,OAAA;MAAKgE,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAC/CiB;IAAI;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNrE,OAAA;MAAKgE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC3BkC,SAAS,CAAC5D,KAAK,EAAEA,KAAK;IAAC;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA,GAT4FxE,MAAM,CAACqF,IAAI,CAAC;IAAAhB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAU7G,CAAC,CAAC;EAEX,MAAMgC,YAAY,GAAI9D,KAAK,IAAK;IAC5B,MAAM+D,SAAS,GAAG;MACd,MAAM,EAAEzF,OAAO,CAAC0B,KAAK,CAAC;MACtB,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAC3C,CAAC;IACD,IAAIL,YAAY,CAACoD,MAAM,GAAGzE,OAAO,CAACyE,MAAM,EAAE;MACtCpD,YAAY,CAACqD,IAAI,CAACe,SAAS,CAAC;IAChC;IACA,MAAMjG,UAAU,GAAGoF,oBAAoB,CAACE,MAAM,CAACzD,YAAY,CAACK,KAAK,CAAC,CAACH,MAAM,CAACoD,mBAAmB,CAACjD,KAAK,CAAC,CAACgE,cAAc,CAAC,CAAC,CAAC,GAAGd,oBAAoB,CAACE,MAAM,CAACzD,YAAY,CAACK,KAAK,CAAC,CAACH,MAAM,CAACoD,mBAAmB,CAACjD,KAAK,CAAC,CAACiE,oBAAoB,CAAC,CAAC,CAAC;IAClO,OAAOnG,UAAU;EACrB,CAAC;EAED,MAAMoG,iBAAiB,GAAGlF,aAAa,CAACe,GAAG,CAAC,CAAClC,MAAM,EAAEmC,KAAK,KAAKsD,aAAa,CAACzF,MAAM,EAAEmC,KAAK,EAAE8D,YAAY,CAAC9D,KAAK,CAAC,CAAC,CAAC;EAEjH,MAAMmE,SAAS,GAAIrB,WAAW,IAAK,8BAA8B,IAAKsB,QAAQ,CAACtB,WAAW,CAAC,GAAI,oCAAoC,GAAG,EAAE,CAAC;EAEzI,MAAMuB,cAAc,gBAAG5G,OAAA,CAACR,KAAK,CAACqH,QAAQ;IAAA5C,QAAA,gBAC1BjE,OAAA;MAAKgE,SAAS,EAAC,4DAA4D;MAAAC,QAAA,gBACvEjE,OAAA;QAAKgE,SAAS,EAAE0C,SAAS,CAAC,CAAC,CAAE;QAAAzC,QAAA,GAAEpD,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC,eAAAb,OAAA;UAAKgE,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAE6B,YAAY,CAACjF,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QAAC;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxHrE,OAAA;QAAKgE,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1DrE,OAAA;QAAKgE,SAAS,EAAE0C,SAAS,CAAC,CAAC,CAAE;QAAAzC,QAAA,GAAEpD,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC,eAAAb,OAAA;UAAKgE,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAE6B,YAAY,CAACjF,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QAAC;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvH,CAAC,EACL+B,UAAU;EAAA;IAAAlC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;EAEzB,MAAMyC,qBAAqB,GAAGA,CAAA,KAAM;IAChC,MAAMC,kBAAkB,GAAGpF,OAAO,GAAG,+CAA+C,GAAG,iDAAiD;IACxI,OAAOoF,kBAAkB;EAC7B,CAAC;EACD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAMC,YAAY,GAAI5F,IAAI,GAAG,GAAG,GAAI,eAAe,GAAG,EAAE;IACxD,OAAO4F,YAAY;EACvB,CAAC;EAED,oBAAOjH,OAAA,CAACR,KAAK,CAACqH,QAAQ;IAAA5C,QAAA,gBACVjE,OAAA;MAAKgE,SAAS,EAAE8C,qBAAqB,CAAC,CAAE;MAACI,OAAO,EAAEA,CAAA,KAAM5D,WAAW,CAAC,CAAE;MAAAW,QAAA,EAChEtC,OAAO,GAAI,MAAM,GAAG;IAAO;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACNrE,OAAA;MAAKgE,SAAS,EAAC,mDAAmD;MAAAC,QAAA,eAACjE,OAAA;QAAMgE,SAAS,EAAEgD,eAAe,CAAC,CAAE;QAAA/C,QAAA,EAAEkD,UAAU,CAAC9F,IAAI;MAAC;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtIrE,OAAA;MAAAiE,QAAA,eACIjE,OAAA;QAAKgE,SAAS,EAAC,mDAAmD;QAAAC,QAAA,gBAC9DjE,OAAA;UAAKgE,SAAS,EAAC,yCAAyC;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnErE,OAAA;UAAKgE,SAAS,EAAC,yCAAyC;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtErE,OAAA;UAAKgE,SAAS,EAAC,mDAAmD;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEM,CAAC;AAE7B,CAAC;AAAAlE,EAAA,CA3QKF,UAAU;AAAAmH,EAAA,GAAVnH,UAAU;AA6QhB,eAAeA,UAAU;AAAC,IAAAmH,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}