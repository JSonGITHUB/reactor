{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/LogEntryFunctional.js\";\nimport React, { useState } from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport RadioSelector from '../forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport { BrowserRouter as Link, Route } from 'react-router-dom';\nimport LogId from './LogId.js';\nimport selector from './Selector.js';\nimport group from './Group.js';\nimport templateData from './TemplateData.js';\n\nconst LogEntry = ({\n  logId,\n  onChange,\n  getStateLog,\n  title,\n  message,\n  buttonLabel,\n  items\n}) => {\n  const [log, setLog] = useState(JSON.parse(localStorage.getItem(\"ThuApr3020209:19:28PM\")));\n  const [change, setChange] = useState(false);\n  const posts = new PostDirectory();\n  const [lastPostId, setLastPostId] = useState(localStorage.getItem(\"lastPostId\") === null ? posts.getLastItem() : localStorage.getItem(\"lastPostId\"));\n  let selectorStatus = [];\n  const spot = localStorage.getItem('spot');\n\n  if (logId !== undefined && logId !== \"\") {\n    setLastPostId(logId);\n    console.log(`$$ logId1: ${logId}`);\n    setLog(localStorage.getItem(logId) === null ? templateData : JSON.parse(localStorage.getItem(logId)));\n  } else {\n    setLastPostId(\"ThuApr3020209:19:28PM\");\n    console.log(`logId2: ${lastPostId}`);\n    setLog(JSON.parse(localStorage.getItem(\"ThuApr3020209:19:28PM\")));\n  }\n\n  const logIdComponent = new LogId({\n    logId: logId,\n    log: log\n  });\n  const date = useState(new Date());\n  setLastPostId(logId);\n  setChange(false);\n\n  const handleSelection = (groupTitle, label, selected) => {\n    if (typeof groupTitle === \"string\") {\n      log[groupTitle][label] = selected;\n      onChange(groupTitle, label, selected, true);\n      setLog(log);\n      setChange(true);\n    }\n  };\n\n  const updateNotes = event => {\n    handleSelection(\"Comments\", \"notes\", event.target.value);\n  };\n\n  const handleSubmit = event => {\n    //let { log } = this.state;\n    //log = (log !== undefined && JSON.stringify(log, null, 2) !== \"{}\") ? log : this.log;\n    console.log(`handleSubmit: ${JSON.stringify(log, null, 2)}`);\n    const recordId = logIdComponent.generateNewLogId();\n    console.log(`handleSubmit: recordId: ${recordId}`);\n    let postDirectory = posts.getDirectory();\n    let post = \"\";\n\n    const logIt = () => {\n      postDirectory.push(recordId);\n      postDirectory = JSON.stringify(postDirectory);\n      console.log(`postDirectory: ${postDirectory}`);\n      post = JSON.stringify(log, null, 2);\n      console.log(`post: ${post}`);\n      localStorage.setItem(recordId, post); //localStorage.setItem(\"postDirectory\", postDirectory);\n\n      posts.add(recordId);\n    };\n\n    const selectorStatusComplete = selectorStatus.includes(false) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n\n    if (selectorStatusComplete) {\n      logIt();\n    }\n  };\n\n  const handleSave = event => {\n    //let { log, lastPostId } = this.state;\n    //log = (log !== undefined && JSON.stringify(log, null, 2) !== \"{}\") ? log : this.log;\n    console.log(`handleSave: ${log}`);\n    const recordId = lastPostId;\n    let post = \"\";\n\n    const logIt = () => {\n      post = JSON.stringify(log, null, 2);\n      console.log(`post: ${post}`);\n      localStorage.setItem(recordId, post);\n    };\n\n    const selectorStatusComplete = selectorStatus.includes(false) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n\n    if (selectorStatusComplete) {\n      logIt();\n    }\n  };\n\n  const handleDelete = event => {\n    const recordId = lastPostId;\n    posts.delete(recordId);\n  };\n\n  const onDateChange = date => {\n    const pickerDate = date;\n    date = String(date);\n    const day = pickerDate.getDate();\n    const month = pickerDate.getMonth() + 1;\n    const year = pickerDate.getFullYear();\n    handleSelection(\"Day\", \"Date\", pickerDate);\n    handleSelection(\"Day\", \"Day\", day);\n    handleSelection(\"Day\", \"Month\", month);\n    handleSelection(\"Day\", \"Year\", year);\n  };\n\n  const getItems = () => items;\n\n  const selected = (item, groupTitle) => console.log(`selected =>>>>> item: ${item} groupTitle: ${groupTitle}`);\n\n  const defaultSelection = (item, groupTitle) => selected(item, groupTitle) ? item.selections.indexOf(log[groupTitle][item.description]) : 0;\n\n  const radioItems = (item, groupTitle) => {\n    return /*#__PURE__*/React.createElement(RadioSelector, {\n      header: groupTitle,\n      groupTitle: groupTitle,\n      selected: defaultSelection(item, groupTitle),\n      label: item.description,\n      items: item.selections,\n      onChange: handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    });\n  };\n\n  const radio = (item, groupTitle) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"r-vw bg-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 41\n    }\n  }, radioItems(item, groupTitle));\n\n  const selectionInterface = (item, groupTitle) => item.type === 'radio' ? radio(item, groupTitle) : selector(item, groupTitle, spot, defaultSelection, handleSelection, selected);\n\n  const groups = () => getItems().map(item => {\n    const headerClasses = 'subHeader color-yellow';\n    const selectorClasses = 'greet p-vw bg-vdkGreen flex3Column';\n    const groupClasses = window.innerWidth < 500 ? \"r-vw\" : \"flexContainer width-100-percent r-vw\";\n    const description = item.description; //console.log(`description: ${JSON.stringify(item,null,2)}`)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: getKey(\"groupConainer\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: getKey(\"groupHeader\"),\n      className: headerClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, item.description), /*#__PURE__*/React.createElement(\"div\", {\n      className: groupClasses,\n      key: getKey(\"groupSubConainer\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, group(item).map(group => /*#__PURE__*/React.createElement(\"div\", {\n      key: getKey(\"selectorContainer\"),\n      className: selectorClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, selectionInterface(group, description)))));\n  });\n\n  const categories = () => {\n    selectorStatus = [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 16\n      }\n    }, groups());\n  };\n\n  const getLogObject = () => log;\n\n  const dateEntry = () => {\n    const logExists = log !== undefined && log !== null && JSON.stringify(log, null, 2) !== \"{}\" ? true : false;\n\n    const stateLogDate = () => getLogObject().Day.Date;\n\n    const getDate = () => logExists === true ? new Date(stateLogDate()) : new Date(date);\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5 subHeader color-yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexContainer width-100-percent bg-vdkGreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      onChange: onDateChange,\n      value: getDate(),\n      className: \"p-vw bg-green flex3Column r-vw m-vw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 27\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    title: title,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, dateEntry(), categories(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, \"Additional Comments: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"10\",\n    cols: window.innerWidth / 15,\n    value: log.Comments.notes,\n    onChange: updateNotes,\n    className: \"mt-10 greet p-10 r-10 brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 28\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    className: \"noUnderline color-black\",\n    to: \"/LogDirectory\",\n    onClick: () => handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleSubmit,\n    className: \"button m-1 greet p-20 r-10 bg-green brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, buttonLabel)), /*#__PURE__*/React.createElement(Link, {\n    className: \"noUnderline color-black\",\n    to: \"/LogDirectory\",\n    onClick: () => handleSave(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button m-1 greet p-20 r-10 bg-yellow brdr-yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, \"save\")), /*#__PURE__*/React.createElement(Link, {\n    className: \"noUnderline color-black\",\n    to: \"/LogDirectory\",\n    onClick: () => handleDelete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button m-1 greet p-20 r-10 bg-red brdr-red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, \"delete\")), /*#__PURE__*/React.createElement(PostDirectory, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default LogEntry;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LogEntryFunctional.js"],"names":["React","useState","Dialog","RadioSelector","DatePicker","getKey","PostDirectory","BrowserRouter","Link","Route","LogId","selector","group","templateData","LogEntry","logId","onChange","getStateLog","title","message","buttonLabel","items","log","setLog","JSON","parse","localStorage","getItem","change","setChange","posts","lastPostId","setLastPostId","getLastItem","selectorStatus","spot","undefined","console","logIdComponent","date","Date","handleSelection","groupTitle","label","selected","updateNotes","event","target","value","handleSubmit","stringify","recordId","generateNewLogId","postDirectory","getDirectory","post","logIt","push","setItem","add","selectorStatusComplete","includes","window","confirm","handleSave","handleDelete","delete","onDateChange","pickerDate","String","day","getDate","month","getMonth","year","getFullYear","getItems","item","defaultSelection","selections","indexOf","description","radioItems","radio","selectionInterface","type","groups","map","headerClasses","selectorClasses","groupClasses","innerWidth","categories","getLogObject","dateEntry","logExists","stateLogDate","Day","Comments","notes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport RadioSelector from '../forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport {BrowserRouter as Link, Route} from 'react-router-dom';\nimport LogId from './LogId.js';\nimport selector from './Selector.js';\nimport group from './Group.js';\nimport templateData from './TemplateData.js';\n\nconst LogEntry = ({ logId, onChange, getStateLog, title, message, buttonLabel, items }) => {\n    const [log, setLog] = useState(JSON.parse(localStorage.getItem(\"ThuApr3020209:19:28PM\")));\n    const [change, setChange] = useState(false);\n\n    const posts = new PostDirectory();\n    const [lastPostId, setLastPostId] = useState((localStorage.getItem(\"lastPostId\") === null) ? posts.getLastItem() : localStorage.getItem(\"lastPostId\"));\n    let selectorStatus = [];\n    const spot = localStorage.getItem('spot');\n    if (logId !== undefined && logId !== \"\" ) {\n        setLastPostId(logId);\n        console.log(`$$ logId1: ${logId}`);\n        setLog((localStorage.getItem(logId) === null) ? templateData : JSON.parse(localStorage.getItem(logId)));\n    } else {\n        setLastPostId(\"ThuApr3020209:19:28PM\");\n        console.log(`logId2: ${lastPostId}`)\n        setLog(JSON.parse(localStorage.getItem(\"ThuApr3020209:19:28PM\")))\n    }    \n    const logIdComponent = new LogId({logId: logId, log: log});\n    const date = useState(new Date());\n    setLastPostId(logId);\n    setChange(false); \n\n    const handleSelection = (groupTitle, label, selected) => {\n        if (typeof groupTitle === \"string\") {\n            log[groupTitle][label] = selected;\n            onChange(groupTitle, label, selected, true);\n            setLog(log);\n            setChange(true);\n        } \n    }\n    const updateNotes = (event) => {\n        handleSelection(\"Comments\", \"notes\", event.target.value);\n    }\n    const handleSubmit = (event) => {\n        //let { log } = this.state;\n        //log = (log !== undefined && JSON.stringify(log, null, 2) !== \"{}\") ? log : this.log;\n        console.log(`handleSubmit: ${JSON.stringify(log, null, 2)}`)\n        const recordId = logIdComponent.generateNewLogId();\n        console.log(`handleSubmit: recordId: ${recordId}`)\n        let postDirectory = posts.getDirectory();\n        let post = \"\";\n        const logIt = () => {\n            postDirectory.push(recordId);\n            postDirectory = JSON.stringify(postDirectory);\n            console.log(`postDirectory: ${postDirectory}`)\n            post = JSON.stringify(log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n            //localStorage.setItem(\"postDirectory\", postDirectory);\n            posts.add(recordId);\n        }\n        const selectorStatusComplete = (selectorStatus.includes(false)) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n        if (selectorStatusComplete) {\n            logIt();\n        }\n    }\n    const handleSave = (event) => {\n        //let { log, lastPostId } = this.state;\n        //log = (log !== undefined && JSON.stringify(log, null, 2) !== \"{}\") ? log : this.log;\n        console.log(`handleSave: ${log}`)\n        const recordId = lastPostId;\n        let post = \"\";\n        const logIt = () => {\n            post = JSON.stringify(log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n        }\n        const selectorStatusComplete = (selectorStatus.includes(false)) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n        if (selectorStatusComplete) {\n            logIt();\n        }\n    }\n    const handleDelete = (event) => {\n        const recordId = lastPostId;\n        posts.delete(recordId);\n    }\n    const onDateChange = (date) => {\n        const pickerDate = date;\n        date = String(date);\n        const day = pickerDate.getDate();\n        const month = pickerDate.getMonth()+1;\n        const year = pickerDate.getFullYear();\n        handleSelection(\"Day\", \"Date\", pickerDate);\n        handleSelection(\"Day\", \"Day\", day);\n        handleSelection(\"Day\", \"Month\", month);\n        handleSelection(\"Day\", \"Year\", year);\n    }\n    const getItems = () => items;\n    const selected = (item, groupTitle) => console.log(`selected =>>>>> item: ${item} groupTitle: ${groupTitle}`);\n    const defaultSelection = (item, groupTitle) => (selected(item, groupTitle)) ? (item.selections.indexOf(log[groupTitle][item.description])) : 0; \n    \n    const radioItems = (item, groupTitle) => {\n        return (\n            <RadioSelector\n                header={groupTitle}\n                groupTitle={groupTitle} \n                selected={defaultSelection(item,groupTitle)} \n                label={item.description} \n                items={item.selections} \n                onChange={handleSelection}\n            />\n        )\n    };\n\n    const radio = (item, groupTitle) => <div className=\"r-vw bg-green\">\n                {radioItems(item, groupTitle)}\n            </div>;\n    \n    const selectionInterface = (item, groupTitle) => (item.type === 'radio') ? radio(item, groupTitle) : selector(item, groupTitle, spot, defaultSelection, handleSelection, selected);\n    const groups = () => getItems().map((item) => {\n        const headerClasses = 'subHeader color-yellow';\n        const selectorClasses = 'greet p-vw bg-vdkGreen flex3Column';\n        const groupClasses = (window.innerWidth < 500) ? \"r-vw\" : \"flexContainer width-100-percent r-vw\";\n        const description = item.description;\n        //console.log(`description: ${JSON.stringify(item,null,2)}`)\n       return <div key={getKey(\"groupConainer\")}>\n                    <div key={getKey(\"groupHeader\")} className={headerClasses}>\n                        {item.description}\n                    </div>\n                    <div className={groupClasses} key={getKey(\"groupSubConainer\")}>\n                        {group(item).map((group) => \n                            <div key={getKey(\"selectorContainer\")} className={selectorClasses}>\n                                {selectionInterface(group, description)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n    });\n    const categories = () => {\n        selectorStatus = [];\n        return <div className='description'>{groups()}</div>;\n    }\n    const getLogObject = () => log;\n    const dateEntry = () => {\n        const logExists = (log !== undefined && log !== null && JSON.stringify(log, null, 2) !== \"{}\") ? true : false;\n        const stateLogDate = () => getLogObject().Day.Date;\n        const getDate = () => (logExists === true) ? new Date(stateLogDate()) : new Date(date);\n        return <React.Fragment>\n                    <div className='mb-5 subHeader color-yellow'>Date</div>\n                    <div className='flexContainer width-100-percent bg-vdkGreen'>\n                        <DatePicker\n                            onChange={onDateChange}\n                            value={getDate()} \n                            className='p-vw bg-green flex3Column r-vw m-vw'\n                        /><br/>\n                    </div>\n                </React.Fragment>\n    }\n    \n    return (\n        <Route>\n            <Dialog title={title} message={message}>\n                <form onSubmit={handleSubmit}>\n                    {dateEntry()}\n                    {categories()}\n                    <br/>\n                    <div className=\"mb-5\">Additional Comments: </div>\n                    <textarea \n                        rows=\"10\" \n                        cols={window.innerWidth/15} \n                        value={log.Comments.notes} \n                        onChange={updateNotes} \n                        className=\"mt-10 greet p-10 r-10 brdr-green\"\n                    /><br/><br/>\n                    <Link className=\"noUnderline color-black\"\n                        to=\"/LogDirectory\"\n                        onClick={() => handleSubmit()}>\n                        <div onClick={handleSubmit} className=\"button m-1 greet p-20 r-10 bg-green brdr-green\">\n                            {buttonLabel}\n                        </div>\n                    </Link> \n                    <Link className=\"noUnderline color-black\"\n                        to=\"/LogDirectory\"\n                        onClick={() => handleSave()}>\n                        <div className=\"button m-1 greet p-20 r-10 bg-yellow brdr-yellow\">\n                            save\n                        </div>\n                    </Link>\n                    <Link className=\"noUnderline color-black\"\n                        to=\"/LogDirectory\"\n                        onClick={() => handleDelete()}>\n                        <div  className=\"button m-1 greet p-20 r-10 bg-red brdr-red\">\n                            delete\n                        </div>\n                    </Link>\n                    <PostDirectory />\n                </form>\n            </Dialog>\n        </Route>\n    );\n}\n\nexport default LogEntry;"]},"metadata":{},"sourceType":"module"}