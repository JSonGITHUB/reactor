{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/shop/SettingsMenu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsMenu = _ref => {\n  _s();\n  let {\n    state,\n    updateAisles,\n    sortName,\n    revert,\n    save,\n    restore,\n    getTotal,\n    setTax,\n    clear\n  } = _ref;\n  const settings = ['Sort by Name', 'Font Size', 'Tax',\n  //'Save', \n  //'Restore',\n  'Export'\n  //'Clear' \n  //'Undo'\n  ];\n\n  const initState = () => {\n    const newState = state;\n    newState.settings = settings;\n    return newState;\n  };\n  const [status, setStatus] = useState(initState());\n  const getSetting = index => {\n    if (status.settings[index] === 'Clear') {\n      clear();\n    } else if (status.settings[index] === 'Sort by Name') {\n      sortName();\n      settings.splice(0, 1, 'Sort by Index');\n    } else if (status.settings[index] === 'Sort by Index') {\n      settings.splice(0, 1, 'Sort by Name');\n      updateAisles();\n    } else if (status.settings[index] === 'Tax') {\n      let newTax = prompt('Enter sales tax', localStorage.getItem('tax'));\n      localStorage.setItem('tax', newTax);\n      setTax();\n    } else if (status.settings[index] === 'Font Size') {\n      const newFontSize = prompt('Enter font size', status.fontSize);\n      localStorage.setItem('fontSize', newFontSize);\n    } else if (status.settings[index] === 'Undo') {\n      revert();\n    } else if (status.settings[index] === 'Save') {\n      save();\n    } else if (status.settings[index] === 'Restore') {\n      restore();\n    } else if (status.settings[index] === 'Export') {\n      console.log(JSON.stringify(status.todos));\n    }\n    state.displaySettings = !state.displaySettings;\n    setStatus(prevState => ({\n      ...prevState,\n      settings: settings,\n      displaySettings: state.displaySettings\n    }));\n  };\n  const settingsMenu = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"settingsMenu\",\n    className: \"bg-dark\",\n    children: status.settings.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingsButton\",\n        onClick: () => getSetting(index),\n        children: status.settings[index]\n      }, getKey(status.settings[index]), false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 26\n  }, this);\n  if (state.displaySettings) {\n    return settingsMenu;\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 12\n  }, this);\n};\n_s(SettingsMenu, \"3VIbGTUMCD7inz9+HCCQDLJhLSI=\");\n_c = SettingsMenu;\nexport default SettingsMenu;\nvar _c;\n$RefreshReg$(_c, \"SettingsMenu\");","map":{"version":3,"names":["React","useState","getKey","jsxDEV","_jsxDEV","SettingsMenu","_ref","_s","state","updateAisles","sortName","revert","save","restore","getTotal","setTax","clear","settings","initState","newState","status","setStatus","getSetting","index","splice","newTax","prompt","localStorage","getItem","setItem","newFontSize","fontSize","console","log","JSON","stringify","todos","displaySettings","prevState","settingsMenu","id","className","children","map","item","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/shop/SettingsMenu.js"],"sourcesContent":["import React, { useState } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\n\nconst SettingsMenu = ({ state, updateAisles, sortName, revert, save, restore, getTotal, setTax, clear }) => {\n\n    const settings = [\n        'Sort by Name',\n        'Font Size',\n        'Tax',\n        //'Save', \n        //'Restore',\n        'Export'\n        //'Clear' \n        //'Undo'\n    ];\n    const initState = () => {\n        const newState = state;\n        newState.settings = settings;\n        return newState;\n    }\n\n    const [status, setStatus] = useState(initState());\n\n    const getSetting = (index) => {\n        if (status.settings[index] === 'Clear') {\n            clear();\n        } else if (status.settings[index] === 'Sort by Name') {\n            sortName();\n            settings.splice(0, 1, 'Sort by Index');\n        } else if (status.settings[index] === 'Sort by Index') {\n            settings.splice(0, 1, 'Sort by Name');\n            updateAisles();\n        } else if (status.settings[index] === 'Tax') {\n            let newTax = prompt('Enter sales tax', localStorage.getItem('tax'));\n            localStorage.setItem('tax', newTax);\n            setTax();\n        } else if (status.settings[index] === 'Font Size') {\n            const newFontSize = prompt('Enter font size', status.fontSize);\n            localStorage.setItem('fontSize', newFontSize);\n        } else if (status.settings[index] === 'Undo') {\n            revert();\n        } else if (status.settings[index] === 'Save') {\n            save();\n        } else if (status.settings[index] === 'Restore') {\n            restore();\n        } else if (status.settings[index] === 'Export') {\n            console.log(JSON.stringify(status.todos));\n        }\n        state.displaySettings = !state.displaySettings\n        setStatus(prevState => ({\n            ...prevState,\n            settings: settings,\n            displaySettings: state.displaySettings\n        }));\n    };\n    const settingsMenu = <div id='settingsMenu' className='bg-dark'>\n            {\n                status.settings.map((item, index) => {\n                    return (\n                        <div \n                            key={getKey(status.settings[index])} \n                            className='settingsButton' \n                            onClick={() => getSetting(index)}\n                        >\n                            { status.settings[index] }\n                        </div>  \n                    )\n                })\n            }\n        </div>\n    \n    if (state.displaySettings) {\n        return settingsMenu\n    }\n    return <React.Fragment></React.Fragment>\n}\n\nexport default SettingsMenu"],"mappings":"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"},"metadata":{},"sourceType":"module"}