{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/LoggerFunctional.js\";\nimport React, { useState, useEffect, forwardRef, useRef, useImperativeHandle } from 'react';\nimport LogEntry from './LogEntryFunctional.js';\nimport Loader from './utils/Loader.js';\nimport LogId from './LogId.js';\nimport interfaceData from './InterfaceData.js';\nimport templateData from './TemplateData.js';\n\nconst Logger = ({\n  logId,\n  location\n}) => {\n  const childRef = useRef();\n  let [logID, setLogID] = useState(logId);\n  const logIdComponent = LogId(logID, childRef);\n  let [log, setLog] = useState(templateData);\n\n  if (localStorage.getItem(logIdComponent.childRef.current.getLogId()) === null) {\n    logID = logIdComponent.childRef.current.generateNewLogId();\n  } else {\n    log = JSON.parse(localStorage.getItem(logIdComponent.childRef.current.getLogId()));\n    logID = logIdComponent.childRef.current.getLogId();\n  }\n\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n\n  const getSpot = () => localStorage.getItem(\"spot\");\n\n  useEffect(() => {\n    const {\n      state\n    } = location;\n    console.log(`LoggerFunctional => componentDidMount -> SPOT: ${getSpot()}`);\n    const logId = state === undefined ? logIdComponent.childRef.current.getLogId() : state.logId.item;\n\n    if (localStorage.getItem(logIdComponent.childRef.current.getLogId()) === null) {\n      log = templateData;\n      logID = logIdComponent.childRef.current.generateNewLogId();\n    } else {\n      log = JSON.parse(localStorage.getItem(logIdComponent.childRef.current.getLogId()));\n      logID = logIdComponent.childRef.current.getLogId();\n    }\n\n    let data = interfaceData;\n\n    const returnJSON = response => response.json();\n\n    const returnRejection = response => Promise.reject({\n      status: response.status,\n      data\n    });\n\n    const validate = response => response.ok ? returnJSON(response) : returnRejection(response);\n\n    const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n    setIsLoaded(true);\n    setItems(data);\n    setLogID(logId);\n  });\n\n  const updateLog = (groupTitle, label, selected, set) => {\n    log[groupTitle][label] = selected;\n\n    if (groupTitle !== undefined && groupTitle !== 1 && selected !== undefined && set) {\n      setLog(log);\n    }\n  };\n\n  const getStateLog = () => log;\n\n  console.log(`LoggerFunctional ===> ${JSON.stringify(items, null, 2)}`);\n  let appInterface = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App-content fadeIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex3Column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex3Column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex3Column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }));\n\n  if (isLoaded) {\n    appInterface = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-content fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LogEntry, {\n      logId: logID,\n      onChange: updateLog,\n      getStateLog: getStateLog,\n      title: \"Session Log\",\n      message: \"Add your session data\",\n      buttonLabel: \"submit\",\n      items: items,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  return appInterface;\n};\n\nexport default Logger;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LoggerFunctional.js"],"names":["React","useState","useEffect","forwardRef","useRef","useImperativeHandle","LogEntry","Loader","LogId","interfaceData","templateData","Logger","logId","location","childRef","logID","setLogID","logIdComponent","log","setLog","localStorage","getItem","current","getLogId","generateNewLogId","JSON","parse","isLoaded","setIsLoaded","items","setItems","getSpot","state","console","undefined","item","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","uri","updateLog","groupTitle","label","selected","set","getStateLog","stringify","appInterface"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, forwardRef, useRef, useImperativeHandle } from 'react';\nimport LogEntry from './LogEntryFunctional.js';\nimport Loader from './utils/Loader.js';\nimport LogId from './LogId.js';\nimport interfaceData from './InterfaceData.js'\nimport templateData from './TemplateData.js'\n\nconst Logger = ({logId, location}) => {\n    const childRef = useRef();\n    let [logID, setLogID] = useState(logId);\n    const logIdComponent = LogId(logID, childRef);\n    let [log, setLog] = useState(templateData);\n    \n    if (localStorage.getItem(logIdComponent.childRef.current.getLogId()) === null) {\n        logID = logIdComponent.childRef.current.generateNewLogId();\n    } else {\n        log = JSON.parse(localStorage.getItem(logIdComponent.childRef.current.getLogId()));\n        logID = logIdComponent.childRef.current.getLogId();\n    }\n\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    const getSpot = () => localStorage.getItem(\"spot\");\n    \n    useEffect(() => {\n        const { state } = location;\n        console.log(`LoggerFunctional => componentDidMount -> SPOT: ${getSpot()}`); \n        const logId = (state === undefined) ? logIdComponent.childRef.current.getLogId() : state.logId.item;\n        if (localStorage.getItem(logIdComponent.childRef.current.getLogId()) === null) {\n            log = templateData;\n            logID = logIdComponent.childRef.current.generateNewLogId();\n        } else {\n            log = JSON.parse(localStorage.getItem(logIdComponent.childRef.current.getLogId()));\n            logID = logIdComponent.childRef.current.getLogId()\n        }\n        let data = interfaceData;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n       setIsLoaded(true);\n        setItems(data);\n        setLogID(logId);\n    })\n\n    const updateLog = (groupTitle, label, selected, set) => {\n        log[groupTitle][label] = selected;\n        if (groupTitle !== undefined && groupTitle !== 1 && selected !== undefined && set) {\n            setLog(log);\n        }\n    }\n    const getStateLog = () => log;\n          \n    console.log(`LoggerFunctional ===> ${JSON.stringify(items, null, 2)}`);\n    let appInterface = <div className=\"App-content fadeIn\">\n                            <div className=\"flex3Column\"></div>\n                            <div className=\"flex3Column\">\n                                <Loader />\n                            </div>\n                            <div className=\"flex3Column\"></div>\n                        </div>;\n    if (isLoaded) {\n        appInterface = <div className=\"App-content fadeIn\">\n            <div className=\"flex3Column\"></div>\n            <div className=\"flex3Column\">\n                <LogEntry\n                    logId={logID}\n                    onChange={updateLog} \n                    getStateLog={getStateLog} \n                    title=\"Session Log\" \n                    message=\"Add your session data\"  \n                    buttonLabel=\"submit\" \n                    items={items}\n                />\n            </div>\n            <div className=\"flex3Column\"></div>\n        </div>\n        \n    }\n    return (\n        appInterface            \n    )\n    \n}\nexport default Logger;"]},"metadata":{},"sourceType":"module"}