{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreKeeper = () => {\n  _s();\n  const surfScoring = ['', '', '', '', '', '', '', '', '', ''];\n  const initPlayers = [{\n    name: 'You',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: ['', '', '', '', '', '', '', '', '', ''],\n    surfJerseyColor: 0,\n    surfPriority: 0,\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }, {\n    name: 'Me',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: ['', '', '', '', '', '', '', '', '', ''],\n    surfJerseyColor: 0,\n    surfPriority: 0,\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }];\n  const initNewPlayer = name => {\n    const newPlayer = {\n      name: name,\n      score: 0,\n      dominoScore: 0,\n      golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      surfScores: ['', '', '', '', '', '', '', '', '', ''],\n      surfJerseyColor: 0,\n      surfPriority: 0,\n      cricketScores: [0, 0, 0, 0, 0, 0, 0]\n    };\n    return newPlayer;\n  };\n  const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n  const winners = [5, 10, 11, 15, 20, 21];\n  const dominoWinners = [50, 100, 150, 200];\n  const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n  const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || []);\n  const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n  const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n  const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n  const [heatLength, setHeatLength] = useState(60 * 60);\n  const [waveCount, setWaveCount] = useState(['', '', '', '', '', '', '', '', '', '']);\n  const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || []);\n  const darts = game !== 'darts' ? false : true;\n  const dominos = game !== 'dominos' ? false : true;\n  const surf = game !== 'surf' ? false : true;\n  const golf = game !== 'golf' ? false : true;\n  const cricketKey = (player, index) => `${player.player || player.name}Cricket${index}`;\n  const golfKey = (player, index) => `${player.player || player.name}Golf${index}`;\n  const surfKey = (player, index) => `${player.player || player.name}Surf${index}`;\n  const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n  const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n  const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n  const dominoScoring = [50, 100, 150, 200];\n  const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n  const [surferData, setSurferData] = useState([]);\n  const [editIndex, setEditIndex] = useState();\n  const [showButtons, setShowButtons] = useState(false);\n  const getScoreTotal = index => {\n    const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n    const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n    const score = highestScore + secondHighestScore;\n    console.log(`getScore => player: ${index} score: ${score}`);\n    return score;\n  };\n  const findTwoHighestIndices = scores => {\n    const newScores = scores !== undefined ? scores : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    let highestIndex = -1;\n    let secondHighestIndex = -1;\n    let highestScore = -Infinity;\n    let secondHighestScore = -Infinity;\n    for (let i = 0; i < newScores.length; i++) {\n      if (newScores[i] > highestScore) {\n        secondHighestIndex = highestIndex;\n        secondHighestScore = highestScore;\n        highestIndex = i;\n        highestScore = newScores[i];\n      } else if (newScores[i] > secondHighestScore) {\n        secondHighestIndex = i;\n        secondHighestScore = newScores[i];\n      }\n    }\n    return [highestIndex, secondHighestIndex];\n  };\n  const getTwoHighestScores = playerIndex => {\n    const player = players[playerIndex];\n    const scores = player.surfScores;\n    const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n    //console.log(`getTwoHighestScores => playerIndex: ${playerIndex} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n    return {\n      highScoreIndex: highestIndex,\n      secondHighScoreIndex: secondHighestIndex\n    };\n  };\n  const floatDecimalOneDigit = number => {\n    if (Number.isInteger(number) && number >= 10 && number <= 99) {\n      return `${number / 10}.00`;\n    } else {\n      return `${number}.00`;\n    }\n  };\n  const highestScore = (playerIndex, playersArray) => {\n    //console.log(`highestScore = (playerIndex: ${playerIndex}, playersArray: ${JSON.stringify(playersArray, null, 2)})`)\n    return playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).highScoreIndex];\n  };\n  const secondHighestScore = (playerIndex, playersArray) => playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).secondHighScoreIndex];\n  const scoreTotal = (playerIndex, playersArray) => Number(highestScore(playerIndex, playersArray) + secondHighestScore(playerIndex, playersArray)).toFixed(2);\n  const getSurfScore = index => {\n    const newPlayers = [...players];\n    const surfScore = scoreTotal(index, newPlayers);\n    newPlayers[index].score = surfScore;\n    newPlayers[index].surfScore = surfScore;\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    return surfScore;\n  };\n  useEffect(() => {\n    if (JSON.stringify(players, null, 2) !== '[]') {\n      const surfersScores = [];\n      localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n      localStorage.setItem('players', JSON.stringify(players));\n    }\n  }, [players]);\n  useEffect(() => {\n    const surfersScores = [];\n    localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n    localStorage.setItem('players', JSON.stringify(players));\n  }, [players]);\n  useEffect(() => {\n    localStorage.setItem('golfPars', JSON.stringify(golfPars));\n  }, [golfPars]);\n  useEffect(() => {\n    if (!localStorage.getItem('players') || localStorage.getItem('players') === '[]') {\n      //const playersValue = localStorage.getItem('players');\n      //alert(`localStorage.players: ${playersValue}`)\n      //alert('Length:', playersValue.length);\n      newPlayer();\n    }\n    const newPlayers = [...players];\n    if (!players[0].cricketScores || !players[1].cricketScores) {\n      if (!players[0].cricketScores) {\n        newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n        newPlayers[0].dartsScore = 0;\n      }\n      if (!players[1].cricketScores) {\n        newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n        newPlayers[1].dartsScore = 0;\n      }\n    }\n    const initGolfStats = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n    if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n      newPlayers[0].golfPutts = golfScoring;\n      newPlayers[0].golfFW = initGolfStats;\n      newPlayers[0].golfGIR = initGolfStats;\n    }\n    if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n      newPlayers[1].golfPutts = golfScoring;\n      newPlayers[1].golfFW = initGolfStats;\n      newPlayers[1].golfGIR = initGolfStats;\n    }\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  }, []);\n  const setGameInProgress = playerIndex => {\n    if (playerIndex > 0) {\n      if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n        localStorage.setItem('gameStatus', 'inProgress');\n      }\n    }\n    localStorage.setItem(`player${playerIndex}`, 'loser');\n    return false;\n  };\n  const isWinner = playerIndex => getDartTotal(players[playerIndex]) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n  const playerScores = [{\n    name: 'Player 1',\n    scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88]\n  }, {\n    name: 'Player 2',\n    scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81]\n  }, {\n    name: 'Player 3',\n    scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89]\n  }];\n  const setGameOver = playerIndex => {\n    localStorage.setItem('gameStatus', 'gameOver');\n    localStorage.setItem(`player${playerIndex}`, 'winner');\n    return true;\n  };\n  if (darts && winner !== 21) {\n    localStorage.setItem('winner', 21);\n    setWinner(Number(localStorage.getItem('winner')));\n  }\n  const getDartTotal = player => {\n    const cricketScores = String(player.cricketScores).split(',');\n    let total = 0;\n    const addToTotal = value => total = total + value;\n    cricketScores.map((score, index) => addToTotal(Number(score)));\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const getGolfTotal = player => {\n    if (!golf) return;\n    let total = 0;\n    const newPlayers = JSON.parse(localStorage.getItem('players'));\n    const addToTotal = value => total = total + Number(value);\n    newPlayers.map(player => {\n      player.golfScores.map(score => addToTotal(score));\n      player.golfScore = total;\n    });\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    return total;\n  };\n  const getDominoTotal = index => {\n    const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n    const total = newScores[index];\n    console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`);\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const updateScores = () => {\n    const newPlayers = JSON.parse(localStorage.getItem('players'));\n    setPlayers(newPlayers);\n  };\n  const set21 = () => {\n    if (darts) {\n      localStorage.setItem('winner', 21);\n      setWinner(Number(localStorage.getItem('winner')));\n    }\n  };\n  const selectGame = (groupTitle, label, selected) => {\n    localStorage.setItem('game', selected);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setGame(localStorage.getItem('game'));\n    set21();\n  };\n  const selectWinner = (groupTitle, label, selected) => {\n    localStorage.setItem('winner', selected);\n    setWinner(Number(localStorage.getItem('winner')));\n  };\n  const clear = event => {\n    //alert('Note was cleared: ' + event.value);\n    localStorage.setItem('players', JSON.stringify(initPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const getSurfTotal = (player, index) => {\n    let total = 0;\n    const score = index => player.surfScores[index];\n    const addToTotal = value => total = total + value;\n    surfScoring.map((target, index) => {\n      console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`);\n      addToTotal(Number(score(index)));\n    });\n    return total;\n  };\n  const reset = event => {\n    let newPlayers = JSON.parse(localStorage.getItem('players'));\n    const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n    const id = (player, index) => {\n      if (darts) {\n        return cricketKey(player, index);\n      } else if (dominos) {\n        return getDominoKey(player, index);\n      } else if (golf) {\n        return golfKey(player, index);\n      } else if (surf) {\n        return surfKey(player, index);\n      }\n      return player.player || player.name;\n    };\n    const initValue = 0;\n    if (darts) {\n      newPlayers.map(player => {\n        player.dartsScore = 0;\n        player.cricketScores = [0, 0, 0, 0, 0, 0, 0];\n      });\n    } else if (golf) {\n      newPlayers.map(player => {\n        player.golfScore = 0;\n        player.golfScores = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n        player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n        player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      });\n    } else if (dominos) {\n      newPlayers[0].dominoScore = 0;\n      newPlayers[1].dominoScore = 0;\n    } else if (surf) {\n      newPlayers.map((player, index) => {\n        player.surfScores = surfScoring;\n        player.surfScore = 0;\n        player.surfPriority = 0;\n      });\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n      newPlayers = [...sortedPlayers];\n    } else {\n      newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n    }\n    localStorage.setItem('gameStatus', 'inProgress');\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n    getScore();\n  };\n  const newPlayer = () => {\n    const newPlayer = prompt('Enter new name', '');\n    const initializedNewPlayer = initNewPlayer(newPlayer);\n    let newPlayers = [...players];\n    if (newPlayer !== null) {\n      newPlayers.push(initializedNewPlayer);\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n  };\n  const addPlayer = event => {\n    newPlayer();\n  };\n  const editPlayer = index => {\n    const newPlayer = prompt('Enter new name', players[index]);\n    if (newPlayer !== null) {\n      let newPlayers = [...players];\n      newPlayers[index] = newPlayer;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n      getScore();\n    }\n  };\n  const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n  const deletePlayer = index => {\n    console.log(`deletePlayer => ${index}`);\n    const newPlayers = [...players].slice();\n    newPlayers.splice(index, 1);\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const getSurferIndexWithPriority = priorityIndex => {\n    for (let i = 0; i < players.length; i++) {\n      if (Number(players[i].surfPriority) === priorityIndex) {\n        return i;\n      }\n    }\n    return null;\n  };\n  const losePriority = () => {\n    const newPlayers = [...players];\n    newPlayers.map((player, index) => {\n      if (player.surfPriority === 1) {\n        player.surfPriority = newPlayers.length;\n      } else {\n        const shift = player.surfPriority - 1;\n        player.surfPriority = shift > 0 ? shift : newPlayers.length;\n      }\n    });\n    localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n    setPlayers(newPlayers);\n  };\n  const shiftPriority = priorityIndex => {\n    const newPlayers = [...players];\n    newPlayers.map((player, index) => {\n      if (player.surfPriority === priorityIndex - 1) {\n        player.surfPriority = priorityIndex;\n      } else if (player.surfPriority === priorityIndex) {\n        player.surfPriority = priorityIndex - 1;\n      }\n    });\n    localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n    setPlayers(newPlayers);\n  };\n  const scorecards = () => {\n    const scorecard = (playerIndex, scoreIndex, score) => {\n      const player = players[playerIndex];\n      if (darts) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`);\n        return /*#__PURE__*/_jsxDEV(CricketScore, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateScores: updateScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 24\n        }, this);\n      }\n      if (dominos) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(Dominos, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          scoreTotal: player.dominoScore || 0,\n          treeTotal: score,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          getDominoTotal: getDominoTotal,\n          updateScores: updateScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 24\n        }, this);\n      }\n      if (golf) {\n        console.log(`${game} - scorecard => player:${player.player || player.name}`);\n        console.log(`scoreIndex: ${scoreIndex}`);\n        console.log(`score: ${player.golfScores[scoreIndex]}`);\n        console.log(`scorecards => par: ${score}`);\n        return /*#__PURE__*/_jsxDEV(ScoreCard, {\n          game: game,\n          players: players,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateScores: updateScores,\n          winner: golfPars[scoreIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 24\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(ScoreCard, {\n        game: game,\n        players: players,\n        playerIndex: playerIndex,\n        scoreIndex: scoreIndex,\n        editPlayer: editPlayer,\n        deletePlayer: deletePlayer,\n        updateScores: updateScores,\n        winner: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 20\n      }, this);\n    };\n    const rankStatus = (player, index, score) => {\n      const scoreDifference = Number(players[index === 0 ? 0 : index - 1].surfScore - players[index === 0 ? 1 : index].surfScore);\n      const difference = scoreDifference < 0 ? -1 * scoreDifference : scoreDifference;\n      const winningScore = Number(players[index === 0 ? 0 : index < 3 ? index - 1 : 1].surfScore);\n      const highestScoresIndices = findTwoHighestIndices(players[index].surfScores);\n      const losersHeighestScore = players[index].surfScores[highestScoresIndices[0]];\n      const need = winningScore - losersHeighestScore + .01;\n      const winsBy = `Wins by ${difference.toFixed(2)}`;\n      const needs = `Needs ${need.toFixed(2)}`;\n      if (index === 0) {\n        return winsBy;\n      }\n      return needs;\n    };\n    const setSurfScore = (playerId, index, score) => {\n      const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n      const newPlayers = [...players];\n      const currentScore = newPlayers[playerId].surfScores[index];\n      const edit = currentScore !== '' && currentScore !== 0 ? false : true;\n      newPlayers[playerId].surfScores[index] = Number(newScore);\n      newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n      if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n        newPlayers.map((player, index) => {\n          if (index === playerId) {\n            player.surfPriority = players.length;\n          } else if (player.surfPriority != 0) {\n            player.surfPriority = player.surfPriority - 1;\n          }\n        });\n      }\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n      console.log('setSurfScore => sortedPlayers: ', sortedPlayers);\n      localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n      setPlayers(sortedPlayers);\n    };\n    const surfScoresDisplay = () => surfScoring.map((wave, index) => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer width-100-percent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3Column p-5\",\n          children: scorecard(players[0], 0, index, players[0].surfScores[index])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 r-5 font50 color-yellow m-auto\",\n          children: wave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3Column p-5\",\n          children: scorecard(players[1], 1, index, players[1].surfScores[index])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 17\n        }, this)]\n      }, getKey(`wave${wave}`), true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 13\n      }, this);\n    });\n    const getWave = (playerId, index, score) => {\n      const player = players[playerId];\n      const theScore = player.surfScores[index];\n      const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n      const highestId = highestScores[0];\n      const secondHighestId = highestScores[1];\n      const firstScore = index === highestId ? true : false;\n      const secondScore = index === secondHighestId ? true : false;\n      const getClasses = firstScore || secondScore ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n      const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column r-10\",\n        onClick: () => setSurfScore(playerId, index, score),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"size30 bold color-yellow bg-dkYellow w-100 p-10\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ht-40 ${getClasses}`,\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 17\n        }, this)]\n      }, getKey(`wave${playerId}${index}${score}`), true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 26\n      }, this);\n      return wave;\n    };\n    const get2ndHighestScore = playerId => {\n      const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n      const secondHighestId = highestScores[1];\n      return players[playerId].surfScores[secondHighestId];\n    };\n    const isTieScore = (playerIndex, score) => {\n      if (playerIndex !== 0) {\n        if (score === scoreTotal(playerIndex - 1, players)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const jerseyColors = ['white', 'yellow', 'neogreen', 'black', 'blue', 'orange', 'pink', 'red'];\n    const rank = ['st', 'nd', 'rd', 'th'];\n    const selectJersey = index => {\n      const newPlayers = [...players];\n      newPlayers[index].surfJerseyColor = Number(newPlayers[index].surfJerseyColor) + 1;\n      newPlayers[index].surfJerseyColor = newPlayers[index].surfJerseyColor > jerseyColors.length - 1 ? 0 : newPlayers[index].surfJerseyColor;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      setPlayers(newPlayers);\n    };\n    const handleTouchStart = index => {\n      console.log(`handleTouchStart`);\n      setTimer(setTimeout(() => {\n        setEditIndex(index);\n        setShowButtons(true);\n      }, 1000));\n    };\n    const handleTouchEnd = () => {\n      clearTimeout(timer);\n    };\n    const editSurfer = index => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Jersey:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 39\n    }, this);\n    const surfingScores = (player, index, score) => {\n      if (surf) {\n        const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex2Column contentLeft r-10-lft m-0 w-75 p-10`,\n              onTouchStart: handleTouchStart(index),\n              onTouchEnd: handleTouchEnd,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"size25 mt--10\",\n                  children: isTieScore(index, score) && index !== 0 ? index : index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"size15 mt--10\",\n                  children: rank[isTieScore(index, score) && index !== 0 ? index : index > 2 ? 3 : index]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"size30 mt-5 mb-5\",\n                children: (player.player || player.name).split(' ')[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"size20\",\n                children: (player.player || player.name).split(' ')[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"size40 bold\",\n                children: score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-10 bold\",\n                children: rankStatus(player, index, score)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 25\n            }, this)]\n          }, getKey(`${index}${player.player || player.name}`), true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: editIndex === index && showButtons ? editSurfer(index) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-scroll color-white copyright ml-10 mr-10 mt-5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"container mt-10\",\n                  children: players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 21\n          }, this)]\n        }, getKey(`${score}${index}${player.player || player.name}`), true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 38\n        }, this);\n        return surferScores;\n      }\n      return;\n    };\n    const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n    const dartScores = () => dartScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(0, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(1, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 68\n    }, this));\n    const editGolfPar = hole => {\n      const newPars = [...golfPars];\n      const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n      newPars[hole] = newPar;\n      setGolfPars(newPars);\n    };\n    const golfScores = () => golfScoring.map((hole, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentCenter bg-dark r-10 m-5 mt-35\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"copyright greet color-yellow\",\n            children: \"Hole:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size40 bold pt-5 pl-15 pr-15 bg-dark r-10\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"copyright greet color-yellow\",\n            children: \"Par:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size20 bold color-lite mt--5\",\n            children: golfPars[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex2Column p-5\",\n            children: scorecard(0, index, golfPars[index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex2Column p-5\",\n            children: scorecard(1, index, golfPars[index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 13\n      }, this)\n    }, getKey(hole), false, {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 67\n    }, this));\n    const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n    const dominoScores = () => dominoScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent contentCenter p-5\",\n        children: scorecard(0, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"r-5 font50 color-yellow m-auto w-100\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent contentCenter p-5\",\n        children: scorecard(1, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 72\n    }, this));\n    const isDominoWinner = playerIndex => getDominoTotal(playerIndex) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const dartClass = playerIndex => 'color-yellow flex3Column p-20 size25 bold' + (isWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dominoClass = playerIndex => 'color-yellow flex3Column p-20 size25 bold' + (isDominoWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dartScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDartTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDartTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 13\n      }, this), dartScores()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 38\n    }, this);\n    const golfScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy m-5 mb-20 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: players[0].golfScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10  size40 white\",\n            children: players[1].golfScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollHeight500\",\n        children: golfScores()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 38\n    }, this);\n    const dominoScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDominoTotal(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDominoTotal(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 13\n      }, this), dominoScores()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 40\n    }, this);\n    if (darts) return dartScoreboard();\n    if (dominos) return dominoScoreboard();\n    if (golf) return golfScoreboard();\n    //if (surf) return surfScoreboard\n    if (surf) return surfingScoreboard();else return renderedItems();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fadeIn mt--30\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-10\",\n      children: [/*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"game\",\n        label: \"item.description\",\n        items: games,\n        selected: game,\n        onChange: selectGame,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: darts || dominos ? '98%' : '65%'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 17\n      }, this), darts || golf ? /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Selector, {\n        className: \"fl-left\",\n        groupTitle: \"winner\",\n        label: \"i.description\",\n        items: dominos ? dominoWinners : surf ? heatLengths : winners,\n        selected: winner,\n        onChange: selectWinner,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: \"30%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 27\n      }, this), surf ? /*#__PURE__*/_jsxDEV(SurfScores, {\n        players: players,\n        heatLength: heatLength,\n        isWinner: isWinner,\n        getSurferIndexWithPriority: getSurferIndexWithPriority,\n        shiftPriority: shiftPriority,\n        losePriority: losePriority\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrollHeight450\",\n      children: scorecards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow\",\n          onClick: () => addPlayer(),\n          children: \"add player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black\",\n          onClick: () => reset(),\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow\",\n          onClick: () => clear(),\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 743,\n    columnNumber: 9\n  }, this);\n};\n_s(ScoreKeeper, \"EkogZM5QjfgKtAdoP5tEjLG7wQY=\");\n_c = ScoreKeeper;\nexport default ScoreKeeper;\nvar _c;\n$RefreshReg$(_c, \"ScoreKeeper\");","map":{"version":3,"names":["React","useState","useEffect","ScoreCard","CricketScore","Dominos","SurfScores","Selector","getKey","jsxDEV","_jsxDEV","ScoreKeeper","_s","surfScoring","initPlayers","name","score","dominoScore","golfScores","golfGIR","golfFW","golfPutts","surfScores","surfJerseyColor","surfPriority","cricketScores","initNewPlayer","newPlayer","games","winners","dominoWinners","heatLengths","players","setPlayers","JSON","parse","localStorage","getItem","game","setGame","initScores","winner","setWinner","Number","heatLength","setHeatLength","waveCount","setWaveCount","surfersScores","setSurfersScores","darts","dominos","surf","golf","cricketKey","player","index","golfKey","surfKey","parsDefault","dartScoring","golfScoring","golfPars","setGolfPars","dominoScoring","gameStatus","setGameStatus","surferData","setSurferData","editIndex","setEditIndex","showButtons","setShowButtons","getScoreTotal","highestScore","getTwoHighestScores","highScoreIndex","secondHighestScore","secondHighScoreIndex","console","log","findTwoHighestIndices","scores","newScores","undefined","highestIndex","secondHighestIndex","Infinity","i","length","playerIndex","floatDecimalOneDigit","number","isInteger","playersArray","scoreTotal","toFixed","getSurfScore","newPlayers","surfScore","setItem","stringify","dartsScore","initGolfStats","setGameInProgress","isWinner","getDartTotal","setGameOver","playerScores","String","split","total","addToTotal","value","map","getGolfTotal","golfScore","getDominoTotal","updateScores","set21","selectGame","groupTitle","label","selected","selectWinner","clear","event","getSurfTotal","target","reset","getDominoKey","id","initValue","sortedPlayers","sort","a","b","getScore","prompt","initializedNewPlayer","push","addPlayer","editPlayer","window","location","pathname","deletePlayer","slice","splice","getSurferIndexWithPriority","priorityIndex","losePriority","shift","shiftPriority","scorecards","scorecard","scoreIndex","fileName","_jsxFileName","lineNumber","columnNumber","treeTotal","rankStatus","scoreDifference","difference","winningScore","highestScoresIndices","losersHeighestScore","need","winsBy","needs","setSurfScore","playerId","newScore","currentScore","edit","surfScoresDisplay","wave","className","children","getWave","theScore","highestScores","highestId","secondHighestId","firstScore","secondScore","getClasses","onClick","get2ndHighestScore","isTieScore","jerseyColors","rank","selectJersey","handleTouchStart","setTimer","setTimeout","handleTouchEnd","clearTimeout","timer","editSurfer","surfingScores","surferScores","onTouchStart","onTouchEnd","renderedItems","dartScores","editGolfPar","hole","newPars","newPar","surfingScoreboard","dominoScores","isDominoWinner","dartClass","dominoClass","dartScoreboard","Fragment","golfScoreboard","dominoScoreboard","items","onChange","fontSize","padding","width","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\n\nconst ScoreKeeper = () => {\n\n    const surfScoring = ['', '', '', '', '', '', '', '', '', ''];\n    const initPlayers = [\n        {\n            name: 'You',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        },\n        {\n            name: 'Me',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n    ];\n    const initNewPlayer = (name) => {\n        const newPlayer = {\n            name: name,\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n        return newPlayer;\n    };\n    const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n    const winners = [5, 10, 11, 15, 20, 21];\n    const dominoWinners = [50, 100, 150, 200];\n    const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || []);\n    const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n    const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n    const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n    const [heatLength, setHeatLength] = useState(60 * 60);\n    const [waveCount, setWaveCount] = useState(['', '', '', '', '', '', '', '', '', '']);\n    const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n    const darts = (game !== 'darts') ? false : true;\n    const dominos = (game !== 'dominos') ? false : true;\n    const surf = (game !== 'surf') ? false : true;\n    const golf = (game !== 'golf') ? false : true;\n    const cricketKey = (player, index) => `${(player.player || player.name)}Cricket${index}`;\n    const golfKey = (player, index) => `${(player.player || player.name)}Golf${index}`;\n    const surfKey = (player, index) => `${(player.player || player.name)}Surf${index}`;\n    const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n    const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n    const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n    const dominoScoring = [50, 100, 150, 200];\n    const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n    const [surferData, setSurferData] = useState([]);\n    const [editIndex, setEditIndex] = useState();\n    const [showButtons, setShowButtons] = useState(false);\n\n    const getScoreTotal = (index) => {\n        const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n        const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n        const score = (highestScore + secondHighestScore);\n        console.log(`getScore => player: ${index} score: ${score}`);\n        return score;\n    }\n\n    const findTwoHighestIndices = (scores) => {\n        const newScores = (scores !== undefined) ? scores : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        let highestIndex = -1;\n        let secondHighestIndex = -1;\n        let highestScore = -Infinity;\n        let secondHighestScore = -Infinity;\n        for (let i = 0; i < newScores.length; i++) {\n            if (newScores[i] > highestScore) {\n                secondHighestIndex = highestIndex;\n                secondHighestScore = highestScore;\n                highestIndex = i;\n                highestScore = newScores[i];\n            } else if (newScores[i] > secondHighestScore) {\n                secondHighestIndex = i;\n                secondHighestScore = newScores[i];\n            }\n        }\n        return [highestIndex, secondHighestIndex];\n    };\n\n    const getTwoHighestScores = (playerIndex) => {\n        const player = players[playerIndex];\n        const scores = player.surfScores;\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n        //console.log(`getTwoHighestScores => playerIndex: ${playerIndex} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            highScoreIndex: highestIndex,\n            secondHighScoreIndex: secondHighestIndex\n        };\n    };\n\n\n    const floatDecimalOneDigit = (number) => {\n        if (Number.isInteger(number) && number >= 10 && number <= 99) {\n            return `${number / 10}.00`;\n        } else {\n            return `${number}.00`;\n        }\n    };\n    const highestScore = (playerIndex, playersArray) => {\n        //console.log(`highestScore = (playerIndex: ${playerIndex}, playersArray: ${JSON.stringify(playersArray, null, 2)})`)\n        return playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).highScoreIndex];\n    }\n    const secondHighestScore = (playerIndex, playersArray) => playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).secondHighScoreIndex];\n    const scoreTotal = (playerIndex, playersArray) => Number(highestScore(playerIndex, playersArray) + secondHighestScore(playerIndex, playersArray)).toFixed(2);\n\n    const getSurfScore = (index) => {\n        const newPlayers = [...players];\n        const surfScore = scoreTotal(index, newPlayers);\n\n        newPlayers[index].score = surfScore;\n        newPlayers[index].surfScore = surfScore;\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        return surfScore;\n    };\n    useEffect(() => {\n        if (JSON.stringify(players, null, 2) !== '[]') {\n            const surfersScores = [];\n            localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n            localStorage.setItem('players', JSON.stringify(players));\n        }\n    }, [players]);\n\n\n    useEffect(() => {\n        const surfersScores = [];\n        localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n        localStorage.setItem('players', JSON.stringify(players));\n    }, [players]);\n\n    useEffect(() => {\n        localStorage.setItem('golfPars', JSON.stringify(golfPars));\n    }, [golfPars]);\n\n    useEffect(() => {\n        if (!localStorage.getItem('players') || (localStorage.getItem('players') === '[]')) {\n            //const playersValue = localStorage.getItem('players');\n            //alert(`localStorage.players: ${playersValue}`)\n            //alert('Length:', playersValue.length);\n            newPlayer();\n        }\n        const newPlayers = [...players];\n        if (!players[0].cricketScores || !players[1].cricketScores) {\n            if (!players[0].cricketScores) {\n                newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[0].dartsScore = 0;\n            }\n            if (!players[1].cricketScores) {\n                newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[1].dartsScore = 0;\n            }\n        }\n        const initGolfStats = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n        if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n            newPlayers[0].golfPutts = golfScoring;\n            newPlayers[0].golfFW = initGolfStats;\n            newPlayers[0].golfGIR = initGolfStats;\n        }\n        if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n            newPlayers[1].golfPutts = golfScoring;\n            newPlayers[1].golfFW = initGolfStats;\n            newPlayers[1].golfGIR = initGolfStats;\n        }\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }, []);\n\n    const setGameInProgress = (playerIndex) => {\n        if (playerIndex > 0) {\n            if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n                localStorage.setItem('gameStatus', 'inProgress')\n            }\n        }\n        localStorage.setItem(`player${playerIndex}`, 'loser');\n        return false;\n    }\n    const isWinner = (playerIndex) => (getDartTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const playerScores = [\n        { name: 'Player 1', scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88] },\n        { name: 'Player 2', scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81] },\n        { name: 'Player 3', scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89] },\n    ];\n    const setGameOver = (playerIndex) => {\n        localStorage.setItem('gameStatus', 'gameOver');\n        localStorage.setItem(`player${playerIndex}`, 'winner');\n        return true;\n    }\n\n    if (darts && winner !== 21) {\n        localStorage.setItem('winner', 21);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const getDartTotal = (player) => {\n        const cricketScores = String(player.cricketScores).split(',');\n        let total = 0;\n        const addToTotal = (value) => total = total + value;\n        cricketScores.map((score, index) => addToTotal(Number(score)));\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const getGolfTotal = (player) => {\n        if (!golf) return;\n        let total = 0;\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        const addToTotal = (value) => total = total + Number(value);\n        newPlayers.map((player) => {\n            player.golfScores.map((score) => addToTotal(score))\n            player.golfScore = total;\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        return total;\n    }\n    const getDominoTotal = (index) => {\n        const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n        const total = newScores[index];\n        console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n\n    const updateScores = () => {\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        setPlayers(newPlayers);\n    }\n    const set21 = () => {\n        if (darts) {\n            localStorage.setItem('winner', 21);\n            setWinner(Number(localStorage.getItem('winner')));\n        }\n    }\n    const selectGame = (groupTitle, label, selected) => {\n        localStorage.setItem('game', selected)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setGame(localStorage.getItem('game'));\n        set21();\n    }\n    const selectWinner = (groupTitle, label, selected) => {\n        localStorage.setItem('winner', selected)\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const clear = (event) => {\n        //alert('Note was cleared: ' + event.value);\n        localStorage.setItem('players', JSON.stringify(initPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n\n    const getSurfTotal = (player, index) => {\n        let total = 0;\n        const score = (index) => player.surfScores[index];\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n            console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        return total;\n    }\n\n    const reset = (event) => {\n        let newPlayers = JSON.parse(localStorage.getItem('players'));\n        const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n\n        const id = (player, index) => {\n            if (darts) {\n                return cricketKey(player, index);\n            } else if (dominos) {\n                return getDominoKey(player, index);\n            } else if (golf) {\n                return golfKey(player, index);\n            } else if (surf) {\n                return surfKey(player, index);\n            }\n            return (player.player || player.name);\n        }\n\n        const initValue = 0;\n        if (darts) {\n            newPlayers.map((player) => {\n                player.dartsScore = 0;\n                player.cricketScores = [0, 0, 0, 0, 0, 0, 0];\n            });\n        } else if (golf) {\n            newPlayers.map((player) => {\n                player.golfScore = 0;\n                player.golfScores = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n                player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            });\n        } else if (dominos) {\n            newPlayers[0].dominoScore = 0;\n            newPlayers[1].dominoScore = 0;\n        } else if (surf) {\n            newPlayers.map((player, index) => {\n                player.surfScores = surfScoring;\n                player.surfScore = 0;\n                player.surfPriority = 0;\n            });\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n            newPlayers = [...sortedPlayers];\n        } else {\n            newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n        }\n        localStorage.setItem('gameStatus', 'inProgress');\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        getScore();\n    }\n    const newPlayer = () => {\n        const newPlayer = prompt('Enter new name', '');\n        const initializedNewPlayer = initNewPlayer(newPlayer);\n        let newPlayers = [...players];\n        if (newPlayer !== null) {\n            newPlayers.push(initializedNewPlayer);\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n    }\n    const addPlayer = (event) => {\n        newPlayer();\n    }\n    const editPlayer = (index) => {\n        const newPlayer = prompt('Enter new name', players[index]);\n        if (newPlayer !== null) {\n            let newPlayers = [...players];\n            newPlayers[index] = newPlayer;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n            getScore();\n        }\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n\n    const deletePlayer = (index) => {\n        console.log(`deletePlayer => ${index}`)\n        const newPlayers = [...players].slice();\n        newPlayers.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    };\n    const getSurferIndexWithPriority = (priorityIndex) => {\n        for (let i = 0; i < players.length; i++) {\n            if (Number(players[i].surfPriority) === priorityIndex) {\n                return i;\n            }\n        }\n        return null;\n    }\n    const losePriority = () => {\n        const newPlayers = [...players];\n        newPlayers.map((player, index) => {\n            if (player.surfPriority === 1) {\n                player.surfPriority = newPlayers.length;\n            } else {\n                const shift = player.surfPriority - 1;\n                player.surfPriority = (shift > 0) ? shift : newPlayers.length;\n            }\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n        setPlayers(newPlayers);\n    }\n    const shiftPriority = (priorityIndex) => {\n        const newPlayers = [...players];\n        newPlayers.map((player, index) => {\n            if (player.surfPriority === (priorityIndex - 1)) {\n                player.surfPriority = priorityIndex;\n            } else if (player.surfPriority === priorityIndex) {\n                player.surfPriority = (priorityIndex - 1);\n            }\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n        setPlayers(newPlayers);\n    }\n\n    const scorecards = () => {\n        const scorecard = (playerIndex, scoreIndex, score) => {\n            const player = players[playerIndex];\n            if (darts) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`)\n                return <CricketScore\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (dominos) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`)\n                return <Dominos\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    scoreTotal={player.dominoScore || 0}\n                    treeTotal={score}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    getDominoTotal={getDominoTotal}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (golf) {\n                console.log(`${game} - scorecard => player:${player.player || player.name}`);\n                console.log(`scoreIndex: ${scoreIndex}`);\n                console.log(`score: ${player.golfScores[scoreIndex]}`);\n                console.log(`scorecards => par: ${score}`);\n                return <ScoreCard\n                    game={game}\n                    players={players}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={golfPars[scoreIndex]}\n                />\n            }\n            return <ScoreCard\n                game={game}\n                players={players}\n                playerIndex={playerIndex}\n                scoreIndex={scoreIndex}\n                editPlayer={editPlayer}\n                deletePlayer={deletePlayer}\n                updateScores={updateScores}\n                winner={winner}\n            />\n        }\n        const rankStatus = (player, index, score) => {\n            const scoreDifference = Number(players[(index === 0) ? 0 : (index - 1)].surfScore - players[(index === 0) ? 1 : (index)].surfScore);\n            const difference = (scoreDifference < 0) ? (-1 * scoreDifference) : scoreDifference;\n            const winningScore = Number(players[(index === 0) ? 0 : ((index < 3) ? (index - 1) : 1)].surfScore);\n            const highestScoresIndices = findTwoHighestIndices(players[index].surfScores);\n            const losersHeighestScore = players[index].surfScores[highestScoresIndices[0]];\n            const need = (winningScore - losersHeighestScore) + .01;\n            const winsBy = `Wins by ${difference.toFixed(2)}`;\n            const needs = `Needs ${need.toFixed(2)}`;\n            if (index === 0) {\n                return winsBy;\n            }\n            return needs;\n        }\n\n        const setSurfScore = (playerId, index, score) => {\n\n            const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n            const newPlayers = [...players];\n            const currentScore = newPlayers[playerId].surfScores[index];\n            const edit = (currentScore !== '' && currentScore !== 0) ? false : true;\n            newPlayers[playerId].surfScores[index] = Number(newScore);\n            newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n            if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n                newPlayers.map((player, index) => {\n                    if (index === playerId) {\n                        player.surfPriority = players.length;\n                    } else if (player.surfPriority != 0) {\n                        player.surfPriority = player.surfPriority - 1;\n                    }\n                });\n            }\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n\n            console.log('setSurfScore => sortedPlayers: ', sortedPlayers)\n\n            localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n            setPlayers(sortedPlayers);\n        }\n\n        const surfScoresDisplay = () => surfScoring.map((wave, index) => {\n            <div className='flexContainer width-100-percent' key={getKey(`wave${wave}`)}>\n                <div className='flex3Column p-5'>\n                    {scorecard(players[0], 0, index, players[0].surfScores[index])}\n                </div>\n                <div className='p-20 r-5 font50 color-yellow m-auto'>\n                    {wave}\n                </div>\n                <div className='flex3Column p-5'>\n                    {scorecard(players[1], 1, index, players[1].surfScores[index])}\n                </div>\n            </div>\n        });\n        const getWave = (playerId, index, score) => {\n            const player = players[playerId];\n            const theScore = player.surfScores[index];\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const highestId = highestScores[0];\n            const secondHighestId = highestScores[1];\n            const firstScore = (index === highestId) ? true : false;\n            const secondScore = (index === secondHighestId) ? true : false;\n            const getClasses = (firstScore || secondScore) ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n            const wave = <div className=\"column r-10\" onClick={() => setSurfScore(playerId, index, score)} key={getKey(`wave${playerId}${index}${score}`)}>\n                <div className='size30 bold color-yellow bg-dkYellow w-100 p-10'>{index + 1}</div>\n                <div className={`ht-40 ${getClasses}`}>{score}</div>\n            </div>\n            return wave\n        }\n\n        const get2ndHighestScore = (playerId) => {\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const secondHighestId = highestScores[1];\n            return players[playerId].surfScores[secondHighestId];\n        }\n\n        const isTieScore = (playerIndex, score) => {\n            if (playerIndex !== 0) {\n                if (score === scoreTotal(playerIndex - 1, players)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        const jerseyColors = ['white', 'yellow', 'neogreen', 'black', 'blue', 'orange', 'pink', 'red'];\n        const rank = ['st', 'nd', 'rd', 'th'];\n        const selectJersey = (index) => {\n            const newPlayers = [...players];\n            newPlayers[index].surfJerseyColor = Number(newPlayers[index].surfJerseyColor) + 1;\n            newPlayers[index].surfJerseyColor = (newPlayers[index].surfJerseyColor > (jerseyColors.length - 1)) ? 0 : newPlayers[index].surfJerseyColor;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            setPlayers(newPlayers);\n        }\n        const handleTouchStart = (index) => {\n            console.log(`handleTouchStart`)\n            setTimer(setTimeout(() => {\n                setEditIndex(index);\n                setShowButtons(true);\n            }, 1000));\n        };\n    \n        const handleTouchEnd = () => {\n            clearTimeout(timer);\n        };\n        const editSurfer = (index) => <div>\n            <div>Name: </div>\n            <div>Jersey:</div>\n        </div>\n\n        const surfingScores = (player, index, score) => {\n            if (surf) {\n                const surferScores = <div key={getKey(`${score}${index}${(player.player || player.name)}`)}>\n                    <div className={`flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`} key={getKey(`${index}${(player.player || player.name)}`)}>\n                        <div className={`flex2Column contentLeft r-10-lft m-0 w-75 p-10`} onTouchStart={handleTouchStart(index)} onTouchEnd={handleTouchEnd}>\n                            <div>\n                                <span className='size25 mt--10'>\n                                    {(isTieScore(index, score) && (index !== 0)) ? index : (index + 1)}\n                                </span>\n                                <span className='size15 mt--10'>\n                                    {rank[(isTieScore(index, score) && (index !== 0)) ? index : (index > 2) ? 3 : (index)]}\n                                </span>\n                            </div>\n                            <div className='size30 mt-5 mb-5'>\n                                {(player.player || player.name).split(' ')[0]}\n                            </div>\n                            <div className='size20'>\n                                {(player.player || player.name).split(' ')[1]}\n                            </div>\n                        </div>\n                        <div className={`r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`}>\n                            <div className='size40 bold'>{score}</div>\n                            <div className='mt-10 bold'>{rankStatus(player, index, score)}</div>\n                        </div>\n                    </div>\n                    <div>\n                    {(editIndex === index && showButtons) ? editSurfer(index) : null}\n                    </div>\n                    <div>\n                        <div>\n                            <div className='h-scroll color-white copyright ml-10 mr-10 mt-5'>\n                                <div className=\"container mt-10\">\n                                    {players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                return surferScores\n            }\n            return\n        }\n        const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n\n        const dartScores = () => dartScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex3Column p-5'>\n                {scorecard(0, index, 0)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(1, index, 0)}\n            </div>\n        </div>);\n\n        const editGolfPar = (hole) => {\n            const newPars = [...golfPars];\n            const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n            newPars[hole] = newPar;\n            setGolfPars(newPars);\n        }\n\n        const golfScores = () => golfScoring.map((hole, index) => <div key={getKey(hole)}>\n            <div className='contentCenter bg-dark r-10 m-5 mt-35'>\n                <div>\n                    <span className='copyright greet color-yellow'>\n                        Hole:\n                    </span>\n                    <span className='size40 bold pt-5 pl-15 pr-15 bg-dark r-10'>\n                        {index + 1}\n                    </span>\n                    <span className='copyright greet color-yellow'>\n                        Par:\n                    </span>\n                    <span className='size20 bold color-lite mt--5'>\n                        {golfPars[index]}\n                    </span>\n                </div>\n                <div className='flexContainer'>\n                    <div className='flex2Column p-5'>\n                        {scorecard(0, index, golfPars[index])}\n                    </div>\n                    <div className='flex2Column p-5'>\n                        {scorecard(1, index, golfPars[index])}\n                    </div>\n                </div>\n            </div>\n        </div>);\n\n        const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n\n        const dominoScores = () => dominoScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(0, index, score)}\n            </div>\n            <div className='r-5 font50 color-yellow m-auto w-100'>\n                {score}\n            </div>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(1, index, score)}\n            </div>\n        </div>);\n\n        const isDominoWinner = (playerIndex) => (getDominoTotal(playerIndex) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n\n        const dartClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        const dominoClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isDominoWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n\n        const dartScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>{players[0].player || players[0].name}:<div className='mt-10 size40 white'>{getDartTotal(players[0])}</div></div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>{players[1].player || players[1].name}:<div className='mt-10 size40 white'>{getDartTotal(players[1])}</div></div>\n            </div>\n            {dartScores()}\n        </React.Fragment>\n\n        const golfScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy m-5 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>\n                    {players[0].player || players[0].name}:<div className='mt-10 size40 white'>{players[0].golfScore}</div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>\n                    {players[1].player || players[1].name}:<div className='mt-10  size40 white'>{players[1].golfScore}</div>\n                </div>\n            </div>\n            <div className='scrollHeight500'>\n                {golfScores()}\n            </div>\n        </React.Fragment>\n\n        const dominoScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10'>\n                <div className={dominoClass(0)}>\n                    {players[0].player || players[0].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(0)}\n                    </div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dominoClass(1)}>\n                    {players[1].player || players[1].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(1)}\n                    </div>\n                </div>\n            </div>\n            {dominoScores()}\n        </React.Fragment>\n\n        if (darts) return dartScoreboard()\n        if (dominos) return dominoScoreboard()\n        if (golf) return golfScoreboard()\n        //if (surf) return surfScoreboard\n        if (surf) return surfingScoreboard()\n        else return renderedItems();\n    }\n\n    return (\n        <div className='fadeIn mt--30'>\n            <div className='mb-10'>\n                <Selector\n                    groupTitle='game'\n                    label='item.description'\n                    items={games}\n                    selected={game}\n                    onChange={selectGame}\n                    fontSize='25'\n                    padding='10px'\n                    width={(darts || dominos) ? '98%' : '65%'}\n                />\n                {\n                    (darts || golf)\n                        ? <React.Fragment></React.Fragment>\n                        : <Selector className='fl-left'\n                            groupTitle='winner'\n                            label='i.description'\n                            items={(dominos) ? dominoWinners : ((surf) ? heatLengths : winners)}\n                            selected={winner}\n                            onChange={selectWinner}\n                            fontSize='25'\n                            padding='10px'\n                            width='30%'\n                        />\n                }\n                {(surf) ?\n                    <SurfScores\n                        players={players}\n                        heatLength={heatLength}\n                        isWinner={isWinner}\n                        getSurferIndexWithPriority={getSurferIndexWithPriority}\n                        shiftPriority={shiftPriority}\n                        losePriority={losePriority}\n                    ></SurfScores>\n                    :\n                    <React.Fragment></React.Fragment>\n\n                }\n            </div>\n            <div className='scrollHeight450'>\n                {scorecards()}\n            </div>\n            <div className='flexContainer width-100-percent'>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow' onClick={() => addPlayer()}>add player</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black' onClick={() => reset()}>reset</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow' onClick={() => clear()}>clear</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScoreKeeper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}