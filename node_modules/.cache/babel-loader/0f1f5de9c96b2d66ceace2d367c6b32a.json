{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/forms/FunctionalSelector.js\";\nimport React from 'react';\nimport getKey from '../utils/KeyGenerator.js'; //<FormSelector items={[\"Grapefruit\", \"Lime\", \"Coconut\", \"Mango\"]} />\n\nfunction FormSelector(props) {\n  //let action = \"\";\n  const items = props.items;\n  const label = props.label;\n  const groupTitle = props.groupTitle;\n  const select = props.selected;\n  let selected = select;\n\n  const tagSelected = item => /*#__PURE__*/React.createElement(\"option\", {\n    key: getKey(item),\n    value: item.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 35\n    }\n  }, item);\n\n  const tag = item => /*#__PURE__*/React.createElement(\"option\", {\n    key: getKey(item),\n    value: item.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 27\n    }\n  }, item);\n\n  const getTag = (item, index) => Number(index) === Number(select) ? tagSelected(item) : tag(item);\n\n  const selectItems = items.map((item, index) => getTag(item, index));\n\n  const handleChange = event => {\n    selected = event.target.value; //this.setState({value: e.target.value});\n\n    props.onChange(groupTitle, label, selected);\n  };\n\n  return /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, selectItems));\n}\n\nexport default FormSelector;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/forms/FunctionalSelector.js"],"names":["React","getKey","FormSelector","props","items","label","groupTitle","select","selected","tagSelected","item","toString","tag","getTag","index","Number","selectItems","map","handleChange","event","target","value","onChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB;AACA,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,QAAMC,KAAK,GAAGF,KAAK,CAACE,KAApB;AACA,QAAMC,UAAU,GAAGH,KAAK,CAACG,UAAzB;AACA,QAAMC,MAAM,GAAGJ,KAAK,CAACK,QAArB;AACA,MAAIA,QAAQ,GAAGD,MAAf;;AACA,QAAME,WAAW,GAAIC,IAAD,iBAAU;AAAQ,IAAA,GAAG,EAAET,MAAM,CAACS,IAAD,CAAnB;AAA2B,IAAA,KAAK,EAAEA,IAAI,CAACC,QAAL,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDD,IAApD,CAA9B;;AACA,QAAME,GAAG,GAAIF,IAAD,iBAAU;AAAQ,IAAA,GAAG,EAAET,MAAM,CAACS,IAAD,CAAnB;AAA2B,IAAA,KAAK,EAAEA,IAAI,CAACC,QAAL,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDD,IAApD,CAAtB;;AACA,QAAMG,MAAM,GAAG,CAACH,IAAD,EAAOI,KAAP,KAAkBC,MAAM,CAACD,KAAD,CAAN,KAAkBC,MAAM,CAACR,MAAD,CAAzB,GAAqCE,WAAW,CAACC,IAAD,CAAhD,GAAyDE,GAAG,CAACF,IAAD,CAA5F;;AACA,QAAMM,WAAW,GAAGZ,KAAK,CAACa,GAAN,CAAU,CAACP,IAAD,EAAOI,KAAP,KAC1BD,MAAM,CAACH,IAAD,EAAMI,KAAN,CADU,CAApB;;AAGA,QAAMI,YAAY,GAAIC,KAAD,IAAW;AAC5BX,IAAAA,QAAQ,GAAGW,KAAK,CAACC,MAAN,CAAaC,KAAxB,CAD4B,CAE5B;;AACAlB,IAAAA,KAAK,CAACmB,QAAN,CAAehB,UAAf,EAA2BD,KAA3B,EAAkCG,QAAlC;AACH,GAJD;;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,QAAQ,EAAEU,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,WADL,CADJ,CADJ;AAOH;;AAED,eAAed,YAAf","sourcesContent":["import React from 'react';\nimport getKey from '../utils/KeyGenerator.js';\n//<FormSelector items={[\"Grapefruit\", \"Lime\", \"Coconut\", \"Mango\"]} />\n\nfunction FormSelector(props) {\n    //let action = \"\";\n    const items = props.items;\n    const label = props.label;\n    const groupTitle = props.groupTitle;\n    const select = props.selected;\n    let selected = select;\n    const tagSelected = (item) => <option key={getKey(item)} value={item.toString()}>{item}</option>;\n    const tag = (item) => <option key={getKey(item)} value={item.toString()}>{item}</option>;\n    const getTag = (item, index) => (Number(index) === Number(select)) ? tagSelected(item) : tag(item);\n    const selectItems = items.map((item, index) =>\n        getTag(item,index)\n    );\n    const handleChange = (event) => {\n        selected = event.target.value;\n        //this.setState({value: e.target.value});\n        props.onChange(groupTitle, label, selected);\n    }\n\n    return (\n        <label>    \n            <select onChange={handleChange}>\n                {selectItems}\n            </select>\n        </label>\n    );\n}\n\nexport default FormSelector;"]},"metadata":{},"sourceType":"module"}