{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/Geolocator.js\";\nimport React from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport Loader from '../utils/Loader.js';\n\nclass Geolocate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getLocation = () => `Longitude: ${Number(this.state.longitude).toFixed(2)}\nLatitude: ${Number(this.state.latitude).toFixed(2)} `;\n\n    this.percent = window.innerWidth < 700 ? 'twentyfivePercent mt--70 mb--70' : 'fiftyPercent mt--40 mb--40';\n\n    this.loading = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: this.percent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      isMotionOn: this.props.isMotionOn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n\n    this.latlon = () => this.state.latitude + \",\" + this.state.longitude;\n\n    this.imageUrl = () => \"https://maps.googleapis.com/maps/api/staticmap?center=\" + this.latlon() + \"&zoom=14&size=400x300&sensor=false&key=AIzaSyCeOrNWv3lqS4nF4h8ohlHgOAygDNCyIUw\";\n\n    this.state = {\n      longitude: null,\n      latitude: null,\n      errorMessage: null\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition( //position => console.log(position.coords.longitude),\n    position => {\n      this.setState({\n        longitude: position.coords.longitude,\n        latitude: position.coords.latitude\n      });\n    }, err => {\n      console.log(err);\n      this.setState({\n        errorMessage: err.message\n      });\n    });\n  }\n\n  render() {\n    const errorExists = this.state.errorMessage ? true : false;\n    const latExists = this.state.latitude ? true : false;\n    const errMessage = this.state.errorMessage;\n    let gelocationStatus = latExists ? this.getLocation() : this.loading();\n    gelocationStatus = errorExists ? `${gelocationStatus} Message: ${errMessage}` : gelocationStatus;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-yellow greet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    }, gelocationStatus);\n  }\n\n}\n\nexport default Geolocate;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/Geolocator.js"],"names":["React","Dialog","Loader","Geolocate","Component","constructor","props","getLocation","Number","state","longitude","toFixed","latitude","percent","window","innerWidth","loading","isMotionOn","latlon","imageUrl","errorMessage","componentDidMount","navigator","geolocation","getCurrentPosition","position","setState","coords","err","console","log","message","render","errorExists","latExists","errMessage","gelocationStatus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA0BnBC,WA1BmB,GA0BL,MAAO,cAAaC,MAAM,CAAC,KAAKC,KAAL,CAAWC,SAAZ,CAAN,CAA6BC,OAA7B,CAAqC,CAArC,CAAwC;YAClEH,MAAM,CAAC,KAAKC,KAAL,CAAWG,QAAZ,CAAN,CAA4BD,OAA5B,CAAoC,CAApC,CAAuC,GA3B5B;;AAAA,SA4BnBE,OA5BmB,GA4BRC,MAAM,CAACC,UAAP,GAAoB,GAArB,GAA4B,iCAA5B,GAAgE,4BA5BvD;;AAAA,SA6BnBC,OA7BmB,GA6BT,mBAAM;AAAK,MAAA,SAAS,EAAE,KAAKH,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAE,KAAKP,KAAL,CAAWW,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,CA7BG;;AAAA,SAgCnBC,MAhCmB,GAgCV,MAAM,KAAKT,KAAL,CAAWG,QAAX,GAAsB,GAAtB,GAA4B,KAAKH,KAAL,CAAWC,SAhCnC;;AAAA,SAiCnBS,QAjCmB,GAiCR,MAAM,2DACJ,KAAKD,MAAL,EADI,GACU,gFAlCR;;AAEf,SAAKT,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETE,MAAAA,QAAQ,EAAE,IAFD;AAGTQ,MAAAA,YAAY,EAAE;AAHL,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBP,IAAAA,MAAM,CAACQ,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,EACI;AACAC,IAAAA,QAAQ,IAAI;AACR,WAAKC,QAAL,CAAc;AACVhB,QAAAA,SAAS,EAAEe,QAAQ,CAACE,MAAT,CAAgBjB,SADjB;AAEVE,QAAAA,QAAQ,EAAEa,QAAQ,CAACE,MAAT,CAAgBf;AAFhB,OAAd;AAIH,KAPL,EAQIgB,GAAG,IAAI;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKF,QAAL,CAAc;AACVN,QAAAA,YAAY,EAAEQ,GAAG,CAACG;AADR,OAAd;AAIH,KAdL;AAgBH;;AAWDC,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAI,KAAKxB,KAAL,CAAWW,YAAZ,GAA4B,IAA5B,GAAmC,KAAvD;AACA,UAAMc,SAAS,GAAI,KAAKzB,KAAL,CAAWG,QAAZ,GAAwB,IAAxB,GAA+B,KAAjD;AACA,UAAMuB,UAAU,GAAG,KAAK1B,KAAL,CAAWW,YAA9B;AACA,QAAIgB,gBAAgB,GAAIF,SAAD,GAAc,KAAK3B,WAAL,EAAd,GAAmC,KAAKS,OAAL,EAA1D;AACAoB,IAAAA,gBAAgB,GAAIH,WAAD,GAAiB,GAAEG,gBAAiB,aAAYD,UAAW,EAA3D,GAA+DC,gBAAlF;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCA,gBAArC,CAAP;AACH;;AA5CmC;;AA+CxC,eAAejC,SAAf","sourcesContent":["import React from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport Loader from '../utils/Loader.js';\n\nclass Geolocate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            longitude: null,\n            latitude: null,\n            errorMessage: null\n        }\n    }\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            //position => console.log(position.coords.longitude),\n            position => {\n                this.setState({\n                    longitude: position.coords.longitude,\n                    latitude: position.coords.latitude,\n                });\n            },\n            err => {\n                console.log(err)\n                this.setState({\n                    errorMessage: err.message\n                });\n\n            }\n        )\n    }\n    getLocation = () => `Longitude: ${Number(this.state.longitude).toFixed(2)}\nLatitude: ${Number(this.state.latitude).toFixed(2)} `;\n    percent = (window.innerWidth < 700) ? 'twentyfivePercent mt--70 mb--70' : 'fiftyPercent mt--40 mb--40';\n    loading = () => <div className={this.percent}>\n                <Loader isMotionOn={this.props.isMotionOn}/>\n            </div>;\n    latlon = () => this.state.latitude + \",\" + this.state.longitude;\n    imageUrl = () => \"https://maps.googleapis.com/maps/api/staticmap?center=\"+\n                 this.latlon()+\"&zoom=14&size=400x300&sensor=false&key=AIzaSyCeOrNWv3lqS4nF4h8ohlHgOAygDNCyIUw\";\n    \n    render() {\n        const errorExists = (this.state.errorMessage) ? true : false;\n        const latExists = (this.state.latitude) ? true : false;\n        const errMessage = this.state.errorMessage;\n        let gelocationStatus = (latExists) ? this.getLocation() : this.loading();\n        gelocationStatus = (errorExists) ? `${gelocationStatus} Message: ${errMessage}` : gelocationStatus;\n        return <div className=\"color-yellow greet\">{gelocationStatus}</div>\n    };\n}\n\nexport default Geolocate;"]},"metadata":{},"sourceType":"module"}