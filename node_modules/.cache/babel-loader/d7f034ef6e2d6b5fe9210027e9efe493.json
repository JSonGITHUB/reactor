{"ast":null,"code":"import React from'react';var toCelsius=function toCelsius(fahrenheit){return(fahrenheit-32)*5/9;};var tryConvert=function tryConvert(temperature,convert){var input=parseFloat(temperature);if(Number.isNaN(input)){return'';}var output=convert(input);var rounded=Math.round(output*1000)/1000;return rounded.toString();};var toFahrenheit=function toFahrenheit(celsius){return celsius*9/5+32;};var BoilingVerdict=function BoilingVerdict(props){var celsius=props.celsius;if(celsius>=100){return/*#__PURE__*/React.createElement(\"p\",{className:\"color-red\"},\"water is boiling...\");}if(celsius<=0){return/*#__PURE__*/React.createElement(\"p\",{className:\"color-blue\"},\"water is freezing...\");}return/*#__PURE__*/React.createElement(\"p\",{className:\"color-yellow\"},\"water is not boiling or freezing...\");};export default BoilingVerdict;export{toCelsius,tryConvert,toFahrenheit};","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/BoilingVerdict.js"],"names":["React","toCelsius","fahrenheit","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","toFahrenheit","celsius","BoilingVerdict","props"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,UAAD,QAAgB,CAACA,UAAU,CAAG,EAAd,EAAoB,CAApB,CAAwB,CAAxC,EAAlB,CACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,WAAD,CAAcC,OAAd,CAA0B,CACzC,GAAMC,CAAAA,KAAK,CAAGC,UAAU,CAACH,WAAD,CAAxB,CACA,GAAII,MAAM,CAACC,KAAP,CAAaH,KAAb,CAAJ,CAAyB,CACrB,MAAO,EAAP,CACH,CACD,GAAMI,CAAAA,MAAM,CAAGL,OAAO,CAACC,KAAD,CAAtB,CACA,GAAMK,CAAAA,OAAO,CAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAG,IAApB,EAA4B,IAA5C,CACA,MAAOC,CAAAA,OAAO,CAACG,QAAR,EAAP,CACH,CARD,CASA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,QAAcA,CAAAA,OAAO,CAAG,CAAV,CAAc,CAAf,CAAoB,EAAjC,EAArB,CACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,KAAK,CAAI,IACpBF,CAAAA,OADoB,CACRE,KADQ,CACpBF,OADoB,CAE5B,GAAIA,OAAO,EAAI,GAAf,CAAoB,CAAE,mBAAO,yBAAG,SAAS,CAAC,WAAb,wBAAP,CAAyD,CAC/E,GAAIA,OAAO,EAAI,CAAf,CAAkB,CAAE,mBAAO,yBAAG,SAAS,CAAC,YAAb,yBAAP,CAA2D,CAC/E,mBAAO,yBAAG,SAAS,CAAC,cAAb,wCAAP,CACH,CALD,CAOA,cAAeC,CAAAA,cAAf,CACA,OACIhB,SADJ,CAEIE,UAFJ,CAGIY,YAHJ","sourcesContent":["import React from 'react';\n\nconst toCelsius = (fahrenheit) => (fahrenheit - 32) * 5 / 9;\nconst tryConvert = (temperature, convert) => {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n        return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n};\nconst toFahrenheit = (celsius) => (celsius * 9 / 5) + 32;\nconst BoilingVerdict = props => {\n    const { celsius } = props;\n    if (celsius >= 100) { return <p className='color-red'>water is boiling...</p> }\n    if (celsius <= 0) { return <p className='color-blue'>water is freezing...</p> }\n    return <p className='color-yellow'>water is not boiling or freezing...</p>;\n}\n\nexport default BoilingVerdict;\nexport {\n    toCelsius,\n    tryConvert,\n    toFahrenheit\n}"]},"metadata":{},"sourceType":"module"}