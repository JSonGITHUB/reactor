{"ast":null,"code":"import _ from 'lodash';\nimport jsonPlaceholder from '../../apis/jsonPlaceholder.js';\nconst fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  //const userIds = _.uniq(_.map(getState().posts, 'userId'));\n  //userIds.forEach(id => dispatch(fetchUser(id)))\n\n  _.chain(getState().posts).map('userId').uniq().forEach(id => dispatch(fetchUser(id))).value();\n};\nconst fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get('/posts');\n  //console.log(`BlogActions => FETCH_POSTS => fetchPosts => \\nresponse: ${JSON.stringify(response.data,null,2)}`);\n  dispatch({\n    type: 'FETCH_POSTS',\n    payload: response.data\n  });\n};\nconst fetchUser = id => async dispatch => {\n  const response = await jsonPlaceholder.get(`/users/${id}`);\n  dispatch({\n    type: 'FETCH_USER',\n    payload: response.data\n  });\n};\n\n/*\nconst fetchUser = id => dispatch => _fetchUser(id, dispatch);\nconst _fetchUser = _.memoize(async (id, dispatch) => {\n    const response = await jsonPlaceholder.get(`/users/${id}`);\n    dispatch({\n        type: 'FETCH_USER', \n        payload: response.data\n    });\n});\n*/\n\nexport { fetchPosts, fetchUser, fetchPostsAndUsers };","map":{"version":3,"names":["_","jsonPlaceholder","fetchPostsAndUsers","dispatch","getState","fetchPosts","chain","posts","map","uniq","forEach","id","fetchUser","value","response","get","type","payload","data"],"sources":["/Users/js/Dev/my-first-reactor/src/components/blog/BlogActions.js"],"sourcesContent":["import _ from 'lodash';\nimport jsonPlaceholder from '../../apis/jsonPlaceholder.js';\n\nconst fetchPostsAndUsers = () => async (dispatch, getState) => {\n    await dispatch(fetchPosts());\n\n    //const userIds = _.uniq(_.map(getState().posts, 'userId'));\n    //userIds.forEach(id => dispatch(fetchUser(id)))\n\n    _.chain(getState().posts)\n        .map('userId')\n        .uniq()\n        .forEach(id => dispatch(fetchUser(id)))\n        .value();\n    \n} \n\nconst fetchPosts = () => async dispatch => {\n    const response = await jsonPlaceholder.get('/posts');\n    //console.log(`BlogActions => FETCH_POSTS => fetchPosts => \\nresponse: ${JSON.stringify(response.data,null,2)}`);\n    dispatch({ \n        type: 'FETCH_POSTS', \n        payload: response.data\n    })\n};\n\nconst fetchUser = id => async dispatch => {\n    const response = await jsonPlaceholder.get(`/users/${id}`);\n    dispatch({\n        type: 'FETCH_USER', \n        payload: response.data\n    });\n}\n\n/*\nconst fetchUser = id => dispatch => _fetchUser(id, dispatch);\nconst _fetchUser = _.memoize(async (id, dispatch) => {\n    const response = await jsonPlaceholder.get(`/users/${id}`);\n    dispatch({\n        type: 'FETCH_USER', \n        payload: response.data\n    });\n});\n*/\n\nexport { fetchPosts, fetchUser, fetchPostsAndUsers }"],"mappings":"AAAA,OAAOA,CAAC,MAAM,QAAQ;AACtB,OAAOC,eAAe,MAAM,+BAA+B;AAE3D,MAAMC,kBAAkB,GAAGA,CAAA,KAAM,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC3D,MAAMD,QAAQ,CAACE,UAAU,CAAC,CAAC,CAAC;;EAE5B;EACA;;EAEAL,CAAC,CAACM,KAAK,CAACF,QAAQ,CAAC,CAAC,CAACG,KAAK,CAAC,CACpBC,GAAG,CAAC,QAAQ,CAAC,CACbC,IAAI,CAAC,CAAC,CACNC,OAAO,CAACC,EAAE,IAAIR,QAAQ,CAACS,SAAS,CAACD,EAAE,CAAC,CAAC,CAAC,CACtCE,KAAK,CAAC,CAAC;AAEhB,CAAC;AAED,MAAMR,UAAU,GAAGA,CAAA,KAAM,MAAMF,QAAQ,IAAI;EACvC,MAAMW,QAAQ,GAAG,MAAMb,eAAe,CAACc,GAAG,CAAC,QAAQ,CAAC;EACpD;EACAZ,QAAQ,CAAC;IACLa,IAAI,EAAE,aAAa;IACnBC,OAAO,EAAEH,QAAQ,CAACI;EACtB,CAAC,CAAC;AACN,CAAC;AAED,MAAMN,SAAS,GAAGD,EAAE,IAAI,MAAMR,QAAQ,IAAI;EACtC,MAAMW,QAAQ,GAAG,MAAMb,eAAe,CAACc,GAAG,CAAE,UAASJ,EAAG,EAAC,CAAC;EAC1DR,QAAQ,CAAC;IACLa,IAAI,EAAE,YAAY;IAClBC,OAAO,EAAEH,QAAQ,CAACI;EACtB,CAAC,CAAC;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASb,UAAU,EAAEO,SAAS,EAAEV,kBAAkB"},"metadata":{},"sourceType":"module"}