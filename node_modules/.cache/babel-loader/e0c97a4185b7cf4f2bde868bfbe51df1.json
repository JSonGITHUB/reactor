{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/Tide.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Loader from '../utils/Loader.js';\n//import tide from '../../assets/images/tide.png'\nimport arrowDown from '../../assets/images/ArrowDown.png';\nimport arrowDownGood from '../../assets/images/ArrowDownGood.png';\nimport arrowUp from '../../assets/images/ArrowUp.png';\n//import config from '../../apis/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tide = _ref => {\n  _s();\n  let {\n    tideNow,\n    data,\n    time,\n    setTide,\n    display,\n    isMotionOn\n  } = _ref;\n  const [status, setStatus] = useState({\n    tide: '',\n    tideDirection: localStorage.getItem('tideDirection') || \"?\",\n    height: null,\n    updated: false\n  });\n  const [tideData, setTideData] = useState(null);\n  useEffect(() => {\n    const storedTideData = JSON.parse(localStorage.getItem(\"tideData\"));\n    //console.log('fetchData=> storedTideData');\n    if (storedTideData && storedTideData.data !== undefined) {\n      console.log('fetchData=> storedTideData');\n      setTideData(storedTideData.data);\n    } else {\n      const fetchData = async () => {\n        console.log('fetchData=>  async ()');\n        try {\n          console.log('fetchData=> TideData.json');\n          const response = await fetch(\"TideData.json\");\n          const json = await response.json();\n          setTideData(json.data);\n        } catch (error) {\n          console.log('fetchData=> ERROR: ', error);\n          console.error(error);\n        }\n      };\n      fetchData();\n    }\n  }, []);\n  console.log('Tide => data: ', tideData);\n  let localTide = tideData === null ? 1 : Number(tideData[tideData.length - 1].v).toFixed(1);\n  console.log('Tide => localTide: ', localTide);\n  //let localD = tideData[tideData.length - 1].d;\n  //let localDr = tideData[tideData.length - 1].dr;\n\n  console.log('Tide => tideNow: ', tideNow);\n  const getCurrentWaterLevel = () => {\n    //console.log('getCurrentWaterLevel - status: ', status);\n    if (tideNow.data !== undefined) {\n      const waterLevel = Number(tideNow.data[tideNow.data.length - 1].v).toFixed(1);\n      localStorage.setItem('height', waterLevel);\n      //console.log(`Tide => getCurrentWaterLevel => waterLevel: ${waterLevel}`)\n      return waterLevel;\n    }\n    localStorage.setItem('height', localTide);\n    return localTide;\n  };\n  const getCurrentTide = getCurrentWaterLevel() > 3 ? \"high\" : getCurrentWaterLevel() < 2 ? \"low\" : \"medium\";\n  useEffect(() => {\n    let mounted = true;\n    if (tideNow.data !== undefined && mounted === true) {\n      const tide = getCurrentTide;\n      const height = localStorage.getItem('height');\n      //console.log(`tideNowData => \\nurl: ${tideNowLink}\\nstartTime: ${startTime}\\nendTime: ${endTime}`)\n      //console.log(`tideData => data: ${JSON.stringify(data, null, 2)}`)\n      setTide(tide, height);\n    }\n    return () => mounted = false;\n  }, [tideNow.data, getCurrentTide, setTide]);\n  useEffect(() => {\n    let mounted = true;\n    const predictions = data[0].predictions;\n    if (predictions !== undefined && status.updated !== true && mounted) {\n      localStorage.setItem('tides', JSON.stringify(data));\n      const getTideHour = tide => Number(tide.t.split(\" \")[1].split(\":\")[0]);\n      const getTideMinutes = tide => Number(tide.t.split(\" \")[1].split(\":\")[1]);\n      const getTideTime = tide => `${getTideHour(tide)}:${getTideMinutes(tide)}`;\n      const getTideHeight = tide => Number(tide.v);\n      const getTide = tide => tide.type;\n      console.log(`Tide - getDirection => data: ${JSON.stringify(data, null, 2)}`);\n      const hours = predictions.map(tide => getTideHour(tide));\n      const minutes = predictions.map(tide => getTideMinutes(tide));\n      const times = predictions.map(tide => getTideTime(tide));\n      const heights = predictions.map(tide => getTideHeight(tide));\n      //console.log('tide heights: ', heights);\n      const tides = predictions.map(tide => getTide(tide));\n      const checkTide = hour => {\n        if (hour >= time[0].hours) {\n          //console.log(`checkTide =>\\nhours: ${hours}\\nhour: ${hour}\\ncurrent time.hour: ${time[0].hours}`)\n          if (hour === time[0].hours) {\n            if (minutes > time[0].minutes) {\n              return true;\n            }\n          } else if (hour > time[0].hours) {\n            return true;\n          }\n        }\n        ;\n        return false;\n      };\n      //const nextTideIndex = hours.findIndex(checkTide);\n      const nextTideIndex = hours.findIndex(checkTide);\n      const nextIndexExtra = () => hours[nextTideIndex - 1] === time[0].hours && minutes[nextTideIndex - 1] > time[0].minutes ? 1 : 0;\n      const getNextIndex = () => nextTideIndex + nextIndexExtra();\n      const pastLastTide = Number(time[0].hours - hours[getNextIndex() - 1]);\n      const untilNextTide = Number(hours[getNextIndex()] - time[0].hours);\n      // eslint-disable-next-line\n      const untilNextTideMinutes = Number(minutes[getNextIndex()] - time[0].minutes);\n      const lessThanHour = untilNextTide === 0 ? true : false;\n      const untilTide = () => {\n        const pastTime = untilNextTideMinutes < 0 ? untilNextTideMinutes + 60 : untilNextTideMinutes;\n        //console.log(`untilTide => \\npastTime: ${pastTime}\\nuntilNextTideMinutes: ${untilNextTideMinutes}\\nuntilNextTide: ${untilNextTide}`)\n        const time = lessThanHour ? String(pastTime) + 'min' : (untilNextTideMinutes < 0 ? untilNextTide - 1 : untilNextTide) + 'hr ' + String(pastTime) + 'min';\n        const timeDisplay = time;\n        //console.log(`untilTide => timeDisplay: ${timeDisplay}`);\n        return timeDisplay;\n      };\n      // eslint-disable-next-line\n      const closerTideIndex = pastLastTide >= untilNextTide ? getNextIndex() : getNextIndex() - 1;\n      const nextTide = tides[getNextIndex()];\n      const nextHeight = heights[getNextIndex()];\n      const lastHeight = heights[getNextIndex() - 1];\n      const getNextHour = Number(times[getNextIndex() === -1 ? times.length - 1 : getNextIndex()].split(':')[0]);\n      const nextHour = getNextHour > 12 ? getNextHour - 12 : getNextHour;\n      const nextMinutes = times[getNextIndex() === -1 ? 1 : getNextIndex()].split(':')[1] < 10 ? `0${times[getNextIndex() === -1 ? times.length - 1 : getNextIndex()].split(':')[1]}` : times[getNextIndex() === -1 ? times.length - 1 : getNextIndex()].split(':')[1];\n      const nextTime = `${nextHour}:${nextMinutes}`;\n      // eslint-disable-next-line\n      const lastTide = tides[getNextIndex() - 1];\n      const convertTide = tide => {\n        const convertedTide = tide === 'H' ? 'High' : 'Low';\n        return convertedTide;\n      };\n      //console.log(`CURRENT: ${getCurrentTide}\\ngetNextIndex: ${getNextIndex()}\\nheights: ${heights}\\nlastHeight: ${lastHeight}\\nnextHeight: ${nextHeight}\\ntime: ${time[0].hours}::${time[0].minutes}\\nTIMES: ${hours}\\n next ${nextTide} \\ntide in ${untilNextTide} hours\\n previous ${lastTide} tide was ${pastLastTide} hours ago tideMinutes: ${time[0].minutes}`);\n      setStatus(prevState => ({\n        ...prevState,\n        tide: getCurrentTide,\n        tideDirection: nextTide === 'L' ? \"DOWN\" : \"UP\",\n        previousTide: lastHeight,\n        nextTide: nextHeight,\n        nextPhase: convertTide(nextTide),\n        nextTime: nextTime,\n        untilNextTide: untilTide(),\n        nextTideIndex: getNextIndex(),\n        updated: true\n      }));\n    }\n    return () => mounted = false;\n  }, [data, getCurrentTide, status.updated, time]);\n  const previousTide = () => localStorage.getItem('tide') ? Number(localStorage.getItem('tide')) : 0;\n  // eslint-disable-next-line\n  const notEqual = () => Number(previousTide()) !== Number(status.height) ? true : false;\n  // eslint-disable-next-line\n  const greaterThan = () => Number(previousTide()) > Number(status.height) ? true : false;\n  const getDownArrow = () => {\n    localStorage.setItem('tideDirection', 'DOWN');\n    if (Number(status.height) < 2.1) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"arrows mb--2\",\n        src: arrowDownGood,\n        alt: \"tide direction down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"arrows mb--2\",\n      src: arrowDown,\n      alt: \"tide direction down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 16\n    }, this);\n  };\n  const getUpArrow = () => {\n    localStorage.setItem('tideDirection', 'UP');\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"arrows mb--2\",\n      src: arrowUp,\n      alt: \"tide direction up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 16\n    }, this);\n  };\n  const getTideDirection = () => status.tideDirection === \"DOWN\" ? getDownArrow() : getUpArrow();\n  //getTideDirection = () => (notEqual() && greaterThan()) ? \"DOWN\" : status.tideDirection;\n  // eslint-disable-next-line\n  const setLocalTide = () => localStorage.setItem('tide', status.tide);\n  const setLocalTideDirection = () => localStorage.setItem('tideDirection', status.tideDirection);\n  // eslint-disable-next-line\n  const fixHours = () => time[0].hours > 12 ? Number(time[0].hours - 12) : time[0].hours;\n  const narrowDisplay = /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 27\n  }, this);\n  const wideDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"from: \", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"bold\",\n      children: [status.previousTide ? status.previousTide.toFixed(1) : '', \"' \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }, this), \"to: \", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"bold\",\n      children: [status.nextTide ? status.nextTide.toFixed(1) : '', \"'\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 97\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"bold\",\n      children: [status.nextPhase, \" in \", status.untilNextTide]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 83\n    }, this), \"at: \", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"bold\",\n      children: status.nextTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 25\n  }, this);\n  const starDisplay = /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 25\n  }, this);\n  const getTideDetails = () => {\n    const colorClass = getCurrentWaterLevel() < 2.1 ? \"color-neogreen\" : \"\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `greet pt-10`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bold ${colorClass}`,\n        children: [String(status.tide).toUpperCase(), \" tide\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `bold ${colorClass}`,\n        children: [getCurrentWaterLevel(), \" ft.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), display === \"narrow\" ? narrowDisplay : display === \"star\" ? starDisplay : wideDisplay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this);\n  };\n  const getHeight = () => {\n    const height = getCurrentWaterLevel();\n    localStorage.setItem('height', height);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"greet pt-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bold\",\n        children: [String(status.tide).toUpperCase(), \" tide\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bold\",\n        children: [height, \" ft.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 16\n    }, this);\n  };\n  // eslint-disable-next-line\n  const tideError = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [status.nextPhase, \" tide after midnight, tomorrows tide info will update in \", 24 - time[0].hours, \" hrs\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 29\n  }, this);\n  const tideClasses = () => {\n    if (display === 'star') {\n      return '';\n    } else {\n      return 'r-10 m-5 bg-lite white pl-15 pr-15 pt-20 pb-30';\n    }\n  };\n  const getTideDisplay = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: tideClasses(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-15 mb-5\",\n      children: getTideDirection()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), status.nextTideIndex === -1 ? getHeight() : getTideDetails()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 34\n  }, this);\n  const percent = 'twentyfivePercent mt--70 mb--70';\n  // eslint-disable-next-line\n  const loading = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: percent,\n    children: /*#__PURE__*/_jsxDEV(Loader, {\n      isMotionOn: isMotionOn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 27\n  }, this);\n  setLocalTideDirection();\n  //console.log(`tide direction: ${status.tideDirection} previous height: ${previousTide()} height: ${status.height} == ${previousTide() === Number(status.height)} \\ntide: ${localStorage.getItem('tide')}`)\n  //console.log('tide status: ', status);\n  return getTideDisplay();\n};\n_s(Tide, \"gS+FJyQ2a4l5tKqBOoApV0twgn8=\");\n_c = Tide;\nexport default Tide;\n/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/\n\n/* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/\nvar _c;\n$RefreshReg$(_c, \"Tide\");","map":{"version":3,"names":["React","useState","useEffect","Loader","arrowDown","arrowDownGood","arrowUp","jsxDEV","_jsxDEV","Tide","_ref","_s","tideNow","data","time","setTide","display","isMotionOn","status","setStatus","tide","tideDirection","localStorage","getItem","height","updated","tideData","setTideData","storedTideData","JSON","parse","undefined","console","log","fetchData","response","fetch","json","error","localTide","Number","length","v","toFixed","getCurrentWaterLevel","waterLevel","setItem","getCurrentTide","mounted","predictions","stringify","getTideHour","t","split","getTideMinutes","getTideTime","getTideHeight","getTide","type","hours","map","minutes","times","heights","tides","checkTide","hour","nextTideIndex","findIndex","nextIndexExtra","getNextIndex","pastLastTide","untilNextTide","untilNextTideMinutes","lessThanHour","untilTide","pastTime","String","timeDisplay","closerTideIndex","nextTide","nextHeight","lastHeight","getNextHour","nextHour","nextMinutes","nextTime","lastTide","convertTide","convertedTide","prevState","previousTide","nextPhase","notEqual","greaterThan","getDownArrow","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","getUpArrow","getTideDirection","setLocalTide","setLocalTideDirection","fixHours","narrowDisplay","Fragment","wideDisplay","children","starDisplay","getTideDetails","colorClass","toUpperCase","getHeight","tideError","tideClasses","getTideDisplay","percent","loading","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/Tide.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Loader from '../utils/Loader.js';\n//import tide from '../../assets/images/tide.png'\nimport arrowDown from '../../assets/images/ArrowDown.png';\nimport arrowDownGood from '../../assets/images/ArrowDownGood.png';\nimport arrowUp from '../../assets/images/ArrowUp.png';\n//import config from '../../apis/config';\n\nconst Tide = ({ tideNow, data, time, setTide, display, isMotionOn }) => {\n\n    const [status, setStatus] = useState({\n        tide: '',\n        tideDirection: localStorage.getItem('tideDirection') || \"?\",\n        height: null,\n        updated: false\n    })\n\n    const [tideData, setTideData] = useState(null);\n\n    useEffect(() => {\n\n        const storedTideData = JSON.parse(localStorage.getItem(\"tideData\"));\n        //console.log('fetchData=> storedTideData');\n        if (storedTideData && storedTideData.data !== undefined) {\n            console.log('fetchData=> storedTideData');\n            setTideData(storedTideData.data);\n        } else {\n            const fetchData = async () => {\n                console.log('fetchData=>  async ()');\n                try {\n                    console.log('fetchData=> TideData.json');\n                    const response = await fetch(\"TideData.json\");\n                    const json = await response.json();\n                    setTideData(json.data);\n                } catch (error) {\n                    console.log('fetchData=> ERROR: ', error);\n                    console.error(error);\n                }\n            };\n            fetchData();\n\n        }\n    }, []);\n\n    console.log('Tide => data: ', tideData);\n    let localTide = (tideData === null) ? 1 : Number(tideData[tideData.length - 1].v).toFixed(1);\n    console.log('Tide => localTide: ', localTide);\n    //let localD = tideData[tideData.length - 1].d;\n    //let localDr = tideData[tideData.length - 1].dr;\n\n    console.log('Tide => tideNow: ', tideNow);\n\n    const getCurrentWaterLevel = () => {\n        //console.log('getCurrentWaterLevel - status: ', status);\n        if (tideNow.data !== undefined) {\n            const waterLevel = Number(tideNow.data[tideNow.data.length - 1].v).toFixed(1);\n            localStorage.setItem('height', waterLevel);\n            //console.log(`Tide => getCurrentWaterLevel => waterLevel: ${waterLevel}`)\n            return waterLevel;\n        }\n        localStorage.setItem('height', localTide);\n        return localTide;\n    }\n    const getCurrentTide = (getCurrentWaterLevel() > 3) ? \"high\" : (getCurrentWaterLevel() < 2) ? \"low\" : \"medium\";\n    useEffect(() => {\n        let mounted = true;\n        if ((tideNow.data !== undefined) && mounted === true) {\n            const tide = getCurrentTide;\n            const height = localStorage.getItem('height');\n            //console.log(`tideNowData => \\nurl: ${tideNowLink}\\nstartTime: ${startTime}\\nendTime: ${endTime}`)\n            //console.log(`tideData => data: ${JSON.stringify(data, null, 2)}`)\n            setTide(tide, height);\n        }\n        return () => mounted = false;\n    }, [tideNow.data, getCurrentTide, setTide]);\n    useEffect(() => {\n        let mounted = true;\n        const predictions = data[0].predictions;\n        if ((predictions !== undefined && status.updated !== true) && mounted) {\n            localStorage.setItem('tides', JSON.stringify(data));\n            const getTideHour = (tide) => Number(tide.t.split(\" \")[1].split(\":\")[0]);\n            const getTideMinutes = (tide) => Number(tide.t.split(\" \")[1].split(\":\")[1]); const getTideTime = (tide) => `${getTideHour(tide)}:${getTideMinutes(tide)}`;\n            const getTideHeight = (tide) => Number(tide.v);\n            const getTide = (tide) => tide.type;\n            console.log(`Tide - getDirection => data: ${JSON.stringify(data, null, 2)}`)\n            const hours = predictions.map((tide) => getTideHour(tide));\n            const minutes = predictions.map((tide) => getTideMinutes(tide));\n            const times = predictions.map((tide) => getTideTime(tide));\n            const heights = predictions.map((tide) => getTideHeight(tide));\n            //console.log('tide heights: ', heights);\n            const tides = predictions.map((tide) => getTide(tide));\n            const checkTide = (hour) => {\n                if (hour >= time[0].hours) {\n                    //console.log(`checkTide =>\\nhours: ${hours}\\nhour: ${hour}\\ncurrent time.hour: ${time[0].hours}`)\n                    if (hour === time[0].hours) {\n                        if (minutes > time[0].minutes) {\n                            return true;\n                        }\n                    } else if (hour > time[0].hours) {\n                        return true;\n                    }\n                };\n                return false;\n            }\n            //const nextTideIndex = hours.findIndex(checkTide);\n            const nextTideIndex = hours.findIndex(checkTide);\n            const nextIndexExtra = () => ((hours[nextTideIndex - 1] === time[0].hours) && (minutes[nextTideIndex - 1] > time[0].minutes)) ? 1 : 0;\n            const getNextIndex = () => nextTideIndex + nextIndexExtra();\n            const pastLastTide = Number(time[0].hours - hours[getNextIndex() - 1]);\n            const untilNextTide = Number(hours[getNextIndex()] - time[0].hours);\n            // eslint-disable-next-line\n            const untilNextTideMinutes = Number(minutes[getNextIndex()] - time[0].minutes);\n            const lessThanHour = (untilNextTide === 0) ? true : false;\n            const untilTide = () => {\n                const pastTime = (untilNextTideMinutes < 0) ? (untilNextTideMinutes + 60) : untilNextTideMinutes;\n                //console.log(`untilTide => \\npastTime: ${pastTime}\\nuntilNextTideMinutes: ${untilNextTideMinutes}\\nuntilNextTide: ${untilNextTide}`)\n                const time = (lessThanHour) ? (String(pastTime) + 'min') : ((untilNextTideMinutes < 0) ? (untilNextTide - 1) : untilNextTide) + 'hr ' + String(pastTime) + 'min';\n                const timeDisplay = time;\n                //console.log(`untilTide => timeDisplay: ${timeDisplay}`);\n                return timeDisplay;\n            }\n            // eslint-disable-next-line\n            const closerTideIndex = (pastLastTide >= untilNextTide) ? getNextIndex() : (getNextIndex() - 1);\n\n            const nextTide = tides[getNextIndex()];\n            const nextHeight = heights[getNextIndex()];\n            const lastHeight = heights[getNextIndex() - 1];\n            const getNextHour = Number(times[(getNextIndex() === -1) ? (times.length - 1) : getNextIndex()].split(':')[0]);\n            const nextHour = (getNextHour > 12) ? (getNextHour - 12) : getNextHour;\n            const nextMinutes = (times[(getNextIndex() === -1) ? 1 : getNextIndex()].split(':')[1] < 10) ? `0${times[(getNextIndex() === -1) ? (times.length - 1) : getNextIndex()].split(':')[1]}` : times[(getNextIndex() === -1) ? (times.length - 1) : getNextIndex()].split(':')[1];\n            const nextTime = `${nextHour}:${nextMinutes}`;\n            // eslint-disable-next-line\n            const lastTide = tides[getNextIndex() - 1];\n            const convertTide = (tide) => {\n                const convertedTide = (tide === 'H') ? 'High' : 'Low';\n                return convertedTide;\n            };\n            //console.log(`CURRENT: ${getCurrentTide}\\ngetNextIndex: ${getNextIndex()}\\nheights: ${heights}\\nlastHeight: ${lastHeight}\\nnextHeight: ${nextHeight}\\ntime: ${time[0].hours}::${time[0].minutes}\\nTIMES: ${hours}\\n next ${nextTide} \\ntide in ${untilNextTide} hours\\n previous ${lastTide} tide was ${pastLastTide} hours ago tideMinutes: ${time[0].minutes}`);\n            setStatus(prevState => ({\n                ...prevState,\n                tide: getCurrentTide,\n                tideDirection: (nextTide === 'L') ? \"DOWN\" : \"UP\",\n                previousTide: lastHeight,\n                nextTide: nextHeight,\n                nextPhase: convertTide(nextTide),\n                nextTime: nextTime,\n                untilNextTide: untilTide(),\n                nextTideIndex: getNextIndex(),\n                updated: true\n            }))\n        }\n        return () => mounted = false;\n    }, [data, getCurrentTide, status.updated, time]);\n    const previousTide = () => (localStorage.getItem('tide')) ? Number(localStorage.getItem('tide')) : 0;\n    // eslint-disable-next-line\n    const notEqual = () => (Number(previousTide()) !== Number(status.height)) ? true : false;\n    // eslint-disable-next-line\n    const greaterThan = () => (Number(previousTide()) > Number(status.height)) ? true : false;\n    const getDownArrow = () => {\n        localStorage.setItem('tideDirection', 'DOWN')\n        if (Number(status.height) < 2.1) {\n            return <img className='arrows mb--2' src={arrowDownGood} alt='tide direction down' />\n        }\n        return <img className='arrows mb--2' src={arrowDown} alt='tide direction down' />\n    }\n    const getUpArrow = () => {\n        localStorage.setItem('tideDirection', 'UP')\n        return <img className='arrows mb--2' src={arrowUp} alt='tide direction up' />\n    }\n    const getTideDirection = () => (status.tideDirection === \"DOWN\") ? getDownArrow() : getUpArrow();\n    //getTideDirection = () => (notEqual() && greaterThan()) ? \"DOWN\" : status.tideDirection;\n    // eslint-disable-next-line\n    const setLocalTide = () => localStorage.setItem('tide', status.tide);\n    const setLocalTideDirection = () => localStorage.setItem('tideDirection', status.tideDirection);\n    // eslint-disable-next-line\n    const fixHours = () => (time[0].hours > 12) ? Number(time[0].hours - 12) : time[0].hours;\n    const narrowDisplay = <React.Fragment></React.Fragment>;\n    const wideDisplay = <div>\n        from: <span className='bold'>{(status.previousTide) ? status.previousTide.toFixed(1) : ''}' </span>\n        to: <span className='bold'>{(status.nextTide) ? status.nextTide.toFixed(1) : ''}'</span><br />\n        <span className='bold'>{status.nextPhase} in {status.untilNextTide}</span><br />\n        at: <span className='bold'>{status.nextTime}</span>\n    </div>\n    const starDisplay = <React.Fragment></React.Fragment>\n    const getTideDetails = () => {\n        const colorClass = (getCurrentWaterLevel() < 2.1) ? \"color-neogreen\" : \"\";\n        return (\n            <div className={`greet pt-10`}>\n                <div className={`bold ${colorClass}`}>{String(status.tide).toUpperCase()} tide</div>\n                <span className={`bold ${colorClass}`}>{getCurrentWaterLevel()} ft.</span>\n                {display === \"narrow\"\n                    ? narrowDisplay\n                    : display === \"star\"\n                        ? starDisplay\n                        : wideDisplay}\n            </div>\n        )\n    }\n    const getHeight = () => {\n        const height = getCurrentWaterLevel();\n        localStorage.setItem('height', height);\n        return <div className='greet pt-10'>\n            <div className='bold'>{String(status.tide).toUpperCase()} tide</div>\n            <div className='bold'>{height} ft.</div>\n        </div>\n    }\n    // eslint-disable-next-line\n    const tideError = () => <React.Fragment>\n        {status.nextPhase} tide after midnight, tomorrows tide info will update in {24 - time[0].hours} hrs\n    </React.Fragment>\n    const tideClasses = () => {\n        if (display === 'star') {\n            return ''\n        } else {\n            return 'r-10 m-5 bg-lite white pl-15 pr-15 pt-20 pb-30'\n        }\n\n    }\n    const getTideDisplay = () => <div className={tideClasses()}>\n        <div className='mt-15 mb-5'>{getTideDirection()}</div>\n        {(status.nextTideIndex === -1) ? getHeight() : getTideDetails()}\n    </div>;\n\n    const percent = 'twentyfivePercent mt--70 mb--70';\n    // eslint-disable-next-line\n    const loading = () => <div className={percent}>\n        <Loader isMotionOn={isMotionOn} />\n    </div>;\n\n    setLocalTideDirection();\n    //console.log(`tide direction: ${status.tideDirection} previous height: ${previousTide()} height: ${status.height} == ${previousTide() === Number(status.height)} \\ntide: ${localStorage.getItem('tide')}`)\n    //console.log('tide status: ', status);\n    return getTideDisplay()\n}\n\nexport default Tide;\n/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/\n\n/* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}