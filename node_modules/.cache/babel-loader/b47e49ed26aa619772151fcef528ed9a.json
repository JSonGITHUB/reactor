{"ast":null,"code":"import _toConsumableArray from\"/Users/js/Dev/my-first-reactor/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/js/Dev/my-first-reactor/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import getKey from'../utils/KeyGenerator.js';import jerseyColors from'./JerseyColors.js';import SurfScoringLogic from'./SurfScoringLogic.js';import{findTwoHighestIndices}from'./HighScores.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SurfingScores=function SurfingScores(players,index,surfScoring,setPlayers,editPlayer,deletePlayer){console.log(\"SurfingScores => players: \".concat(JSON.stringify(players),\" index: \").concat(index));var _useState=useState({editIndex:null,showButtons:false}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),timer=_useState4[0],setTimer=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showButtons=_useState6[0],setShowButtons=_useState6[1];var handleTouchStart=function handleTouchStart(){console.log(\"handleTouchStart\");setTimer(setTimeout(function(){return setShowButtons(true);},1000));};useEffect(function(){alert(\"SurfingScores => timer: \".concat(timer));},[timer]);var handleTouchEnd=function handleTouchEnd(){clearTimeout(timer);//setShowButtons(false);\n};var rank=['st','nd','rd','th'];var getTwoHighestScores=function getTwoHighestScores(){var player=players[index];var scores=player.surfScores;var _findTwoHighestIndice=findTwoHighestIndices(scores),_findTwoHighestIndice2=_slicedToArray(_findTwoHighestIndice,2),highestIndex=_findTwoHighestIndice2[0],secondHighestIndex=_findTwoHighestIndice2[1];//console.log(`getTwoHighestScores => playerIndex: ${index} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\nreturn{highScoreIndex:highestIndex,secondHighScoreIndex:secondHighestIndex};};var getScoreTotal=function getScoreTotal(index){var highestScore=players[index].surfScores[getTwoHighestScores(index).highScoreIndex];var secondHighestScore=players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];var score=highestScore+secondHighestScore;console.log(\"getScoreTotal => player: \".concat(index,\" score: \").concat(score));return score;};var highestScore=function highestScore(playersArray){//console.log(`highestScore = (index: ${index}, playersArray: ${JSON.stringify(playersArray, null, 2)})`)\nreturn playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];};var secondHighestScore=function secondHighestScore(playersArray){return playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];};var scoreTotal=function scoreTotal(index,playersArray){return Number(highestScore(playersArray)+secondHighestScore(playersArray)).toFixed(2);};var setSurfScore=function setSurfScore(playerId,index,score){var newScore=prompt(\"Enter \".concat(players[playerId].player||players[playerId].name,\"'s score for wave \").concat(index+1,\": \"),Number(score||''));var newPlayers=_toConsumableArray(players);var currentScore=newPlayers[playerId].surfScores[index];var edit=currentScore!==''&&currentScore!==0?false:true;newPlayers[playerId].surfScores[index]=Number(newScore);newPlayers[playerId].surfScore=scoreTotal(playerId,newPlayers);if((newPlayers[playerId].surfPriority===1||newPlayers[playerId].surfPriority===0)&&edit){newPlayers.map(function(player,index){if(index===playerId){player.surfPriority=players.length;}else if(player.surfPriority!=0){player.surfPriority=player.surfPriority-1;}});}var sortedPlayers=_toConsumableArray(newPlayers);sortedPlayers.sort(function(a,b){return b.surfScore-a.surfScore;});console.log('setSurfScore => sortedPlayers: ',sortedPlayers);localStorage.setItem('players',JSON.stringify(sortedPlayers,null,2));setPlayers(sortedPlayers);};var get2ndHighestScore=function get2ndHighestScore(playerId){var highestScores=findTwoHighestIndices(players[playerId].surfScores);var secondHighestId=highestScores[1];return players[playerId].surfScores[secondHighestId];};var getWave=function getWave(playerId,index,score){var player=players[playerId];var theScore=player.surfScores[index];var highestScores=findTwoHighestIndices(players[playerId].surfScores);var highestId=highestScores[0];var secondHighestId=highestScores[1];var firstScore=index===highestId?true:false;var secondScore=index===secondHighestId?true:false;var getClasses=firstScore||secondScore?'size30 bold color-neogreen p-10':'size30 white p-10';var wave=/*#__PURE__*/_jsxs(\"div\",{className:\"column r-10\",onClick:function onClick(){return setSurfScore(playerId,index,score);},children:[/*#__PURE__*/_jsx(\"div\",{className:\"size30 bold color-yellow bg-dkYellow w-100 p-10\",children:index+1}),/*#__PURE__*/_jsx(\"div\",{className:\"ht-40 \".concat(getClasses),children:score})]},getKey(\"wave\".concat(playerId).concat(index).concat(score)));return wave;};var selectJersey=function selectJersey(index){var newPlayers=_toConsumableArray(players);newPlayers[index].surfJerseyColor=Number(newPlayers[index].surfJerseyColor)+1;newPlayers[index].surfJerseyColor=newPlayers[index].surfJerseyColor>jerseyColors.length-1?0:newPlayers[index].surfJerseyColor;localStorage.setItem('players',JSON.stringify(newPlayers));setPlayers(newPlayers);};var isTieScore=function isTieScore(index){var score=scoreTotal(index,players);if(index!==0){if(score===scoreTotal(index-1,players)){return true;}}return false;};var editSurfer=function editSurfer(index){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:alert(\"Subtract \".concat(index)),children:\"-\"}),/*#__PURE__*/_jsx(\"button\",{onClick:alert(\"Add \".concat(index)),children:\"+\"})]});};var getSurfTotal=function getSurfTotal(player){var total=0;var score=function score(index){return player.surfScores[index];};var addToTotal=function addToTotal(value){return total=total+value;};surfScoring.map(function(target,index){//console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`)\naddToTotal(Number(score(index)));});return total;};var surferScores=function surferScores(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-\".concat(jerseyColors[0]||jerseyColors[0]),onTouchStart:function onTouchStart(){return handleTouchStart(index);},onTouchEnd:handleTouchEnd,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex2Column contentLeft r-10-lft m-0 w-75 p-10\",onClick:function onClick(){return selectJersey(index);},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"size25 mt--10\",children:isTieScore(index)&&index!==0?index:index+1}),/*#__PURE__*/_jsx(\"span\",{className:\"size15 mt--10\",children:rank[isTieScore(index)&&index!==0?index:index>2?3:index]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"size30 mt-5 mb-5\",children:(players[index].player||players[index].name).split(' ')[0]}),/*#__PURE__*/_jsx(\"div\",{className:\"size20\",children:(players[index].player||players[index].name).split(' ')[1]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"size40 bold\",children:getSurfTotal(players[index])}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-10 bold\",children:[\"Index: \",index,\"Players: \",players]})]})]},getKey(\"\".concat(index).concat(players[index].player||players[index].name))),/*#__PURE__*/_jsx(\"div\",{children:showButtons&&editSurfer(index)}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"h-scroll color-white copyright ml-10 mr-10 mt-5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container mt-10\",children:players[index].surfScores.map(function(score,wave){return getWave(index,wave,players[index].surfScores[wave]);})})})})})]},getKey(\"\".concat(index).concat(players[index].player||players[index].name)));};return surferScores();};export default SurfingScores;","map":{"version":3,"names":["React","useState","useEffect","getKey","jerseyColors","SurfScoringLogic","findTwoHighestIndices","jsx","_jsx","jsxs","_jsxs","SurfingScores","players","index","surfScoring","setPlayers","editPlayer","deletePlayer","console","log","concat","JSON","stringify","_useState","editIndex","showButtons","_useState2","_slicedToArray","state","setState","_useState3","_useState4","timer","setTimer","_useState5","_useState6","setShowButtons","handleTouchStart","setTimeout","alert","handleTouchEnd","clearTimeout","rank","getTwoHighestScores","player","scores","surfScores","_findTwoHighestIndice","_findTwoHighestIndice2","highestIndex","secondHighestIndex","highScoreIndex","secondHighScoreIndex","getScoreTotal","highestScore","secondHighestScore","score","playersArray","scoreTotal","Number","toFixed","setSurfScore","playerId","newScore","prompt","name","newPlayers","_toConsumableArray","currentScore","edit","surfScore","surfPriority","map","length","sortedPlayers","sort","a","b","localStorage","setItem","get2ndHighestScore","highestScores","secondHighestId","getWave","theScore","highestId","firstScore","secondScore","getClasses","wave","className","onClick","children","selectJersey","surfJerseyColor","isTieScore","editSurfer","getSurfTotal","total","addToTotal","value","target","surferScores","onTouchStart","onTouchEnd","split"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/SurfingScores.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport jerseyColors from './JerseyColors.js';\nimport SurfScoringLogic from './SurfScoringLogic.js';\nimport { findTwoHighestIndices } from './HighScores.js';\n\nconst SurfingScores = (players, index, surfScoring, setPlayers, editPlayer, deletePlayer) => {\n\n    console.log(`SurfingScores => players: ${JSON.stringify(players)} index: ${index}`)\n\n    const[state, setState] = useState({\n        editIndex: null,\n        showButtons: false\n    });\n    const [timer, setTimer] = useState(null);\n    const [showButtons, setShowButtons] = useState(false);\n    const handleTouchStart = () => {\n        console.log(`handleTouchStart`)\n        setTimer(setTimeout(() => setShowButtons(true), 1000));\n    };\n    useEffect(() => {\n        alert(`SurfingScores => timer: ${timer}`);\n    }, [timer]);\n\n    const handleTouchEnd = () => {\n        clearTimeout(timer);\n        //setShowButtons(false);\n    };\n    const rank = ['st', 'nd', 'rd', 'th'];\n\n    const getTwoHighestScores = () => {\n        const player = players[index];\n        const scores = player.surfScores;\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n        //console.log(`getTwoHighestScores => playerIndex: ${index} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            highScoreIndex: highestIndex,\n            secondHighScoreIndex: secondHighestIndex\n        };\n    };\n    const getScoreTotal = (index) => {\n        const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n        const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n        const score = (highestScore + secondHighestScore);\n        console.log(`getScoreTotal => player: ${index} score: ${score}`);\n        return score;\n    }\n    const highestScore = (playersArray) => {\n        //console.log(`highestScore = (index: ${index}, playersArray: ${JSON.stringify(playersArray, null, 2)})`)\n        return playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n    }\n    const secondHighestScore = (playersArray) => playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n    const scoreTotal = (index, playersArray) => Number(highestScore(playersArray) + secondHighestScore(playersArray)).toFixed(2);\n\n    const setSurfScore = (playerId, index, score) => {\n\n        const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n        const newPlayers = [...players];\n        const currentScore = newPlayers[playerId].surfScores[index];\n        const edit = (currentScore !== '' && currentScore !== 0) ? false : true;\n        newPlayers[playerId].surfScores[index] = Number(newScore);\n        newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n        if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n            newPlayers.map((player, index) => {\n                if (index === playerId) {\n                    player.surfPriority = players.length;\n                } else if (player.surfPriority != 0) {\n                    player.surfPriority = player.surfPriority - 1;\n                }\n            });\n        }\n        const sortedPlayers = [...newPlayers];\n        sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n\n        console.log('setSurfScore => sortedPlayers: ', sortedPlayers)\n\n        localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n        setPlayers(sortedPlayers);\n    }\n    const get2ndHighestScore = (playerId) => {\n        const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n        const secondHighestId = highestScores[1];\n        return players[playerId].surfScores[secondHighestId];\n    }\n    const getWave = (playerId, index, score) => {\n        const player = players[playerId];\n        const theScore = player.surfScores[index];\n        const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n        const highestId = highestScores[0];\n        const secondHighestId = highestScores[1];\n        const firstScore = (index === highestId) ? true : false;\n        const secondScore = (index === secondHighestId) ? true : false;\n        const getClasses = (firstScore || secondScore) ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n        const wave = <div className=\"column r-10\" onClick={() => setSurfScore(playerId, index, score)} key={getKey(`wave${playerId}${index}${score}`)}>\n            <div className='size30 bold color-yellow bg-dkYellow w-100 p-10'>{index + 1}</div>\n            <div className={`ht-40 ${getClasses}`}>{score}</div>\n        </div>\n        return wave\n    }\n    const selectJersey = (index) => {\n        const newPlayers = [...players];\n        newPlayers[index].surfJerseyColor = Number(newPlayers[index].surfJerseyColor) + 1;\n        newPlayers[index].surfJerseyColor = (newPlayers[index].surfJerseyColor > (jerseyColors.length - 1)) ? 0 : newPlayers[index].surfJerseyColor;\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(newPlayers);\n    }\n    const isTieScore = (index) => {\n        const score = scoreTotal(index, players);\n        if (index !== 0) {\n            if (score === scoreTotal(index - 1, players)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    const editSurfer = (index) => <div>\n        <button onClick={alert(`Subtract ${index}`)}>-</button>\n        <button onClick={alert(`Add ${index}`)}>+</button>\n    </div>\n    const getSurfTotal = (player) => {\n        let total = 0;\n        const score = (index) => player.surfScores[index];\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n            //console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        return total;\n    }\n\n    const surferScores = () => <div key={getKey(`${index}${(players[index].player || players[index].name)}`)}>\n        {/*<div className={`flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`} key={getKey(`${index}${(player.player || player.name)}`)}  onTouchStart={() => handleTouchStart(index)} onTouchEnd={handleTouchEnd}>*/}\n        <div className={`flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[0] || jerseyColors[0]}`} key={getKey(`${index}${(players[index].player || players[index].name)}`)} onTouchStart={() => handleTouchStart(index)} onTouchEnd={handleTouchEnd}>\n            <div className={`flex2Column contentLeft r-10-lft m-0 w-75 p-10`} onClick={() => selectJersey(index)}>\n                <div>\n                    <span className='size25 mt--10'>\n                        {(isTieScore(index) && (index !== 0)) ? index : (index + 1)}\n                    </span>\n                    <span className='size15 mt--10'>\n                        {rank[(isTieScore(index) && (index !== 0)) ? index : (index > 2) ? 3 : (index)]}\n                    </span>\n                </div>\n                <div className='size30 mt-5 mb-5'>\n                    {(players[index].player || players[index].name).split(' ')[0]}\n                </div>\n                <div className='size20'>\n                    {(players[index].player || players[index].name).split(' ')[1]}\n                </div>\n            </div>\n            <div className={`r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`}>\n                <div className='size40 bold'>{getSurfTotal(players[index])}</div>\n                <div className='mt-10 bold'>\n                    {/*\n                        <SurfScoringLogic\n                            index={index}\n                            completed={false}\n                            players={players}\n                            //setPlayers={setPlayers}\n                            //editPlayer={editPlayer}\n                            //deleteAthlete={deletePlayer}\n                        />\n                    */}\n                    Index: {index}\n                    Players: {players}\n                </div>\n            </div>\n        </div>\n        <div>\n            {showButtons && (\n                editSurfer(index)\n            )}\n        </div>\n        <div>\n            <div>\n                <div className='h-scroll color-white copyright ml-10 mr-10 mt-5'>\n                    <div className=\"container mt-10\">\n                        {players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    return surferScores()\n}\nexport default SurfingScores;"],"mappings":"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"},"metadata":{},"sourceType":"module"}