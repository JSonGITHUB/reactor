{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/PostDirectory.js\";\n/* backup pre hooks 1/7/21\nimport React, { useState, useEffect } from 'react';\nconst PostDirectory = () => {\n\n    const [postDirectory, setPostDirectory] = useState(localStorage.getItem(\"postDirectory\") === 'null') ? [] : JSON.parse(localStorage.getItem(\"postDirectory\"));        \n    const [uniquePosts, setUniquePosts] = useState([...new Set(postDirectory)]);\n    const [index, setIndex] = useState(uniquePosts.indexOf(null));\n    if (index > -1) {\n        setUniquePosts(uniquePosts.splice(index, 1));\n    }\n    localStorage.setItem(\"postDirectory\", JSON.stringify(uniquePosts));\n    \n    useEffect(() => {\n        setPostDirectory(uniquePosts);\n    }, []);\n\n    const getDirectory = () => postDirectory;\n    const removeLastId = () => setPostDirectory(postDirectory.pop());\n\n    const deleteLast = () => {\n         console.log(`PostDirectory => deleteLast()`)\n         setPostDirectory(removeLastId());\n         localStorage.setItem(\"postDirectory\", JSON.stringify(postDirectory))\n     }\n     const add = (id) => {\n         console.log(`PostDirectory => add(${id})`);\n         const pDirectory = postDirectory;\n         pDirectory.push(id)\n         setPostDirectory(pDirectory);\n         localStorage.setItem(\"postDirectory\", JSON.stringify(pDirectory))\n     }\n     \n     const getLastIndex = () => Number(postDirectory.length-1);\n     const getLastId = () => postDirectory[getLastIndex()];\n     const get2ndToLastId = () => postDirectory[getLastIndex()-1];\n     const getStorageItem = (id) => localStorage.getItem(id)\n     const getLastItem = () => (localStorage.getItem(getLastId()) === 'null') ? JSON.parse(getStorageItem(get2ndToLastId())) : JSON.parse(getStorageItem(getLastId()));\n     \n     return <p>Count: {postDirectory.length}</p> \n     \n }\n export default PostDirectory;\n\n*/\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PostDirectory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getDirectory = () => this.postDirectory;\n    this.removeLastId = () => this.postDirectory.pop();\n    this.deleteLast = () => {\n      console.log(`PostDirectory => deleteLast()`);\n      this.postDirectory = this.removeLastId();\n      localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory));\n      this.setState({\n        postDirectory: this.postDirectory\n      });\n    };\n    this.add = id => {\n      console.log(`PostDirectory => add(${id})`);\n      this.postDirectory.push(id);\n      localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory));\n    };\n    this.delete = id => {\n      console.log(`PostDirectory => delete(${id})`);\n      const index = this.postDirectory.indexOf(String(id));\n      console.log(`${index} of ${this.postDirectory.length}`);\n      this.postDirectory.splice(index, 1);\n      console.log(`${index} of ${this.postDirectory.length}`);\n      localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory));\n      localStorage.removeItem(id);\n      localStorage.setItem(\"lastPostId\", `${this.postDirectory[this.postDirectory.length - 1]}`);\n      this.setState({\n        postDirectory: this.postDirectory\n      });\n    };\n    this.getLastIndex = () => Number(this.state.postDirectory.length - 1);\n    this.getLastId = () => this.state.postDirectory[this.getLastIndex()];\n    this.get2ndToLastId = () => this.state.postDirectory[this.getLastIndex() - 1];\n    this.getStorageItem = id => localStorage.getItem(id);\n    this.getLastItem = () => localStorage.getItem(this.getLastId()) === 'null' ? JSON.parse(this.getStorageItem(this.get2ndToLastId())) : JSON.parse(this.getStorageItem(this.getLastId()));\n    this.postDirectory = localStorage.getItem(\"postDirectory'\") === 'null' ? [] : JSON.parse(localStorage.getItem(\"postDirectory\"));\n    this.uniquePosts = [...new Set(this.postDirectory)];\n    const _index = this.uniquePosts.indexOf(null);\n    if (_index > -1) {\n      this.uniquePosts.splice(_index, 1);\n    }\n    localStorage.setItem(\"postDirectory\", JSON.stringify(this.uniquePosts));\n    this.state = {\n      postDirectory: this.uniquePosts\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-20\",\n      children: [\"Count: \", this.state.postDirectory.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }, this);\n  }\n}\nexport default PostDirectory;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PostDirectory","Component","constructor","props","getDirectory","postDirectory","removeLastId","pop","deleteLast","console","log","localStorage","setItem","JSON","stringify","setState","add","id","push","delete","index","indexOf","String","length","splice","removeItem","getLastIndex","Number","state","getLastId","get2ndToLastId","getStorageItem","getItem","getLastItem","parse","uniquePosts","Set","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/PostDirectory.js"],"sourcesContent":["/* backup pre hooks 1/7/21\nimport React, { useState, useEffect } from 'react';\nconst PostDirectory = () => {\n\n    const [postDirectory, setPostDirectory] = useState(localStorage.getItem(\"postDirectory\") === 'null') ? [] : JSON.parse(localStorage.getItem(\"postDirectory\"));        \n    const [uniquePosts, setUniquePosts] = useState([...new Set(postDirectory)]);\n    const [index, setIndex] = useState(uniquePosts.indexOf(null));\n    if (index > -1) {\n        setUniquePosts(uniquePosts.splice(index, 1));\n    }\n    localStorage.setItem(\"postDirectory\", JSON.stringify(uniquePosts));\n    \n    useEffect(() => {\n        setPostDirectory(uniquePosts);\n    }, []);\n\n    const getDirectory = () => postDirectory;\n    const removeLastId = () => setPostDirectory(postDirectory.pop());\n\n    const deleteLast = () => {\n         console.log(`PostDirectory => deleteLast()`)\n         setPostDirectory(removeLastId());\n         localStorage.setItem(\"postDirectory\", JSON.stringify(postDirectory))\n     }\n     const add = (id) => {\n         console.log(`PostDirectory => add(${id})`);\n         const pDirectory = postDirectory;\n         pDirectory.push(id)\n         setPostDirectory(pDirectory);\n         localStorage.setItem(\"postDirectory\", JSON.stringify(pDirectory))\n     }\n     \n     const getLastIndex = () => Number(postDirectory.length-1);\n     const getLastId = () => postDirectory[getLastIndex()];\n     const get2ndToLastId = () => postDirectory[getLastIndex()-1];\n     const getStorageItem = (id) => localStorage.getItem(id)\n     const getLastItem = () => (localStorage.getItem(getLastId()) === 'null') ? JSON.parse(getStorageItem(get2ndToLastId())) : JSON.parse(getStorageItem(getLastId()));\n     \n     return <p>Count: {postDirectory.length}</p> \n     \n }\n export default PostDirectory;\n\n*/\nimport React from 'react';\nclass PostDirectory extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.postDirectory = (localStorage.getItem(\"postDirectory'\") === 'null') ? [] : JSON.parse(localStorage.getItem(\"postDirectory\"));        \n        this.uniquePosts = [...new Set(this.postDirectory)];\n        const index = this.uniquePosts.indexOf(null);\n        if (index > -1) {\n            this.uniquePosts.splice(index, 1);\n        }\n        localStorage.setItem(\"postDirectory\", JSON.stringify(this.uniquePosts))\n        this.state = {\n            postDirectory: this.uniquePosts,\n        };\n    }\n    \n     getDirectory = () => this.postDirectory;\n     removeLastId = () => this.postDirectory.pop();\n     deleteLast = () => {\n         console.log(`PostDirectory => deleteLast()`)\n         this.postDirectory = this.removeLastId();\n         localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory))\n         this.setState({\n             postDirectory: this.postDirectory\n         }); \n     }\n     add = (id) => {\n         console.log(`PostDirectory => add(${id})`);\n         this.postDirectory.push(id);\n         localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory))\n     }\n     delete = (id) => {\n         console.log(`PostDirectory => delete(${id})`)\n         const index = this.postDirectory.indexOf(String(id));\n         console.log(`${index} of ${this.postDirectory.length}`)\n         this.postDirectory.splice(index, 1);\n         console.log(`${index} of ${this.postDirectory.length}`)\n         localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory))\n         localStorage.removeItem(id);\n         localStorage.setItem(\"lastPostId\", `${this.postDirectory[this.postDirectory.length-1]}`);\n         this.setState({\n             postDirectory: this.postDirectory\n         });\n     }\n     getLastIndex = () => Number(this.state.postDirectory.length-1);\n     getLastId = () => this.state.postDirectory[this.getLastIndex()];\n     get2ndToLastId = () => this.state.postDirectory[this.getLastIndex()-1];\n     getStorageItem = (id) => localStorage.getItem(id)\n     getLastItem = () => (localStorage.getItem(this.getLastId()) === 'null') ? JSON.parse(this.getStorageItem(this.get2ndToLastId())) : JSON.parse(this.getStorageItem(this.getLastId()));\n     render() {      \n             return <div className='p-20'>Count: {this.state.postDirectory.length}</div> \n     }\n     \n }\n export default PostDirectory;"],"mappings":"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"},"metadata":{},"sourceType":"module"}