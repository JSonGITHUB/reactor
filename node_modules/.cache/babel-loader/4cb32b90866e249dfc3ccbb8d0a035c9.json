{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js\";\nimport React, { forwardRef, useRef, useImperativeHandle, useState } from 'react';\nimport PostDirectory from './PostDirectory.js';\n\nconst LogId = ({\n  logId\n}) => {\n  const childRef = useRef();\n  const postDirectory = /*#__PURE__*/React.createElement(PostDirectory, {\n    ref: childRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 27\n    }\n  });\n  const [logID, setLogId] = useState(logId === null || logId === undefined ? childRef.current.getLastId() : logId);\n  const [log, setLog] = useState(JSON.parse(localStorage.getItem(logID)) === null ? this.getLogTemplate : JSON.parse(localStorage.getItem(logID)));\n\n  const getDate = () => log.Day.Date;\n\n  const generateNewLogId = () => {\n    const date = new Date();\n    const st = date.toDateString().replace(/ /g, \"\");\n    const nd = date.toLocaleTimeString().replace(/ /g, \"\");\n    localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n    const newId = `${st}${nd}`;\n    console.log(`LogId: generateNewLogId => this.state.logID: ${newId}`);\n    return newId;\n  };\n\n  const getLogId = () => logID;\n\n  console.log(`LastLogId => render: this.state.logID: ${logID} - this.state.log: ${log}`);\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }, \"Count: \", postDirectory.length);\n};\n\nexport default LogId;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js"],"names":["React","forwardRef","useRef","useImperativeHandle","useState","PostDirectory","LogId","logId","childRef","postDirectory","logID","setLogId","undefined","current","getLastId","log","setLog","JSON","parse","localStorage","getItem","getLogTemplate","getDate","Day","Date","generateNewLogId","date","st","toDateString","replace","nd","toLocaleTimeString","setItem","newId","console","getLogId","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,mBAApC,EAAyDC,QAAzD,QAAyE,OAAzE;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACzB,QAAMC,QAAQ,GAAGN,MAAM,EAAvB;AACA,QAAMO,aAAa,gBAAG,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAED,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB;AAEA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAEG,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKK,SAA7B,GAA0CJ,QAAQ,CAACK,OAAT,CAAiBC,SAAjB,EAA1C,GAAyEP,KAA1E,CAAlC;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAEa,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBV,KAArB,CAAX,MAA4C,IAA7C,GAAqD,KAAKW,cAA1D,GAA2EJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBV,KAArB,CAAX,CAA5E,CAA9B;;AAEA,QAAMY,OAAO,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAQC,IAA9B;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,IAAI,GAAG,IAAIF,IAAJ,EAAb;AACA,UAAMG,EAAE,GAAGD,IAAI,CAACE,YAAL,GAAoBC,OAApB,CAA4B,IAA5B,EAAiC,EAAjC,CAAX;AACA,UAAMC,EAAE,GAAGJ,IAAI,CAACK,kBAAL,GAA0BF,OAA1B,CAAkC,IAAlC,EAAuC,EAAvC,CAAX;AACAV,IAAAA,YAAY,CAACa,OAAb,CAAqB,YAArB,EAAoC,GAAEL,EAAG,GAAEG,EAAG,EAA9C;AACA,UAAMG,KAAK,GAAI,GAAEN,EAAG,GAAEG,EAAG,EAAzB;AACAI,IAAAA,OAAO,CAACnB,GAAR,CAAa,gDAA+CkB,KAAM,EAAlE;AACA,WAAOA,KAAP;AACH,GARD;;AASA,QAAME,QAAQ,GAAG,MAAMzB,KAAvB;;AAEAwB,EAAAA,OAAO,CAACnB,GAAR,CAAa,0CAAyCL,KAAM,sBAAqBK,GAAI,EAArF;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWN,aAAa,CAAC2B,MAAzB,CAAP;AAEH,CAtBD;;AAuBA,eAAe9B,KAAf","sourcesContent":["import React, { forwardRef, useRef, useImperativeHandle, useState } from 'react';\nimport PostDirectory from './PostDirectory.js';\n\nconst LogId = ({ logId }) => {\n    const childRef = useRef();\n    const postDirectory = <PostDirectory ref={childRef}/>;\n    \n    const [logID, setLogId] = useState((logId === null || logId === undefined) ? childRef.current.getLastId() : logId);\n    const [log, setLog] = useState((JSON.parse(localStorage.getItem(logID)) === null) ? this.getLogTemplate : JSON.parse(localStorage.getItem(logID)));\n\n    const getDate = () => log.Day.Date;\n    const generateNewLogId = () => {\n        const date = new Date()\n        const st = date.toDateString().replace(/ /g,\"\");\n        const nd = date.toLocaleTimeString().replace(/ /g,\"\");\n        localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n        const newId = `${st}${nd}`;\n        console.log(`LogId: generateNewLogId => this.state.logID: ${newId}`);\n        return newId;\n    }\n    const getLogId = () => logID;\n   \n    console.log(`LastLogId => render: this.state.logID: ${logID} - this.state.log: ${log}`);\n    return <p>Count: {postDirectory.length}</p> \n    \n}\nexport default LogId;"]},"metadata":{},"sourceType":"module"}