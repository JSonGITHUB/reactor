{"ast":null,"code":"import _objectSpread from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import N from'../../assets/images/windN.png';import NE from'../../assets/images/windNE.png';import E from'../../assets/images/windE.png';import SE from'../../assets/images/windSE.png';import S from'../../assets/images/windS.png';import SW from'../../assets/images/windSW.png';import W from'../../assets/images/windW.png';import NW from'../../assets/images/windNW.png';var WindDirection=function WindDirection(_ref){var columns=_ref.columns,setWind=_ref.setWind;var _useState=useState({columns:columns,station:null,speed:null,angle:null,direction:null,gusts:null}),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var getWindData=function getWindData(){console.log(\"getWind ->\");var data;var returnJSON=function returnJSON(response){return response.json();};var returnRejection=function returnRejection(response){return Promise.reject({status:response.status,data:data});};var validate=function validate(response){return response.ok?returnJSON(response):returnRejection(response);};var getCurrentTime=new Date();var year=getCurrentTime.getFullYear();var currentMonth=getCurrentTime.getMonth()+1;var month=currentMonth<10?\"0\".concat(currentMonth):currentMonth;var currentDate=getCurrentTime.getDate();var date=currentDate<10?\"0\".concat(currentDate):currentDate;var currentHour=getCurrentTime.getHours();var hours=currentHour<10?\"0\".concat(currentHour):currentHour;var startHour=currentHour-1<10?\"0\".concat(currentHour-1):currentHour-1;var currentMinutes=getCurrentTime.getMinutes();var minutes=currentMinutes<10?\"0\".concat(currentMinutes):currentMinutes;var getEndTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(hours,\":\").concat(minutes);var getStartTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(startHour,\":00\");getCurrentTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(hours,\":\").concat(minutes);console.log(\"Wind   - getStartTime: \".concat(getStartTime,\" => getEndTime: \").concat(getEndTime));var uriWind=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getStartTime,\"&end_date=\").concat(getEndTime,\"&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriWindTest=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2020:00&end_date=20200520%2020:00&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json\";var tri='https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?date=latest&station=9410230&product=wind&time_zone=lst&units=english&format=json';var uri=tri;var proxyurl=\"https://cors-anywhere.herokuapp.com/\";//const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\nfetch(proxyurl+uri).then(function(response){return validate(response);}).then(function(data){console.log(\"WindDirection => direction: \".concat(JSON.stringify(data.data[data.data.length-1],null,2)));setWind(data.data[data.data.length-1].dr,data.data[data.data.length-1].d,data.data[data.data.length-1].s,data.data[data.data.length-1].g);setStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{station:data.metadata.name,speed:data.data[data.data.length-1].s,angle:data.data[data.data.length-1].d,direction:data.data[data.data.length-1].dr,gusts:data.data[data.data.length-1].g});});}).catch(function(err){return console.log(\"Something went wrong!\\nuri: \".concat(uri,\" \\npath: \").concat(window.location.pathname,\"\\n\"),err);});};/*\n    {\n        \"metadata\":{\n            \"id\":\"9410230\",\n            \"name\":\"La Jolla\",\n            \"lat\":\"32.8669\",\n            \"lon\":\"-117.2571\"\n        }, \n        \"data\": [\n            {\n                \"t\":\"2020-05-20 20:00\", \n                \"s\":\"5.25\", \n                \"d\":\"313.00\",\n                 \"dr\":\"NW\", \n                 \"g\":\"7.39\", \n                 \"f\":\"0,0\"\n            }\n        ]\n    }\n    */useEffect(function(){getWindData();/*\t\t\n        const timerID = setInterval(\n            () => getWindData(),\n            300000\n        );\n        return function cleanUp () {\n            clearInterval(timerID);\n        }\n        */},[]);/*\n    Water Level: 2.01 ft Above MLLW\n    Next Tide at 3:09 PM: Low 1.70 ft\n    Gusting to: 12.3 kts from WSW\n    */var getWindIcon=function getWindIcon(){var windDirection=status.direction;var classes=\"shaka r-20 p-2 bg-white\";if(windDirection===\"N\"){return/*#__PURE__*/React.createElement(\"img\",{src:N,className:classes,alt:windDirection});}else if(windDirection===\"NE\"||windDirection===\"NNE\"||windDirection===\"ENE\"){return/*#__PURE__*/React.createElement(\"img\",{src:NE,className:classes,alt:windDirection});}else if(windDirection===\"E\"){return/*#__PURE__*/React.createElement(\"img\",{src:E,className:classes,alt:windDirection});}else if(windDirection===\"SE\"||windDirection===\"SSE\"||windDirection===\"ESE\"){return/*#__PURE__*/React.createElement(\"img\",{src:SE,className:classes,alt:windDirection});}else if(windDirection===\"S\"){return/*#__PURE__*/React.createElement(\"img\",{src:S,className:classes,alt:windDirection});}else if(windDirection===\"SW\"||windDirection===\"SSW\"||windDirection===\"WSW\"){return/*#__PURE__*/React.createElement(\"img\",{src:SW,className:classes,alt:windDirection});}else if(windDirection===\"W\"){return/*#__PURE__*/React.createElement(\"img\",{src:W,className:classes,alt:windDirection});}else if(windDirection===\"NW\"||windDirection===\"NNW\"||windDirection===\"WNW\"){return/*#__PURE__*/React.createElement(\"img\",{src:NW,className:classes,alt:windDirection});}};var getCurrentWind=function getCurrentWind(){return/*#__PURE__*/React.createElement(\"div\",{className:\"r-10 m-5 p-10 bg-lite white\"},/*#__PURE__*/React.createElement(\"div\",null,getWindIcon()),/*#__PURE__*/React.createElement(\"div\",null,\"\".concat(status.direction,\" \").concat(Number(status.angle).toFixed(0),\"\\xB0\")),/*#__PURE__*/React.createElement(\"div\",null,\"\".concat(Number(status.speed).toFixed(0),\"-\").concat(Number(status.gusts).toFixed(0)),\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"greet\"},\"knots\")));};return/*#__PURE__*/React.createElement(\"div\",null,getCurrentWind());};export default WindDirection;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/WindDirection.js"],"names":["React","useState","useEffect","N","NE","E","SE","S","SW","W","NW","WindDirection","columns","setWind","station","speed","angle","direction","gusts","status","setStatus","getWindData","console","log","data","returnJSON","response","json","returnRejection","Promise","reject","validate","ok","getCurrentTime","Date","year","getFullYear","currentMonth","getMonth","month","currentDate","getDate","date","currentHour","getHours","hours","startHour","currentMinutes","getMinutes","minutes","getEndTime","getStartTime","uriWind","uriWindTest","tri","uri","proxyurl","fetch","then","JSON","stringify","length","dr","d","s","g","prevState","metadata","name","catch","err","window","location","pathname","getWindIcon","windDirection","classes","getCurrentWind","Number","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport N from '../../assets/images/windN.png';\nimport NE from '../../assets/images/windNE.png';\nimport E from '../../assets/images/windE.png';\nimport SE from '../../assets/images/windSE.png';\nimport S from '../../assets/images/windS.png';\nimport SW from '../../assets/images/windSW.png';\nimport W from '../../assets/images/windW.png';\nimport NW from '../../assets/images/windNW.png';\n\nconst WindDirection = ({columns, setWind}) => {\n    \n    const [status, setStatus] = useState({\n        columns: columns,\n        station: null,\n        speed: null,\n        angle: null,\n        direction: null,\n        gusts: null\n    });\n            \n    const getWindData = () => {\n        console.log(`getWind ->`);\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        let getCurrentTime = new Date();\n        const year = getCurrentTime.getFullYear();\n        const currentMonth = getCurrentTime.getMonth()+1;\n        const month = ((currentMonth)<10) ? `0${(currentMonth)}` : currentMonth;\n        const currentDate = getCurrentTime.getDate();\n        const date = (currentDate<10) ? `0${currentDate}` : currentDate;\n        const currentHour = getCurrentTime.getHours();\n        const hours = (currentHour<10) ? `0${currentHour}` : currentHour;\n        const startHour = ((currentHour-1)<10) ? `0${(currentHour-1)}` : (currentHour-1);\n        const currentMinutes = getCurrentTime.getMinutes();\n        const minutes = (currentMinutes<10) ? `0${currentMinutes}` : currentMinutes;\n        const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n        getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        console.log(`Wind   - getStartTime: ${getStartTime} => getEndTime: ${getEndTime}`)\n        const uriWind = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getStartTime}&end_date=${getEndTime}&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriWindTest = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2020:00&end_date=20200520%2020:00&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const tri = 'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?date=latest&station=9410230&product=wind&time_zone=lst&units=english&format=json'\n        const uri = tri;\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n        //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        fetch(proxyurl + uri)\n            .then(response => validate(response))\n            .then(data => {\n                console.log(`WindDirection => direction: ${JSON.stringify(data.data[data.data.length - 1],null,2)}`)\n                setWind(data.data[data.data.length - 1].dr, data.data[data.data.length - 1].d, data.data[data.data.length - 1].s, data.data[data.data.length - 1].g)\n                setStatus(prevState => ({\n                    ...prevState,\n                    station: data.metadata.name,\n                    speed: data.data[data.data.length - 1].s,\n                    angle: data.data[data.data.length - 1].d,\n                    direction: data.data[data.data.length - 1].dr,\n                    gusts: data.data[data.data.length - 1].g\n                }))\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n\n    }\n    /*\n    {\n        \"metadata\":{\n            \"id\":\"9410230\",\n            \"name\":\"La Jolla\",\n            \"lat\":\"32.8669\",\n            \"lon\":\"-117.2571\"\n        }, \n        \"data\": [\n            {\n                \"t\":\"2020-05-20 20:00\", \n                \"s\":\"5.25\", \n                \"d\":\"313.00\",\n                 \"dr\":\"NW\", \n                 \"g\":\"7.39\", \n                 \"f\":\"0,0\"\n            }\n        ]\n    }\n    */\n\n    useEffect(() => {   \n        getWindData();  \n        /*\t\t\n        const timerID = setInterval(\n            () => getWindData(),\n            300000\n        );\n        return function cleanUp () {\n            clearInterval(timerID);\n        }\n        */\n    },[]);\n\n    /*\n    Water Level: 2.01 ft Above MLLW\n    Next Tide at 3:09 PM: Low 1.70 ft\n    Gusting to: 12.3 kts from WSW\n    */\n    const getWindIcon = () => {\n        const windDirection = status.direction;\n        const classes = \"shaka r-20 p-2 bg-white\";\n        if (windDirection === \"N\") {\n            return <img src={N} className={classes} alt={windDirection} />;\n        } else if ((windDirection === \"NE\") || (windDirection === \"NNE\") || (windDirection === \"ENE\")) {\n            return <img src={NE} className={classes} alt={windDirection} />;\n        } else if (windDirection === \"E\") {\n            return <img src={E} className={classes} alt={windDirection} />;\n        } else if ((windDirection === \"SE\") || (windDirection === \"SSE\") || (windDirection === \"ESE\")) {\n            return <img src={SE} className={classes} alt={windDirection} />;\n        } else if (windDirection === \"S\") {\n            return <img src={S} className={classes} alt={windDirection} />;\n        } else if ((windDirection === \"SW\") || (windDirection === \"SSW\") || (windDirection === \"WSW\")) {\n            return <img src={SW} className={classes} alt={windDirection} />;\n        } else if (windDirection === \"W\") {\n            return <img src={W} className={classes} alt={windDirection} />;\n        } else if ((windDirection === \"NW\") || (windDirection === \"NNW\") || (windDirection === \"WNW\")) {\n            return <img src={NW} className={classes} alt={windDirection} />;\n        }\n    }\n    const getCurrentWind = () => {\n        return (\n            <div className=\"r-10 m-5 p-10 bg-lite white\">\n                <div>{getWindIcon()}</div>\n                <div>{`${status.direction} ${Number(status.angle).toFixed(0)}°`}</div>\n                <div>{`${Number(status.speed).toFixed(0)}-${Number(status.gusts).toFixed(0)}`} <span className=\"greet\">knots</span></div>\n            </div>\n        )\n    }\n    return <div>{getCurrentWind()}</div>\n}\n\nexport default WindDirection;"]},"metadata":{},"sourceType":"module"}