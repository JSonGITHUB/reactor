{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/BoilingVerdict.js\";\nimport React from 'react';\n\nclass BoilingVerdict extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.celsius = props.celsius;\n    this.state = {\n      temperature: ''\n    };\n  }\n\n  toCelsius(fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n  }\n\n  toFahrenheit(celsius) {\n    return celsius * 9 / 5 + 32;\n  }\n\n  render() {\n    if (this.celsius >= 100) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }\n      }, \"The water would boil.\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }\n    }, \"The water would not boil.\");\n  }\n\n}\n\nexport default BoilingVerdict;\nexport function TryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n\n  if (Number.isNaN(input)) {\n    return '';\n  }\n\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/BoilingVerdict.js"],"names":["React","BoilingVerdict","Component","constructor","props","handleChange","bind","celsius","state","temperature","toCelsius","fahrenheit","toFahrenheit","render","TryConvert","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,OAAL,GAAeH,KAAK,CAACG,OAArB;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAb;AACH;;AACDC,EAAAA,SAAS,CAACC,UAAD,EAAa;AAClB,WAAO,CAACA,UAAU,GAAG,EAAd,IAAoB,CAApB,GAAwB,CAA/B;AACH;;AAEDC,EAAAA,YAAY,CAACL,OAAD,EAAU;AAClB,WAAQA,OAAO,GAAG,CAAV,GAAc,CAAf,GAAoB,EAA3B;AACH;;AAEDM,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKN,OAAL,IAAgB,GAApB,EAAyB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACH;;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;AACH;;AArBwC;;AAwB7C,eAAeN,cAAf;AAEA,OAAO,SAASa,UAAT,CAAoBL,WAApB,EAAiCM,OAAjC,EAA0C;AAC7C,QAAMC,KAAK,GAAGC,UAAU,CAACR,WAAD,CAAxB;;AACA,MAAIS,MAAM,CAACC,KAAP,CAAaH,KAAb,CAAJ,EAAyB;AACrB,WAAO,EAAP;AACH;;AACD,QAAMI,MAAM,GAAGL,OAAO,CAACC,KAAD,CAAtB;AACA,QAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,IAApB,IAA4B,IAA5C;AACA,SAAOC,OAAO,CAACG,QAAR,EAAP;AACH","sourcesContent":["import React from 'react';\n\nclass BoilingVerdict extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.celsius = props.celsius;\n        this.state = {temperature: ''};\n    }\n    toCelsius(fahrenheit) {\n        return (fahrenheit - 32) * 5 / 9;\n    }\n\n    toFahrenheit(celsius) {\n        return (celsius * 9 / 5) + 32;\n    }\n\n    render() {\n        if (this.celsius >= 100) {\n            return <p>The water would boil.</p>;\n        }\n        return <p>The water would not boil.</p>;\n    }\n}\n\nexport default BoilingVerdict;\n\nexport function TryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n        return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n}"]},"metadata":{},"sourceType":"module"}