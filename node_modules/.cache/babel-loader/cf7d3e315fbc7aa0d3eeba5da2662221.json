{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/LogEntry.js\";\nimport React from 'react';\nimport Dialog from './functional/Dialog.js'; //import shakaBlack from './assets/images/shakaBlack.png';\n//import thumbsUp from './assets/images/ThumbsUp.png';\n//import thumbsDown from './assets/images/ThumbsDown.png';\n\nimport Selector from './Forms/FunctionalSelector.js';\nimport RadioSelector from './Forms/FormRadio.js'; //import DateTimePicker from 'react-datetime-picker';\n\nimport DatePicker from 'react-date-picker';\n\nclass LogEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.replaceCommas = value => JSON.stringify(value).replace(/\",\"/g, '\",\\n\\t\"').replace(/},\"/g, '},\\n\"');\n\n    this.replaceBrackets = value => value.replace(/\":{\"/g, '\":\\n{\\n\\t\"').replace(/{\"/g, '{\\n\"').replace(/}/g, '\\n}').replace(/},/g, '},\\n').replace(/}/g, '').replace(/{/g, '').replace(/\":\"/g, ': ').replace(/\"/g, '').replace(/,/g, '');\n\n    this.items = () => this.state.items;\n\n    this.hasBeenSelected = (item, groupTitle) => item.selections.indexOf(this.getStateLog()[groupTitle][item.description]) !== -1 ? true : false;\n\n    this.defaultSelection = (item, groupTitle) => this.hasBeenSelected(item, groupTitle) ? item.selections.indexOf(this.log[groupTitle][item.description]) : Math.floor(item.selections.length / 2);\n\n    this.selectorColor = (item, groupTitle) => this.hasBeenSelected(item, groupTitle) ? \"completedSelector\" : \"incompletedSelector\";\n\n    this.radioItems = (item, groupTitle) => /*#__PURE__*/React.createElement(RadioSelector, {\n      header: groupTitle,\n      groupTitle: groupTitle,\n      selected: this.defaultSelection(item, groupTitle),\n      label: item.description,\n      items: item.selections,\n      onChange: this.handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 40\n      }\n    });\n\n    this.selector = (item, groupTitle) => /*#__PURE__*/React.createElement(\"div\", {\n      className: this.selectorColor(item, groupTitle) + \" radius-10 p-20 bg-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(Selector, {\n      groupTitle: groupTitle,\n      selected: this.defaultSelection(item, groupTitle),\n      label: item.description,\n      items: item.selections,\n      onChange: this.handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }));\n\n    this.radio = (item, groupTitle) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radius-10 bg-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 35\n      }\n    }, this.radioItems(item, groupTitle));\n\n    this.group = item => item.group;\n\n    this.selectionInterface = (item, groupTitle) => item.type === \"radio\" ? this.radio(item, groupTitle) : this.selector(item, groupTitle);\n\n    this.groups = () => this.items().map(item => {\n      const getKey = keyPrefix => keyPrefix + item.description.toString().toUpperCase() + Math.round(Math.random() * 100);\n\n      const headerClasses = 'subHeader color-yellow';\n      const selectorClasses = \"greet p-20 bg-vdk-green flex3Column\";\n      const groupClasses = \"flexContainer radius-10\";\n      const description = item.description;\n\n      const addToLogs = group => {\n        this.log[description][group.description] = group.selections[this.defaultSelection(group, description)];\n        this.props.onChange(description, group.description, group.selections[this.defaultSelection(group, description)], false);\n      };\n\n      const logger = this.group(item).map(group => addToLogs(group));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"groupConainer\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"groupHeader\"),\n        className: headerClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, item.description), /*#__PURE__*/React.createElement(\"div\", {\n        className: groupClasses,\n        key: getKey(\"groupSubConainer\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, this.group(item).map(group => /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"selectorConainer\"),\n        className: selectorClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }\n      }, this.selectionInterface(group, description)))));\n    });\n\n    this.categories = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 24\n      }\n    }, this.groups());\n\n    this.dateEntry = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5 subHeader color-yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexContainer bg-vdk-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      onChange: this.onDateChange,\n      value: this.state.date,\n      className: \"p-10 bg-green flex3Column radius-10 m-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 31\n      }\n    })));\n\n    this.getStateLog = () => this.props.getStateLog();\n\n    this.buttonLabel = props.buttonLabel;\n    this.title = props.title;\n    this.log = {\n      Location: {},\n      Swell: {},\n      Tide: {},\n      Wind: {},\n      Conditions: {}\n    };\n    this.message = props.message;\n    this.state = {\n      date: new Date(),\n      items: props.items,\n      log: {}\n    };\n    this.handleSelection = this.handleSelection.bind(this);\n    this.updateNotes = this.updateNotes.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onDateChange = this.onDateChange.bind(this);\n  }\n\n  handleSelection(groupTitle, label, selected) {\n    if (typeof groupTitle === \"string\") {\n      this.log[groupTitle][label] = selected;\n      this.props.onChange(groupTitle, label, selected, true);\n      this.setState({\n        log: this.log\n      });\n    }\n  }\n\n  updateNotes(event) {\n    this.setState({\n      notes: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const logExists = this.state.log !== undefined && JSON.stringify(this.state.log) !== \"{}\" ? true : false;\n\n    const consoleStateLogData = () => console.log(`LogEntry.state.log: ${this.replaceBrackets(this.replaceCommas(this.state.log))}`);\n\n    const consoleLogEntryDate = () => console.log(`LogEntry.log: ${this.replaceBrackets(this.replaceCommas(this.log))}`);\n\n    const logIt = () => logExists ? consoleStateLogData() : consoleLogEntryDate();\n\n    logIt();\n    event.preventDefault();\n  }\n\n  onDateChange(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  render() {\n    //this.logIt();\n    console.log(`GET STATE LOG ${JSON.stringify(this.getStateLog())}`);\n    return /*#__PURE__*/React.createElement(Dialog, {\n      title: this.title,\n      message: this.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, this.dateEntry(), this.categories(), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.entry,\n      onChange: this.updateNotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 86\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 91\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, this.buttonLabel)));\n  }\n\n}\n\nexport default LogEntry;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/LogEntry.js"],"names":["React","Dialog","Selector","RadioSelector","DatePicker","LogEntry","Component","constructor","props","replaceCommas","value","JSON","stringify","replace","replaceBrackets","items","state","hasBeenSelected","item","groupTitle","selections","indexOf","getStateLog","description","defaultSelection","log","Math","floor","length","selectorColor","radioItems","handleSelection","selector","radio","group","selectionInterface","type","groups","map","getKey","keyPrefix","toString","toUpperCase","round","random","headerClasses","selectorClasses","groupClasses","addToLogs","onChange","logger","categories","dateEntry","onDateChange","date","buttonLabel","title","Location","Swell","Tide","Wind","Conditions","message","Date","bind","updateNotes","handleSubmit","label","selected","setState","event","notes","target","logExists","undefined","consoleStateLogData","console","consoleLogEntryDate","logIt","preventDefault","render","entry"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dialog from './functional/Dialog.js';\n//import shakaBlack from './assets/images/shakaBlack.png';\n//import thumbsUp from './assets/images/ThumbsUp.png';\n//import thumbsDown from './assets/images/ThumbsDown.png';\nimport Selector from './Forms/FunctionalSelector.js';\nimport RadioSelector from './Forms/FormRadio.js';\n//import DateTimePicker from 'react-datetime-picker';\nimport DatePicker from 'react-date-picker';\n\nclass LogEntry extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.buttonLabel = props.buttonLabel;\n        this.title = props.title;\n        this.log = {\n            Location: {},\n            Swell: {},\n            Tide: {},\n            Wind: {},\n            Conditions: {},\n        };\n        this.message = props.message;\n        this.state = {\n            date: new Date(),\n            items: props.items,\n            log: {}\n        };\n        this.handleSelection = this.handleSelection.bind(this);\n        this.updateNotes = this.updateNotes.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n    }\n    handleSelection(groupTitle, label, selected) {\n        if (typeof groupTitle === \"string\") {\n            this.log[groupTitle][label] = selected;\n            this.props.onChange(groupTitle, label, selected, true);\n            this.setState({\n                log: this.log\n            });\n        } \n    }\n    updateNotes(event) {\n        this.setState({\n            notes: event.target.value\n        });\n    }\n    handleSubmit(event) {\n        const logExists = (this.state.log !== undefined && JSON.stringify(this.state.log) !== \"{}\") ? true : false;\n        const consoleStateLogData = () => console.log(`LogEntry.state.log: ${this.replaceBrackets(this.replaceCommas(this.state.log))}`);\n        const consoleLogEntryDate = () => console.log(`LogEntry.log: ${this.replaceBrackets(this.replaceCommas(this.log))}`)\n        const logIt = () => (logExists) ? consoleStateLogData() : consoleLogEntryDate();\n        logIt();\n        event.preventDefault();\n    }\n    onDateChange(date) {\n        this.setState({\n            date: date \n        });\n    }\n    replaceCommas = (value) => JSON.stringify(value).replace(/\",\"/g,'\",\\n\\t\"').replace(/},\"/g,'},\\n\"');\n    replaceBrackets = (value) => (value).replace(/\":{\"/g,'\":\\n{\\n\\t\"').replace(/{\"/g,'{\\n\"').replace(/}/g,'\\n}').replace(/},/g,'},\\n').replace(/}/g,'').replace(/{/g,'').replace(/\":\"/g,': ').replace(/\"/g,'').replace(/,/g,'');\n    items = () => this.state.items;\n    hasBeenSelected = (item,groupTitle) => ((item.selections.indexOf(this.getStateLog()[groupTitle][item.description])) !== -1) ? true : false;\n    defaultSelection = (item,groupTitle) => (this.hasBeenSelected(item,groupTitle)) ? (item.selections.indexOf(this.log[groupTitle][item.description])) : Math.floor(item.selections.length/2); \n    selectorColor = (item,groupTitle) => (this.hasBeenSelected(item,groupTitle)) ? \"completedSelector\" : \"incompletedSelector\";\n    \n    radioItems = (item, groupTitle) => <RadioSelector\n                    header={groupTitle}\n                    groupTitle={groupTitle} \n                    selected={this.defaultSelection(item,groupTitle)} \n                    label={item.description} \n                    items={item.selections} \n                    onChange={this.handleSelection}\n                />;\n    selector = (item, groupTitle) => <div className={this.selectorColor(item,groupTitle) + \" radius-10 p-20 bg-green\"}>\n                <Selector \n                    groupTitle={groupTitle} \n                    selected={this.defaultSelection(item,groupTitle)} \n                    label={item.description} \n                    items={item.selections}\n                    onChange={this.handleSelection}\n                />\n            </div>;\n\n    radio = (item, groupTitle) => <div className=\"radius-10 bg-green\">\n                {this.radioItems(item, groupTitle)}\n            </div>;\n    group = (item) => item.group;\n    selectionInterface = (item, groupTitle) => (item.type === \"radio\") ? this.radio(item, groupTitle) : this.selector(item, groupTitle);\n\n    groups = () => this.items().map((item) => {\n        const getKey = (keyPrefix) => keyPrefix + item.description.toString().toUpperCase()+(Math.round(Math.random()*100));\n        const headerClasses = 'subHeader color-yellow';\n        const selectorClasses = \"greet p-20 bg-vdk-green flex3Column\";\n        const groupClasses = \"flexContainer radius-10\";\n        const description = item.description;\n        const addToLogs = (group) => {\n            this.log[description][group.description] = group.selections[this.defaultSelection(group, description)]\n            this.props.onChange(description, group.description, group.selections[this.defaultSelection(group, description)], false);\n        }\n        const logger = this.group(item).map((group) => addToLogs(group));\n        return <div key={getKey(\"groupConainer\")}>\n                    <div key={getKey(\"groupHeader\")} className={headerClasses}>\n                        {item.description}\n                    </div>\n                    <div className={groupClasses} key={getKey(\"groupSubConainer\")}>\n                        {this.group(item).map((group) => \n                            <div key={getKey(\"selectorConainer\")} className={selectorClasses}>\n                                {this.selectionInterface(group, description)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n    })\n    categories = () => <div className='description'>{this.groups()}</div>;\n    dateEntry = () => <div>\n                        <div className='mb-5 subHeader color-yellow'>Date</div>\n                        <div className='flexContainer bg-vdk-green'>\n                            <DatePicker\n                                onChange={this.onDateChange}\n                                value={this.state.date} \n                                className='p-10 bg-green flex3Column radius-10 m-20'\n                            /><br/>\n                        </div>\n                    </div>\n    getStateLog = () => this.props.getStateLog();\n    \n    render() {\n        //this.logIt();\n        console.log(`GET STATE LOG ${JSON.stringify(this.getStateLog())}`)\n        return (\n            <Dialog title={this.title} message={this.message}>\n                <form onSubmit={this.handleSubmit}>\n                    {this.dateEntry()}\n                    {this.categories()}\n                    <br/>\n                    <textarea value={this.state.entry} onChange={this.updateNotes} /><br/><br/>\n                    <button onClick={this.handleSubmit}>\n                        {this.buttonLabel}\n                    </button>\n                </form>\n            </Dialog>\n        );\n    };\n}\n\nexport default LogEntry;"]},"metadata":{},"sourceType":"module"}