{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/SlideShow.js\";\nimport React from 'react';\n\nclass SlideShow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.slideShow = true;\n\n    this.toggleSlideShow = () => {\n      this.slideShow = !this.slideShow;\n      this.getAnImage(this.index);\n    };\n\n    this.getImageSlideShow = (css, path, imgArray, index) => {\n      index++;\n\n      if (index >= imgArray.length / 3) {\n        index = 1;\n      }\n\n      setTimeout(() => getAnImage(index), 1000);\n\n      getAnImage = i => {\n        console.log(`getImageSlideShow => ${i}`);\n        let url1 = path + imgArray[i].image;\n        let url2 = path + imgArray[i + 30].image;\n        let url3 = path + imgArray[i + 60].image; //console.log(url1);\n        //console.log(url2);\n        //console.log(url3);\n\n        console.log(`slideShow: ${slideShow}`);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          id: value,\n          src: url1,\n          alt: value,\n          onClick: \"this.toggleSlideShow()\",\n          className: displayClass,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          id: value,\n          src: url2,\n          alt: value,\n          onClick: \"this.toggleSlideShow()\",\n          className: displayClass,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"img\", {\n          id: value,\n          src: url3,\n          alt: value,\n          onClick: \"this.toggleSlideShow()\",\n          className: displayClass,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }\n        }));\n      };\n    };\n\n    this.init = () => {\n      let x = 1;\n      let images = [];\n\n      for (let x = 1; x <= 90; x++) {\n        if (x < 31) {\n          images.push({\n            \"image\": \"http://slcharts01.cdn-surfline.com/charts/socal/local/socal_large_\" + x + \".png\"\n          });\n        } else if (x < 61) {\n          images.push({\n            \"image\": \"http://slcharts01.cdn-surfline.com/charts/nbaja/puntabaja/nearshore/puntabaja_large_\" + (x - 30) + \".png\"\n          });\n        } else {\n          images.push({\n            \"image\": \"http://slcharts01.cdn-surfline.com/charts/sbaja/local/sbaja_large_\" + (x - 60) + \".png\"\n          });\n        }\n      }\n\n      this.getImageSlideShow(\"swell\", \"\", images, 0);\n    };\n  }\n\n  render() {\n    return this.init();\n  }\n\n}\n\nexport default SlideShow;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/SlideShow.js"],"names":["React","SlideShow","Component","slideShow","toggleSlideShow","getAnImage","index","getImageSlideShow","css","path","imgArray","length","setTimeout","i","console","log","url1","image","url2","url3","value","displayClass","init","x","images","push","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass SlideShow extends React.Component {\n    slideShow = true;\n    toggleSlideShow = () => {\n        this.slideShow = !this.slideShow;\n        this.getAnImage(this.index)\n    }\n    getImageSlideShow = (css, path, imgArray, index) => {\n        index++\n        if (index >= imgArray.length/3) { index = 1; }\n        setTimeout(() => getAnImage(index), (1000))\n        getAnImage = (i) => {\n            console.log(`getImageSlideShow => ${i}`)\n            let url1 = path + imgArray[i].image;\n            let url2 = path + imgArray[i+30].image;\n            let url3 = path + imgArray[i+60].image;\n            //console.log(url1);\n            //console.log(url2);\n            //console.log(url3);\n            console.log(`slideShow: ${slideShow}`)\n            return <div>\n                    <img id={value} src={url1} alt={value} onClick=\"this.toggleSlideShow()\" className={displayClass} />\n                    <img id={value} src={url2} alt={value} onClick=\"this.toggleSlideShow()\" className={displayClass} />\n                    <img id={value} src={url3} alt={value} onClick=\"this.toggleSlideShow()\" className={displayClass} />\n                </div>\n        }\n    }\n    init = () => {\n        let x=1;\n        let images = [];\n        for(let x=1;x<=90;x++) {\n            if (x<31) {\n                images.push({ \"image\": \"http://slcharts01.cdn-surfline.com/charts/socal/local/socal_large_\"+x+\".png\" })\n            } else if (x < 61) {\n                images.push({ \"image\": \"http://slcharts01.cdn-surfline.com/charts/nbaja/puntabaja/nearshore/puntabaja_large_\"+(x-30)+\".png\" })\n            } else {\n                images.push({ \"image\": \"http://slcharts01.cdn-surfline.com/charts/sbaja/local/sbaja_large_\"+(x-60)+\".png\" })\n            }\n        }\n        this.getImageSlideShow(\"swell\", \"\", images, 0);\n    }\n    render() {\n        return (\n            this.init()\n        )\n    }\n}\n\nexport default SlideShow;"]},"metadata":{},"sourceType":"module"}