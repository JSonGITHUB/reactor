{"ast":null,"code":"import _classCallCheck from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Loader from'../utils/Loader.js';var WindDirection=/*#__PURE__*/function(_React$Component){_inherits(WindDirection,_React$Component);var _super=_createSuper(WindDirection);function WindDirection(props){var _this;_classCallCheck(this,WindDirection);_this=_super.call(this,props);_this.getWindData=function(){var data;var returnJSON=function returnJSON(response){return response.json();};var returnRejection=function returnRejection(response){return Promise.reject({status:response.status,data:data});};var validate=function validate(response){return response.ok?returnJSON(response):returnRejection(response);};var getCurrentTime=new Date();getCurrentTime=\"\".concat(getCurrentTime.getFullYear()).concat(getCurrentTime.getMonth()+1<10?\"0\".concat(getCurrentTime.getMonth()+1):getCurrentTime.getMonth()+1).concat(getCurrentTime.getDate()<10?\"0\".concat(getCurrentTime.getDate()):getCurrentTime.getDate(),\"%20\").concat(getCurrentTime.getHours()<10?\"0\".concat(getCurrentTime.getHours()):getCurrentTime.getHours(),\":00\");console.log(\"Wind   -      getCurrentTime: \".concat(getCurrentTime,\" ===> 20200520%2018:24\"));var uriWind=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime,\"&end_date=\").concat(getCurrentTime,\"&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriWindTest=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2020:00&end_date=20200520%2020:00&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json\";var uri=uriWind;//const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\nfetch(uri).then(function(response){return validate(response);}).then(function(data){_this.setState({station:data.metadata.name,speed:data.data[0].s,angle:data.data[0].d,direction:data.data[0].dr,gusts:data.data[0].g});}).catch(function(err){return console.log(\"Something went wrong!\\nuri: \".concat(uri,\" \\npath: \").concat(window.location.pathname,\"\\n\"),err);});};_this.getCurrentWind=function(){return/*#__PURE__*/React.createElement(\"div\",{className:\"flexContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"},\"\".concat(_this.state.direction,\" \").concat(Number(_this.state.angle).toFixed(0),\"\\xB0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"},\"\".concat(Number(_this.state.speed).toFixed(0),\"-\").concat(Number(_this.state.gusts).toFixed(0)),\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"greet\"},\"knots\")));};_this.percent='twentyfivePercent mt--70 mb--70';_this.loading=function(){return/*#__PURE__*/React.createElement(\"div\",{className:_this.percent},/*#__PURE__*/React.createElement(Loader,{isMotionOn:_this.props.isMotionOn}));};_this.state={direction:null};return _this;}_createClass(WindDirection,[{key:\"componentDidMount\",/*\n    {\n        \"metadata\":{\n            \"id\":\"9410230\",\n            \"name\":\"La Jolla\",\n            \"lat\":\"32.8669\",\n            \"lon\":\"-117.2571\"\n        }, \n        \"data\": [\n            {\n                \"t\":\"2020-05-20 20:00\", \n                \"s\":\"5.25\", \n                \"d\":\"313.00\",\n                 \"dr\":\"NW\", \n                 \"g\":\"7.39\", \n                 \"f\":\"0,0\"\n            }\n        ]\n    }\n    */value:function componentDidMount(){var _this2=this;this.getWindData();this.timerID=setInterval(function(){return _this2.tick();},61000);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.timerID);}},{key:\"tick\",value:function tick(){console.log(\"getWind ->\");this.getWindData();this.props.setWind(this.state.direction,this.state.angle,this.state.speed,this.state.gusts);}/*\n    Water Level: 2.01 ft Above MLLW\n    Next Tide at 3:09 PM: Low 1.70 ft\n    Gusting to: 12.3 kts from WSW\n    */},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,this.getCurrentWind());}}]);return WindDirection;}(React.Component);export default WindDirection;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/WindDirection.js"],"names":["React","Loader","WindDirection","props","getWindData","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","getCurrentTime","Date","getFullYear","getMonth","getDate","getHours","console","log","uriWind","uriWindTest","uri","fetch","then","setState","station","metadata","name","speed","s","angle","d","direction","dr","gusts","g","catch","err","window","location","pathname","getCurrentWind","state","Number","toFixed","percent","loading","isMotionOn","timerID","setInterval","tick","clearInterval","setWind","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Loader from '../utils/Loader.js';\n\nclass WindDirection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            direction: null\n        }\n    }\n    getWindData = () => {\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        let getCurrentTime = new Date();\n        getCurrentTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${((getCurrentTime.getHours())<10) ? `0${(getCurrentTime.getHours())}` : (getCurrentTime.getHours())}:00`\n        console.log(`Wind   -      getCurrentTime: ${getCurrentTime} ===> 20200520%2018:24`)\n        const uriWind = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriWindTest = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2020:00&end_date=20200520%2020:00&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uri = uriWind;\n        \n        //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                this.setState({\n                    station: data.metadata.name,\n                    speed: data.data[0].s,\n                    angle: data.data[0].d,\n                    direction: data.data[0].dr,\n                    gusts: data.data[0].g\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n\n    }\n    /*\n    {\n        \"metadata\":{\n            \"id\":\"9410230\",\n            \"name\":\"La Jolla\",\n            \"lat\":\"32.8669\",\n            \"lon\":\"-117.2571\"\n        }, \n        \"data\": [\n            {\n                \"t\":\"2020-05-20 20:00\", \n                \"s\":\"5.25\", \n                \"d\":\"313.00\",\n                 \"dr\":\"NW\", \n                 \"g\":\"7.39\", \n                 \"f\":\"0,0\"\n            }\n        ]\n    }\n    */\n    componentDidMount() {\n        \n        this.getWindData();\n        this.timerID = setInterval(\n            () => this.tick(),\n            61000\n        );\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    tick() {\n        console.log(`getWind ->`);\n        this.getWindData();\n        this.props.setWind(this.state.direction, this.state.angle, this.state.speed, this.state.gusts)\n    }\n    /*\n    Water Level: 2.01 ft Above MLLW\n    Next Tide at 3:09 PM: Low 1.70 ft\n    Gusting to: 12.3 kts from WSW\n    */\n    getCurrentWind = () => <div className=\"flexContainer\">\n                            <div className=\"flex3Column\">{`${this.state.direction} ${Number(this.state.angle).toFixed(0)}°`}</div>\n                            <div className=\"flex3Column\">{`${Number(this.state.speed).toFixed(0)}-${Number(this.state.gusts).toFixed(0)}`} <span className=\"greet\">knots</span></div>\n                        </div>\n    percent = 'twentyfivePercent mt--70 mb--70';\n    loading = () => <div className={this.percent}>\n                <Loader isMotionOn={this.props.isMotionOn}/>\n            </div>;\n    render() {\n        return <div>{this.getCurrentWind()}</div>\n    };\n}\n\nexport default WindDirection;"]},"metadata":{},"sourceType":"module"}