{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js\";\nimport React, { useState } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport { openweatherAPI_KEY, openweatherAPI_BASE_URL } from '../../apis/config';\n\nconst CitySelector = () => {\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n  //Metric\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n  //Image Source\n  //http://openweathermap.org/img/wn/10d@2x.png\n  const key = openweatherAPI_KEY;\n  const baseUrl = openweatherAPI_BASE_URL;\n  const [city, setCity] = useState('London');\n  const [results, setResults] = useState('');\n  const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n\n  const displayResults = results => {\n    const list = results.list.map(item => {\n      const main = item.main;\n      const temp = `temp: ${main.temp}°`;\n      const feels_like = `feels like: ${main.feels_like}°`;\n      const temp_min = main.feels_like;\n      const temp_max = main.feels_like;\n      const humidity = `humidity: ${main.humidity}°`;\n      const weather = item.weather[0];\n      const mainDescription = weather.main;\n      const description = weather.description;\n      const icon = weather.icon;\n      const wind = item.wind;\n      const windSpeed = `wind: ${wind.speed}mph`;\n      const windDirection = `wind direction: ${wind.deg}`;\n      const visibility = `visibility: ${item.visibility}`;\n      const time = item.dt_txt;\n      const cards = [description, temp, feels_like, humidity, windSpeed, windDirection, visibility];\n\n      const card = matchKind => /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"card\"),\n        className: \"flex3Column bg-lite mr-5 ml-5 p-10 r-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }\n      }, matchKind));\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"width100Percant p-20 m-20 r-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow bg-green greet r-10 p-20 m-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }, time), /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, mainDescription)), cards.map(card => card(card)));\n    });\n    console.log(`display: ${JSON.stringify(results, null, 2)}`);\n    const display = list;\n    console.log(`display: ${display}`);\n    setResults(display);\n  };\n\n  const onSearch = () => {\n    fetch(`${baseUrl}${urlEnd}${key}`).then(response => response.json()) //        .then((result) => console.log(`${JSON.stringify(result,null, 2)}`))\n    .then(results => displayResults(results));\n  };\n\n  const onKeyDown = event => {\n    if (event.keyCode === 13) {\n      onSearch();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"navBranding color-yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Search your city\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyDown: onKeyDown,\n    value: city,\n    placeholder: \"Enter city\",\n    onChange: event => setCity(event.target.value),\n    className: \"greet p-20 r-10 w-200 brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSearch,\n    className: \"ml-5 greet p-20 r-10 w-200 bg-green brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Check Weather\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"navBranding color-yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Results:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-neogreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, results));\n};\n\nexport default CitySelector;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js"],"names":["React","useState","getKey","openweatherAPI_KEY","openweatherAPI_BASE_URL","CitySelector","key","baseUrl","city","setCity","results","setResults","urlEnd","displayResults","list","map","item","main","temp","feels_like","temp_min","temp_max","humidity","weather","mainDescription","description","icon","wind","windSpeed","speed","windDirection","deg","visibility","time","dt_txt","cards","card","matchKind","console","log","JSON","stringify","display","onSearch","fetch","then","response","json","onKeyDown","event","keyCode","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport { openweatherAPI_KEY, openweatherAPI_BASE_URL } from '../../apis/config';\n\n\nconst CitySelector = () => {\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n    //Metric\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n    //Image Source\n    //http://openweathermap.org/img/wn/10d@2x.png\n    const key = openweatherAPI_KEY;\n    const baseUrl = openweatherAPI_BASE_URL;\n\n    const [city, setCity] = useState('London');\n    const [results, setResults] = useState('');\n    const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n\n    const displayResults = (results) => {\n        const list = results.list.map((item) => {\n            const main = item.main;\n            const temp = `temp: ${main.temp}°`;\n            const feels_like = `feels like: ${main.feels_like}°`;\n            const temp_min = main.feels_like;\n            const temp_max = main.feels_like;\n            const humidity = `humidity: ${main.humidity}°`;\n            const weather = item.weather[0];\n            const mainDescription = weather.main;\n            const description = weather.description;\n            const icon = weather.icon;\n            const wind = item.wind;\n            const windSpeed = `wind: ${wind.speed}mph`;\n            const windDirection = `wind direction: ${wind.deg}`;\n            const visibility = `visibility: ${item.visibility}`;\n            const time = item.dt_txt;\n            const cards = [description, temp, feels_like, humidity, windSpeed, windDirection, visibility]\n\n            const card = (matchKind) => <div key={getKey(\"card\")} className=\"flex3Column bg-lite mr-5 ml-5 p-10 r-10\">\n                            {/*this.getMatchIcon(matchKind)*/}\n                            <div className=\"greet\">{matchKind}</div>\n                        </div>;\n            return (\n                <div className='width100Percant p-20 m-20 r-10 bg-dkGreen'>\n                    <div className='color-yellow bg-green greet r-10 p-20 m-20'>\n                        <div className='color-yellow'>{time}</div>\n                        <h1 className='white'>{mainDescription}</h1>\n                    </div>\n                    {cards.map((card) => card(card))}\n                </div>\n            )\n        })\n        console.log(`display: ${JSON.stringify(results, null, 2)}`)\n        const display = list;\n        console.log(`display: ${display}`)\n        setResults(display)\n    }\n\n    const onSearch = () => {\n        fetch(`${baseUrl}${urlEnd}${key}`)\n        .then((response) => response.json())\n//        .then((result) => console.log(`${JSON.stringify(result,null, 2)}`))\n        .then((results) => displayResults(results));\n    };\n    const onKeyDown = (event) => {\n        if (event.keyCode === 13) {\n            onSearch();\n        }\n    };\n    return (\n        <div>\n            <h1 className='navBranding color-yellow'>Search your city</h1>\n            <input onKeyDown={onKeyDown} value={city} placeholder=\"Enter city\"\n                    onChange={(event) => setCity(event.target.value)} className=\"greet p-20 r-10 w-200 brdr-green\"/>\n            <button onClick={onSearch} className=\"ml-5 greet p-20 r-10 w-200 bg-green brdr-green\">\n                Check Weather\n            </button>\n            <h1 className='navBranding color-yellow'>Results:</h1>\n            <div className='color-neogreen'>{results}</div>\n        </div>\n    );\n};\n\nexport default CitySelector;"]},"metadata":{},"sourceType":"module"}