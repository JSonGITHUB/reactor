{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreKeeper = () => {\n  _s();\n  const surfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const initPlayers = [{\n    name: 'You',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }, {\n    name: 'Me',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }];\n  const initNewPlayer = [{\n    name: 'You',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }];\n  const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n  const winners = [5, 10, 11, 15, 20, 21];\n  const dominoWinners = [50, 100, 150, 200];\n  const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n  const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n  //const [ editStatus, setEdit ] = useState(false);\n  const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n  //const initScores = localStorage.getItem('twoPlayerScores').split(',') || [0,0];\n  const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n  const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n  //const [twoPlayerScores, setTwoPlayerScores] = useState(initScores);\n  const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n  const [heatLength, setHeatLength] = useState(60 * 60);\n  const [waveCount, setWaveCount] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || []);\n  const darts = game !== 'darts' ? false : true;\n  const dominos = game !== 'dominos' ? false : true;\n  const surf = game !== 'surf' ? false : true;\n  const golf = game !== 'golf' ? false : true;\n  const cricketKey = (player, index) => `${player.player || player.name}Cricket${index}`;\n  const golfKey = (player, index) => `${player.player || player.name}Golf${index}`;\n  const surfKey = (player, index) => `${player.player || player.name}Surf${index}`;\n  /*\n  const dominoKey = (player, index) => {\n      if (index < 2) {\n          //console.log(`dominoKey => player: ${JSON.stringify(player, null, 2)} index: ${index}`);\n          return `${player.name}Domino${index}`\n      }\n      return\n  };\n  */\n  const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n  const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const golfPars = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n  const dominoScoring = [50, 100, 150, 200];\n  const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n  const [surferData, setSurferData] = useState([]);\n  const getScoreTotal = index => {\n    const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n    const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n    const score = highestScore + secondHighestScore;\n    console.log(`getScore => player: ${index} score: ${score}`);\n    return score;\n  };\n  const findTwoHighestIndices = scores => {\n    let highestIndex = -1;\n    let secondHighestIndex = -1;\n    let highestScore = -Infinity;\n    let secondHighestScore = -Infinity;\n    for (let i = 0; i < scores.length; i++) {\n      if (scores[i] > highestScore) {\n        secondHighestIndex = highestIndex;\n        secondHighestScore = highestScore;\n        highestIndex = i;\n        highestScore = scores[i];\n      } else if (scores[i] > secondHighestScore) {\n        secondHighestIndex = i;\n        secondHighestScore = scores[i];\n      }\n    }\n    return [highestIndex, secondHighestIndex];\n  };\n  const getTwoHighestScores = playerIndex => {\n    const player = players[playerIndex];\n    const scores = player.surfScores;\n    const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n    //console.log(`${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n    return {\n      highScoreIndex: highestIndex,\n      secondHighScoreIndex: secondHighestIndex\n    };\n  };\n  const floatDecimalOneDigit = number => {\n    if (Number.isInteger(number) && number >= 10 && number <= 99) {\n      return `${number / 10}.00`;\n    } else {\n      return `${number}.00`;\n    }\n  };\n  const scoreTotal = playerIndex => Number(players[playerIndex].surfScores[getTwoHighestScores(playerIndex).highScoreIndex]) + Number(players[playerIndex].surfScores[getTwoHighestScores(playerIndex).secondHighScoreIndex]);\n  const getSurfScore = index => {\n    if (surf) {\n      /*\n      const newPlayer = {\n          'name': players[index].player,\n          'score': 0,\n          'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n      }\n      if (playerScores.length < players.length) {\n          playerScores.push(newPlayer)\n      }\n      */\n      //console.log(`getSurfScore 1 => player ${index} scores: ${players[index].surfScores}`)\n      const surfScore = scoreTotal(index);\n      if (players[index].surfScores === undefined) {\n        const newPlayers = [...players];\n        newPlayers[index].surfScores = players[index].surfScores;\n        newPlayers[index].score = surfScore;\n        setPlayers(newPlayers);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n      }\n      //console.log(`getSurfScore 2 => scores: ${JSON.stringify(players[index], null,2)}`);\n      //console.log(`getSurfScore 3 => playerScores: ${JSON.stringify(playerScores, null,2)}`);\n      return surfScore;\n    }\n    return;\n  };\n  /*\n      useEffect(() => {\n  \n          const playerData = players.map((player, index) => ({ player, score: getScoreTotal(index) }));\n          console.log(`playerData1 => ${JSON.stringify(playerData,null,2)}`);\n          playerData.sort((a, b) => b.score - a.score);\n          console.log(`playerData2 => ${JSON.stringify(playerData,null,2)}`);\n          const sortedPlayers = playerData.map((data) => data.player);\n          const sortedScores = playerData.map((data) => data.score);\n  \n          setSurferData(playerData)\n          //setPlayers(playerData)\n          console.log(`sortedPlayers: ${JSON.stringify(sortedPlayers)}`)\n          setSortedPlayers(sortedPlayers);\n          setSortedScores(sortedScores);\n          \n          localStorage.setItem('surfersScores', JSON.stringify(playerData));\n          localStorage.setItem('players', JSON.stringify(players));\n          //setSurfersScores(JSON.stringify(playerData));\n          updatePlayers();\n  \n      }, [surfersScores]);\n  */\n  useEffect(() => {\n    if (JSON.stringify(players, null, 2) !== '[]') {\n      const surfersScores = [];\n      //console.log(`sortedPlayers 1 => ${JSON.stringify(sortedPlayers, null, 2)}`)\n      localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n      //console.log(`sortedPlayers 2 => ${JSON.stringify(sortedPlayers, null, 2)}`)\n      localStorage.setItem('players', JSON.stringify(players));\n      //console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n      //console.log(`players 4 => ${JSON.stringify(players, null,2)}`)\n    }\n  }, [players]);\n  useEffect(() => {\n    const surfersScores = [];\n    //console.log(`players 1 => ${JSON.stringify(players, null, 2)}`)\n    localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n    localStorage.setItem('players', JSON.stringify(players));\n  }, [players]);\n  useEffect(() => {\n    if (!localStorage.getItem('players') || localStorage.getItem('players') === '[]') {\n      const playersValue = localStorage.getItem('players');\n      alert(`localStorage.players: ${playersValue}`);\n      alert('Length:', playersValue.length);\n    }\n  }, []);\n  const setGameInProgress = playerIndex => {\n    if (playerIndex > 0) {\n      if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n        localStorage.setItem('gameStatus', 'inProgress');\n      }\n    }\n    localStorage.setItem(`player${playerIndex}`, 'loser');\n    //setGameStatus('inProgress');\n    return false;\n  };\n  const isWinner = playerIndex => getDartTotal(players[playerIndex]) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n  const playerScores = [{\n    name: 'Player 1',\n    scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88]\n  }, {\n    name: 'Player 2',\n    scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81]\n  }, {\n    name: 'Player 3',\n    scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89]\n  }];\n  const setGameOver = playerIndex => {\n    localStorage.setItem('gameStatus', 'gameOver');\n    localStorage.setItem(`player${playerIndex}`, 'winner');\n    //setGameStatus('gameOver');\n    return true;\n  };\n  const setTimer = (groupTitle, label, selected) => {\n    localStorage.setItem('timer', selected);\n    setTime(selected * 60);\n    setHeatLength(selected * 60);\n  };\n  if (darts && winner !== 21) {\n    localStorage.setItem('winner', 21);\n    setWinner(Number(localStorage.getItem('winner')));\n  }\n  const getDartTotal = player => {\n    //alert(`cricketScores!!${String(player.cricketScores).split(',')}`)\n    const cricketScores = String(player.cricketScores).split(',');\n    let total = 0;\n    //const score = (index) => localStorage.getItem(cricketKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    cricketScores.map((score, index) => addToTotal(Number(score)));\n    //console.log(`getDartTotalplayer=> ${(player.player || player.name)}: ${total}`)\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const getGolfTotal = player => {\n    if (!golf) return;\n    let total = 0;\n    const score = index => localStorage.getItem(golfKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    golfScoring.map((target, index) => {\n      console.log(`getGolfTotal=> ${golfKey(player, index)} ${index}: ${total}`);\n      addToTotal(Number(score(index)));\n    });\n    //console.log(`getGolfTotalplayer=> ${player}: ${total}`)\n    return total;\n  };\n  const getDominoTotal = index => {\n    //let total = 0;\n    const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n    const total = newScores[index];\n    //const score = (index) => localStorage.getItem(dominoKey(players[index], index)) || 0;\n    //const addToTotal = (value) => total = total + value;\n    //dominoScoring.map((target, index) => addToTotal(Number(score(index))));\n    console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`);\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const updateTwoPlayerScores = (player, playerIndex, score) => {\n    //const newScores = localStorage.getItem('twoPlayerScores').split(',') || [0,0];\n    //const newScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n    const newPlayers = [...players];\n    if (darts || dominos) {\n      //players.map((player, index) => newScores.push(getDartTotal(player)));\n      newPlayers[playerIndex][`${game}Score`] = getDartTotal(player);\n      //} else if (dominos) {\n      //players.map((player, index) => newScores.push(getDartTotal(player)));\n    } else {\n      newPlayers[playerIndex][`${game}Score`] = score;\n    }\n    //console.log(`updateTwoPlayerScores => updateTwoPlayerScores=>\\nplayer: ${player.name}\\nindex: ${playerIndex}\\nscore: ${score}\\nnewScore: ${JSON.stringify(newScores)}`)\n    //console.log(`${players[0].name}: ${players[0][`${game}Score`]}\\n${players[1].name}: ${players[1][`${game}Score`]}`)\n    //const isWinner = (score) => (score >= winner) ? true : false;\n    //players.map((player, index) => (isWinner(newScores[index])) ? setTwoPlayerWinner(index) : setTwoPlayerWinner(3));\n    //newScores[playerIndex] = score;\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    //setPlayers(JSON.parse(localStorage.getItem('players')));\n    //setTwoPlayerScores(newScores);\n  };\n  //console.log(`players: ${players}`)\n  const set21 = () => {\n    if (darts) {\n      localStorage.setItem('winner', 21);\n      setWinner(Number(localStorage.getItem('winner')));\n    }\n  };\n  const selectGame = (groupTitle, label, selected) => {\n    localStorage.setItem('game', selected);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setGame(localStorage.getItem('game'));\n    set21();\n  };\n  const selectWinner = (groupTitle, label, selected) => {\n    localStorage.setItem('winner', selected);\n    //localStorage.setItem('gameStatus', 'gameOver');\n    setWinner(Number(localStorage.getItem('winner')));\n  };\n  const clear = event => {\n    alert('Note was cleared: ' + event.value);\n    localStorage.setItem('players', JSON.stringify(initPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const getSurfTotal = (player, index) => {\n    let total = 0;\n    const score = index => player.surfScores[index];\n    const addToTotal = value => total = total + value;\n    surfScoring.map((target, index) => {\n      //console.log(`getSurfTotal=> ${surfKey(player, index)} ${index}: ${total}`)\n      console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`);\n      addToTotal(Number(score(index)));\n    });\n    //console.log(`getsurfTotalplayer=> ${player}: ${total}`)\n    return total;\n  };\n  const reset = event => {\n    const newPlayers = [...players];\n    //alert('Note was cleared: ');\n    //const cricketKey = (player,index) => `${player}Cricket${index}`;\n    //const golfKey = (player,index) => `${player}Golf${index}`;\n    const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n    const id = (player, index) => {\n      if (darts) {\n        return cricketKey(player, index);\n      } else if (dominos) {\n        return getDominoKey(player, index);\n      } else if (golf) {\n        return golfKey(player, index);\n      } else if (surf) {\n        return surfKey(player, index);\n      }\n      return player.player || player.name;\n    };\n    const initValue = 0;\n    if (darts) {\n      //newPlayers.map((player) => dartScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n    } else if (dominos) {\n      //players.map((player) => dominoScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n      /*\n      players.map((player) => dominoScoring.map((target, index) => {\n          console.log(`RESET => player: ${player.name} dominoScoring: ${dominoScoring.length} key: ${id(player, index)}: ${initValue}`)\n          localStorage.setItem(id(player, index), initValue);\n      }));\n      */\n      //localStorage.setItem('twoPlayerScores', '0,0');\n      const localPlayers = JSON.parse(localStorage.getItem('players'));\n      localPlayers[0].dominoScore = 0;\n      localPlayers[1].dominoScore = 0;\n      localStorage.setItem('players', JSON.stringify(localPlayers));\n    } else if (surf) {\n      newPlayers.map((player, index) => player.surfScores = surfScoring);\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n      localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n      setPlayers(localStorage.getItem('players'));\n    } else {\n      //players.map((player, index) => localStorage.setItem(id(player, index), initValue));\n      newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      setPlayers(localStorage.getItem('players'));\n    }\n    localStorage.setItem('gameStatus', 'inProgress');\n    //localStorage.setItem('twoPlayerScores', '0,0');   \n    localStorage.setItem('players', JSON.stringify(players));\n    getScore();\n  };\n  const addPlayer = event => {\n    //alert('Note was cleared: ' + value);\n    const newPlayer = prompt('Enter new name', '');\n    const initializedNewPlayer = initNewPlayer;\n    initializedNewPlayer.name = newPlayer;\n    let newPlayers = [...players];\n    if (newPlayer !== null) {\n      newPlayers.push(initializedNewPlayer);\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n    //getScore();\n  };\n\n  const editPlayer = index => {\n    //console.log(`edit: ${index}`);\n    const newPlayer = prompt('Enter new name', players[index]);\n    if (newPlayer !== null) {\n      let newPlayers = [...players];\n      newPlayers[index] = newPlayer;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n      getScore();\n    }\n  };\n  const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n  const deletePlayer = index => {\n    console.log(`deletePlayer => ${index}`);\n    const newPlayers = [...players].slice();\n    newPlayers.splice(index, 1);\n    //playerScores.splice(index, 1);\n    //surfersScores.splice(index, 1);\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const scorecard = (player, playerIndex, scoreIndex, score) => {\n    //console.log(`${game} - scorecard => player:${player} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} score: ${score}`)\n    return /*#__PURE__*/_jsxDEV(ScoreCard, {\n      game: game,\n      players: players,\n      playerIndex: playerIndex,\n      scoreIndex: scoreIndex,\n      editPlayer: editPlayer,\n      deletePlayer: deletePlayer,\n      updateTwoPlayerScores: updateTwoPlayerScores,\n      winner: winner\n    }, getKey(player), false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 16\n    }, this);\n  };\n  const scorecards = () => {\n    //console.log(`build Scorecards`)\n    const scorecard = (playerIndex, scoreIndex, score) => {\n      const player = players[playerIndex];\n      if (darts) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`);\n        return /*#__PURE__*/_jsxDEV(CricketScore, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateTwoPlayerScores: updateTwoPlayerScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 24\n        }, this);\n      }\n      if (dominos) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(Dominos, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          scoreTotal: player.dominoScore || 0,\n          treeTotal: score,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          getDominoTotal: getDominoTotal,\n          updateTwoPlayerScores: updateTwoPlayerScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 24\n        }, this);\n      }\n      if (golf) {\n        //console.log(`player: ${JSON.stringify(player, null, 2)}`);\n        console.log(`${game} - scorecard => player:${player.player || player.name}`);\n        console.log(`scoreIndex: ${scoreIndex}`);\n        console.log(`score: ${player.golfScores[scoreIndex]}`);\n        return /*#__PURE__*/_jsxDEV(ScoreCard, {\n          game: game,\n          players: players,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateTwoPlayerScores: updateTwoPlayerScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 24\n        }, this);\n      }\n      //console.log(`${game} - scorecard => player: ${(player.player || player.name)} scoreIndex: ${scoreIndex} score: ${player.score}`)\n      return /*#__PURE__*/_jsxDEV(ScoreCard, {\n        game: game,\n        players: players,\n        playerIndex: playerIndex,\n        scoreIndex: scoreIndex,\n        editPlayer: editPlayer,\n        deletePlayer: deletePlayer,\n        updateTwoPlayerScores: updateTwoPlayerScores,\n        winner: winner\n      }, getKey(player.player || player.name), false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 20\n      }, this);\n    };\n    const rankStatus = (player, index, score) => {\n      //console.log(`ranksStatus => surfersScores player: ${(player.player || player.name)} index: ${index} score: ${player.score}`)\n      const winsBy = 'Wins by 7.17';\n      const needs = 'Needs 0.01';\n      if (index === 0) {\n        return winsBy;\n      }\n      return needs;\n    };\n    const surfScoresDisplay = () => surfScoring.map((wave, index) => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer width-100-percent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3Column p-5\",\n          children: scorecard(players[0], 0, index, players[0].surfScores[index])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 r-5 font50 color-yellow m-auto\",\n          children: wave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3Column p-5\",\n          children: scorecard(players[1], 1, index, players[1].surfScores[index])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 17\n        }, this)]\n      }, getKey(`wave${wave}`), true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 13\n      }, this);\n    });\n    const setSurfScore = (playerId, index, score) => {\n      const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, score || 0);\n      const newPlayers = [...players];\n      newPlayers[playerId].surfScores[index] = Number(newScore);\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n      console.log('setSurfScore => sortedPlayers: ', sortedPlayers);\n      localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n      setPlayers(sortedPlayers);\n    };\n    const getWave = (playerId, index, score) => {\n      const player = players[playerId];\n      const theScore = player.surfScores[index];\n      //console.log(`getWave => playerId: ${playerId} player: ${(player.player || player.name)} index: ${index} score: ${player.surfScores[index]}`);\n      const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n      const highestId = highestScores[0];\n      const secondHighestId = highestScores[1];\n      const firstScore = index === highestId ? true : false;\n      const secondScore = index === secondHighestId ? true : false;\n      const getClasses = firstScore || secondScore ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n      const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        onClick: () => setSurfScore(playerId, index, score),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"greet bold color-yellow bg-dkYellow w-100 p-5\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getClasses,\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 26\n      }, this);\n      return wave;\n    };\n    const isTieScore = (playerIndex, score) => {\n      if (playerIndex !== 0) {\n        //console.log(`isTieScore => playerIndex: ${playerIndex} score: ${score} previous playerIndex: ${playerIndex - 1} previous players score: ${scoreTotal(playerIndex - 1)}`)\n        if (score === scoreTotal(playerIndex - 1)) {\n          //console.log(`isTieScore => playerIndex: ${playerIndex} score: ${score} previous playerIndex: ${playerIndex - 1} previous players score: ${scoreTotal(playerIndex - 1)}`)\n          return true;\n        }\n      }\n      return false;\n    };\n    const surfingScores = (player, index, score) => {\n      if (surf) {\n        //console.log(`surfingScores => player: ${(player.player || player.name)} index: ${index} score:${players[index].surfScores[0]}`);\n        const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flexContainer width-100-percent mt--10 mb--10\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-10 p-5 w-100 size40 mt-10\",\n              children: isTieScore(index, score) && index !== 0 ? index : index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex3ColumnLeft m-1 p-5 size40 mt-10\",\n              children: player.player || player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex3ColumnRight mr-10 p-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"size25 bold\",\n                children: score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: rankStatus(player, index, score)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 25\n            }, this)]\n          }, getKey(player.player || player.name), true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-scroll color-white copyright m-10\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"container mt-10\",\n                  children: players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 38\n        }, this);\n        return surferScores;\n      }\n      return;\n    };\n    const renderedItems = players.map((player, index) => scorecard(index, 0, 0));\n    const dartScores = dartScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(0, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(1, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 62\n    }, this));\n    const golfScores = golfScoring.map((hole, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(0, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: hole\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(1, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 13\n      }, this)]\n    }, getKey(hole), true, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 61\n    }, this));\n\n    //const surfingRankboard = players.map((player, index) => surfingRanks(player, index))};\n    const surfingScoreboard = players.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n    const dominoScores = dominoScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent p-5\",\n        children: scorecard(0, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent p-5\",\n        children: scorecard(1, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 66\n    }, this));\n    const isDominoWinner = playerIndex => getDominoTotal(playerIndex) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const dartClass = playerIndex => 'flex3Column p-20 size25 bold' + (isWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dominoClass = playerIndex => 'flex3Column p-20 size25 bold' + (isDominoWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dartScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDartTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-yellow navBranding w-200\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDartTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 13\n      }, this), dartScores]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 32\n    }, this);\n    const golfScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getGolfTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-yellow navBranding w-200\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getGolfTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 13\n      }, this), golfScores]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 32\n    }, this);\n    players.map((player, index) => scorecard(index, 0, 0));\n    const dominoScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDominoTotal(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-yellow navBranding w-200\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDominoTotal(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 13\n      }, this), dominoScores]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 34\n    }, this);\n    if (darts) return dartScoreboard;\n    if (dominos) return dominoScoreboard;\n    if (golf) return golfScoreboard;\n    //if (surf) return surfScoreboard\n    if (surf) return surfingScoreboard;else return renderedItems;\n  };\n  const updatePlayers = () => {\n    // Update the parent state to trigger a re-render\n    console.log();\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n    console.log(`updatePlayers=>`);\n  };\n  //console.log(`localStorage => game: ${localStorage.getItem('game')}`)\n  //console.log(`localStorage => gameStatus: ${localStorage.getItem('gameStatus')}`)\n  //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n  //console.log(`localStorage => winner: ${localStorage.getItem('winner')}`)\n  //console.log(`localStorage => twoPlayerScores: ${localStorage.getItem('twoPlayerScores')}`)\n  //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n  //console.log(`localStorage => player1: ${localStorage.getItem('players1')}`)\n  //console.log(`localStorage => player2: ${localStorage.getItem('players2')}`)\n  //console.log(`time: ${time}`)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fadeIn mt--30\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-20\",\n      children: [/*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"game\",\n        label: \"item.description\",\n        items: games,\n        selected: game,\n        onChange: selectGame,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: darts || dominos ? '98%' : '65%'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 17\n      }, this), darts || golf ? /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"winner\",\n        label: \"i.description\",\n        items: dominos ? dominoWinners : surf ? heatLengths : winners,\n        selected: surf ? time / 60 : winner,\n        onChange: surf ? setTimer : selectWinner,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: \"30%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 27\n      }, this), surf ? /*#__PURE__*/_jsxDEV(SurfScores, {\n        time: time,\n        setTime: setTime,\n        heatLength: heatLength,\n        isWinner: isWinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 13\n    }, this), scorecards(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow\",\n          onClick: () => addPlayer(),\n          children: \"add player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black\",\n          onClick: () => reset(),\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow\",\n          onClick: () => clear(),\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 718,\n    columnNumber: 9\n  }, this);\n};\n_s(ScoreKeeper, \"i/h0DPQzfCIlGoZqPoG5OzQF6Mw=\");\n_c = ScoreKeeper;\nexport default ScoreKeeper;\nvar _c;\n$RefreshReg$(_c, \"ScoreKeeper\");","map":{"version":3,"names":["React","useState","useEffect","ScoreCard","CricketScore","Dominos","SurfScores","Selector","getKey","jsxDEV","_jsxDEV","ScoreKeeper","_s","surfScoring","initPlayers","name","score","dominoScore","golfScores","surfScores","cricketScores","initNewPlayer","games","winners","dominoWinners","heatLengths","players","setPlayers","JSON","parse","localStorage","getItem","game","setGame","initScores","winner","setWinner","Number","time","setTime","heatLength","setHeatLength","waveCount","setWaveCount","surfersScores","setSurfersScores","darts","dominos","surf","golf","cricketKey","player","index","golfKey","surfKey","dartScoring","golfScoring","golfPars","dominoScoring","gameStatus","setGameStatus","surferData","setSurferData","getScoreTotal","highestScore","getTwoHighestScores","highScoreIndex","secondHighestScore","secondHighScoreIndex","console","log","findTwoHighestIndices","scores","highestIndex","secondHighestIndex","Infinity","i","length","playerIndex","floatDecimalOneDigit","number","isInteger","scoreTotal","getSurfScore","surfScore","undefined","newPlayers","setItem","stringify","playersValue","alert","setGameInProgress","isWinner","getDartTotal","setGameOver","playerScores","setTimer","groupTitle","label","selected","String","split","total","addToTotal","value","map","getGolfTotal","target","getDominoTotal","newScores","updateTwoPlayerScores","set21","selectGame","selectWinner","clear","event","getSurfTotal","reset","getDominoKey","id","initValue","localPlayers","sortedPlayers","sort","a","b","getScore","addPlayer","newPlayer","prompt","initializedNewPlayer","push","editPlayer","window","location","pathname","deletePlayer","slice","splice","scorecard","scoreIndex","fileName","_jsxFileName","lineNumber","columnNumber","scorecards","treeTotal","rankStatus","winsBy","needs","surfScoresDisplay","wave","className","children","setSurfScore","playerId","newScore","getWave","theScore","highestScores","highestId","secondHighestId","firstScore","secondScore","getClasses","onClick","isTieScore","surfingScores","surferScores","renderedItems","dartScores","hole","surfingScoreboard","dominoScores","isDominoWinner","dartClass","dominoClass","dartScoreboard","Fragment","golfScoreboard","dominoScoreboard","updatePlayers","items","onChange","fontSize","padding","width","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\n\nconst ScoreKeeper = () => {\n\n    const surfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const initPlayers = [\n        {\n            name: 'You',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        },\n        {\n            name: 'Me',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n    ];\n    const initNewPlayer = [\n        {\n            name: 'You',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n    ];\n    const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n    const winners = [5, 10, 11, 15, 20, 21];\n    const dominoWinners = [50, 100, 150, 200];\n    const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n    //const [ editStatus, setEdit ] = useState(false);\n    const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n    //const initScores = localStorage.getItem('twoPlayerScores').split(',') || [0,0];\n    const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n    const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n    //const [twoPlayerScores, setTwoPlayerScores] = useState(initScores);\n    const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n    const [heatLength, setHeatLength] = useState(60 * 60);\n    const [waveCount, setWaveCount] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n    const darts = (game !== 'darts') ? false : true;\n    const dominos = (game !== 'dominos') ? false : true;\n    const surf = (game !== 'surf') ? false : true;\n    const golf = (game !== 'golf') ? false : true;\n    const cricketKey = (player, index) => `${(player.player || player.name)}Cricket${index}`;\n    const golfKey = (player, index) => `${(player.player || player.name)}Golf${index}`;\n    const surfKey = (player, index) => `${(player.player || player.name)}Surf${index}`;\n    /*\n    const dominoKey = (player, index) => {\n        if (index < 2) {\n            //console.log(`dominoKey => player: ${JSON.stringify(player, null, 2)} index: ${index}`);\n            return `${player.name}Domino${index}`\n        }\n        return\n    };\n    */\n    const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n    const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const golfPars = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n    const dominoScoring = [50, 100, 150, 200];\n    const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n    const [surferData, setSurferData] = useState([]);\n\n    const getScoreTotal = (index) => {\n        const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n        const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n        const score = (highestScore + secondHighestScore);\n        console.log(`getScore => player: ${index} score: ${score}`);\n        return score;\n    }\n\n    const findTwoHighestIndices = (scores) => {\n        let highestIndex = -1;\n        let secondHighestIndex = -1;\n        let highestScore = -Infinity;\n        let secondHighestScore = -Infinity;\n\n        for (let i = 0; i < scores.length; i++) {\n            if (scores[i] > highestScore) {\n                secondHighestIndex = highestIndex;\n                secondHighestScore = highestScore;\n                highestIndex = i;\n                highestScore = scores[i];\n            } else if (scores[i] > secondHighestScore) {\n                secondHighestIndex = i;\n                secondHighestScore = scores[i];\n            }\n        }\n\n        return [highestIndex, secondHighestIndex];\n    };\n\n    const getTwoHighestScores = (playerIndex) => {\n        const player = players[playerIndex];\n        const scores = player.surfScores;\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n        //console.log(`${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            highScoreIndex: highestIndex,\n            secondHighScoreIndex: secondHighestIndex\n        };\n    };\n\n\n    const floatDecimalOneDigit = (number) => {\n        if (Number.isInteger(number) && number >= 10 && number <= 99) {\n            return `${number / 10}.00`;\n        } else {\n            return `${number}.00`;\n        }\n    };\n\n    const scoreTotal = (playerIndex) => Number(players[playerIndex].surfScores[getTwoHighestScores(playerIndex).highScoreIndex]) + Number(players[playerIndex].surfScores[getTwoHighestScores(playerIndex).secondHighScoreIndex]);\n\n    const getSurfScore = (index) => {\n        if (surf) {\n            /*\n            const newPlayer = {\n                'name': players[index].player,\n                'score': 0,\n                'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n            }\n            if (playerScores.length < players.length) {\n                playerScores.push(newPlayer)\n            }\n            */\n            //console.log(`getSurfScore 1 => player ${index} scores: ${players[index].surfScores}`)\n            const surfScore = scoreTotal(index);\n            if (players[index].surfScores === undefined) {\n                const newPlayers = [...players];\n                newPlayers[index].surfScores = players[index].surfScores;\n                newPlayers[index].score = surfScore;\n                setPlayers(newPlayers);\n                localStorage.setItem('players', JSON.stringify(newPlayers));\n            }\n            //console.log(`getSurfScore 2 => scores: ${JSON.stringify(players[index], null,2)}`);\n            //console.log(`getSurfScore 3 => playerScores: ${JSON.stringify(playerScores, null,2)}`);\n            return surfScore;\n        }\n        return\n    };\n    /*\n        useEffect(() => {\n    \n            const playerData = players.map((player, index) => ({ player, score: getScoreTotal(index) }));\n            console.log(`playerData1 => ${JSON.stringify(playerData,null,2)}`);\n            playerData.sort((a, b) => b.score - a.score);\n            console.log(`playerData2 => ${JSON.stringify(playerData,null,2)}`);\n            const sortedPlayers = playerData.map((data) => data.player);\n            const sortedScores = playerData.map((data) => data.score);\n    \n            setSurferData(playerData)\n            //setPlayers(playerData)\n            console.log(`sortedPlayers: ${JSON.stringify(sortedPlayers)}`)\n            setSortedPlayers(sortedPlayers);\n            setSortedScores(sortedScores);\n            \n            localStorage.setItem('surfersScores', JSON.stringify(playerData));\n            localStorage.setItem('players', JSON.stringify(players));\n            //setSurfersScores(JSON.stringify(playerData));\n            updatePlayers();\n    \n        }, [surfersScores]);\n    */\n    useEffect(() => {\n        if (JSON.stringify(players, null, 2) !== '[]') {\n            const surfersScores = [];\n            //console.log(`sortedPlayers 1 => ${JSON.stringify(sortedPlayers, null, 2)}`)\n            localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n            //console.log(`sortedPlayers 2 => ${JSON.stringify(sortedPlayers, null, 2)}`)\n            localStorage.setItem('players', JSON.stringify(players));\n            //console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            //console.log(`players 4 => ${JSON.stringify(players, null,2)}`)\n        }\n    }, [players]);\n\n\n    useEffect(() => {\n        const surfersScores = [];\n        //console.log(`players 1 => ${JSON.stringify(players, null, 2)}`)\n        localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n        localStorage.setItem('players', JSON.stringify(players));\n    }, [players]);\n\n    useEffect(() => {\n        if (!localStorage.getItem('players') || (localStorage.getItem('players') === '[]')) {\n            const playersValue = localStorage.getItem('players');\n            alert(`localStorage.players: ${playersValue}`)\n            alert('Length:', playersValue.length);\n        }\n    }, []);\n\n    const setGameInProgress = (playerIndex) => {\n        if (playerIndex > 0) {\n            if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n                localStorage.setItem('gameStatus', 'inProgress')\n            }\n        }\n        localStorage.setItem(`player${playerIndex}`, 'loser');\n        //setGameStatus('inProgress');\n        return false;\n    }\n    const isWinner = (playerIndex) => (getDartTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const playerScores = [\n        { name: 'Player 1', scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88] },\n        { name: 'Player 2', scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81] },\n        { name: 'Player 3', scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89] },\n    ];\n    const setGameOver = (playerIndex) => {\n        localStorage.setItem('gameStatus', 'gameOver');\n        localStorage.setItem(`player${playerIndex}`, 'winner');\n        //setGameStatus('gameOver');\n        return true;\n    }\n    const setTimer = (groupTitle, label, selected) => {\n        localStorage.setItem('timer', selected);\n        setTime(selected * 60);\n        setHeatLength(selected * 60);\n    }\n\n    if (darts && winner !== 21) {\n        localStorage.setItem('winner', 21);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const getDartTotal = (player) => {\n        //alert(`cricketScores!!${String(player.cricketScores).split(',')}`)\n        const cricketScores = String(player.cricketScores).split(',');\n        let total = 0;\n        //const score = (index) => localStorage.getItem(cricketKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        cricketScores.map((score, index) => addToTotal(Number(score)));\n        //console.log(`getDartTotalplayer=> ${(player.player || player.name)}: ${total}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const getGolfTotal = (player) => {\n        if (!golf) return;\n        let total = 0;\n        const score = (index) => localStorage.getItem(golfKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        golfScoring.map((target, index) => {\n            console.log(`getGolfTotal=> ${golfKey(player, index)} ${index}: ${total}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        //console.log(`getGolfTotalplayer=> ${player}: ${total}`)\n        return total;\n    }\n    const getDominoTotal = (index) => {\n        //let total = 0;\n        const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n        const total = newScores[index];\n        //const score = (index) => localStorage.getItem(dominoKey(players[index], index)) || 0;\n        //const addToTotal = (value) => total = total + value;\n        //dominoScoring.map((target, index) => addToTotal(Number(score(index))));\n        console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    \n    const updateTwoPlayerScores = (player, playerIndex, score) => {\n        //const newScores = localStorage.getItem('twoPlayerScores').split(',') || [0,0];\n        //const newScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n        const newPlayers = [...players];\n        if (darts || dominos) {\n            //players.map((player, index) => newScores.push(getDartTotal(player)));\n            newPlayers[playerIndex][`${game}Score`] = getDartTotal(player);\n            //} else if (dominos) {\n            //players.map((player, index) => newScores.push(getDartTotal(player)));\n        } else {\n            newPlayers[playerIndex][`${game}Score`] = score;\n        }\n        //console.log(`updateTwoPlayerScores => updateTwoPlayerScores=>\\nplayer: ${player.name}\\nindex: ${playerIndex}\\nscore: ${score}\\nnewScore: ${JSON.stringify(newScores)}`)\n        //console.log(`${players[0].name}: ${players[0][`${game}Score`]}\\n${players[1].name}: ${players[1][`${game}Score`]}`)\n        //const isWinner = (score) => (score >= winner) ? true : false;\n        //players.map((player, index) => (isWinner(newScores[index])) ? setTwoPlayerWinner(index) : setTwoPlayerWinner(3));\n        //newScores[playerIndex] = score;\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        //setPlayers(JSON.parse(localStorage.getItem('players')));\n        //setTwoPlayerScores(newScores);\n    }\n    //console.log(`players: ${players}`)\n    const set21 = () => {\n        if (darts) {\n            localStorage.setItem('winner', 21);\n            setWinner(Number(localStorage.getItem('winner')));\n        }\n    }\n    const selectGame = (groupTitle, label, selected) => {\n        localStorage.setItem('game', selected)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setGame(localStorage.getItem('game'));\n        set21();\n    }\n    const selectWinner = (groupTitle, label, selected) => {\n        localStorage.setItem('winner', selected)\n        //localStorage.setItem('gameStatus', 'gameOver');\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const clear = (event) => {\n        alert('Note was cleared: ' + event.value);\n        localStorage.setItem('players', JSON.stringify(initPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n\n    const getSurfTotal = (player, index) => {\n        let total = 0;\n        const score = (index) => player.surfScores[index];\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n            //console.log(`getSurfTotal=> ${surfKey(player, index)} ${index}: ${total}`)\n            console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        //console.log(`getsurfTotalplayer=> ${player}: ${total}`)\n        return total;\n    }\n\n    const reset = (event) => {\n\n        const newPlayers = [...players];\n        //alert('Note was cleared: ');\n        //const cricketKey = (player,index) => `${player}Cricket${index}`;\n        //const golfKey = (player,index) => `${player}Golf${index}`;\n        const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n\n        const id = (player, index) => {\n            if (darts) {\n                return cricketKey(player, index);\n            } else if (dominos) {\n                return getDominoKey(player, index);\n            } else if (golf) {\n                return golfKey(player, index);\n            } else if (surf) {\n                return surfKey(player, index);\n            }\n            return (player.player || player.name);\n        }\n\n        const initValue = 0;\n        if (darts) {\n            //newPlayers.map((player) => dartScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n        } else if (dominos) {\n            //players.map((player) => dominoScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n            /*\n            players.map((player) => dominoScoring.map((target, index) => {\n                console.log(`RESET => player: ${player.name} dominoScoring: ${dominoScoring.length} key: ${id(player, index)}: ${initValue}`)\n                localStorage.setItem(id(player, index), initValue);\n            }));\n            */\n            //localStorage.setItem('twoPlayerScores', '0,0');\n            const localPlayers = JSON.parse(localStorage.getItem('players'));\n            localPlayers[0].dominoScore = 0;\n            localPlayers[1].dominoScore = 0;\n            localStorage.setItem('players', JSON.stringify(localPlayers));\n        } else if (surf) {\n            newPlayers.map((player, index) => player.surfScores = surfScoring);\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n            localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n            setPlayers(localStorage.getItem('players'));\n        } else {\n            //players.map((player, index) => localStorage.setItem(id(player, index), initValue));\n            newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            setPlayers(localStorage.getItem('players'));\n        }\n        localStorage.setItem('gameStatus', 'inProgress');\n        //localStorage.setItem('twoPlayerScores', '0,0');   \n        localStorage.setItem('players', JSON.stringify(players));\n        getScore();\n    }\n    const addPlayer = (event) => {\n        //alert('Note was cleared: ' + value);\n        const newPlayer = prompt('Enter new name', '');\n        const initializedNewPlayer = initNewPlayer;\n        initializedNewPlayer.name = newPlayer;\n        let newPlayers = [...players];\n        if (newPlayer !== null) {\n            newPlayers.push(initializedNewPlayer);\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n        //getScore();\n    }\n\n    const editPlayer = (index) => {\n        //console.log(`edit: ${index}`);\n        const newPlayer = prompt('Enter new name', players[index]);\n        if (newPlayer !== null) {\n            let newPlayers = [...players];\n            newPlayers[index] = newPlayer;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n            getScore();\n        }\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n\n    const deletePlayer = (index) => {\n        console.log(`deletePlayer => ${index}`)\n        const newPlayers = [...players].slice();\n        newPlayers.splice(index, 1);\n        //playerScores.splice(index, 1);\n        //surfersScores.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    };\n\n    const scorecard = (player, playerIndex, scoreIndex, score) => {\n\n        //console.log(`${game} - scorecard => player:${player} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} score: ${score}`)\n        return <ScoreCard\n            game={game}\n            players={players}\n            playerIndex={playerIndex}\n            scoreIndex={scoreIndex}\n            editPlayer={editPlayer}\n            deletePlayer={deletePlayer}\n            updateTwoPlayerScores={updateTwoPlayerScores}\n            winner={winner}\n            key={getKey(player)}\n        />\n\n    }\n\n    const scorecards = () => {\n        //console.log(`build Scorecards`)\n        const scorecard = (playerIndex, scoreIndex, score) => {\n            const player = players[playerIndex];\n            if (darts) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`)\n                return <CricketScore\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateTwoPlayerScores={updateTwoPlayerScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (dominos) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`)\n                return <Dominos\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    scoreTotal={player.dominoScore || 0}\n                    treeTotal={score}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    getDominoTotal={getDominoTotal}\n                    updateTwoPlayerScores={updateTwoPlayerScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (golf) {\n                //console.log(`player: ${JSON.stringify(player, null, 2)}`);\n                console.log(`${game} - scorecard => player:${player.player || player.name}`);\n                console.log(`scoreIndex: ${scoreIndex}`);\n                console.log(`score: ${player.golfScores[scoreIndex]}`);\n                return <ScoreCard\n                    game={game}\n                    players={players}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateTwoPlayerScores={updateTwoPlayerScores}\n                    winner={winner}\n                    key={getKey(player.player || player.name)}\n                />\n            }\n            //console.log(`${game} - scorecard => player: ${(player.player || player.name)} scoreIndex: ${scoreIndex} score: ${player.score}`)\n            return <ScoreCard\n                game={game}\n                players={players}\n                playerIndex={playerIndex}\n                scoreIndex={scoreIndex}\n                editPlayer={editPlayer}\n                deletePlayer={deletePlayer}\n                updateTwoPlayerScores={updateTwoPlayerScores}\n                winner={winner}\n                key={getKey(player.player || player.name)}\n            />\n        }\n        const rankStatus = (player, index, score) => {\n            //console.log(`ranksStatus => surfersScores player: ${(player.player || player.name)} index: ${index} score: ${player.score}`)\n            const winsBy = 'Wins by 7.17';\n            const needs = 'Needs 0.01';\n            if (index === 0) {\n                return winsBy\n            }\n            return needs\n        }\n\n        const surfScoresDisplay = () => surfScoring.map((wave, index) => {\n            <div className='flexContainer width-100-percent' key={getKey(`wave${wave}`)}>\n                <div className='flex3Column p-5'>\n                    {scorecard(players[0], 0, index, players[0].surfScores[index])}\n                </div>\n                <div className='p-20 r-5 font50 color-yellow m-auto'>\n                    {wave}\n                </div>\n                <div className='flex3Column p-5'>\n                    {scorecard(players[1], 1, index, players[1].surfScores[index])}\n                </div>\n            </div>\n        });\n\n        const setSurfScore = (playerId, index, score) => {\n\n            const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, (score || 0));\n            const newPlayers = [...players];\n            newPlayers[playerId].surfScores[index] = Number(newScore);\n\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n\n            console.log('setSurfScore => sortedPlayers: ', sortedPlayers)\n\n            localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n            setPlayers(sortedPlayers);\n        }\n\n        const getWave = (playerId, index, score) => {\n            const player = players[playerId];\n            const theScore = player.surfScores[index];\n            //console.log(`getWave => playerId: ${playerId} player: ${(player.player || player.name)} index: ${index} score: ${player.surfScores[index]}`);\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const highestId = highestScores[0];\n            const secondHighestId = highestScores[1];\n            const firstScore = (index === highestId) ? true : false;\n            const secondScore = (index === secondHighestId) ? true : false;\n            const getClasses = (firstScore || secondScore) ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n            const wave = <div className=\"column\" onClick={() => setSurfScore(playerId, index, score)}>\n                <div className='greet bold color-yellow bg-dkYellow w-100 p-5'>{index + 1}</div>\n                <div className={getClasses}>{score}</div>\n            </div>\n            return wave\n        }\n\n        const isTieScore = (playerIndex, score) => {\n            if (playerIndex !== 0) {\n                //console.log(`isTieScore => playerIndex: ${playerIndex} score: ${score} previous playerIndex: ${playerIndex - 1} previous players score: ${scoreTotal(playerIndex - 1)}`)\n                if (score === scoreTotal(playerIndex - 1)) {\n                    //console.log(`isTieScore => playerIndex: ${playerIndex} score: ${score} previous playerIndex: ${playerIndex - 1} previous players score: ${scoreTotal(playerIndex - 1)}`)\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        const surfingScores = (player, index, score) => {\n            if (surf) {\n                //console.log(`surfingScores => player: ${(player.player || player.name)} index: ${index} score:${players[index].surfScores[0]}`);\n                const surferScores = <div>\n                    <div className='flexContainer width-100-percent mt--10 mb--10' key={getKey((player.player || player.name))}>\n                        <div className='ml-10 p-5 w-100 size40 mt-10'>{(isTieScore(index, score) && (index !== 0)) ? index : (index + 1)}</div>\n                        <div className='flex3ColumnLeft m-1 p-5 size40 mt-10'>{(player.player || player.name)}</div>\n                        <div className='flex3ColumnRight mr-10 p-5'>\n                            <div className='size25 bold'>{score}</div>\n                            <div>{rankStatus(player, index, score)}</div>\n                        </div>\n                    </div>\n                    <div>\n                        <div>\n                            <div className='h-scroll color-white copyright m-10'>\n                                <div className=\"container mt-10\">\n                                    {players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                return surferScores\n            }\n            return\n        }\n        const renderedItems = players.map((player, index) => scorecard(index, 0, 0));\n\n        const dartScores = dartScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex3Column p-5'>\n                {scorecard(0, index, 0)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(1, index, 0)}\n            </div>\n        </div>);\n\n        const golfScores = golfScoring.map((hole, index) => <div className='flexContainer width-100-percent' key={getKey(hole)}>\n            <div className='flex3Column p-5'>\n                {scorecard(0, index, 0)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {hole}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(1, index, 0)}\n            </div>\n        </div>);\n\n        //const surfingRankboard = players.map((player, index) => surfingRanks(player, index))};\n        const surfingScoreboard = players.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n\n        const dominoScores = dominoScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex2Column10Percent p-5'>\n                {scorecard(0, index, score)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex2Column10Percent p-5'>\n                {scorecard(1, index, score)}\n            </div>\n        </div>);\n\n        const isDominoWinner = (playerIndex) => (getDominoTotal(playerIndex) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n\n        const dartClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        const dominoClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isDominoWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n\n        const dartScoreboard = <React.Fragment>\n            <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                <div className={dartClass(0)}>{players[0].player || players[0].name}:<div className='color-yellow mt-10'>{getDartTotal(players[0])}</div></div>\n                <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                <div className={dartClass(1)}>{players[1].player || players[1].name}:<div className='color-yellow mt-10'>{getDartTotal(players[1])}</div></div>\n            </div>\n            {dartScores}\n        </React.Fragment>\n\n        const golfScoreboard = <React.Fragment>\n            <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                <div className={dartClass(0)}>\n                    {players[0].player || players[0].name}:<div className='color-yellow mt-10'>{getGolfTotal(players[0])}</div>\n                </div>\n                <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                <div className={dartClass(1)}>\n                    {players[1].player || players[1].name}:<div className='color-yellow mt-10'>{getGolfTotal(players[1])}</div>\n                </div>\n            </div>\n            {golfScores}\n        </React.Fragment>\n\n        players.map((player, index) => scorecard(index, 0, 0));\n\n        const dominoScoreboard = <React.Fragment>\n            <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                <div className={dominoClass(0)}>\n                    {players[0].player || players[0].name}:\n                    <div className='color-yellow mt-10'>\n                        {getDominoTotal(0)}\n                    </div>\n                </div>\n                <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                <div className={dominoClass(1)}>\n                    {players[1].player || players[1].name}:\n                    <div className='color-yellow mt-10'>\n                        {getDominoTotal(1)}\n                    </div>\n                </div>\n            </div>\n            {dominoScores}\n        </React.Fragment>\n\n        if (darts) return dartScoreboard\n        if (dominos) return dominoScoreboard\n        if (golf) return golfScoreboard\n        //if (surf) return surfScoreboard\n        if (surf) return surfingScoreboard\n        else return renderedItems;\n    }\n    const updatePlayers = () => {\n        // Update the parent state to trigger a re-render\n        console.log()\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        console.log(`updatePlayers=>`)\n    };\n    //console.log(`localStorage => game: ${localStorage.getItem('game')}`)\n    //console.log(`localStorage => gameStatus: ${localStorage.getItem('gameStatus')}`)\n    //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n    //console.log(`localStorage => winner: ${localStorage.getItem('winner')}`)\n    //console.log(`localStorage => twoPlayerScores: ${localStorage.getItem('twoPlayerScores')}`)\n    //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n    //console.log(`localStorage => player1: ${localStorage.getItem('players1')}`)\n    //console.log(`localStorage => player2: ${localStorage.getItem('players2')}`)\n    //console.log(`time: ${time}`)\n\n    return (\n        <div className='fadeIn mt--30'>\n            <div className='mb-20'>\n                <Selector\n                    groupTitle='game'\n                    label='item.description'\n                    items={games}\n                    selected={game}\n                    onChange={selectGame}\n                    fontSize='25'\n                    padding='10px'\n                    width={(darts || dominos) ? '98%' : '65%'}\n                />\n                {\n                    (darts || golf)\n                        ? <React.Fragment></React.Fragment>\n                        : <Selector\n                            groupTitle='winner'\n                            label='i.description'\n                            items={(dominos) ? dominoWinners : ((surf) ? heatLengths : winners)}\n                            selected={(surf) ? (time / 60) : winner}\n                            onChange={(surf) ? setTimer : selectWinner}\n                            fontSize='25'\n                            padding='10px'\n                            width='30%'\n                        />\n                }\n                {(surf) ?\n                    <SurfScores\n                        time={time}\n                        setTime={setTime}\n                        heatLength={heatLength}\n                        isWinner={isWinner}\n                    ></SurfScores>\n                    :\n                    <React.Fragment></React.Fragment>\n\n                }\n            </div>\n            {scorecards()}\n            <div className='flexContainer width-100-percent'>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow' onClick={() => addPlayer()}>add player</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black' onClick={() => reset()}>reset</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow' onClick={() => clear()}>clear</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScoreKeeper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}