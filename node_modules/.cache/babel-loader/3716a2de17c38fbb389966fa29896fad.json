{"ast":null,"code":"import _classCallCheck from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import LogEntry from'./LogEntry.js';import Loader from'./utils/Loader.js';var Logger=/*#__PURE__*/function(_React$Component){_inherits(Logger,_React$Component);var _super=_createSuper(Logger);function Logger(props){var _this;_classCallCheck(this,Logger);_this=_super.call(this,props);_this.templateData={Day:{},Location:{},Swell:{},Wind:{},Tide:{},Conditions:{},Comments:{}};_this.getLogId=function(){return _this.props.location.state===undefined?localStorage.getItem(\"lastPostId\"):_this.props.location.state.logId.item;};_this.getStateLog=function(){return _this.state.log;};_this.log=_this.templateData;console.log(\"Logger => constructor -> props.logId: \".concat(_this.getLogId()));console.log(\"Logger => constructor -> localStorage.getItem: \".concat(_this.getLogId(),\" ====> \").concat(localStorage.getItem(_this.getLogId())));_this.state={date:new Date(),log:{},items:[],isLoaded:false,logId:_this.getLogId()};_this.updateLog=_this.updateLog.bind(_assertThisInitialized(_this));_this.getStateLog=_this.getStateLog.bind(_assertThisInitialized(_this));return _this;}_createClass(Logger,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//const getLastId = () => (localStorage.getItem(localStorage.getItem(\"lastPostId\")) === null) ? this.postDirectory[this.postDirectory.length-1] : localStorage.getItem(\"lastPostId\");\n//const logId = (this.props.location.state === undefined) ? getLastId() : this.props.location.state.logId.item;\n//console.log(`Logger => componentDidMount -> logId: ${logId}`)\nvar data;var returnJSON=function returnJSON(response){return response.json();};var returnRejection=function returnRejection(response){return Promise.reject({status:response.status,data:data});};var validate=function validate(response){return response.ok?returnJSON(response):returnRejection(response);};var requestInit={method:'GET',headers:{'Content-Type':'application/json'},mode:'cors',cache:'default'};//const uri = new Request('https://jsongithub.github.io/portfolio/assets/data/appData.json', requestInit);\n//GOOD const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\nvar uri='https://jsongithub.github.io/portfolio/assets/data/appData.json';//const uri = 'localhost:8080/writeSurfLog.json';\nfetch(uri).then(function(response){return validate(response);}).then(function(data){_this2.setState({isLoaded:true,items:data,logId:_this2.getLogId()});}).catch(function(err){return console.log(\"Something went wrong!\\nuri: \".concat(uri,\" \\npath: \").concat(window.location.pathname,\"\\n\"),err);});}},{key:\"updateLog\",value:function updateLog(groupTitle,label,selected,set){this.log[groupTitle][label]=selected;if(groupTitle!==undefined&&groupTitle!==1&&selected!==undefined&&set){this.setState({log:this.log});}}},{key:\"render\",value:function render(){var _this$state=this.state,isLoaded=_this$state.isLoaded,items=_this$state.items;//console.log(`Logger => ${JSON.stringify(this.state, null, 2)}`);\nvar appInterface=/*#__PURE__*/React.createElement(\"div\",{className:\"App-content fadeIn\"},/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"},/*#__PURE__*/React.createElement(Loader,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"}));if(isLoaded){appInterface=/*#__PURE__*/React.createElement(\"div\",{className:\"App-content fadeIn\"},/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"},/*#__PURE__*/React.createElement(LogEntry,{logId:this.getLogId(),onChange:this.updateLog,getStateLog:this.getStateLog,title:\"Session Log\",message:\"Add your session data\",buttonLabel:\"submit\",items:items})),/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"}));}return appInterface;}}]);return Logger;}(React.Component);export default Logger;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/Logger.js"],"names":["React","LogEntry","Loader","Logger","props","templateData","Day","Location","Swell","Wind","Tide","Conditions","Comments","getLogId","location","state","undefined","localStorage","getItem","logId","item","getStateLog","log","console","date","Date","items","isLoaded","updateLog","bind","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","requestInit","method","headers","mode","cache","uri","fetch","then","setState","catch","err","window","pathname","groupTitle","label","selected","set","appInterface","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LogEntry from './LogEntry.js';\nimport Loader from './utils/Loader.js';\nclass Logger extends React.Component {\n\n    templateData = {\n        Day: {},\n        Location: {},\n        Swell: {},\n        Wind: {},\n        Tide: {},\n        Conditions: {},\n        Comments: {}\n    };\n    getLogId = () => (this.props.location.state === undefined) ? localStorage.getItem(\"lastPostId\") : this.props.location.state.logId.item;\n    \n    constructor(props) {\n        super(props);\n        this.log = this.templateData;\n        console.log(`Logger => constructor -> props.logId: ${this.getLogId()}`)\n        console.log(`Logger => constructor -> localStorage.getItem: ${this.getLogId()} ====> ${localStorage.getItem(this.getLogId())}`)\n        this.state = {\n            date: new Date(),\n            log: {},\n            items: [],\n            isLoaded: false,\n            logId: this.getLogId()\n        };\n        this.updateLog = this.updateLog.bind(this);\n        this.getStateLog = this.getStateLog.bind(this);\n    }\n    componentDidMount() {\n        //const getLastId = () => (localStorage.getItem(localStorage.getItem(\"lastPostId\")) === null) ? this.postDirectory[this.postDirectory.length-1] : localStorage.getItem(\"lastPostId\");\n        //const logId = (this.props.location.state === undefined) ? getLastId() : this.props.location.state.logId.item;\n        //console.log(`Logger => componentDidMount -> logId: ${logId}`)\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        const requestInit = {\n            method:'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            cache: 'default'\n        };\n        //const uri = new Request('https://jsongithub.github.io/portfolio/assets/data/appData.json', requestInit);\n        //GOOD const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n        const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n        //const uri = 'localhost:8080/writeSurfLog.json';\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                this.setState({\n                    isLoaded: true,\n                    items: data,\n                    logId: this.getLogId()\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n       \n    }\n\n    updateLog(groupTitle, label, selected, set) {\n        this.log[groupTitle][label] = selected;\n        if (groupTitle !== undefined && groupTitle !== 1 && selected !== undefined && set) {\n            this.setState({log: this.log});\n        }\n    }\n    getStateLog = () => this.state.log;\n    \n    render() {      \n        let {isLoaded, items} = this.state;           \n        //console.log(`Logger => ${JSON.stringify(this.state, null, 2)}`);\n        let appInterface = <div className=\"App-content fadeIn\">\n                                <div className=\"flex3Column\"></div>\n                                <div className=\"flex3Column\">\n                                    <Loader />\n                                </div>\n                                <div className=\"flex3Column\"></div>\n                            </div>;\n        if (isLoaded) {\n            appInterface = <div className=\"App-content fadeIn\">\n                <div className=\"flex3Column\"></div>\n                <div className=\"flex3Column\">\n                    <LogEntry\n                        logId={this.getLogId()}\n                        onChange={this.updateLog} \n                        getStateLog={this.getStateLog} \n                        title=\"Session Log\" \n                        message=\"Add your session data\"  \n                        buttonLabel=\"submit\" \n                        items={items}\n                    />\n                </div>\n                <div className=\"flex3Column\"></div>\n            </div>\n            \n        }\n        return (\n            appInterface            \n        )\n    }\n    \n}\nexport default Logger;"]},"metadata":{},"sourceType":"module"}