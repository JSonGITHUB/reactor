{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/SpotPicker.js\";\nimport React from 'react';\nimport getKey from './utils/KeyGenerator.js';\n\nclass SpotPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tide: props.tide,\n      swellDirection: props.swellDirection,\n      windDirection: props.windDirection\n    };\n  }\n\n  componentDidMount() {\n    /*\n    let data;\n    const returnJSON = (response) => response.json();\n    const returnRejection = (response) => Promise.reject({status: response.status, data});\n    const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n    const uri = 'https://jsongithub.github.io/portfolio/assets/data/gpsData.json';\n    fetch(uri)\n        .then(response => validate(response))\n        .then(data => {\n            this.setState({\n                isLoaded: true,\n                locations: data\n            })\n        })\n        .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n    */\n  }\n\n  render() {\n    const locations = JSON.stringify(this.state.locations, null, 2);\n\n    const groups = () => JSON.parse(locations).map(item => {\n      //console.log(item.description);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }\n      }, \"?\");\n      /*\n          return <div>\n                  {item.description}\n              </div>\n      */\n    }); //console.log(`Location data: ${JSON.stringify(locations, null, 2)}`)\n\n\n    console.log(`Location data: ${locations}`);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-neogreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"HELLO from the spot picker:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 44\n      }\n    }), \"Wind: \", this.props.windDirection, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 49\n      }\n    }), \"Swell: \", this.props.swellDirection, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 51\n      }\n    }), \"Tide: \", this.props.tide, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 40\n      }\n    }), \"Locations:\", \"?\", groups());\n  }\n\n}\n\nexport default SpotPicker;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/SpotPicker.js"],"names":["React","getKey","SpotPicker","Component","constructor","props","state","tide","swellDirection","windDirection","componentDidMount","render","locations","JSON","stringify","groups","parse","map","item","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAEF,KAAK,CAACE,IADH;AAETC,MAAAA,cAAc,EAAEH,KAAK,CAACG,cAFb;AAGTC,MAAAA,aAAa,EAAEJ,KAAK,CAACI;AAHZ,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB;;;;;;;;;;;;;;;;AAgBH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAe,KAAKR,KAAL,CAAWM,SAA1B,EAAqC,IAArC,EAA2C,CAA3C,CAAlB;;AACA,UAAMG,MAAM,GAAG,MAAMF,IAAI,CAACG,KAAL,CAAWJ,SAAX,EAAsBK,GAAtB,CAA2BC,IAAD,IAAU;AACrD;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACA;;;;;AAKH,KARoB,CAArB,CAFK,CAWL;;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBR,SAAU,EAAxC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD/B,YAEW,KAAKP,KAAL,CAAWI,aAFtB,eAEoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFpC,aAGY,KAAKJ,KAAL,CAAWG,cAHvB,eAGsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHtC,YAIW,KAAKH,KAAL,CAAWE,IAJtB,eAI2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJ3B,gBAKe,GALf,EAMKQ,MAAM,EANX,CADJ;AAUH;;AApDoC;;AAuDzC,eAAeb,UAAf","sourcesContent":["import React from 'react';\nimport getKey from './utils/KeyGenerator.js';\n\nclass SpotPicker extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tide: props.tide,\n            swellDirection: props.swellDirection,\n            windDirection: props.windDirection\n        };\n    }\n    componentDidMount() {\n        /*\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        const uri = 'https://jsongithub.github.io/portfolio/assets/data/gpsData.json';\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                this.setState({\n                    isLoaded: true,\n                    locations: data\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n        */\n    }\n    \n    render() {\n        const locations = JSON.stringify(this.state.locations, null, 2);\n        const groups = () => JSON.parse(locations).map((item) => {\n            //console.log(item.description);\n            return <div>?</div>\n            /*\n                return <div>\n                        {item.description}\n                    </div>\n            */\n        })\n        //console.log(`Location data: ${JSON.stringify(locations, null, 2)}`)\n        console.log(`Location data: ${locations}`)\n        return (  \n            <div className=\"color-neogreen\">\n                HELLO from the spot picker:<br/>\n                Wind: {this.props.windDirection}<br/>\n                Swell: {this.props.swellDirection}<br/>\n                Tide: {this.props.tide}<br/>\n                Locations:{\"?\"}\n                {groups()}\n            </div>         \n        )\n    }\n    \n}\nexport default SpotPicker;"]},"metadata":{},"sourceType":"module"}