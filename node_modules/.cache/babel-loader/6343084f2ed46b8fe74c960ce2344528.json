{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/SpotPicker.js\";\nimport React from 'react';\nimport getKey from './utils/KeyGenerator.js';\nimport Geolocator from './utils/Geolocator.js';\nimport Selector from './forms/FunctionalSelector.js';\n\nclass SpotPicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.currentPositionExists = () => this.state.longitude ? true : false;\n\n    this.updateCurrentLocation = (longitude, latitude) => {\n      console.log(`UPDATING CURRENT POSITION ======> longitude: ${longitude} latitude: ${latitude}`);\n      this.setState({\n        longitude,\n        latitude\n      });\n    };\n\n    this.handleTideSelection = (groupTitle, label, selected) => {\n      localStorage.setItem(\"tide\", selected);\n      this.setState({\n        pause: false,\n        tide: selected\n      });\n    };\n\n    this.handleSwellSelection = (groupTitle, label, selected) => {\n      localStorage.setItem(\"swellDirection\", selected);\n      this.setState({\n        pause: false,\n        swellDirection: selected\n      });\n    };\n\n    this.handleWindSelection = (groupTitle, label, selected) => {\n      localStorage.setItem(\"windDirection\", selected);\n      this.setState({\n        pause: false,\n        windDirection: selected\n      });\n    };\n\n    this.handleDistanceSelection = (groupTitle, label, selected) => {\n      localStorage.setItem(\"distance\", selected);\n      this.setState({\n        pause: false,\n        distance: selected\n      });\n    };\n\n    this.pause = event => this.setState({\n      pause: true\n    });\n\n    const getLocal = item => localStorage.getItem(item);\n\n    const getProps = item => props[item];\n\n    const getDefault = item => getLocal(item) === null ? getProps(item) : getLocal(item);\n\n    this.state = {\n      pause: false,\n      date: new Date(),\n      tide: getDefault(\"tide\"),\n      swellDirection: getDefault(\"swellDirection\"),\n      windDirection: getDefault(\"windDirection\"),\n      distance: getDefault(\"distance\"),\n      locations: [{\n        \"name\": \"HB: 17th St.\",\n        \"latitude\": 33.663781,\n        \"longitude\": -118.013605,\n        \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"HB: Taco Bell Reef\",\n        \"latitude\": 33.657999,\n        \"longitude\": -118.006578,\n        \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"HB: Sanchos\",\n        \"latitude\": 33.656320,\n        \"longitude\": -118.004604,\n        \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"HB: North Peir\",\n        \"latitude\": 33.655927,\n        \"longitude\": -118.003874,\n        \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"HB: South Peir\",\n        \"latitude\": 33.655534,\n        \"longitude\": -118.003145,\n        \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"HB: River Jetties\",\n        \"latitude\": 33.630302,\n        \"longitude\": -117.961721,\n        \"swell\": [\"SSE\", \"S\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\", \"high\"]\n      }, {\n        \"name\": \"Salt Creek\",\n        \"latitude\": 33.475456,\n        \"longitude\": -117.722133,\n        \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"SE\", \"S\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"Lowers\",\n        \"latitude\": 33.382848,\n        \"longitude\": -117.588214,\n        \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"O-Side: Harbor North\",\n        \"latitude\": 33.206684,\n        \"longitude\": -117.397452,\n        \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\", \"SSE\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"O-Side: Harbor South\",\n        \"latitude\": 33.202483,\n        \"longitude\": -117.392796,\n        \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"O-Side: Pier North\",\n        \"latitude\": 33.194686,\n        \"longitude\": -117.385226,\n        \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"O-Side: Pier South\",\n        \"latitude\": 33.193630,\n        \"longitude\": -117.384826,\n        \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"Carlsbad\",\n        \"latitude\": 33.144850,\n        \"longitude\": -117.343638,\n        \"swell\": [\"WNW\", \"W\", \"SW\", \"SSW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Ponto: Jetties\",\n        \"latitude\": 33.086801,\n        \"longitude\": -117.313695,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Sea Bluff\",\n        \"latitude\": 33.081980,\n        \"longitude\": -117.311783,\n        \"swell\": [\"W\", \"NW\", \"SW\", \"SSW\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Grandview\",\n        \"latitude\": 33.076397,\n        \"longitude\": -117.310334,\n        \"swell\": [\"W\", \"NW\", \"SW\", \"SSW\", \"WNW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Beacons\",\n        \"latitude\": 33.065118,\n        \"longitude\": -117.305518,\n        \"swell\": [\"W\", \"NW\", \"SW\", \"SSW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"D Street\",\n        \"latitude\": 33.046486,\n        \"longitude\": -117.298161,\n        \"swell\": [\"W\", \"WNW\", \"NW\", \"SW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Swamis\",\n        \"latitude\": 33.034592,\n        \"longitude\": -117.292734,\n        \"swell\": [\"W\", \"NW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Pipes\",\n        \"latitude\": 33.026892,\n        \"longitude\": -117.287915,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"low\"]\n      }, {\n        \"name\": \"Traps\",\n        \"latitude\": 33.025580,\n        \"longitude\": -117.287165,\n        \"swell\": [\"NW\", \"W\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\"]\n      }, {\n        \"name\": \"Cardiff Reef\",\n        \"latitude\": 33.015631,\n        \"longitude\": -117.282085,\n        \"swell\": [\"NW\", \"W\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Georges\",\n        \"latitude\": 33.010952,\n        \"longitude\": -117.280085,\n        \"swell\": [\"NW\", \"W\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\"]\n      }, {\n        \"name\": \"Seaside Reef\",\n        \"latitude\": 33.001613,\n        \"longitude\": -117.278393,\n        \"swell\": [\"NW\", \"W\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\"]\n      }, {\n        \"name\": \"Del Mar\",\n        \"latitude\": 32.976395,\n        \"longitude\": -117.270974,\n        \"swell\": [\"SW\", \"W\", \"NW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\", \"medium\", \"high\"]\n      }, {\n        \"name\": \"Torrey Pines\",\n        \"latitude\": 32.938600,\n        \"longitude\": -117.261978,\n        \"swell\": [\"SW\", \"WNW\", \"NW\"],\n        \"wind\": [\"NE\", \"E\", \"SE\"],\n        \"tide\": [\"medium\", \"high\"]\n      }, {\n        \"name\": \"Blacks\",\n        \"latitude\": 32.881882,\n        \"longitude\": -117.252467,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\", \"SE\"],\n        \"tide\": [\"low\", \"medium\"]\n      }, {\n        \"name\": \"Scripps\",\n        \"latitude\": 32.865358,\n        \"longitude\": -117.254981,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\", \"SE\", \"S\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"La Jolla Shores\",\n        \"latitude\": 32.858424,\n        \"longitude\": -117.256791,\n        \"swell\": [\"W\", \"NW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"Mission Beach\",\n        \"latitude\": 32.767649,\n        \"longitude\": -117.252731,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\", \"S\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"OB Jetti\",\n        \"latitude\": 32.754755,\n        \"longitude\": -117.253815,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"OB Avalanche\",\n        \"latitude\": 32.751873,\n        \"longitude\": -117.252972,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"OB Pier\",\n        \"latitude\": 32.747869,\n        \"longitude\": -117.253615,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"Sunset Cliffs\",\n        \"latitude\": 32.725570,\n        \"longitude\": -117.258111,\n        \"swell\": [\"W\", \"NW\", \"SW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"Rosarito\",\n        \"latitude\": 32.333760,\n        \"longitude\": -117.056838,\n        \"swell\": [\"S\", \"SW\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\"]\n      }, {\n        \"name\": \"K-38s\",\n        \"latitude\": 32.259594,\n        \"longitude\": -116.987307,\n        \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"NE\", \"E\"],\n        \"tide\": [\"medium\", \"low\"]\n      }, {\n        \"name\": \"Gaviotas\",\n        \"latitude\": 32.252500,\n        \"longitude\": -116.961600,\n        \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n        \"wind\": [\"NE\", \"ENE\", \"E\", \"ESE\", \"SE\"],\n        \"tide\": [\"high\", \"medium\", \"low\"]\n      }, {\n        \"name\": \"La Fonda\",\n        \"latitude\": 32.121058,\n        \"longitude\": -116.885713,\n        \"swell\": [\"SW\", \"W\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"medium\", \"low\"]\n      }, {\n        \"name\": \"Punta Baja\",\n        \"latitude\": 29.954293,\n        \"longitude\": -115.807737,\n        \"swell\": [\"SW\", \"SSW\", \"S\", \"WNW\", \"W\"],\n        \"wind\": [\"N\", \"NE\"],\n        \"tide\": [\"high\", \"medium\", \"low\"]\n      }, {\n        \"name\": \"Elijandros\",\n        \"latitude\": 28.706507,\n        \"longitude\": -114.288678,\n        \"swell\": [\"W\", \"WNW\", \"NW\"],\n        \"wind\": [\"N\", \"NE\", \"E\", \"NW\"],\n        \"tide\": [\"high\", \"medium\", \"low\"]\n      }, {\n        \"name\": \"Harbor\",\n        \"latitude\": 28.666795,\n        \"longitude\": -114.239317,\n        \"swell\": [\"WNW\", \"NW\"],\n        \"wind\": [\"N\"],\n        \"tide\": [\"medium\", \"low\"]\n      }, {\n        \"name\": \"Notch\",\n        \"latitude\": 28.666800,\n        \"longitude\": -114.224431,\n        \"swell\": [\"WNW\", \"NW\"],\n        \"wind\": [\"N\"],\n        \"tide\": [\"medium\", \"low\"]\n      }, {\n        \"name\": \"Wall\",\n        \"latitude\": 28.566481,\n        \"longitude\": -114.158590,\n        \"swell\": [\"W\", \"WNW\", \"NW\"],\n        \"wind\": [\"N\", \"NE\", \"ENE\"],\n        \"tide\": [\"high\", \"medium\", \"low\"]\n      }, {\n        \"name\": \"Abreojos\",\n        \"latitude\": 26.722327,\n        \"longitude\": -113.546932,\n        \"swell\": [\"S\"],\n        \"wind\": [\"N\", \"NE\"],\n        \"tide\": [\"high\", \"medium\"]\n      }, {\n        \"name\": \"Scorpion Bay\",\n        \"latitude\": 26.239488,\n        \"longitude\": -112.477709,\n        \"swell\": [\"S\", \"SE\"],\n        \"wind\": [\"N\"],\n        \"tide\": [\"high\", \"medium\", \"low\"]\n      }, {\n        \"name\": \"Estuary\",\n        \"latitude\": 23.050415,\n        \"longitude\": -109.678612,\n        \"swell\": [\"S\", \"SE\"],\n        \"wind\": [\"N\"],\n        \"tide\": [\"high\", \"medium\", \"low\"]\n      }, {\n        \"name\": \"Colorados\",\n        \"latitude\": 11.406466,\n        \"longitude\": -86.048310,\n        \"swell\": [\"SW\"],\n        \"wind\": [\"E\", \"NE\"],\n        \"tide\": [\"high\", \"medium\"]\n      }]\n    };\n    this.handleTideSelection = this.handleTideSelection.bind(this);\n    this.handleWindSelection = this.handleWindSelection.bind(this);\n    this.handleSwellSelection = this.handleSwellSelection.bind(this);\n    this.handleDistanceSelection = this.handleDistanceSelection.bind(this);\n  }\n  /*\n  componentDidMount() {\n      \n      let data;\n      const returnJSON = (response) => response.json();\n      const returnRejection = (response) => Promise.reject({status: response.status, data});\n      const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n      const uri = 'https://jsongithub.github.io/portfolio/assets/data/gpsData.json';\n      fetch(uri)\n          .then(response => validate(response))\n          .then(data => {\n              this.setState({\n                  isLoaded: true,\n                  locations: data\n              })\n          })\n          .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n      \n  }\n  */\n\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    console.log(`this.state.pause: ${this.state.pause}`);\n    console.log(`this.state.tide: ${this.state.tide}`);\n    console.log(`this.state.swellDirection: ${this.state.swellDirection}`);\n    console.log(`this.state.windDirection: ${this.state.windDirection}`);\n\n    if (this.state.pause === false) {\n      this.setState({\n        date: new Date()\n      });\n    }\n  }\n\n  render() {\n    console.log(`currentPositionExists: ${this.currentPositionExists()}`);\n    const {\n      locations,\n      windDirection,\n      swellDirection,\n      tide\n    } = this.state;\n\n    const swellMatch = item => item.swell.indexOf(swellDirection) > -1 ? true : false;\n\n    const windMatch = item => item.wind.indexOf(windDirection) > -1 ? true : false;\n\n    const tideMatch = item => item.tide.indexOf(tide) > -1 ? true : false;\n\n    const swellDirectionMatch = direction => direction.swell === swellDirection ? true : false;\n\n    const windDirectionMatch = direction => direction.wind === windDirection ? true : false;\n\n    const tideDirectionMatch = direction => direction.tide === tide ? true : false;\n\n    const fixTo1 = number => Number(number).toFixed(1); //const distance = (loc, pos) => Math.abs(fixTo1(loc)-fixTo1(pos));\n\n\n    const distance = (loc, pos) => Math.abs(loc - pos); //.01 - 1 mile\n\n\n    const distanceRange = Number(this.state.distance) * .01;\n\n    const regionMatch = item => distance(item.latitude, this.state.latitude) < distanceRange ? true : false; //console.log(`${fixTo1(item.latitudee)} === ${fixTo1(this.state.latitude)}`)\n    //console.log(`${fixTo1(item.latitude)-fixTo1(this.state.latitude)}`)\n    //return (Number(item.latitude).toFixed(0) === Number(this.state.latitude).toFixed(0)) ? true : false;\n    //return (Math.round(Number(item.latitude)) === Math.round(Number(this.state.latitude))) ? true : false;\n    //}\n\n\n    let count = 0;\n\n    const match = item => {\n      let matches = 0;\n      matches = swellMatch(item) ? matches + 1 : matches;\n      matches = windMatch(item) ? matches + 1 : matches;\n      matches = tideMatch(item) ? matches + 1 : matches; //console.log(`${item.name} => matches: ${matches}`)\n\n      return matches;\n    };\n\n    const statusClass = status => status === true ? \"color-neogreen\" : \"color-red\";\n\n    const getMatchingLocation = item => {\n      //console.log(item.description);\n      if (match(item) > 1) {\n        //console.log(`regions match ? ${regionMatch(item)}`)\n        if (regionMatch(item)) {\n          //console.log(`Match ===> ${item.name}`)\n          count = count + 1;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: getKey(\"loc\"),\n            className: \"flexContainer\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 28\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"flex3Column\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 29\n            }\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"flex3Column neumorphism r-10 m-10 p-20\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"white bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 33\n            }\n          }, item.name), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"flexContainer\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"flex2Column columnRight pr-10\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"color-yellow bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 41\n            }\n          }, \"Swell: \"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"color-yellow bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 41\n            }\n          }, \"Wind: \"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"color-yellow bold\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 41\n            }\n          }, \"Tide: \")), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"flex2Column columnLeft\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: statusClass(swellMatch(item)),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 41\n            }\n          }, item.swell.map(swell => /*#__PURE__*/React.createElement(\"span\", {\n            className: statusClass(swellDirectionMatch({\n              swell\n            })),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 115\n            }\n          }, swell, \", \"))), /*#__PURE__*/React.createElement(\"div\", {\n            className: statusClass(windMatch(item)),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 41\n            }\n          }, item.wind.map(wind => /*#__PURE__*/React.createElement(\"span\", {\n            className: statusClass(windDirectionMatch({\n              wind\n            })),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 112\n            }\n          }, wind, \", \"))), /*#__PURE__*/React.createElement(\"div\", {\n            className: statusClass(tideMatch(item)),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 41\n            }\n          }, item.tide.map(tide => /*#__PURE__*/React.createElement(\"span\", {\n            className: statusClass(tideDirectionMatch({\n              tide\n            })),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 112\n            }\n          }, tide, \", \")))))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"flex3Column\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 29\n            }\n          }));\n        }\n      }\n    };\n\n    const matchingLocations = () => locations.map(item => getMatchingLocation(item));\n\n    const getLocations = matchingLocations(); //console.log(`Location data: ${JSON.stringify(locations, null, 2)}`)\n\n    const date = this.state.date.toLocaleTimeString();\n    const time = date.replace(\" \", \"\").toLocaleLowerCase();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-neogreen pointer\",\n      onMouseDown: this.pause,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 13\n      }\n    }, time, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 23\n      }\n    }), \"Current position:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(Geolocator, {\n      currentPositionExists: this.currentPositionExists,\n      returnCurrentPosition: this.updateCurrentLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 132\n      }\n    }), \"Wind: \", /*#__PURE__*/React.createElement(Selector, {\n      groupTitle: \"Wind\",\n      selected: this.state.windDirection,\n      label: \"Direction\",\n      items: [\"W\", \"WSW\", \"WNW\", \"E\", \"ESE\", \"ENE\", \"N\", \"NE\", \"NNE\", \"NW\", \"NNW\", \"S\", \"SE\", \"SSE\", \"SW\", \"SSW\"],\n      onChange: this.handleWindSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 23\n      }\n    }), \" - Swell: \", /*#__PURE__*/React.createElement(Selector, {\n      groupTitle: \"Swell\",\n      selected: this.state.swellDirection,\n      label: \"Direction\",\n      items: [\"W\", \"WSW\", \"WNW\", \"E\", \"ESE\", \"ENE\", \"N\", \"NE\", \"NNE\", \"NW\", \"NNW\", \"S\", \"SE\", \"SSE\", \"SW\", \"SSW\"],\n      onChange: this.handleSwellSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 29\n      }\n    }), \" - Tide: \", /*#__PURE__*/React.createElement(Selector, {\n      groupTitle: \"Tide\",\n      selected: this.state.tide,\n      label: \"current\",\n      items: [\"low\", \"medium\", \"hign\"],\n      onChange: this.handleTideSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 28\n      }\n    }), \" - Miles: \", /*#__PURE__*/React.createElement(Selector, {\n      groupTitle: \"Distance\",\n      selected: this.state.distance,\n      label: \"miles\",\n      items: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50],\n      onChange: this.handleDistanceSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"white mt-20 mb-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"color-neogreen bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 52\n      }\n    }, count, \" waves\"), \" out of \", locations.length, \" are in a \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"color-neogreen bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 146\n      }\n    }, \"15 mile radius\"), \" and prefer \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"color-neogreen bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 217\n      }\n    }, this.state.swellDirection, \" swell with \", this.state.tide, \" tide\"), \":\"), getLocations);\n  }\n\n}\n\nexport default SpotPicker;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/SpotPicker.js"],"names":["React","getKey","Geolocator","Selector","SpotPicker","Component","constructor","props","currentPositionExists","state","longitude","updateCurrentLocation","latitude","console","log","setState","handleTideSelection","groupTitle","label","selected","localStorage","setItem","pause","tide","handleSwellSelection","swellDirection","handleWindSelection","windDirection","handleDistanceSelection","distance","event","getLocal","item","getItem","getProps","getDefault","date","Date","locations","bind","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","render","swellMatch","swell","indexOf","windMatch","wind","tideMatch","swellDirectionMatch","direction","windDirectionMatch","tideDirectionMatch","fixTo1","number","Number","toFixed","loc","pos","Math","abs","distanceRange","regionMatch","count","match","matches","statusClass","status","getMatchingLocation","name","map","matchingLocations","getLocations","toLocaleTimeString","time","replace","toLocaleLowerCase","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getKey from './utils/KeyGenerator.js';\nimport Geolocator from './utils/Geolocator.js';\nimport Selector from './forms/FunctionalSelector.js';\n\nclass SpotPicker extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        const getLocal = (item) => localStorage.getItem(item);\n        const getProps = (item) => props[item];\n        const getDefault = (item) => (getLocal(item) === null) ? getProps(item) : getLocal(item);\n        this.state = {\n            pause: false,\n            date: new Date(),\n            tide: getDefault(\"tide\"),\n            swellDirection: getDefault(\"swellDirection\"),\n            windDirection: getDefault(\"windDirection\"),\n            distance: getDefault(\"distance\"),\n            locations: [{\n                \"name\": \"HB: 17th St.\",\n                \"latitude\": 33.663781,\n                \"longitude\": -118.013605,\n                \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"HB: Taco Bell Reef\",\n                \"latitude\": 33.657999,\n                \"longitude\": -118.006578,\n                \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"HB: Sanchos\",\n                \"latitude\": 33.656320,\n                \"longitude\": -118.004604,\n                \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"HB: North Peir\",\n                \"latitude\": 33.655927,\n                \"longitude\": -118.003874,\n                \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"HB: South Peir\",\n                \"latitude\": 33.655534,\n                \"longitude\": -118.003145,\n                \"swell\": [\"SSE\", \"S\", \"SW\", \"WSW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"HB: River Jetties\",\n                \"latitude\": 33.630302,\n                \"longitude\": -117.961721,\n                \"swell\": [\"SSE\", \"S\", \"SW\",\"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\", \"high\"]\n            },\n            {\n                \"name\": \"Salt Creek\",\n                \"latitude\": 33.475456,\n                \"longitude\": -117.722133,\n                \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"SE\", \"S\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"Lowers\",\n                \"latitude\": 33.382848,\n                \"longitude\": -117.588214,\n                \"swell\": [\"S\", \"SW\",\"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"O-Side: Harbor North\",\n                \"latitude\": 33.206684,\n                \"longitude\": -117.397452,\n                \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\", \"SSE\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"O-Side: Harbor South\",\n                \"latitude\": 33.202483,\n                \"longitude\": -117.392796,\n                \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"O-Side: Pier North\",\n                \"latitude\": 33.194686,\n                \"longitude\": -117.385226,\n                \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"O-Side: Pier South\",\n                \"latitude\": 33.193630,\n                \"longitude\": -117.384826,\n                \"swell\": [\"SSW\", \"SW\", \"W\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"Carlsbad\",\n                \"latitude\": 33.144850,\n                \"longitude\": -117.343638,\n                \"swell\": [\"WNW\", \"W\", \"SW\", \"SSW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Ponto: Jetties\",\n                \"latitude\": 33.086801,\n                \"longitude\": -117.313695,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Sea Bluff\",\n                \"latitude\": 33.081980,\n                \"longitude\": -117.311783,\n                \"swell\": [\"W\", \"NW\", \"SW\", \"SSW\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Grandview\",\n                \"latitude\": 33.076397,\n                \"longitude\": -117.310334,\n                \"swell\": [\"W\", \"NW\", \"SW\", \"SSW\", \"WNW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Beacons\",\n                \"latitude\": 33.065118,\n                \"longitude\": -117.305518,\n                \"swell\": [\"W\", \"NW\", \"SW\", \"SSW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"D Street\",\n                \"latitude\": 33.046486,\n                \"longitude\": -117.298161,\n                \"swell\": [\"W\", \"WNW\", \"NW\", \"SW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Swamis\",\n                \"latitude\": 33.034592,\n                \"longitude\": -117.292734,\n                \"swell\": [\"W\", \"NW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Pipes\",\n                \"latitude\": 33.026892,\n                \"longitude\": -117.287915,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"low\"]\n            },\n            {\n                \"name\": \"Traps\",\n                \"latitude\": 33.025580,\n                \"longitude\": -117.287165,\n                \"swell\": [\"NW\",\"W\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"low\"]\n            },\n            {\n                \"name\": \"Cardiff Reef\",\n                \"latitude\": 33.015631,\n                \"longitude\": -117.282085,\n                \"swell\": [\"NW\",\"W\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Georges\",\n                \"latitude\": 33.010952,\n                \"longitude\": -117.280085,\n                \"swell\": [\"NW\",\"W\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"low\"]\n            },\n            {\n                \"name\": \"Seaside Reef\",\n                \"latitude\": 33.001613,\n                \"longitude\": -117.278393,\n                \"swell\": [\"NW\",\"W\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"low\"]\n            },\n            {\n                \"name\": \"Del Mar\",\n                \"latitude\": 32.976395,\n                \"longitude\": -117.270974,\n                \"swell\": [\"SW\", \"W\", \"NW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"low\", \"medium\", \"high\"]\n            },\n            {\n                \"name\": \"Torrey Pines\",\n                \"latitude\": 32.938600,\n                \"longitude\": -117.261978,\n                \"swell\": [\"SW\", \"WNW\", \"NW\"],\n                \"wind\": [\"NE\", \"E\", \"SE\"],\n                \"tide\": [\"medium\", \"high\"]\n            },\n            {\n                \"name\": \"Blacks\",\n                \"latitude\": 32.881882,\n                \"longitude\": -117.252467,\n                \"swell\": [\"W\",\"NW\", \"SW\"],\n                \"wind\": [\"E\", \"SE\"],\n                \"tide\": [\"low\", \"medium\"]\n            },\n            {\n                \"name\": \"Scripps\",\n                \"latitude\": 32.865358,\n                \"longitude\": -117.254981,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\", \"SE\", \"S\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"La Jolla Shores\",\n                \"latitude\": 32.858424,\n                \"longitude\": -117.256791,\n                \"swell\": [\"W\", \"NW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"Mission Beach\",\n                \"latitude\": 32.767649,\n                \"longitude\": -117.252731,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\", \"S\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"OB Jetti\",\n                \"latitude\": 32.754755,\n                \"longitude\": -117.253815,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"OB Avalanche\",\n                \"latitude\": 32.751873,\n                \"longitude\": -117.252972,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"OB Pier\",\n                \"latitude\": 32.747869,\n                \"longitude\": -117.253615,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"Sunset Cliffs\",\n                \"latitude\": 32.725570,\n                \"longitude\": -117.258111,\n                \"swell\": [\"W\", \"NW\", \"SW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"Rosarito\",\n                \"latitude\": 32.333760,\n                \"longitude\": -117.056838,\n                \"swell\": [\"S\", \"SW\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\"]\n            },\n            {\n                \"name\": \"K-38s\",\n                \"latitude\": 32.259594,\n                \"longitude\": -116.987307,\n                \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n                \"wind\": [\"NE\",\"E\"],\n                \"tide\": [\"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Gaviotas\",\n                \"latitude\": 32.252500,\n                \"longitude\": -116.961600,\n                \"swell\": [\"S\", \"SW\", \"W\", \"WNW\"],\n                \"wind\": [\"NE\", \"ENE\", \"E\", \"ESE\", \"SE\"],\n                \"tide\": [\"high\", \"medium\", \"low\"]\n            },\n            {\n                \"name\": \"La Fonda\",\n                \"latitude\": 32.121058,\n                \"longitude\": -116.885713,\n                \"swell\": [\"SW\", \"W\"],\n                \"wind\": [\"E\"],\n                \"tide\": [\"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Punta Baja\",\n                \"latitude\": 29.954293,\n                \"longitude\": -115.807737,\n                \"swell\": [\"SW\", \"SSW\", \"S\", \"WNW\", \"W\"],\n                \"wind\": [\"N\", \"NE\"],\n                \"tide\": [\"high\", \"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Elijandros\",\n                \"latitude\": 28.706507,\n                \"longitude\": -114.288678,\n                \"swell\": [\"W\", \"WNW\", \"NW\"],\n                \"wind\": [\"N\",\"NE\", \"E\", \"NW\"],\n                \"tide\": [\"high\", \"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Harbor\",\n                \"latitude\": 28.666795,\n                \"longitude\": -114.239317,\n                \"swell\": [\"WNW\", \"NW\"],\n                \"wind\": [\"N\"],\n                \"tide\": [\"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Notch\",\n                \"latitude\": 28.666800,\n                \"longitude\": -114.224431,\n                \"swell\": [\"WNW\", \"NW\"],\n                \"wind\": [\"N\"],\n                \"tide\": [\"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Wall\",\n                \"latitude\": 28.566481,\n                \"longitude\": -114.158590,\n                \"swell\": [\"W\", \"WNW\", \"NW\"],\n                \"wind\": [\"N\", \"NE\", \"ENE\"],\n                \"tide\": [\"high\", \"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Abreojos\",\n                \"latitude\": 26.722327,\n                \"longitude\": -113.546932,\n                \"swell\": [\"S\"],\n                \"wind\": [\"N\", \"NE\"],\n                \"tide\": [\"high\", \"medium\"]\n            },\n            {\n                \"name\": \"Scorpion Bay\",\n                \"latitude\": 26.239488,\n                \"longitude\": -112.477709,\n                \"swell\": [\"S\", \"SE\"],\n                \"wind\": [\"N\"],\n                \"tide\": [\"high\", \"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Estuary\",\n                \"latitude\": 23.050415,\n                \"longitude\": -109.678612,\n                \"swell\": [\"S\", \"SE\"],\n                \"wind\": [\"N\"],\n                \"tide\": [\"high\", \"medium\", \"low\"]\n            },\n            {\n                \"name\": \"Colorados\",\n                \"latitude\": 11.406466,\n                \"longitude\": -86.048310,\n                \"swell\": [\"SW\"],\n                \"wind\": [\"E\", \"NE\"],\n                \"tide\": [\"high\", \"medium\"]\n            }]\n        };\n        this.handleTideSelection = this.handleTideSelection.bind(this);\n        this.handleWindSelection = this.handleWindSelection.bind(this);\n        this.handleSwellSelection = this.handleSwellSelection.bind(this);\n        this.handleDistanceSelection = this.handleDistanceSelection.bind(this);\n    }\n    /*\n    componentDidMount() {\n        \n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        const uri = 'https://jsongithub.github.io/portfolio/assets/data/gpsData.json';\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                this.setState({\n                    isLoaded: true,\n                    locations: data\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n        \n    }\n    */\n   componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    tick() {\n        console.log(`this.state.pause: ${this.state.pause}`)\n        console.log(`this.state.tide: ${this.state.tide}`)\n        console.log(`this.state.swellDirection: ${this.state.swellDirection}`)\n        console.log(`this.state.windDirection: ${this.state.windDirection}`)\n        if (this.state.pause === false) {\n            this.setState({\n                date: new Date()\n            });\n        }\n    }\n    currentPositionExists = () => (this.state.longitude) ? true : false;\n    updateCurrentLocation = (longitude, latitude) => {\n        console.log(`UPDATING CURRENT POSITION ======> longitude: ${longitude} latitude: ${latitude}`)\n        this.setState({\n            longitude,\n            latitude\n        })\n    }\n    handleTideSelection = (groupTitle, label, selected) => {\n        localStorage.setItem(\"tide\", selected);\n        this.setState({\n            pause: false,\n            tide: selected\n        })\n    }\n    handleSwellSelection = (groupTitle, label, selected) => {\n        localStorage.setItem(\"swellDirection\", selected);\n        this.setState({\n            pause: false,\n            swellDirection: selected\n        })\n    }\n    handleWindSelection = (groupTitle, label, selected) => {\n        localStorage.setItem(\"windDirection\", selected);\n        this.setState({\n            pause: false,\n            windDirection: selected\n        })\n    }\n    handleDistanceSelection = (groupTitle, label, selected) => {\n        localStorage.setItem(\"distance\", selected);\n        this.setState({\n            pause: false,\n            distance: selected\n        })\n    }\n    pause = (event) => this.setState({\n        pause: true\n    })\n    render() {\n        console.log(`currentPositionExists: ${this.currentPositionExists()}`)\n        const {locations, windDirection, swellDirection, tide} = this.state;\n        const swellMatch = (item) => (item.swell.indexOf(swellDirection)>-1) ? true : false;\n        const windMatch = (item) => (item.wind.indexOf(windDirection)>-1) ? true : false;\n        const tideMatch = (item) => (item.tide.indexOf(tide)>-1) ? true : false;\n        const swellDirectionMatch = (direction) => (direction.swell === swellDirection) ? true : false;\n        const windDirectionMatch = (direction) => (direction.wind === windDirection) ? true : false;\n        const tideDirectionMatch = (direction) => (direction.tide === tide) ? true : false;\n        const fixTo1 = (number) => Number(number).toFixed(1);\n        //const distance = (loc, pos) => Math.abs(fixTo1(loc)-fixTo1(pos));\n        const distance = (loc, pos) => Math.abs(loc-pos);\n        //.01 - 1 mile\n        const distanceRange = (Number(this.state.distance) * .01);\n        const regionMatch = (item) => (distance(item.latitude, this.state.latitude)<distanceRange) ? true : false\n            //console.log(`${fixTo1(item.latitudee)} === ${fixTo1(this.state.latitude)}`)\n            //console.log(`${fixTo1(item.latitude)-fixTo1(this.state.latitude)}`)\n            \n            //return (Number(item.latitude).toFixed(0) === Number(this.state.latitude).toFixed(0)) ? true : false;\n            //return (Math.round(Number(item.latitude)) === Math.round(Number(this.state.latitude))) ? true : false;\n        //}\n        let count = 0;\n        const match = (item) => {\n            let matches = 0;\n            matches = (swellMatch(item)) ? matches+1 : matches;\n            matches = (windMatch(item)) ? matches+1 : matches;\n            matches = (tideMatch(item)) ? matches+1 : matches;\n            //console.log(`${item.name} => matches: ${matches}`)\n            return matches;\n        }\n        const statusClass = (status) => (status === true) ? \"color-neogreen\" : \"color-red\"; \n        const getMatchingLocation = (item) => {\n            //console.log(item.description);\n            if (match(item) > 1) {\n                //console.log(`regions match ? ${regionMatch(item)}`)\n                if (regionMatch(item)) {\n                    //console.log(`Match ===> ${item.name}`)\n                    count = count + 1;\n                    return <div key={getKey(\"loc\")} className=\"flexContainer\">\n                            <div className=\"flex3Column\"></div>\n                            <div className=\"flex3Column neumorphism r-10 m-10 p-20\">\n                                <div className=\"white bold\">{item.name}</div>\n                                <div className=\"flexContainer\">\n                                    <div className=\"flex2Column columnRight pr-10\">\n                                        <div className=\"color-yellow bold\">Swell: </div>\n                                        <div className=\"color-yellow bold\">Wind: </div>\n                                        <div className=\"color-yellow bold\">Tide: </div>\n                                    </div>\n                                    <div className=\"flex2Column columnLeft\">\n                                        <div className={statusClass(swellMatch(item))}>{item.swell.map((swell) => <span className={statusClass(swellDirectionMatch({swell}))}>{swell}, </span>)}</div>\n                                        <div className={statusClass(windMatch(item))}>{item.wind.map((wind) => <span className={statusClass(windDirectionMatch({wind}))}>{wind}, </span>)}</div>\n                                        <div className={statusClass(tideMatch(item))}>{item.tide.map((tide) => <span className={statusClass(tideDirectionMatch({tide}))}>{tide}, </span>)}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"flex3Column\"></div>\n                        </div>\n                }\n            }\n        }\n        const matchingLocations = () => locations.map((item) => getMatchingLocation(item))\n        const getLocations = matchingLocations();\n        //console.log(`Location data: ${JSON.stringify(locations, null, 2)}`)\n        const date = this.state.date.toLocaleTimeString();\n        const time = date.replace(\" \",\"\").toLocaleLowerCase();\n        return (  \n            <div className=\"color-neogreen pointer\" onMouseDown={this.pause}>\n                {time}<br/>\n                Current position:<br/>\n                <Geolocator currentPositionExists={this.currentPositionExists} returnCurrentPosition={this.updateCurrentLocation}/><br/>\n                Wind: <Selector\n                    groupTitle=\"Wind\" \n                    selected={this.state.windDirection} \n                    label=\"Direction\"\n                    items={[\"W\", \"WSW\", \"WNW\", \"E\", \"ESE\", \"ENE\", \"N\", \"NE\", \"NNE\", \"NW\", \"NNW\", \"S\", \"SE\", \"SSE\", \"SW\", \"SSW\"]}\n                    onChange={this.handleWindSelection}\n                /> - Swell: <Selector\n                    groupTitle=\"Swell\"\n                    selected={this.state.swellDirection} \n                    label=\"Direction\" \n                    items={[\"W\", \"WSW\", \"WNW\", \"E\", \"ESE\", \"ENE\", \"N\", \"NE\", \"NNE\", \"NW\", \"NNW\", \"S\", \"SE\", \"SSE\", \"SW\", \"SSW\"]}\n                    onChange={this.handleSwellSelection}\n                /> - Tide: <Selector \n                    groupTitle=\"Tide\"\n                    selected={this.state.tide} \n                    label=\"current\" \n                    items={[\"low\", \"medium\", \"hign\"]}\n                    onChange={this.handleTideSelection}\n                /> - Miles: <Selector \n                    groupTitle=\"Distance\"\n                    selected={this.state.distance} \n                    label=\"miles\" \n                    items={[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]}\n                    onChange={this.handleDistanceSelection}\n                />\n                <div className=\"white mt-20 mb-20\"><span className=\"color-neogreen bold\">{count} waves</span> out of {locations.length} are in a <span className=\"color-neogreen bold\">15 mile radius</span> and prefer <span className=\"color-neogreen bold\">{this.state.swellDirection} swell with {this.state.tide} tide</span>:</div>\n                {/*locations.map((item) => getMatchingLocation(item))*/}\n                {getLocations}\n            </div>         \n        )\n    }\n    \n}\nexport default SpotPicker;\n\n\n\n"]},"metadata":{},"sourceType":"module"}