{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/CustomSpan.js\";\nimport React from 'react';\nexport function ColorizedSpan(props) {\n  const colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n  let colorIndex = -1;\n  let output = \"\";\n\n  const getNextColor = () => {\n    this.colorIndex = this.colorIndex + 1;\n    return this.colors[this.colorIndex];\n  };\n\n  console.log(`ColorizedSpan: ${props.text}`);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, props.text));\n}\nexport default function CustomSpan(props) {\n  return /*#__PURE__*/React.createElement(ColorizedSpan, {\n    text: props.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }\n  });\n}","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/CustomSpan.js"],"names":["React","ColorizedSpan","props","colors","colorIndex","output","getNextColor","console","log","text","CustomSpan"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AACjC,QAAMC,MAAM,GAAG,CAAC,aAAD,EAAgB,cAAhB,EAAgC,WAAhC,CAAf;AACA,MAAIC,UAAU,GAAG,CAAC,CAAlB;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,QAAMC,YAAY,GAAG,MAAM;AACvB,SAAKF,UAAL,GAAkB,KAAKA,UAAL,GAAkB,CAApC;AACA,WAAO,KAAKD,MAAL,CAAY,KAAKC,UAAjB,CAAP;AACH,GAHD;;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBN,KAAK,CAACO,IAAK,EAAzC;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,KAAK,CAACO,IAAb,CAAL,CAAP;AACH;AAED,eAAe,SAASC,UAAT,CAAoBR,KAApB,EAA2B;AACtC,sBAAO,oBAAC,aAAD;AAAgB,IAAA,IAAI,EAAEA,KAAK,CAACO,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH","sourcesContent":["import React from 'react';\n\nexport function ColorizedSpan(props) {\n    const colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n    let colorIndex = -1;\n    let output = \"\";\n    const getNextColor = () => { \n        this.colorIndex = this.colorIndex + 1;\n        return this.colors[this.colorIndex];\n    };\n    console.log(`ColorizedSpan: ${props.text}`)\n    return <div><span>{props.text}</span></div>;\n}\n\nexport default function CustomSpan(props) {\n    return <ColorizedSpan  text={props.text}/>;\n}"]},"metadata":{},"sourceType":"module"}