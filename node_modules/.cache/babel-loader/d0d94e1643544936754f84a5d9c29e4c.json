{"ast":null,"code":"import _classCallCheck from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Dialog from'../functional/Dialog.js';import Loader from'../utils/Loader.js';var Geolocate=/*#__PURE__*/function(_React$Component){_inherits(Geolocate,_React$Component);var _super=_createSuper(Geolocate);function Geolocate(props){var _this;_classCallCheck(this,Geolocate);_this=_super.call(this,props);_this.getLocation=function(){return\"\".concat(_this.state.latitude.toFixed(6),\", \").concat(_this.state.longitude.toFixed(6),\" \");};_this.percent=window.innerWidth<700?'twentyfivePercent mt--70 mb--70':'fiftyPercent mt--40 mb--40';_this.loading=function(){return/*#__PURE__*/React.createElement(\"div\",{className:_this.percent},/*#__PURE__*/React.createElement(Loader,{isMotionOn:_this.props.isMotionOn}));};_this.latlon=function(){return _this.state.latitude+\",\"+_this.state.longitude;};_this.state={longitude:null,latitude:null,errorMessage:null,returnCurrentPosition:props.returnCurrentPosition,currentPositionExists:props.currentPositionExists};return _this;}_createClass(Geolocate,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;window.navigator.geolocation.getCurrentPosition(//position => console.log(position.coords.longitude),\nfunction(position){_this2.setState({longitude:position.coords.longitude,latitude:position.coords.latitude});try{if(!_this2.props.currentPositionExists()){_this2.props.returnCurrentPosition(_this2.state.longitude,_this2.state.latitude);}}catch(err){}},function(err){console.log(err);_this2.setState({errorMessage:err.message});});}},{key:\"render\",value:function render(){var errorExists=this.state.errorMessage?true:false;var latExists=this.state.latitude?true:false;var errMessage=this.state.errorMessage;var gelocationStatus=latExists?this.getLocation():this.loading();gelocationStatus=errorExists?\"\".concat(errMessage):gelocationStatus;/*\n        if (latExists) {\n            if (!this.props.currentPositionExists()) {\n                this.props.returnCurrentPosition(this.state.longitude, this.state.latitude);\n            }\n        }\n        */return/*#__PURE__*/React.createElement(\"div\",{className:\"color-yellow greet\"},gelocationStatus);}}]);return Geolocate;}(React.Component);export default Geolocate;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/Geolocator.js"],"names":["React","Dialog","Loader","Geolocate","props","getLocation","state","latitude","toFixed","longitude","percent","window","innerWidth","loading","isMotionOn","latlon","errorMessage","returnCurrentPosition","currentPositionExists","navigator","geolocation","getCurrentPosition","position","setState","coords","err","console","log","message","errorExists","latExists","errMessage","gelocationStatus","Component"],"mappings":"okBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,C,GAEMC,CAAAA,S,kHACF,mBAAYC,KAAZ,CAAmB,2CACf,uBAAMA,KAAN,EADe,MAkCnBC,WAlCmB,CAkCL,2BAAS,MAAKC,KAAL,CAAWC,QAAX,CAAoBC,OAApB,CAA4B,CAA5B,CAAT,cAA4C,MAAKF,KAAL,CAAWG,SAAX,CAAqBD,OAArB,CAA6B,CAA7B,CAA5C,OAlCK,OAmCnBE,OAnCmB,CAmCRC,MAAM,CAACC,UAAP,CAAoB,GAArB,CAA4B,iCAA5B,CAAgE,4BAnCvD,OAoCnBC,OApCmB,CAoCT,8BAAM,2BAAK,SAAS,CAAE,MAAKH,OAArB,eACJ,oBAAC,MAAD,EAAQ,UAAU,CAAE,MAAKN,KAAL,CAAWU,UAA/B,EADI,CAAN,EApCS,OAuCnBC,MAvCmB,CAuCV,iBAAM,OAAKT,KAAL,CAAWC,QAAX,CAAsB,GAAtB,CAA4B,MAAKD,KAAL,CAAWG,SAA7C,EAvCU,CAEf,MAAKH,KAAL,CAAa,CACTG,SAAS,CAAE,IADF,CAETF,QAAQ,CAAE,IAFD,CAGTS,YAAY,CAAE,IAHL,CAITC,qBAAqB,CAAEb,KAAK,CAACa,qBAJpB,CAKTC,qBAAqB,CAAEd,KAAK,CAACc,qBALpB,CAAb,CAFe,aASlB,C,mFACmB,iBAChBP,MAAM,CAACQ,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACI;AACA,SAAAC,QAAQ,CAAI,CACR,MAAI,CAACC,QAAL,CAAc,CACVd,SAAS,CAAEa,QAAQ,CAACE,MAAT,CAAgBf,SADjB,CAEVF,QAAQ,CAAEe,QAAQ,CAACE,MAAT,CAAgBjB,QAFhB,CAAd,EAIA,GAAI,CACA,GAAI,CAAC,MAAI,CAACH,KAAL,CAAWc,qBAAX,EAAL,CAAyC,CACrC,MAAI,CAACd,KAAL,CAAWa,qBAAX,CAAiC,MAAI,CAACX,KAAL,CAAWG,SAA5C,CAAuD,MAAI,CAACH,KAAL,CAAWC,QAAlE,EACH,CACJ,OAAMkB,GAAN,CAAW,CACX,CACJ,CAbL,CAcI,SAAAA,GAAG,CAAI,CACHC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,MAAI,CAACF,QAAL,CAAc,CACVP,YAAY,CAAES,GAAG,CAACG,OADR,CAAd,EAIH,CApBL,EAsBH,C,uCAOQ,CACL,GAAMC,CAAAA,WAAW,CAAI,KAAKvB,KAAL,CAAWU,YAAZ,CAA4B,IAA5B,CAAmC,KAAvD,CACA,GAAMc,CAAAA,SAAS,CAAI,KAAKxB,KAAL,CAAWC,QAAZ,CAAwB,IAAxB,CAA+B,KAAjD,CACA,GAAMwB,CAAAA,UAAU,CAAG,KAAKzB,KAAL,CAAWU,YAA9B,CACA,GAAIgB,CAAAA,gBAAgB,CAAIF,SAAD,CAAc,KAAKzB,WAAL,EAAd,CAAmC,KAAKQ,OAAL,EAA1D,CACAmB,gBAAgB,CAAIH,WAAD,WAAmBE,UAAnB,EAAkCC,gBAArD,CACA;;;;;;UAOA,mBAAO,2BAAK,SAAS,CAAC,oBAAf,EAAqCA,gBAArC,CAAP,CACH,C,uBAvDmBhC,KAAK,CAACiC,S,EA0D9B,cAAe9B,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport Loader from '../utils/Loader.js';\n\nclass Geolocate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            longitude: null,\n            latitude: null,\n            errorMessage: null,\n            returnCurrentPosition: props.returnCurrentPosition,\n            currentPositionExists: props.currentPositionExists\n        }\n    }\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            //position => console.log(position.coords.longitude),\n            position => {\n                this.setState({\n                    longitude: position.coords.longitude,\n                    latitude: position.coords.latitude,\n                });\n                try {\n                    if (!this.props.currentPositionExists()) {\n                        this.props.returnCurrentPosition(this.state.longitude, this.state.latitude);\n                    }\n                }catch(err) {\n                }\n            },\n            err => {\n                console.log(err)\n                this.setState({\n                    errorMessage: err.message\n                });\n\n            }\n        )\n    }\n    getLocation = () => `${this.state.latitude.toFixed(6)}, ${this.state.longitude.toFixed(6)} `;\n    percent = (window.innerWidth < 700) ? 'twentyfivePercent mt--70 mb--70' : 'fiftyPercent mt--40 mb--40';\n    loading = () => <div className={this.percent}>\n                <Loader isMotionOn={this.props.isMotionOn}/>\n            </div>;\n    latlon = () => this.state.latitude + \",\" + this.state.longitude;\n    render() {\n        const errorExists = (this.state.errorMessage) ? true : false;\n        const latExists = (this.state.latitude) ? true : false;\n        const errMessage = this.state.errorMessage;\n        let gelocationStatus = (latExists) ? this.getLocation() : this.loading();\n        gelocationStatus = (errorExists) ? `${errMessage}` : gelocationStatus;\n        /*\n        if (latExists) {\n            if (!this.props.currentPositionExists()) {\n                this.props.returnCurrentPosition(this.state.longitude, this.state.latitude);\n            }\n        }\n        */\n        return <div className=\"color-yellow greet\">{gelocationStatus}</div>\n    };\n}\n\nexport default Geolocate;"]},"metadata":{},"sourceType":"module"}