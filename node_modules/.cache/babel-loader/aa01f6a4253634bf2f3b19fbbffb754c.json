{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/forms/FunctionalSelector.js\";\nimport React from 'react';\nimport getKey from '../utils/KeyGenerator.js'; //<FormSelector items={[\"Grapefruit\", \"Lime\", \"Coconut\", \"Mango\"]} />\n\nfunction FormSelector(props) {\n  //let action = \"\";\n  let {\n    items,\n    label,\n    groupTitle,\n    selected\n  } = props;\n  const select = selected;\n\n  const setSelected = item => {\n    selected = item;\n    return tag(item);\n  }; //const tagSelected = (item) => <option selected key={getKey(item)} value={item.toString()}>{item}</option>;\n\n\n  const tag = item => /*#__PURE__*/React.createElement(\"option\", {\n    key: getKey(item),\n    value: item.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 27\n    }\n  }, item);\n\n  const getTag = (item, index) => Number(index) === Number(select) ? setSelected(item) : tag(item);\n\n  const selectItems = items.map((item, index) => getTag(item, index));\n\n  const handleChange = event => {\n    selected = event.target.value; //this.setState({value: e.target.value});\n\n    props.onChange(groupTitle, label, selected);\n  };\n\n  return /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: selected,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, selectItems));\n}\n\nexport default FormSelector;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/forms/FunctionalSelector.js"],"names":["React","getKey","FormSelector","props","items","label","groupTitle","selected","select","setSelected","item","tag","toString","getTag","index","Number","selectItems","map","handleChange","event","target","value","onChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB;AACA,MAAI;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,UAAhB;AAA4BC,IAAAA;AAA5B,MAAyCJ,KAA7C;AACA,QAAMK,MAAM,GAAGD,QAAf;;AACA,QAAME,WAAW,GAAIC,IAAD,IAAU;AAC1BH,IAAAA,QAAQ,GAAGG,IAAX;AACA,WAAOC,GAAG,CAACD,IAAD,CAAV;AACH,GAHD,CAJyB,CAQzB;;;AACA,QAAMC,GAAG,GAAID,IAAD,iBAAU;AAAQ,IAAA,GAAG,EAAET,MAAM,CAACS,IAAD,CAAnB;AAA2B,IAAA,KAAK,EAAEA,IAAI,CAACE,QAAL,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDF,IAApD,CAAtB;;AACA,QAAMG,MAAM,GAAG,CAACH,IAAD,EAAOI,KAAP,KAAkBC,MAAM,CAACD,KAAD,CAAN,KAAkBC,MAAM,CAACP,MAAD,CAAzB,GAAqCC,WAAW,CAACC,IAAD,CAAhD,GAAyDC,GAAG,CAACD,IAAD,CAA5F;;AACA,QAAMM,WAAW,GAAGZ,KAAK,CAACa,GAAN,CAAU,CAACP,IAAD,EAAOI,KAAP,KAAiBD,MAAM,CAACH,IAAD,EAAMI,KAAN,CAAjC,CAApB;;AACA,QAAMI,YAAY,GAAIC,KAAD,IAAW;AAC5BZ,IAAAA,QAAQ,GAAGY,KAAK,CAACC,MAAN,CAAaC,KAAxB,CAD4B,CAE5B;;AACAlB,IAAAA,KAAK,CAACmB,QAAN,CAAehB,UAAf,EAA2BD,KAA3B,EAAkCE,QAAlC;AACH,GAJD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAEA,QAAf;AAAyB,IAAA,QAAQ,EAAEW,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,WADL,CADJ,CADJ;AAOH;;AAED,eAAed,YAAf","sourcesContent":["import React from 'react';\nimport getKey from '../utils/KeyGenerator.js';\n//<FormSelector items={[\"Grapefruit\", \"Lime\", \"Coconut\", \"Mango\"]} />\n\nfunction FormSelector(props) {\n    //let action = \"\";\n    let { items, label, groupTitle, selected } = props;\n    const select = selected;\n    const setSelected = (item) => {\n        selected = item;\n        return tag(item)\n    }\n    //const tagSelected = (item) => <option selected key={getKey(item)} value={item.toString()}>{item}</option>;\n    const tag = (item) => <option key={getKey(item)} value={item.toString()}>{item}</option>;\n    const getTag = (item, index) => (Number(index) === Number(select)) ? setSelected(item) : tag(item);\n    const selectItems = items.map((item, index) => getTag(item,index));\n    const handleChange = (event) => {\n        selected = event.target.value;\n        //this.setState({value: e.target.value});\n        props.onChange(groupTitle, label, selected);\n    }\n    return (\n        <label>    \n            <select value={selected} onChange={handleChange}>\n                {selectItems}\n            </select>\n        </label>\n    );\n}\n\nexport default FormSelector;"]},"metadata":{},"sourceType":"module"}