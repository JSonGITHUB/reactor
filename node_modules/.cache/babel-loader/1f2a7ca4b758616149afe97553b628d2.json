{"ast":null,"code":"import _classCallCheck from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Loader from'../utils/Loader.js';//import tide from '../../assets/images/tide.png'\n//import axios from 'axios';\nimport arrowDown from'../../assets/images/ArrowDown.png';import arrowUp from'../../assets/images/ArrowUp.png';var Tide=/*#__PURE__*/function(_React$Component){_inherits(Tide,_React$Component);var _super=_createSuper(Tide);function Tide(props){var _this;_classCallCheck(this,Tide);_this=_super.call(this,props);_this.getTideData=function(){console.log(\"getTide ->\");var data;var returnJSON=function returnJSON(response){return response.json();};var returnRejection=function returnRejection(response){return Promise.reject({status:response.status,data:data});};var validate=function validate(response){return response.ok?returnJSON(response):returnRejection(response);};var getCurrentTime=new Date();var year=getCurrentTime.getFullYear();var currentMonth=getCurrentTime.getMonth()+1;var month=currentMonth<10?\"0\".concat(currentMonth):currentMonth;var currentDate=getCurrentTime.getDate();var date=currentDate<10?\"0\".concat(currentDate):currentDate;var currentHour=getCurrentTime.getHours();var hours=currentHour<10?\"0\".concat(currentHour):currentHour;var startHour=currentHour-1<10?\"0\".concat(currentHour-1):currentHour-1;var currentMinutes=getCurrentTime.getMinutes();var minutes=currentMinutes<10?\"0\".concat(currentMinutes):currentMinutes;var getEndTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(hours,\":\").concat(minutes);var getStartTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(startHour,\":00\");getCurrentTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(hours,\":\").concat(minutes);console.log(\"Tide   - getStartTime: \".concat(getStartTime,\" => getEndTime: \").concat(getEndTime));var uriMLLW=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getStartTime,\"&end_date=\").concat(getEndTime,\"&station=9410230&product=water_level&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriMHHW=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime,\"&end_date=\").concat(getCurrentTime,\"&station=9410230&product=water_level&datum=MHHW&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriMHW=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime,\"&end_date=\").concat(getCurrentTime,\"&station=9410230&product=water_level&datum=MHW&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriMTL=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime,\"&end_date=\").concat(getCurrentTime,\"&station=9410230&product=water_level&datum=MTL&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriMSL=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime,\"&end_date=\").concat(getCurrentTime,\"&station=9410230&product=water_level&datum=MSL&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriNAVD=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime,\"&end_date=\").concat(getCurrentTime,\"&station=9410230&product=water_level&datum=NAVD&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriSTND=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime,\"&end_date=\").concat(getCurrentTime,\"&station=9410230&product=water_level&datum=STND&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriLaJolla=\"https://tidesandcurrents.noaa.gov/api/datagetter?product=predictions&amp;application=NOS.COOPS.TAC.WL&amp;begin_date=20201020&amp;end_date=20201021&amp;datum=MLLW&amp;station=9410230&amp;time_zone=lst_ldt&amp;units=english&amp;interval=hilo&amp;format=json\";var uri=uriMLLW;var proxyurl=\"https://cors-anywhere.herokuapp.com/\";var parseTideData=function parseTideData(data){var waterLevel=Number(data.data[data.data.length-1].v).toFixed(1);console.log(\"tideData => \".concat(JSON.stringify(data,null,2)));_this.props.setTide(waterLevel);_this.setState({station:data.metadata.name,tide:waterLevel>3?\"high\":waterLevel<2?\"low\":\"med\",tideDirection:\"DOWN\",height:waterLevel});};/*\n        const getTideAxios = async() => {\n            console.log(`getTideAxios $$$$$$$$$ (1)`);\n            const response = await axios.get('https://tidesandcurrents.noaa.gov/api/datagetter?product=predictions&amp;application=NOS.COOPS.TAC.WL&amp;begin_date=20201020&amp;end_date=20201021&amp;datum=MLLW&amp;station=9410230&amp;time_zone=lst_ldt&amp;units=english&amp;interval=hilo&amp;format=json');\n            console.log(`getTideAxios $$$$$$$$$ (2)`);\n            parseTideData(response);\n        }\n        getTideAxios();\n        */ //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\nfetch(proxyurl+uri).then(function(response){return validate(response);}).then(function(data){var waterLevel=Number(data.data[data.data.length-1].v).toFixed(1);//console.log(`tideData => ${JSON.stringify(data, null, 2)}`)\n_this.props.setTide(waterLevel);_this.setState({station:data.metadata.name,tide:waterLevel>3?\"high\":waterLevel<2?\"low\":\"med\",tideDirection:waterLevel>Number(localStorage.getItem(\"tide\"))?\"DOWN\":localStorage.getItem(\"tideDirection\")||\"UP\",height:waterLevel});}).catch(function(err){return console.log(\"Something went wrong!\\nuri: \".concat(uri,\" \\npath: \").concat(window.location.pathname,\"\\n\"),err);});};_this.getInterval=function(){return 300000;};_this.previousTide=function(){return localStorage.getItem(\"tide\")?Number(localStorage.getItem(\"tide\")):0;};_this.notEqual=function(){return Number(_this.previousTide())!==Number(_this.state.height)?true:false;};_this.greaterThan=function(){return Number(_this.previousTide())>Number(_this.state.height)?true:false;};_this.getDownArrow=function(){localStorage.setItem(\"tideDirection\",\"DOWN\");return/*#__PURE__*/React.createElement(\"img\",{className:\"arrows mb--2\",src:arrowDown});};_this.getUpArrow=function(){localStorage.setItem(\"tideDirection\",\"UP\");return/*#__PURE__*/React.createElement(\"img\",{className:\"arrows mb--2\",src:arrowUp});};_this.getTideDirection=function(){return _this.state.tideDirection===\"DOWN\"?_this.getDownArrow():_this.getUpArrow();};_this.setLocalTide=function(){return localStorage.setItem(\"tide\",Number(_this.state.height));};_this.setLocalTideDirection=function(){return localStorage.setItem(\"tideDirection\",_this.state.tideDirection);};_this.getCurrentTide=function(){return/*#__PURE__*/React.createElement(\"div\",null,_this.state.height,/*#__PURE__*/React.createElement(\"span\",{className:\"greet\"},\" ft. \"),_this.getTideDirection());};_this.percent='twentyfivePercent mt--70 mb--70';_this.loading=function(){return/*#__PURE__*/React.createElement(\"div\",{className:_this.percent},/*#__PURE__*/React.createElement(Loader,{isMotionOn:_this.props.isMotionOn}));};_this.state={tide:null,tideDirection:localStorage.tideDirection||\"?\",height:null};return _this;}_createClass(Tide,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.getTideData();this.timerID=setInterval(function(){return _this2.getTideData();},this.getInterval());}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.timerID);}},{key:\"render\",value:function render(){//console.log(`tide direction: ${this.state.tideDirection} previous height: ${this.previousTide()} height: ${this.state.height} == ${this.previousTide() === Number(this.state.height)}`)\nthis.setLocalTide();this.setLocalTideDirection();return/*#__PURE__*/React.createElement(\"div\",null,this.getCurrentTide());}}]);return Tide;}(React.Component);export default Tide;/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/ /* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/Tide.js"],"names":["React","Loader","arrowDown","arrowUp","Tide","props","getTideData","console","log","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","getCurrentTime","Date","year","getFullYear","currentMonth","getMonth","month","currentDate","getDate","date","currentHour","getHours","hours","startHour","currentMinutes","getMinutes","minutes","getEndTime","getStartTime","uriMLLW","uriMHHW","uriMHW","uriMTL","uriMSL","uriNAVD","uriSTND","uriLaJolla","uri","proxyurl","parseTideData","waterLevel","Number","length","v","toFixed","JSON","stringify","setTide","setState","station","metadata","name","tide","tideDirection","height","fetch","then","localStorage","getItem","catch","err","window","location","pathname","getInterval","previousTide","notEqual","state","greaterThan","getDownArrow","setItem","getUpArrow","getTideDirection","setLocalTide","setLocalTideDirection","getCurrentTide","percent","loading","isMotionOn","timerID","setInterval","clearInterval","Component"],"mappings":"okBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CACA;AACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,mCAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iCAApB,C,GAEMC,CAAAA,I,wGACF,cAAYC,KAAZ,CAAmB,sCACf,uBAAMA,KAAN,EADe,MAQnBC,WARmB,CAQL,UAAM,CAChBC,OAAO,CAACC,GAAR,eACA,GAAIC,CAAAA,IAAJ,CACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EAAnB,CACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACF,QAAD,QAAcG,CAAAA,OAAO,CAACC,MAAR,CAAe,CAACC,MAAM,CAAEL,QAAQ,CAACK,MAAlB,CAA0BP,IAAI,CAAJA,IAA1B,CAAf,CAAd,EAAxB,CACA,GAAMQ,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACN,QAAD,QAAeA,CAAAA,QAAQ,CAACO,EAAV,CAAgBR,UAAU,CAACC,QAAD,CAA1B,CAAuCE,eAAe,CAACF,QAAD,CAApE,EAAjB,CACA,GAAIQ,CAAAA,cAAc,CAAG,GAAIC,CAAAA,IAAJ,EAArB,CACA,GAAMC,CAAAA,IAAI,CAAGF,cAAc,CAACG,WAAf,EAAb,CACA,GAAMC,CAAAA,YAAY,CAAGJ,cAAc,CAACK,QAAf,GAA0B,CAA/C,CACA,GAAMC,CAAAA,KAAK,CAAKF,YAAD,CAAe,EAAhB,YAA2BA,YAA3B,EAA6CA,YAA3D,CACA,GAAMG,CAAAA,WAAW,CAAGP,cAAc,CAACQ,OAAf,EAApB,CACA,GAAMC,CAAAA,IAAI,CAAIF,WAAW,CAAC,EAAb,YAAuBA,WAAvB,EAAuCA,WAApD,CACA,GAAMG,CAAAA,WAAW,CAAGV,cAAc,CAACW,QAAf,EAApB,CACA,GAAMC,CAAAA,KAAK,CAAIF,WAAW,CAAC,EAAb,YAAuBA,WAAvB,EAAuCA,WAArD,CACA,GAAMG,CAAAA,SAAS,CAAKH,WAAW,CAAC,CAAb,CAAgB,EAAjB,YAA4BA,WAAW,CAAC,CAAxC,EAAgDA,WAAW,CAAC,CAA9E,CACA,GAAMI,CAAAA,cAAc,CAAGd,cAAc,CAACe,UAAf,EAAvB,CACA,GAAMC,CAAAA,OAAO,CAAIF,cAAc,CAAC,EAAhB,YAA0BA,cAA1B,EAA6CA,cAA7D,CACA,GAAMG,CAAAA,UAAU,WAAMf,IAAN,SAAaI,KAAb,SAAqBG,IAArB,eAA+BG,KAA/B,aAAwCI,OAAxC,CAAhB,CACA,GAAME,CAAAA,YAAY,WAAMhB,IAAN,SAAaI,KAAb,SAAqBG,IAArB,eAA+BI,SAA/B,OAAlB,CACAb,cAAc,WAAME,IAAN,SAAaI,KAAb,SAAqBG,IAArB,eAA+BG,KAA/B,aAAwCI,OAAxC,CAAd,CACA5B,OAAO,CAACC,GAAR,kCAAsC6B,YAAtC,4BAAqED,UAArE,GACA,GAAME,CAAAA,OAAO,uEAAkED,YAAlE,sBAA2FD,UAA3F,wHAAb,CACA,GAAMG,CAAAA,OAAO,uEAAkEpB,cAAlE,sBAA6FA,cAA7F,wHAAb,CACA,GAAMqB,CAAAA,MAAM,uEAAkErB,cAAlE,sBAA6FA,cAA7F,uHAAZ,CACA,GAAMsB,CAAAA,MAAM,uEAAkEtB,cAAlE,sBAA6FA,cAA7F,uHAAZ,CACA,GAAMuB,CAAAA,MAAM,uEAAkEvB,cAAlE,sBAA6FA,cAA7F,uHAAZ,CACA,GAAMwB,CAAAA,OAAO,uEAAkExB,cAAlE,sBAA6FA,cAA7F,wHAAb,CACA,GAAMyB,CAAAA,OAAO,uEAAkEzB,cAAlE,sBAA6FA,cAA7F,wHAAb,CACA,GAAM0B,CAAAA,UAAU,mQAAhB,CAEA,GAAMC,CAAAA,GAAG,CAAGR,OAAZ,CACA,GAAMS,CAAAA,QAAQ,CAAG,sCAAjB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACvC,IAAD,CAAU,CAC5B,GAAMwC,CAAAA,UAAU,CAAGC,MAAM,CAACzC,IAAI,CAACA,IAAL,CAAUA,IAAI,CAACA,IAAL,CAAU0C,MAAV,CAAmB,CAA7B,EAAgCC,CAAjC,CAAN,CAA0CC,OAA1C,CAAkD,CAAlD,CAAnB,CACA9C,OAAO,CAACC,GAAR,uBAA2B8C,IAAI,CAACC,SAAL,CAAe9C,IAAf,CAAqB,IAArB,CAA2B,CAA3B,CAA3B,GACA,MAAKJ,KAAL,CAAWmD,OAAX,CAAmBP,UAAnB,EACA,MAAKQ,QAAL,CAAc,CACVC,OAAO,CAAEjD,IAAI,CAACkD,QAAL,CAAcC,IADb,CAEVC,IAAI,CAAEZ,UAAU,CAAG,CAAd,CAAmB,MAAnB,CAA6BA,UAAU,CAAG,CAAd,CAAmB,KAAnB,CAA2B,KAFlD,CAGVa,aAAa,CAAE,MAHL,CAIVC,MAAM,CAAEd,UAJE,CAAd,EAMH,CAVD,CAWA;;;;;;;;UA5CgB,CAqDhB;AAEAe,KAAK,CAACjB,QAAQ,CAAGD,GAAZ,CAAL,CACKmB,IADL,CACU,SAAAtD,QAAQ,QAAIM,CAAAA,QAAQ,CAACN,QAAD,CAAZ,EADlB,EAEKsD,IAFL,CAEU,SAAAxD,IAAI,CAAI,CACV,GAAMwC,CAAAA,UAAU,CAAGC,MAAM,CAACzC,IAAI,CAACA,IAAL,CAAUA,IAAI,CAACA,IAAL,CAAU0C,MAAV,CAAmB,CAA7B,EAAgCC,CAAjC,CAAN,CAA0CC,OAA1C,CAAkD,CAAlD,CAAnB,CACA;AACA,MAAKhD,KAAL,CAAWmD,OAAX,CAAmBP,UAAnB,EACA,MAAKQ,QAAL,CAAc,CACVC,OAAO,CAAEjD,IAAI,CAACkD,QAAL,CAAcC,IADb,CAEVC,IAAI,CAAEZ,UAAU,CAAG,CAAd,CAAmB,MAAnB,CAA6BA,UAAU,CAAG,CAAd,CAAmB,KAAnB,CAA2B,KAFlD,CAGVa,aAAa,CAAGb,UAAU,CAAGC,MAAM,CAACgB,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAApB,CAAsD,MAAtD,CAA+DD,YAAY,CAACC,OAAb,CAAqB,eAArB,GAAyC,IAH7G,CAIVJ,MAAM,CAAEd,UAJE,CAAd,EAMH,CAZL,EAaKmB,KAbL,CAaW,SAAAC,GAAG,QAAI9D,CAAAA,OAAO,CAACC,GAAR,uCAA2CsC,GAA3C,qBAA0DwB,MAAM,CAACC,QAAP,CAAgBC,QAA1E,OAAwFH,GAAxF,CAAJ,EAbd,EAeH,CA9EkB,OA+EnBI,WA/EmB,CA+EL,iBAAM,OAAN,EA/EK,OAuFnBC,YAvFmB,CAuFJ,iBAAOR,CAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAAiCjB,MAAM,CAACgB,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAAvC,CAAwE,CAA9E,EAvFI,OAwFnBQ,QAxFmB,CAwFR,iBAAOzB,CAAAA,MAAM,CAAC,MAAKwB,YAAL,EAAD,CAAN,GAAgCxB,MAAM,CAAC,MAAK0B,KAAL,CAAWb,MAAZ,CAAvC,CAA8D,IAA9D,CAAqE,KAA3E,EAxFQ,OAyFnBc,WAzFmB,CAyFL,iBAAO3B,CAAAA,MAAM,CAAC,MAAKwB,YAAL,EAAD,CAAN,CAA8BxB,MAAM,CAAC,MAAK0B,KAAL,CAAWb,MAAZ,CAArC,CAA4D,IAA5D,CAAmE,KAAzE,EAzFK,OA0FnBe,YA1FmB,CA0FJ,UAAM,CACjBZ,YAAY,CAACa,OAAb,CAAqB,eAArB,CAAsC,MAAtC,EACA,mBAAO,2BAAK,SAAS,CAAC,cAAf,CAA8B,GAAG,CAAE7E,SAAnC,EAAP,CACH,CA7FkB,OA8FnB8E,UA9FmB,CA8FN,UAAM,CACfd,YAAY,CAACa,OAAb,CAAqB,eAArB,CAAsC,IAAtC,EACA,mBAAO,2BAAK,SAAS,CAAC,cAAf,CAA8B,GAAG,CAAE5E,OAAnC,EAAP,CACH,CAjGkB,OAkGnB8E,gBAlGmB,CAkGA,iBAAO,OAAKL,KAAL,CAAWd,aAAX,GAA6B,MAA9B,CAAwC,MAAKgB,YAAL,EAAxC,CAA8D,MAAKE,UAAL,EAApE,EAlGA,OAoGnBE,YApGmB,CAoGJ,iBAAMhB,CAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,CAA6B7B,MAAM,CAAC,MAAK0B,KAAL,CAAWb,MAAZ,CAAnC,CAAN,EApGI,OAqGnBoB,qBArGmB,CAqGK,iBAAMjB,CAAAA,YAAY,CAACa,OAAb,CAAqB,eAArB,CAAsC,MAAKH,KAAL,CAAWd,aAAjD,CAAN,EArGL,OAuGnBsB,cAvGmB,CAuGF,8BAAM,+BACE,MAAKR,KAAL,CAAWb,MADb,cAEC,4BAAM,SAAS,CAAC,OAAhB,UAFD,CAGE,MAAKkB,gBAAL,EAHF,CAAN,EAvGE,OA6GnBI,OA7GmB,CA6GT,iCA7GS,OA8GnBC,OA9GmB,CA8GT,8BAAM,2BAAK,SAAS,CAAE,MAAKD,OAArB,eACI,oBAAC,MAAD,EAAQ,UAAU,CAAE,MAAKhF,KAAL,CAAWkF,UAA/B,EADJ,CAAN,EA9GS,CAEf,MAAKX,KAAL,CAAa,CACTf,IAAI,CAAE,IADG,CAETC,aAAa,CAAEI,YAAY,CAACJ,aAAb,EAA8B,GAFpC,CAGTC,MAAM,CAAE,IAHC,CAAb,CAFe,aAOlB,C,8EAyEmB,iBAChB,KAAKzD,WAAL,GACA,KAAKkF,OAAL,CAAeC,WAAW,CAAC,iBAAM,CAAA,MAAI,CAACnF,WAAL,EAAN,EAAD,CAA2B,KAAKmE,WAAL,EAA3B,CAA1B,CACH,C,mEACsB,CACnBiB,aAAa,CAAC,KAAKF,OAAN,CAAb,CACH,C,uCA4BQ,CACL;AACA,KAAKN,YAAL,GACA,KAAKC,qBAAL,GACA,mBAAO,+BAAM,KAAKC,cAAL,EAAN,CAAP,CACH,C,kBAxHcpF,KAAK,CAAC2F,S,EA2HzB,cAAevF,CAAAA,IAAf,CACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgDA","sourcesContent":["import React from 'react';\nimport Loader from '../utils/Loader.js';\n//import tide from '../../assets/images/tide.png'\n//import axios from 'axios';\nimport arrowDown from '../../assets/images/ArrowDown.png';\nimport arrowUp from '../../assets/images/ArrowUp.png';\n\nclass Tide extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tide: null,\n            tideDirection: localStorage.tideDirection || \"?\",\n            height: null\n        }\n    }\n    getTideData = () => {\n        console.log(`getTide ->`);\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        let getCurrentTime = new Date();\n        const year = getCurrentTime.getFullYear();\n        const currentMonth = getCurrentTime.getMonth()+1;\n        const month = ((currentMonth)<10) ? `0${(currentMonth)}` : currentMonth;\n        const currentDate = getCurrentTime.getDate();\n        const date = (currentDate<10) ? `0${currentDate}` : currentDate;\n        const currentHour = getCurrentTime.getHours();\n        const hours = (currentHour<10) ? `0${currentHour}` : currentHour;\n        const startHour = ((currentHour-1)<10) ? `0${(currentHour-1)}` : (currentHour-1);\n        const currentMinutes = getCurrentTime.getMinutes();\n        const minutes = (currentMinutes<10) ? `0${currentMinutes}` : currentMinutes;\n        const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n        getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        console.log(`Tide   - getStartTime: ${getStartTime} => getEndTime: ${getEndTime}`)\n        const uriMLLW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getStartTime}&end_date=${getEndTime}&station=9410230&product=water_level&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMHHW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MHHW&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMHW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MHW&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMTL = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MTL&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMSL = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MSL&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriNAVD = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=NAVD&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriSTND = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=STND&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriLaJolla = `https://tidesandcurrents.noaa.gov/api/datagetter?product=predictions&amp;application=NOS.COOPS.TAC.WL&amp;begin_date=20201020&amp;end_date=20201021&amp;datum=MLLW&amp;station=9410230&amp;time_zone=lst_ldt&amp;units=english&amp;interval=hilo&amp;format=json`;\n        \n        const uri = uriMLLW;\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n        const parseTideData = (data) => {\n            const waterLevel = Number(data.data[data.data.length - 1].v).toFixed(1);\n            console.log(`tideData => ${JSON.stringify(data, null, 2)}`)\n            this.props.setTide(waterLevel)\n            this.setState({\n                station: data.metadata.name,\n                tide:(waterLevel > 3) ? \"high\" : (waterLevel < 2) ? \"low\" : \"med\",\n                tideDirection: \"DOWN\",\n                height: waterLevel\n            })\n        }\n        /*\n        const getTideAxios = async() => {\n            console.log(`getTideAxios $$$$$$$$$ (1)`);\n            const response = await axios.get('https://tidesandcurrents.noaa.gov/api/datagetter?product=predictions&amp;application=NOS.COOPS.TAC.WL&amp;begin_date=20201020&amp;end_date=20201021&amp;datum=MLLW&amp;station=9410230&amp;time_zone=lst_ldt&amp;units=english&amp;interval=hilo&amp;format=json');\n            console.log(`getTideAxios $$$$$$$$$ (2)`);\n            parseTideData(response);\n        }\n        getTideAxios();\n        */\n        //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        \n        fetch(proxyurl + uri)\n            .then(response => validate(response))\n            .then(data => {\n                const waterLevel = Number(data.data[data.data.length - 1].v).toFixed(1);\n                //console.log(`tideData => ${JSON.stringify(data, null, 2)}`)\n                this.props.setTide(waterLevel)\n                this.setState({\n                    station: data.metadata.name,\n                    tide:(waterLevel > 3) ? \"high\" : (waterLevel < 2) ? \"low\" : \"med\",\n                    tideDirection: (waterLevel > Number(localStorage.getItem(\"tide\"))) ? \"DOWN\" : localStorage.getItem(\"tideDirection\") || \"UP\",\n                    height: waterLevel\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n\n    }\n    getInterval = () => 300000;\n    componentDidMount() {\n        this.getTideData();\n        this.timerID = setInterval(() => this.getTideData(), this.getInterval());\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    previousTide = () => (localStorage.getItem(\"tide\")) ? Number(localStorage.getItem(\"tide\")) : 0;\n    notEqual = () => (Number(this.previousTide()) !== Number(this.state.height)) ? true : false;\n    greaterThan = () => (Number(this.previousTide()) > Number(this.state.height)) ? true : false;\n    getDownArrow = () => {\n        localStorage.setItem(\"tideDirection\", \"DOWN\")\n        return <img className='arrows mb--2' src={arrowDown} />\n    }\n    getUpArrow = () => { \n        localStorage.setItem(\"tideDirection\", \"UP\")\n        return <img className='arrows mb--2' src={arrowUp} />\n    }\n    getTideDirection = () => (this.state.tideDirection === \"DOWN\") ? this.getDownArrow() : this.getUpArrow();\n    //getTideDirection = () => (this.notEqual() && this.greaterThan()) ? \"DOWN\" : this.state.tideDirection;\n    setLocalTide = () => localStorage.setItem(\"tide\", Number(this.state.height));\n    setLocalTideDirection = () => localStorage.setItem(\"tideDirection\", this.state.tideDirection);\n\n    getCurrentTide = () => <div>\n                            {this.state.height} \n                            <span className=\"greet\"> ft. </span> \n                            {this.getTideDirection()}\n                        </div>;\n\n    percent = 'twentyfivePercent mt--70 mb--70';\n    loading = () => <div className={this.percent}>\n                        <Loader isMotionOn={this.props.isMotionOn}/>\n                    </div>;\n\n    render() {\n        //console.log(`tide direction: ${this.state.tideDirection} previous height: ${this.previousTide()} height: ${this.state.height} == ${this.previousTide() === Number(this.state.height)}`)\n        this.setLocalTide();\n        this.setLocalTideDirection();\n        return <div>{this.getCurrentTide()}</div>\n    };\n}\n\nexport default Tide;\n/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/\n\n/* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/"]},"metadata":{},"sourceType":"module"}