{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/Selector.js\";\nimport React from 'react';\nimport FunctionalSelector from '../forms/FunctionalSelector.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLocalSpots = () => {\n  let uniqueSpots = [...new Set(getUnique(JSON.parse(localStorage.getItem('spots'))))];\n  return uniqueSpots;\n};\nconst getUnique = array => {\n  let uniqueSpots = [...new Set(array)];\n  return uniqueSpots;\n};\nconst selectorColor = (item, groupTitle, selected) => selected(item, groupTitle) ? \"completedSelector\" : \"incompletedSelector\";\nconst Selector = (item, groupTitle, spot, defaultSelection, handleSelection, selected) => {\n  //console.log(`Selector: \\nitem: ${JSON.stringify(item, null,2)}\\ngroupTitle: ${groupTitle}\\nspot: ${spot}\\ndefaultSelection: ${defaultSelection}\\nhandleSelection: ${handleSelection}\\nselected: ${selected}`)\n  const isLocation = groupTitle === 'Location' ? true : false;\n  const localLocations = localStorage.getItem('spots') ? true : false;\n  let items = item.selections;\n  const setLocal = () => isLocation && !localLocations ? localStorage.setItem('spots', JSON.stringify(items)) : null;\n  setLocal();\n  items = isLocation && localLocations ? getLocalSpots() : getUnique(items);\n  item.selections = items;\n  const addSpot = () => {\n    items.push(spot);\n    items = getUnique(items);\n    localStorage.setItem('spots', JSON.stringify(items));\n    return items;\n  };\n  const verifySpot = () => {\n    return isLocation && !item.selections.includes(spot) ? addSpot() : items;\n  };\n  //console.log(`spot: ${spot} \\n verifySpot(): ${verifySpot()} \\nselected: ${defaultSelection(item,groupTitle)}`)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"r-vw p-vw\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-5\",\n      children: [item.description, \": \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-5\",\n      children: /*#__PURE__*/_jsxDEV(FunctionalSelector, {\n        groupTitle: groupTitle,\n        label: item.description,\n        items: verifySpot(),\n        selected: defaultSelection(item, groupTitle),\n        onChange: handleSelection,\n        fontSize: \"25\",\n        padding: \"20px\",\n        width: \"90%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n};\n_c = Selector;\nexport default Selector;\nvar _c;\n$RefreshReg$(_c, \"Selector\");","map":{"version":3,"names":["React","FunctionalSelector","jsxDEV","_jsxDEV","getLocalSpots","uniqueSpots","Set","getUnique","JSON","parse","localStorage","getItem","array","selectorColor","item","groupTitle","selected","Selector","spot","defaultSelection","handleSelection","isLocation","localLocations","items","selections","setLocal","setItem","stringify","addSpot","push","verifySpot","includes","className","children","description","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","fontSize","padding","width","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/Selector.js"],"sourcesContent":["import React from 'react';\nimport FunctionalSelector from '../forms/FunctionalSelector.js';\n\nconst getLocalSpots = () => {\n    let uniqueSpots = [...new Set(getUnique(JSON.parse(localStorage.getItem('spots'))))];\n    return uniqueSpots;\n}\nconst getUnique = (array) => {\n    let uniqueSpots = [...new Set(array)];\n    return uniqueSpots;\n}\nconst selectorColor = (item, groupTitle, selected) => (selected(item,groupTitle)) ? \"completedSelector\" : \"incompletedSelector\";\n    \nconst Selector = (item, groupTitle, spot, defaultSelection, handleSelection, selected) => {\n    //console.log(`Selector: \\nitem: ${JSON.stringify(item, null,2)}\\ngroupTitle: ${groupTitle}\\nspot: ${spot}\\ndefaultSelection: ${defaultSelection}\\nhandleSelection: ${handleSelection}\\nselected: ${selected}`)\n    const isLocation = (groupTitle === 'Location') ? true : false;\n    const localLocations = (localStorage.getItem('spots')) ? true : false;\n    let items = item.selections;\n    const setLocal = () => (isLocation && !localLocations) ? localStorage.setItem('spots', JSON.stringify(items)) : null;\n    setLocal();\n    items = (isLocation && localLocations) ? getLocalSpots() : getUnique(items);\n    item.selections = items;\n    const addSpot = () => {\n        items.push(spot);\n        items = getUnique(items);\n        localStorage.setItem('spots', JSON.stringify(items))\n        return items;\n    }\n    const verifySpot = () => {\n        return (isLocation && !item.selections.includes(spot)) ? addSpot() : items;\n    }\n    //console.log(`spot: ${spot} \\n verifySpot(): ${verifySpot()} \\nselected: ${defaultSelection(item,groupTitle)}`)\n    \n    return <div className={\"r-vw p-vw\"}>\n        <div className=\"mb-5\">{item.description}: </div>\n        <div className=\"mb-5\">\n            <FunctionalSelector \n                groupTitle={groupTitle}  \n                label={item.description} \n                items={verifySpot()}\n                selected={defaultSelection(item,groupTitle)}\n                onChange={handleSelection}\n                fontSize='25'\n                padding='20px'\n                width='90%'\n            />\n        </div>\n    </div>;\n}\nexport default Selector"],"mappings":"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"},"metadata":{},"sourceType":"module"}