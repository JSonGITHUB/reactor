{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/LogEntry.js\";\nimport React, { useState } from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport RadioSelector from '../forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport LogData from './LogData.js';\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\nimport LogId from './LogId.js';\n\nconst LogEntry = ({\n  itemsIn,\n  buttonLabel,\n  title,\n  message,\n  logId\n}) => {\n  //log = JSON.parse(localStorage.getItem(\"ThuApr3020207:03:14PM\"));\n  const [date, setDate] = useState(new Date());\n  const [items, setItems] = useState(itemsIn);\n  const [spot, setSpot] = useState(localStorage.getItem('spot'));\n  const [log, setLog] = useState(localStorage.getItem(logId));\n  const [lastPostId, setLastPostId] = useState(logId);\n  const [change, setChange] = useState(false);\n  const posts = new PostDirectory();\n  const postDirectory = posts.getDirectory();\n\n  const setDefaultLastId = () => {\n    return \"ThuApr3020207:03:14PM\";\n  };\n\n  setLastPostId(localStorage.getItem(\"lastPostId\") === null ? posts.getLastItem() : localStorage.getItem(\"lastPostId\"));\n  const logData = new LogData({\n    recordId: lastPostId\n  });\n  const templateData = {\n    Day: {\n      Date: \"2020-01-17T08:00:00.000Z\",\n      Day: 17,\n      Month: 1,\n      Year: 2020\n    },\n    Location: {\n      Break: \"Notch\"\n    },\n    Surf: {\n      Height: \"head high\",\n      Report: \"4ft\",\n      Shape: \"close-outs\"\n    },\n    Swell1: {\n      Height: \"4ft\",\n      Direction: \"NW\",\n      Angle: \"280\",\n      Interval: \"18 seconds\"\n    },\n    Swell2: {\n      Height: \"1ft\",\n      Direction: \"NW\",\n      Angle: \"270\",\n      Interval: \"8 seconds\"\n    },\n    Swell3: {\n      Height: \"1ft\",\n      Direction: \"NW\",\n      Angle: \"180\",\n      Interval: \"6 seconds\"\n    },\n    Tide: {\n      Phase: \"High => Low\",\n      Height: \"2ft\"\n    },\n    Wind: {\n      Direction: \"NW\",\n      Orientation: \"Offshore\",\n      MPH: \"5mph\",\n      Surface: \"Glassy\"\n    },\n    Conditions: {\n      Conditions: \"Firing\"\n    },\n    Comments: {\n      \"notes\": \"Biggest crowd but plenty of sick ones...\"\n    }\n  };\n  let selectorStatus = [];\n\n  if (logId !== undefined && logId !== \"\") {\n    setLastPostId(logId);\n    console.log(`$$ logId1: ${logId}`);\n    setLog(localStorage.getItem(logId) === null ? templateData : JSON.parse(localStorage.getItem(logId)));\n  } else {\n    setLastPostId(\"ThuApr3020209:19:28PM\");\n    console.log(`logId2: ${lastPostId}`);\n    setLog(JSON.parse(localStorage.getItem(\"ThuApr3020209:19:28PM\")));\n  }\n\n  const logIdComponent = new LogId({\n    logId: logId,\n    log: log\n  });\n  setDate(new Date());\n  setItems(items);\n  setSpot(spot);\n  setLog(log);\n  setLastPostId(logId);\n  setChange(false);\n\n  const setLogState = () => {\n    setLog(log);\n    setChange(true);\n  };\n\n  const handleSelection = (groupTitle, label, selected) => {\n    if (typeof groupTitle === \"string\") {\n      log[groupTitle][label] = selected; //onChange(groupTitle, label, selected, true);\n\n      setLogState();\n    }\n  };\n\n  const updateNotes = event => {\n    handleSelection(\"Comments\", \"notes\", event.target.value);\n  };\n\n  const handleSubmit = event => {\n    setLog(log !== undefined && JSON.stringify(log, null, 2) !== \"{}\" ? log : log);\n    console.log(`handleSubmit: ${JSON.stringify(log, null, 2)}`);\n    const recordId = logIdComponent.generateNewLogId();\n    console.log(`handleSubmit: recordId: ${recordId}`);\n    let postDirectory = posts.getDirectory();\n    let post = \"\";\n\n    const logIt = () => {\n      postDirectory.push(recordId);\n      postDirectory = JSON.stringify(postDirectory);\n      console.log(`postDirectory: ${postDirectory}`);\n      post = JSON.stringify(log, null, 2);\n      console.log(`post: ${post}`);\n      localStorage.setItem(recordId, post); //localStorage.setItem(\"postDirectory\", postDirectory);\n\n      posts.add(recordId);\n    };\n\n    const selectorStatusComplete = selectorStatus.includes(false) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n\n    if (selectorStatusComplete) {\n      logIt();\n    }\n  };\n\n  const handleSave = event => {\n    setLog(log !== undefined && JSON.stringify(log, null, 2) !== \"{}\" ? log : log);\n    console.log(`handleSave: ${log}`);\n    const recordId = lastPostId;\n    let post = \"\";\n\n    const logIt = () => {\n      post = JSON.stringify(log, null, 2);\n      console.log(`post: ${post}`);\n      localStorage.setItem(recordId, post);\n    };\n\n    const selectorStatusComplete = selectorStatus.includes(false) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n\n    if (selectorStatusComplete) {\n      logIt();\n    }\n  };\n\n  const handleDelete = event => {\n    const recordId = lastPostId;\n    posts.delete(recordId);\n  };\n\n  const onDateChange = date => {\n    const pickerDate = date;\n    date = String(date);\n    const day = pickerDate.getDate();\n    const month = pickerDate.getMonth() + 1;\n    const year = pickerDate.getFullYear();\n    const logDate = {\n      \"month\": month,\n      \"day\": day,\n      \"year\": year\n    };\n    handleSelection(\"Day\", \"Date\", pickerDate);\n    handleSelection(\"Day\", \"Day\", day);\n    handleSelection(\"Day\", \"Month\", month);\n    handleSelection(\"Day\", \"Year\", year);\n  };\n\n  const selected = (item, groupTitle) => item.selections.indexOf(log[groupTitle][item.description]) !== -1 ? true : false;\n\n  const defaultSelection = (item, groupTitle) => selected(item, groupTitle) ? item.selections.indexOf(log[groupTitle][item.description]) : 0;\n\n  const selectorColor = (item, groupTitle) => selected(item, groupTitle) ? \"completedSelector\" : \"incompletedSelector\";\n\n  const radioItems = (item, groupTitle) => {\n    return /*#__PURE__*/React.createElement(RadioSelector, {\n      header: groupTitle,\n      groupTitle: groupTitle,\n      selected: defaultSelection(item, groupTitle),\n      label: item.description,\n      items: item.selections,\n      onChange: handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    });\n  };\n\n  const getUnique = array => {\n    let uniqueSpots = [...new Set(array)];\n    return uniqueSpots;\n  };\n\n  const getLocalSpots = () => {\n    let uniqueSpots = [...new Set(getUnique(JSON.parse(localStorage.getItem('spots'))))];\n    return uniqueSpots;\n  };\n\n  const selector = (item, groupTitle) => {\n    const isLocation = groupTitle === 'Location' ? true : false;\n    const localLocations = localStorage.getItem('spots') ? true : false;\n    let items = item.selections;\n\n    const setLocal = () => isLocation && !localLocations ? localStorage.setItem('spots', JSON.stringify(items)) : null;\n\n    setLocal();\n    items = isLocation && localLocations ? getLocalSpots() : getUnique(items);\n    item.selections = items;\n\n    const addSpot = () => {\n      items.push(spot);\n      items = getUnique(items);\n      localStorage.setItem('spots', JSON.stringify(items));\n      return items;\n    };\n\n    const verifySpot = () => {\n      return isLocation && !item.selections.includes(spot) ? addSpot() : items;\n    }; //console.log(`spot: ${spot} \\n verifySpot(): ${verifySpot()} \\nselected: ${defaultSelection(item,groupTitle)}`)\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: selectorColor(item, groupTitle) + \" r-vw p-vw bg-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, item.description, \": \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Selector, {\n      groupTitle: groupTitle,\n      label: item.description,\n      items: verifySpot(),\n      selected: defaultSelection(item, groupTitle),\n      onChange: handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  const radio = (item, groupTitle) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"r-vw bg-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 41\n    }\n  }, radioItems(item, groupTitle));\n\n  const group = item => {\n    if (item.description === \"Location\") {//console.log(`GROUP => local spots: ${getLocalSpots()}`)\n      //  return getLocalSpots();\n    }\n\n    return item.group;\n  };\n\n  const selectionInterface = (item, groupTitle) => item.type === \"radio\" ? radio(item, groupTitle) : selector(item, groupTitle);\n\n  const groups = () => items().map(item => {\n    const headerClasses = 'subHeader color-yellow';\n    const selectorClasses = \"greet p-vw bg-vdkGreen flex3Column\";\n    const groupClasses = window.innerWidth < 500 ? \"r-vw\" : \"flexContainer width-100-percent r-vw\";\n    const description = item.description; //console.log(`description: ${JSON.stringify(item,null,2)}`)\n\n    const addToLogs = group => {\n      log[description][group.description] = group.selections[defaultSelection(group, description)]; //onChange(description, group.description, group.selections[defaultSelection(group, description)], false);\n    }; // const logger = group(item).map((group) => addToLogs(group));\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: getKey(\"groupConainer\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: getKey(\"groupHeader\"),\n      className: headerClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }\n    }, item.description), /*#__PURE__*/React.createElement(\"div\", {\n      className: groupClasses,\n      key: getKey(\"groupSubConainer\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, group(item).map(group => /*#__PURE__*/React.createElement(\"div\", {\n      key: getKey(\"selectorContainer\"),\n      className: selectorClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 29\n      }\n    }, selectionInterface(group, description)))));\n  });\n\n  const categories = () => {\n    selectorStatus = [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 16\n      }\n    }, groups());\n  };\n\n  const dateEntry = () => {\n    const logExists = log !== undefined && log !== null && JSON.stringify(log, null, 2) !== \"{}\" ? true : false;\n\n    const stateLogDate = () => log.Day.Date;\n\n    const getDate = () => logExists === true ? new Date(stateLogDate()) : new Date(date);\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5 subHeader color-yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexContainer width-100-percent bg-vdkGreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      onChange: onDateChange,\n      value: getDate(),\n      className: \"p-vw bg-green flex3Column r-vw m-vw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 27\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    title: title,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, dateEntry(), categories(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 21\n    }\n  }, \"Additional Comments: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"10\",\n    cols: window.innerWidth / 15,\n    value: log.Comments.notes,\n    onChange: updateNotes,\n    className: \"mt-10 greet p-10 r-10 brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 28\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    className: \"noUnderline color-black\",\n    to: \"/LogDirectory\",\n    onClick: () => handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleSubmit,\n    className: \"button m-1 greet p-20 r-10 bg-green brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 25\n    }\n  }, buttonLabel)), /*#__PURE__*/React.createElement(Link, {\n    className: \"noUnderline color-black\",\n    to: \"/LogDirectory\",\n    onClick: () => handleSave(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button m-1 greet p-20 r-10 bg-yellow brdr-yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }\n  }, \"save\")), /*#__PURE__*/React.createElement(Link, {\n    className: \"noUnderline color-black\",\n    to: \"/LogDirectory\",\n    onClick: () => handleDelete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button m-1 greet p-20 r-10 bg-red brdr-red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 25\n    }\n  }, \"delete\")), /*#__PURE__*/React.createElement(PostDirectory, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default LogEntry;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LogEntry.js"],"names":["React","useState","Dialog","Selector","RadioSelector","DatePicker","getKey","PostDirectory","LogData","BrowserRouter","Router","Switch","Link","Route","LogId","LogEntry","itemsIn","buttonLabel","title","message","logId","date","setDate","Date","items","setItems","spot","setSpot","localStorage","getItem","log","setLog","lastPostId","setLastPostId","change","setChange","posts","postDirectory","getDirectory","setDefaultLastId","getLastItem","logData","recordId","templateData","Day","Month","Year","Location","Break","Surf","Height","Report","Shape","Swell1","Direction","Angle","Interval","Swell2","Swell3","Tide","Phase","Wind","Orientation","MPH","Surface","Conditions","Comments","selectorStatus","undefined","console","JSON","parse","logIdComponent","setLogState","handleSelection","groupTitle","label","selected","updateNotes","event","target","value","handleSubmit","stringify","generateNewLogId","post","logIt","push","setItem","add","selectorStatusComplete","includes","window","confirm","handleSave","handleDelete","delete","onDateChange","pickerDate","String","day","getDate","month","getMonth","year","getFullYear","logDate","item","selections","indexOf","description","defaultSelection","selectorColor","radioItems","getUnique","array","uniqueSpots","Set","getLocalSpots","selector","isLocation","localLocations","setLocal","addSpot","verifySpot","radio","group","selectionInterface","type","groups","map","headerClasses","selectorClasses","groupClasses","innerWidth","addToLogs","categories","dateEntry","logExists","stateLogDate","notes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport RadioSelector from '../forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport LogData from './LogData.js';\nimport {BrowserRouter as Router, Switch, Link, Route} from 'react-router-dom';\nimport LogId from './LogId.js';\n\nconst LogEntry = ({itemsIn, buttonLabel, title, message, logId}) => {\n    //log = JSON.parse(localStorage.getItem(\"ThuApr3020207:03:14PM\"));\n\n    const [date, setDate] = useState(new Date());\n    const [items, setItems] = useState(itemsIn)\n    const [spot, setSpot] = useState(localStorage.getItem('spot'))\n    const [log, setLog] = useState(localStorage.getItem(logId));\n    const [lastPostId, setLastPostId] = useState(logId);\n    const [change, setChange] = useState(false);\n\n    const posts = new PostDirectory();\n    const postDirectory = posts.getDirectory();\n    const setDefaultLastId = () => {\n        return \"ThuApr3020207:03:14PM\"\n    }\n    setLastPostId((localStorage.getItem(\"lastPostId\") === null) ? posts.getLastItem() : localStorage.getItem(\"lastPostId\"));\n    const logData = new LogData({recordId: lastPostId});\n    const templateData = {\n        Day: {\n            Date: \"2020-01-17T08:00:00.000Z\",\n            Day: 17,\n            Month: 1,\n            Year: 2020\n        },\n        Location: {\n            Break: \"Notch\"\n        },\n        Surf: {\n            Height: \"head high\",\n            Report: \"4ft\",\n            Shape: \"close-outs\"\n        },\n        Swell1: {\n            Height: \"4ft\",\n            Direction: \"NW\",\n            Angle: \"280\",\n            Interval: \"18 seconds\",\n        },\n        Swell2: {\n            Height: \"1ft\",\n            Direction: \"NW\",\n            Angle: \"270\",\n            Interval: \"8 seconds\",\n        },\n        Swell3: {\n            Height: \"1ft\",\n            Direction: \"NW\",\n            Angle: \"180\",\n            Interval: \"6 seconds\",\n        },\n        Tide: {\n            Phase: \"High => Low\",\n            Height: \"2ft\"\n        },\n        Wind: {\n            Direction: \"NW\",\n            Orientation: \"Offshore\",\n            MPH: \"5mph\",\n            Surface: \"Glassy\"\n        },\n        Conditions: {\n            Conditions: \"Firing\"\n        },\n        Comments: {\n            \"notes\": \"Biggest crowd but plenty of sick ones...\"\n        }\n    };\n    let selectorStatus = [];\n    if (logId !== undefined && logId !== \"\" ) {\n        setLastPostId(logId);\n        console.log(`$$ logId1: ${logId}`);\n        setLog((localStorage.getItem(logId) === null) ? templateData : JSON.parse(localStorage.getItem(logId)));\n    } else {\n        setLastPostId(\"ThuApr3020209:19:28PM\");\n        console.log(`logId2: ${lastPostId}`)\n        setLog(JSON.parse(localStorage.getItem(\"ThuApr3020209:19:28PM\")));\n    }\n    const logIdComponent = new LogId({logId: logId, log: log});\n    setDate(new Date());\n    setItems(items);\n    setSpot(spot);\n    setLog(log);\n    setLastPostId(logId);\n    setChange(false);\n    const setLogState = () => {\n        setLog(log);\n        setChange(true);\n    }\n    const handleSelection = (groupTitle, label, selected) => {\n        if (typeof groupTitle === \"string\") {\n            log[groupTitle][label] = selected;\n            //onChange(groupTitle, label, selected, true);\n            setLogState();\n        } \n    }\n    const updateNotes = (event) => {\n        handleSelection(\"Comments\", \"notes\", event.target.value);\n    }\n    const handleSubmit = (event) => {\n        setLog((log !== undefined && JSON.stringify(log, null, 2) !== \"{}\") ? log : log);\n        console.log(`handleSubmit: ${JSON.stringify(log, null, 2)}`)\n        const recordId = logIdComponent.generateNewLogId();\n        console.log(`handleSubmit: recordId: ${recordId}`)\n        let postDirectory = posts.getDirectory();\n        let post = \"\";\n        const logIt = () => {\n            postDirectory.push(recordId);\n            postDirectory = JSON.stringify(postDirectory);\n            console.log(`postDirectory: ${postDirectory}`)\n            post = JSON.stringify(log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n            //localStorage.setItem(\"postDirectory\", postDirectory);\n            posts.add(recordId);\n        }\n        const selectorStatusComplete = (selectorStatus.includes(false)) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n        if (selectorStatusComplete) {\n            logIt();\n        }\n    }\n    const handleSave = (event) => {\n        setLog((log !== undefined && JSON.stringify(log, null, 2) !== \"{}\") ? log : log);\n        console.log(`handleSave: ${log}`)\n        const recordId = lastPostId;\n        let post = \"\";\n        const logIt = () => {\n            post = JSON.stringify(log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n        }\n        const selectorStatusComplete = (selectorStatus.includes(false)) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n        if (selectorStatusComplete) {\n            logIt();\n        }\n    }\n    const handleDelete = (event) => {\n        const recordId = lastPostId;\n        posts.delete(recordId);\n    }\n    const onDateChange = (date) => {\n        const pickerDate = date;\n        date = String(date);\n        const day = pickerDate.getDate();\n        const month = pickerDate.getMonth()+1;\n        const year = pickerDate.getFullYear();\n        const logDate = {\n            \"month\": month,\n            \"day\": day,\n            \"year\": year\n        }\n        handleSelection(\"Day\", \"Date\", pickerDate);\n        handleSelection(\"Day\", \"Day\", day);\n        handleSelection(\"Day\", \"Month\", month);\n        handleSelection(\"Day\", \"Year\", year);\n    }\n    const selected = (item,groupTitle) => ((item.selections.indexOf(log[groupTitle][item.description])) !== -1) ? true : false;\n    const defaultSelection = (item,groupTitle) => (selected(item,groupTitle)) ? (item.selections.indexOf(log[groupTitle][item.description])) : 0; \n    const selectorColor = (item,groupTitle) => (selected(item,groupTitle)) ? \"completedSelector\" : \"incompletedSelector\";\n    \n    const radioItems = (item, groupTitle) => {\n        return (\n            <RadioSelector\n                header={groupTitle}\n                groupTitle={groupTitle} \n                selected={defaultSelection(item,groupTitle)} \n                label={item.description} \n                items={item.selections} \n                onChange={handleSelection}\n            />\n        )\n    };\n    const getUnique = (array) => {\n        let uniqueSpots = [...new Set(array)];\n        return uniqueSpots;\n    }\n    const getLocalSpots = () => {\n        let uniqueSpots = [...new Set(getUnique(JSON.parse(localStorage.getItem('spots'))))];\n        return uniqueSpots;\n    }\n    const selector = (item, groupTitle) => {\n        const isLocation = (groupTitle === 'Location') ? true : false;\n        const localLocations = (localStorage.getItem('spots')) ? true : false;\n        let items = item.selections;\n        const setLocal = () => (isLocation && !localLocations) ? localStorage.setItem('spots', JSON.stringify(items)) : null;\n        setLocal();\n        items = (isLocation && localLocations) ? getLocalSpots() : getUnique(items);\n        item.selections = items;\n        const addSpot = () => {\n            items.push(spot);\n            items = getUnique(items);\n            localStorage.setItem('spots', JSON.stringify(items))\n            return items;\n        }\n        const verifySpot = () => {\n            return (isLocation && !item.selections.includes(spot)) ? addSpot() : items;\n        }\n        //console.log(`spot: ${spot} \\n verifySpot(): ${verifySpot()} \\nselected: ${defaultSelection(item,groupTitle)}`)\n        \n        return <div className={selectorColor(item,groupTitle) + \" r-vw p-vw bg-green\"}>\n            <div className=\"mb-5\">{item.description}: </div>\n            <div className=\"mb-5\">\n                <Selector \n                    groupTitle={groupTitle}  \n                    label={item.description} \n                    items={verifySpot()}\n                    selected={defaultSelection(item,groupTitle)}\n                    onChange={handleSelection}\n                />\n            </div>\n        </div>;\n    }\n\n    const radio = (item, groupTitle) => <div className=\"r-vw bg-green\">\n                {radioItems(item, groupTitle)}\n            </div>;\n    const group = (item) => {\n        if (item.description === \"Location\") {\n            //console.log(`GROUP => local spots: ${getLocalSpots()}`)\n          //  return getLocalSpots();\n        }\n        return item.group;\n        \n    };\n    const selectionInterface = (item, groupTitle) => (item.type === \"radio\") ? radio(item, groupTitle) : selector(item, groupTitle);\n\n    const groups = () => items().map((item) => {\n        const headerClasses = 'subHeader color-yellow';\n        const selectorClasses = \"greet p-vw bg-vdkGreen flex3Column\";\n        const groupClasses = (window.innerWidth < 500) ? \"r-vw\" : \"flexContainer width-100-percent r-vw\";\n        const description = item.description;\n        //console.log(`description: ${JSON.stringify(item,null,2)}`)\n        const addToLogs = (group) => {\n            log[description][group.description] = group.selections[defaultSelection(group, description)]\n            //onChange(description, group.description, group.selections[defaultSelection(group, description)], false);\n        }\n       // const logger = group(item).map((group) => addToLogs(group));\n        return <div key={getKey(\"groupConainer\")}>\n                    <div key={getKey(\"groupHeader\")} className={headerClasses}>\n                        {item.description}\n                    </div>\n                    <div className={groupClasses} key={getKey(\"groupSubConainer\")}>\n                        {group(item).map((group) => \n                            <div key={getKey(\"selectorContainer\")} className={selectorClasses}>\n                                {selectionInterface(group, description)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n    })\n    const categories = () => {\n        selectorStatus = [];\n        return <div className='description'>{groups()}</div>;\n    }\n    const dateEntry = () => {\n        const logExists = (log !== undefined && log !== null && JSON.stringify(log, null, 2) !== \"{}\") ? true : false;\n        const stateLogDate = () => log.Day.Date;\n        const getDate = () => (logExists === true) ? new Date(stateLogDate()) : new Date(date);\n        \n        return <React.Fragment>\n                    <div className='mb-5 subHeader color-yellow'>Date</div>\n                    <div className='flexContainer width-100-percent bg-vdkGreen'>\n                        <DatePicker\n                            onChange={onDateChange}\n                            value={getDate()} \n                            className='p-vw bg-green flex3Column r-vw m-vw'\n                        /><br/>\n                    </div>\n                </React.Fragment>\n    }\n    \n    return (\n        <Route>\n            <Dialog title={title} message={message}>\n                <form onSubmit={handleSubmit}>\n                    {dateEntry()}\n                    {categories()}\n                    <br/>\n                    \n                    <div className=\"mb-5\">Additional Comments: </div>\n                    <textarea \n                        rows=\"10\" \n                        cols={window.innerWidth/15} \n                        value={log.Comments.notes} \n                        onChange={updateNotes} \n                        className=\"mt-10 greet p-10 r-10 brdr-green\"\n                    /><br/><br/>\n                    <Link className=\"noUnderline color-black\"\n                        to=\"/LogDirectory\"\n                        onClick={() => handleSubmit()}>\n                        <div onClick={handleSubmit} className=\"button m-1 greet p-20 r-10 bg-green brdr-green\">\n                            {buttonLabel}\n                        </div>\n                    </Link> \n                    <Link className=\"noUnderline color-black\"\n                        to=\"/LogDirectory\"\n                        onClick={() => handleSave()}>\n                        <div className=\"button m-1 greet p-20 r-10 bg-yellow brdr-yellow\">\n                            save\n                        </div>\n                    </Link>\n                    <Link className=\"noUnderline color-black\"\n                        to=\"/LogDirectory\"\n                        onClick={() => handleDelete()}>\n                        <div  className=\"button m-1 greet p-20 r-10 bg-red brdr-red\">\n                            delete\n                        </div>\n                    </Link>\n                    <PostDirectory />\n                </form>\n            </Dialog>\n        </Route>\n    );\n}\n\nexport default LogEntry;"]},"metadata":{},"sourceType":"module"}