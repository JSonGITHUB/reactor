{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/PostDirectory.js\";\nimport React from 'react';\nimport logIdComponent from './LogId.js';\n\nclass PostDirectory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDirectory = () => this.postDirectory;\n\n    this.removeLastId = () => this.postDirectory.pop();\n\n    this.deleteLast = () => {\n      this.postDirectory = this.removeLastId();\n      localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory));\n      this.setState({\n        postDirectory: this.postDirectory\n      });\n    };\n\n    this.add = id => {\n      this.postDirectory.push(id);\n      localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory));\n      /*\n      this.setState({\n          postDirectory: this.postDirectory\n      });\n      */\n    };\n\n    this.delete = id => {\n      const index = this.postDirectory.indexOf(String(id));\n      console.log(`${index} of ${this.postDirectory.length}`);\n      this.postDirectory.splice(index, 1);\n      console.log(`${index} of ${this.postDirectory.length}`);\n      localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory));\n      localStorage.removeItem(id);\n      localStorage.setItem(\"lastPostId\", `${this.postDirectory[this.postDirectory.length - 1]}`);\n      this.setState({\n        postDirectory: this.postDirectory\n      });\n    };\n\n    this.getLastIndex = () => Number(this.state.postDirectory.length - 1);\n\n    this.getLastId = () => this.state.postDirectory[this.getLastIndex()];\n\n    this.get2ndToLastId = () => this.state.postDirectory[this.getLastIndex() - 1];\n\n    this.getStorageItem = id => localStorage.getItem(id);\n\n    this.getLastItem = () => localStorage.getItem(this.getLastId()) === null ? logIdComponent.templateData : JSON.parse(this.getStorageItem(this.getLastId()));\n\n    this.postDirectory = localStorage.getItem(\"postDirectory\") === null ? [] : JSON.parse(localStorage.getItem(\"postDirectory\"));\n    this.uniquePosts = [...new Set(this.postDirectory)];\n\n    const _index = this.uniquePosts.indexOf(null);\n\n    if (_index > -1) {\n      this.uniquePosts.splice(_index, 1);\n    }\n\n    localStorage.setItem(\"postDirectory\", JSON.stringify(this.uniquePosts));\n    this.state = {\n      postDirectory: this.uniquePosts\n    };\n  }\n  /*\n  postssssss=>[\n      \"ThuApr3020209:17:44PM\",\n      \"ThuApr3020209:19:28PM\",\n      \"FriMay0120207:10:29PM\",\n      \"SunMay03202012:59:02PM\",\n      \"SunMay0320201:04:32PM\"\n    ]\n    */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }\n    }, \"Count: \", this.state.postDirectory.length);\n  }\n\n}\n\nexport default PostDirectory;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/PostDirectory.js"],"names":["React","logIdComponent","PostDirectory","Component","constructor","props","getDirectory","postDirectory","removeLastId","pop","deleteLast","localStorage","setItem","JSON","stringify","setState","add","id","push","delete","index","indexOf","String","console","log","length","splice","removeItem","getLastIndex","Number","state","getLastId","get2ndToLastId","getStorageItem","getItem","getLastItem","templateData","parse","uniquePosts","Set","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logIdComponent from './LogId.js';\nclass PostDirectory extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.postDirectory = (localStorage.getItem(\"postDirectory\") === null) ? [] : JSON.parse(localStorage.getItem(\"postDirectory\"));        \n        this.uniquePosts = [...new Set(this.postDirectory)];\n        const index = this.uniquePosts.indexOf(null);\n        if (index > -1) {\n            this.uniquePosts.splice(index, 1);\n        }\n        localStorage.setItem(\"postDirectory\", JSON.stringify(this.uniquePosts))\n        this.state = {\n            postDirectory: this.uniquePosts,\n        };\n    }\n    /*\n    postssssss=>[\n        \"ThuApr3020209:17:44PM\",\n        \"ThuApr3020209:19:28PM\",\n        \"FriMay0120207:10:29PM\",\n        \"SunMay03202012:59:02PM\",\n        \"SunMay0320201:04:32PM\"\n      ]\n      */\n    \n    getDirectory = () => this.postDirectory;\n    removeLastId = () => this.postDirectory.pop();\n    deleteLast = () => {\n        this.postDirectory = this.removeLastId();\n        localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory))\n        this.setState({\n            postDirectory: this.postDirectory\n        }); \n    }\n    add = (id) => {\n        this.postDirectory.push(id);\n        localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory))\n        /*\n        this.setState({\n            postDirectory: this.postDirectory\n        });\n        */\n    }\n    delete = (id) => {\n        const index = this.postDirectory.indexOf(String(id));\n        console.log(`${index} of ${this.postDirectory.length}`)\n        this.postDirectory.splice(index, 1);\n        console.log(`${index} of ${this.postDirectory.length}`)\n        localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory))\n        localStorage.removeItem(id);\n        localStorage.setItem(\"lastPostId\", `${this.postDirectory[this.postDirectory.length-1]}`);\n        this.setState({\n            postDirectory: this.postDirectory\n        });\n    }\n    getLastIndex = () => Number(this.state.postDirectory.length-1);\n    getLastId = () => this.state.postDirectory[this.getLastIndex()];\n    get2ndToLastId = () => this.state.postDirectory[this.getLastIndex()-1];\n    getStorageItem = (id) => localStorage.getItem(id)\n    getLastItem = () => (localStorage.getItem(this.getLastId()) === null) ? logIdComponent.templateData : JSON.parse(this.getStorageItem(this.getLastId()));\n    render() {      \n            return <p>Count: {this.state.postDirectory.length}</p> \n    }\n    \n}\nexport default PostDirectory;"]},"metadata":{},"sourceType":"module"}