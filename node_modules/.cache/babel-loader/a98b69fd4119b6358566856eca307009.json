{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRates.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExchangeRates = () => {\n  _s();\n  var _data$error, _data$error2;\n  // set endpoint and your access key\n  //const endpoint = 'latest'\n  //const endpoint = '2000-01-17'\n  const endpoint = 'convert';\n  const access_key = '58e53558ca998da70c28b76dba516368';\n  const from = 'USD';\n  const to = 'EUR';\n  const amount = 25;\n  const templateData = {\n    success: true,\n    timestamp: 1519296206,\n    base: \"EUR\",\n    date: \"2021-03-17\",\n    rates: {\n      AUD: 1.566015,\n      CAD: 1.560132,\n      CHF: 1.154727,\n      CNY: 7.827874,\n      GBP: 0.882047,\n      JPY: 132.360679,\n      USD: 1.23396\n    }\n  };\n\n  //const [rates, setRates] = useState(null);\n  const [data, setData] = useState(templateData);\n  useEffect(() => {\n    const fetchRates = async () => {\n      try {\n        //const response = await fetch('https://api.exchangeratesapi.io/v1/' + endpoint + '?access_key=' + access_key + '&from=' + from + '&to=' + to + '&amount=' + amount);\n        const response = await fetch('http://localhost:3002/currency');\n        const data = await response.json();\n        //alert(JSON.stringify(data.error.code, null, 2));\n        console.log(`templateData: ${JSON.stringify(templateData, null, 2)}`);\n        console.log(`data: ${JSON.stringify(data, null, 2)}`);\n        setData(data);\n        //setData(templateData);\n      } catch (error) {\n        //console.error('Error fetching exchange rates:', error);\n        setData(templateData);\n      }\n    };\n    fetchRates();\n  }, []);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  const rates = data.rates || templateData.rates;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exchange Rates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(data.rates).map(_ref => {\n        let [currency, rate] = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [currency, \": \", rate]\n        }, currency, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), \"Error code: \", (_data$error = data.error) === null || _data$error === void 0 ? void 0 : _data$error.code, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), \"Error message: \", (_data$error2 = data.error) === null || _data$error2 === void 0 ? void 0 : _data$error2.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ExchangeRates, \"9oxFXy7vhf2iemCJ8izAnSNiOmc=\");\n_c = ExchangeRates;\nexport default ExchangeRates;\nvar _c;\n$RefreshReg$(_c, \"ExchangeRates\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ExchangeRates","_s","_data$error","_data$error2","endpoint","access_key","from","to","amount","templateData","success","timestamp","base","date","rates","AUD","CAD","CHF","CNY","GBP","JPY","USD","data","setData","fetchRates","response","fetch","json","console","log","JSON","stringify","error","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","_ref","currency","rate","code","message","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRates.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ExchangeRates = () => {\n\n  // set endpoint and your access key\n  //const endpoint = 'latest'\n  //const endpoint = '2000-01-17'\n  const endpoint = 'convert'\n  const access_key = '58e53558ca998da70c28b76dba516368';\n  const from = 'USD';\n  const to = 'EUR';\n  const amount = 25;\n\n  const templateData = {\n    success: true,\n    timestamp: 1519296206,\n    base: \"EUR\",\n    date: \"2021-03-17\",\n    rates: {\n          AUD: 1.566015,\n          CAD: 1.560132,\n          CHF: 1.154727,\n          CNY: 7.827874,\n          GBP: 0.882047,\n          JPY: 132.360679,\n          USD: 1.23396\n    }\n  }\n\n  //const [rates, setRates] = useState(null);\n  const [data, setData] = useState(templateData);\n\n  useEffect(() => {\n    const fetchRates = async () => {\n      try {\n        //const response = await fetch('https://api.exchangeratesapi.io/v1/' + endpoint + '?access_key=' + access_key + '&from=' + from + '&to=' + to + '&amount=' + amount);\n        const response = await fetch('http://localhost:3002/currency');\n        const data = await response.json();\n        //alert(JSON.stringify(data.error.code, null, 2));\n        console.log(`templateData: ${JSON.stringify(templateData, null, 2)}`);\n        console.log(`data: ${JSON.stringify(data, null, 2)}`);\n        setData(data);\n        //setData(templateData);\n      } catch (error) {\n        //console.error('Error fetching exchange rates:', error);\n        setData(templateData);\n      }\n    };\n\n    fetchRates();\n  }, []);\n\n  if (!data) {\n    return <div>Loading...</div>;\n  }\n  \n  const rates = data.rates || templateData.rates;\n  \n  return (\n    <div>\n      <h2>Exchange Rates</h2>\n      <ul>\n        {Object.entries(data.rates).map(([currency, rate]) => (\n          <li key={currency}>\n            {currency}: {rate}\n          </li>\n        ))}\n      </ul>\n      Error code: {data.error?.code}\n      <br/>\n      Error message: {data.error?.message}\n    </div>\n  );\n  \n};\n\nexport default ExchangeRates;"],"mappings":"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"},"metadata":{},"sourceType":"module"}