{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/SurfScores.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LongPressButton from './LongPressButton.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurfScores = _ref => {\n  _s();\n  let {\n    player,\n    index,\n    scoreTotal,\n    editPlayer,\n    deletePlayer,\n    getDominoTotal,\n    updateTwoPlayerScores,\n    winner\n  } = _ref;\n  const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || []);\n  const surfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  useEffect(() => {\n    const playerData = players.map((player, index) => ({\n      player,\n      score: surfersScores[index]\n    }));\n    playerData.sort((a, b) => b.score - a.score);\n    const sortedPlayers = playerData.map(data => data.player);\n    const sortedScores = playerData.map(data => data.score);\n    setSortedPlayers(sortedPlayers);\n    setSortedScores(sortedScores);\n    localStorage.setItem('players', JSON.stringify(sortedPlayers));\n    localStorage.setItem('surfersScores', JSON.stringify(sortedScores));\n  }, [players, surfersScores]);\n  useEffect(() => {\n    let intervalId;\n    if (timerOn) {\n      intervalId = setInterval(() => {\n        setTime(prevTime => {\n          const newTime = prevTime - 1;\n          if (newTime <= 0) {\n            clearInterval(intervalId);\n            setTimesUp(true);\n            return 0;\n          }\n          return newTime;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [timerOn]);\n  const rankStatus = (player, index, score) => {\n    console.log(`ranksStatus => surfersScores player: ${player} index: ${index} score: ${score}`);\n    const winsBy = 'Wins by 7.17';\n    const needs = 'Needs 0.01';\n    if (index === 0) {\n      return winsBy;\n    }\n    return needs;\n  };\n  const surfingRanks = (player, index, score) => {\n    const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent size20 bold\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-10 p-10 w-100\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3ColumnLeft m-1 p-10\",\n        children: player\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3ColumnRight mr-10 p-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"copyright bold\",\n          children: rankStatus(player, index, score)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, getKey(player), true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 30\n    }, this);\n    return surferScores;\n  };\n  const findTwoHighestIndices = scores => {\n    let highestIndex = 0;\n    let secondHighestIndex = -1;\n    scores.forEach((score, index) => {\n      if (score > scores[highestIndex]) {\n        secondHighestIndex = highestIndex;\n        highestIndex = index;\n      } else if (secondHighestIndex === -1 || score > scores[secondHighestIndex]) {\n        secondHighestIndex = index;\n      }\n    });\n    return [highestIndex, secondHighestIndex];\n  };\n  const getWave = (playerId, index, score) => {\n    console.log(`getWave => playerId: ${playerId} index: ${index} score: ${score}`);\n    const highestScores = findTwoHighestIndices(playerScores[playerId].scores);\n    const highestId = highestScores[0];\n    const secondHighestId = highestScores[1];\n    const firstScore = index === highestId ? true : false;\n    const secondScore = index === secondHighestId ? true : false;\n    const getClasses = firstScore || secondScore ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n    const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"greet bold color-yellow bg-dkYellow w-100 p-5\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getClasses,\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 22\n    }, this);\n    return wave;\n  };\n  const addScoreForPlayer = (players, playerIndex, score) => {\n    if (playerIndex >= 0 && playerIndex < players.length) {\n      players[playerIndex].scores.push(score);\n    }\n  };\n  //addScoreForPlayer(players, 0, 94);\n  // Find the indices of the two highest scores for each player\n  const getTwoHighestScores = playerIndex => {\n    const player = playerScores[playerIndex];\n    const [highestIndex, secondHighestIndex] = findTwoHighestIndices(playerScores[playerIndex].scores);\n    console.log(`${player.name}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n    return {\n      'highScoreIndex': highestIndex,\n      'secondHighScoreIndex': secondHighestIndex\n    };\n  };\n  const floatDecimalOneDigit = number => {\n    if (Number.isInteger(number) && number >= 10 && number <= 99) {\n      return number / 10;\n    } else {\n      return null;\n    }\n  };\n  const surfingScores = (player, index, score) => {\n    if (surf) {\n      console.log(`surfingScores => player: ${player} index: ${index} score:${playerScores[index].scores[0]}`);\n      const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer width-100-percent mt--10 mb--10\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-10 p-5 w-100 size40 mt-10\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex3ColumnLeft m-1 p-5 size40 mt-10\",\n            children: player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex3ColumnRight mr-10 p-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"size25 bold\",\n              children: score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: rankStatus(player, index, score)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this)]\n        }, getKey(player), true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-scroll color-white copyright m-10\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"container mt-10\",\n                children: playerScores[index].scores.map((score, wave) => getWave(index, wave, floatDecimalOneDigit(score)))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 34\n      }, this);\n      return surferScores;\n    }\n    return;\n  };\n  const getSurfTotal = player => {\n    if (!surf) return;\n    let total = 0;\n    const score = index => localStorage.getItem(surfKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    surfScoring.map((target, index) => {\n      console.log(`getSurfTotal=> ${surfKey(player, index)} ${index}: ${total}`);\n      addToTotal(Number(score(index)));\n    });\n    //console.log(`getsurfTotalplayer=> ${player}: ${total}`)\n    return total;\n  };\n  const surfScores = surfScoring.map((wave, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexContainer width-100-percent\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex3Column p-5\",\n      children: scorecard(index, index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-20 r-5 font50 color-yellow m-auto\",\n      children: wave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex3Column p-5\",\n      children: scorecard(index, index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, getKey(wave), true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 57\n  }, this));\n  const getSurfScore = index => {\n    if (surf) {\n      const newPlayer = {\n        'name': players[index],\n        'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n      };\n      if (playerScores.length < players.length) {\n        playerScores.push(newPlayer);\n      }\n      const scoreTotal = floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex]));\n      return scoreTotal;\n    }\n    return;\n  };\n  const surfingScoreboard = sortedPlayers.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n  const surfScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: dartClass(0),\n        children: [players[0], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-yellow mt-10\",\n          children: getSurfTotal(players[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 bg-yellow navBranding w-200\",\n        children: \"vs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: dartClass(1),\n        children: [players[1], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-yellow mt-10\",\n          children: getSurfTotal(players[1])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }, this), surfScores]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 28\n  }, this);\n  const getTimerButtonClasses = () => {\n    const timerButtonClasses = timerOn ? 'bg-red m-10 r-10 bold size20 p-20 color-light' : 'bg-green m-10 r-10 bold size20 p-20 color-light';\n    return timerButtonClasses;\n  };\n  const getTimerClasses = () => {\n    const timerClasses = time < 120 ? 'blinking-fade' : '';\n    return timerClasses;\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getTimerButtonClasses(),\n      onClick: () => toggleTimer(),\n      children: timerOn ? 'STOP' : 'START'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dkBlue m-10 r-10 bold size20 p-20 color-light0\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: getTimerClasses(),\n        children: formatTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 84\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer color-yellow bold greet ml-10 mr-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-10 p-10 w-100 bg-dkGreen m-1 r-5-lft\",\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3ColumnLeft m-1 p-10 bg-dkGreen m-1\",\n          children: \"Athlete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3ColumnRight mr-10 p-10 bg-dkGreen m-1 r-5-rt\",\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 12\n  }, this);\n};\n_s(SurfScores, \"J7RFLkL6q/XLAb1XpCHNErqd5MM=\");\n_c = SurfScores;\nexport default SurfScores;\nvar _c;\n$RefreshReg$(_c, \"SurfScores\");","map":{"version":3,"names":["React","useState","useEffect","LongPressButton","Selector","getKey","jsxDEV","_jsxDEV","SurfScores","_ref","_s","player","index","scoreTotal","editPlayer","deletePlayer","getDominoTotal","updateTwoPlayerScores","winner","surfersScores","setSurfersScores","JSON","parse","localStorage","getItem","surfScoring","playerData","players","map","score","sort","a","b","sortedPlayers","data","sortedScores","setSortedPlayers","setSortedScores","setItem","stringify","intervalId","timerOn","setInterval","setTime","prevTime","newTime","clearInterval","setTimesUp","rankStatus","console","log","winsBy","needs","surfingRanks","surferScores","className","children","fileName","_jsxFileName","lineNumber","columnNumber","findTwoHighestIndices","scores","highestIndex","secondHighestIndex","forEach","getWave","playerId","highestScores","playerScores","highestId","secondHighestId","firstScore","secondScore","getClasses","wave","class","addScoreForPlayer","playerIndex","length","push","getTwoHighestScores","name","floatDecimalOneDigit","number","Number","isInteger","surfingScores","surf","getSurfTotal","total","surfKey","addToTotal","value","target","surfScores","scorecard","getSurfScore","newPlayer","highScoreIndex","secondHighScoreIndex","surfingScoreboard","surfScoreboard","Fragment","dartClass","getTimerButtonClasses","timerButtonClasses","getTimerClasses","timerClasses","time","onClick","toggleTimer","formatTime","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/SurfScores.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LongPressButton from './LongPressButton.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\n\nconst SurfScores = ({ player, index, scoreTotal, editPlayer, deletePlayer, getDominoTotal, updateTwoPlayerScores, winner }) => {\n\n    const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n    const surfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    \n    useEffect(() => {\n\n        const playerData = players.map((player, index) => ({ player, score: surfersScores[index] }));\n        playerData.sort((a, b) => b.score - a.score);\n\n        const sortedPlayers = playerData.map((data) => data.player);\n        const sortedScores = playerData.map((data) => data.score);\n\n        setSortedPlayers(sortedPlayers);\n        setSortedScores(sortedScores);\n\n        localStorage.setItem('players', JSON.stringify(sortedPlayers));\n        localStorage.setItem('surfersScores', JSON.stringify(sortedScores));\n\n    }, [players, surfersScores]);\n    useEffect(() => {\n        let intervalId;\n        if (timerOn) {\n            intervalId = setInterval(() => {\n                setTime((prevTime) => {\n                    const newTime = prevTime - 1;\n                    if (newTime <= 0) {\n                        clearInterval(intervalId);\n                        setTimesUp(true);\n                        return 0;\n                    }\n                    return newTime;\n                });\n            }, 1000);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [timerOn]);\n\n    const rankStatus = (player, index, score) => {\n        console.log(`ranksStatus => surfersScores player: ${player} index: ${index} score: ${score}`)\n        const winsBy = 'Wins by 7.17';\n        const needs = 'Needs 0.01';\n        if (index === 0) {\n            return winsBy\n        }\n        return needs\n    }\n\n    const surfingRanks = (player, index, score) => {\n        const surferScores = <div className='flexContainer width-100-percent size20 bold' key={getKey(player)}>\n            <div className='ml-10 p-10 w-100'>{index + 1}</div>\n            <div className='flex3ColumnLeft m-1 p-10'>{player}</div>\n            <div className='flex3ColumnRight mr-10 p-10'>\n                <div>{score}</div>\n                <div className='copyright bold'>{rankStatus(player, index, score)}</div>\n            </div>\n        </div>\n        return surferScores\n    }\n\n    const findTwoHighestIndices = (scores) => {\n        let highestIndex = 0;\n        let secondHighestIndex = -1;\n\n        scores.forEach((score, index) => {\n            if (score > scores[highestIndex]) {\n                secondHighestIndex = highestIndex;\n                highestIndex = index;\n            } else if (secondHighestIndex === -1 || score > scores[secondHighestIndex]) {\n                secondHighestIndex = index;\n            }\n        });\n\n        return [highestIndex, secondHighestIndex];\n    };\n\n    const getWave = (playerId, index, score) => {\n        console.log(`getWave => playerId: ${playerId} index: ${index} score: ${score}`);\n        const highestScores = findTwoHighestIndices(playerScores[playerId].scores);\n        const highestId = highestScores[0];\n        const secondHighestId = highestScores[1];\n        const firstScore = (index === highestId) ? true : false;\n        const secondScore = (index === secondHighestId) ? true : false;\n        const getClasses = (firstScore || secondScore) ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n        const wave = <div class=\"column\">\n            <div className='greet bold color-yellow bg-dkYellow w-100 p-5'>{index + 1}</div>\n            <div className={getClasses}>{score}</div>\n        </div>\n        return wave\n    }\n\n    const addScoreForPlayer = (players, playerIndex, score) => {\n        if (playerIndex >= 0 && playerIndex < players.length) {\n            players[playerIndex].scores.push(score);\n        }\n    };\n    //addScoreForPlayer(players, 0, 94);\n    // Find the indices of the two highest scores for each player\n    const getTwoHighestScores = (playerIndex) => {\n        const player = playerScores[playerIndex];\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(playerScores[playerIndex].scores);\n        console.log(`${player.name}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            'highScoreIndex': highestIndex,\n            'secondHighScoreIndex': secondHighestIndex\n        }\n    }\n    const floatDecimalOneDigit = (number) => {\n        if (Number.isInteger(number) && number >= 10 && number <= 99) {\n            return number / 10;\n        } else {\n            return null;\n        }\n    };\n\n    const surfingScores = (player, index, score) => {\n        if (surf) {\n            console.log(`surfingScores => player: ${player} index: ${index} score:${playerScores[index].scores[0]}`);\n            const surferScores = <div>\n                <div className='flexContainer width-100-percent mt--10 mb--10' key={getKey(player)}>\n                    <div className='ml-10 p-5 w-100 size40 mt-10'>{index + 1}</div>\n                    <div className='flex3ColumnLeft m-1 p-5 size40 mt-10'>{player}</div>\n                    <div className='flex3ColumnRight mr-10 p-5'>\n                        <div className='size25 bold'>{score}</div>\n                        <div>{rankStatus(player, index, score)}</div>\n                    </div>\n                </div>\n                <div>\n                    <div>\n                        <div className='h-scroll color-white copyright m-10'>\n                            <div class=\"container mt-10\">\n                                {playerScores[index].scores.map((score, wave) => getWave(index, wave, floatDecimalOneDigit(score)))}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            return surferScores\n        }\n        return\n    }\n\n    const getSurfTotal = (player) => {\n        if (!surf) return;\n        let total = 0;\n        const score = (index) => localStorage.getItem(surfKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n            console.log(`getSurfTotal=> ${surfKey(player, index)} ${index}: ${total}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        //console.log(`getsurfTotalplayer=> ${player}: ${total}`)\n        return total;\n    }\n\n    const surfScores = surfScoring.map((wave, index) => <div className='flexContainer width-100-percent' key={getKey(wave)}>\n            <div className='flex3Column p-5'>\n                {scorecard(index, index)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {wave}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(index, index)}\n            </div>\n        </div>);\n\n    const getSurfScore = (index) => {\n        if (surf) {\n            const newPlayer = {\n                'name': players[index],\n                'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n            }\n            if (playerScores.length < players.length) {\n                playerScores.push(newPlayer)\n            }\n            const scoreTotal = floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex]));\n            return scoreTotal;\n        }\n        return\n    };\n\n    const surfingScoreboard = sortedPlayers.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n\n    const surfScoreboard = <React.Fragment>\n                <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                    <div className={dartClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getSurfTotal(players[0])}</div></div>\n                    <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                    <div className={dartClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getSurfTotal(players[1])}</div></div>\n                </div>\n                {surfScores}\n            </React.Fragment>\n        \n    const getTimerButtonClasses = () => {\n        const timerButtonClasses = timerOn ? 'bg-red m-10 r-10 bold size20 p-20 color-light' : 'bg-green m-10 r-10 bold size20 p-20 color-light';\n        return timerButtonClasses;\n    }\n    const getTimerClasses = () => {\n        const timerClasses = (time < 120) ? 'blinking-fade' : '';\n        return timerClasses;\n    }\n\n    return <React.Fragment>\n                <div className={getTimerButtonClasses()} onClick={() => toggleTimer()}>\n                    {(timerOn) ? 'STOP' : 'START'}\n                </div>\n                <div className='bg-dkBlue m-10 r-10 bold size20 p-20 color-light0'><span className={getTimerClasses()}>{formatTime(time)}</span></div>\n                <div>\n                    <div className='flexContainer color-yellow bold greet ml-10 mr-10'>\n                        <div className='ml-10 p-10 w-100 bg-dkGreen m-1 r-5-lft'>Rank</div>\n                        <div className='flex3ColumnLeft m-1 p-10 bg-dkGreen m-1'>Athlete</div>\n                        <div className='flex3ColumnRight mr-10 p-10 bg-dkGreen m-1 r-5-rt'>Total</div>\n                    </div>\n                </div>\n\n            </React.Fragment>\n\n}\n   \nexport default SurfScores;"],"mappings":"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"},"metadata":{},"sourceType":"module"}