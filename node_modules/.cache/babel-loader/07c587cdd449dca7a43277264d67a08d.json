{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/TaskTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DropDown from '../forms/DropDown.js';\nimport thumbsUp from '../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../assets/images/ThumbsDown.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectTaskTracker = () => {\n  _s();\n  const [projects, setProjects] = useState(JSON.parse(localStorage.getItem('projects')) || []);\n  const [tracking, setTracking] = useState(localStorage.getItem('tracking') || 'tasks');\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [newProjectDescription, setNewProjectDescription] = useState(tracking === 'sets' ? 'WAVES' : tracking === 'solar/battery' ? 'Solar / Battery Log' : '');\n  const [newTaskDescription, setNewTaskDescription] = useState('');\n  const [activeProjectIndex, setActiveProjectIndex] = useState(-1);\n  const trackables = ['tasks', 'sets', 'events', 'solar/battery'];\n  useEffect(() => {\n    const storedProjects = localStorage.getItem('projects');\n    if (storedProjects) {\n      setProjects(JSON.parse(storedProjects));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('projects', JSON.stringify(projects));\n  }, [projects]);\n  /*\n      useEffect(() => {\n          localStorage.setItem('tracking', tracking);\n          console.log(`tracking: ${JSON.stringify(tracking,null,2)}`)\n          if (tracking === 'sets') {\n              setNewProjectDescription('WAVES');\n              return (projects.length<1) ? handleAddProject(): null;\n          }\n      }, [tracking]);\n  */\n  useEffect(() => {\n    localStorage.setItem('tracking', tracking);\n    if (tracking === 'sets') {\n      setNewProjectDescription('WAVES');\n      const storedProjects = localStorage.getItem('projects');\n      if (storedProjects) {\n        const currentProjects = JSON.parse(storedProjects);\n        if (currentProjects.length < 1) {\n          handleAddProject();\n        }\n      }\n    }\n    if (tracking === 'solar/battery') {\n      setNewProjectDescription('Solar / Battery Log');\n      const storedProjects = localStorage.getItem('projects');\n      if (storedProjects) {\n        const currentProjects = JSON.parse(storedProjects);\n        if (currentProjects.length < 1) {\n          handleAddProject();\n        }\n      }\n    }\n  }, [tracking]);\n  const handleDropdownChange = event => {\n    setTracking(event.target.value);\n  };\n  const handleAddProject = () => {\n    const project = {\n      description: newProjectDescription,\n      createdDate: new Date().toLocaleString(),\n      startTime: new Date().getTime(),\n      tasks: []\n    };\n    setProjects(prevProjects => [project, ...prevProjects]);\n  };\n  const addTask = projectIndex => {\n    const taskDescription = tracking !== 'solar/battery' ? prompt('Enter task description:') : null;\n    const batteryDescription = tracking === 'solar/battery' ? prompt('Battery Type:') : null;\n    const batteryLevel = tracking === 'solar/battery' ? prompt('Battery Level:') : null;\n    const solarDescription = tracking === 'solar/battery' ? prompt('Solar Type:') : null;\n    const solarLogDescription = `${batteryDescription} + ${solarDescription}: ${batteryLevel}-100%`;\n    if (taskDescription || batteryDescription) {\n      const session = {\n        startDate: new Date().toLocaleString(),\n        startTime: new Date().getTime(),\n        endTime: '',\n        endDate: '',\n        totalTime: '',\n        runningTime: '0s'\n      };\n      const sessions = [];\n      sessions.push(session);\n      const task = {\n        startTime: new Date().getTime(),\n        endTime: '',\n        description: tracking === 'tasks' ? taskDescription : solarLogDescription,\n        sessions: sessions,\n        isRunning: true,\n        runningTime: '0s'\n      };\n      const updatedProjects = [...projects];\n      updatedProjects[projectIndex].tasks.unshift(task);\n      updatedProjects[projectIndex].isCollapsed = false;\n      setProjects(updatedProjects);\n    }\n  };\n  const addSet = projectIndex => {\n    const updatedProjects = [...projects];\n    const taskDescription = `Set ${updatedProjects[projectIndex].tasks.length + 1}`;\n    if (taskDescription) {\n      const session = {\n        startDate: new Date().toLocaleString(),\n        startTime: new Date().getTime(),\n        endTime: '',\n        endDate: '',\n        totalTime: '',\n        runningTime: '0s'\n      };\n      const sessions = [];\n      sessions.push(session);\n      const task = {\n        startTime: new Date().getTime(),\n        endTime: '',\n        description: taskDescription,\n        sessions: sessions,\n        isRunning: true,\n        runningTime: '0s'\n      };\n      updatedProjects[projectIndex].tasks.unshift(task);\n      updatedProjects[projectIndex].isCollapsed = false;\n      setProjects(updatedProjects);\n    }\n  };\n  const handleAddTask = projectIndex => {\n    const task = {\n      description: newTaskDescription,\n      startDate: new Date().toLocaleString(),\n      startTime: new Date().getTime(),\n      endTime: '',\n      endDate: '',\n      totalTime: '',\n      runningTime: '0s',\n      isRunning: true\n    };\n    const updatedProjects = [...projects];\n    updatedProjects[activeProjectIndex].tasks.unshift(task);\n    setProjects(updatedProjects);\n    setNewTaskDescription('');\n    setActiveProjectIndex(projectIndex);\n  };\n  const handleDeleteProject = index => {\n    const updatedProjects = [...projects];\n    updatedProjects.splice(index, 1);\n    setProjects(updatedProjects);\n  };\n  const handleDeleteTask = (projectIndex, taskIndex) => {\n    const updatedProjects = [...projects];\n    updatedProjects[projectIndex].tasks.splice(taskIndex, 1);\n    setProjects(updatedProjects);\n  };\n  const handleStartTask = (projectIndex, taskIndex) => {\n    const updatedProjects = [...projects];\n    const task = updatedProjects[projectIndex].tasks[taskIndex];\n    task.sessions = task.sessions || [];\n    task.isRunning = true;\n    //task.startDate = new Date().toLocaleString();\n    const session = {\n      startDate: new Date().toLocaleString(),\n      startTime: new Date().getTime(),\n      endTime: ''\n    };\n    task.sessions.push(session);\n    setProjects(updatedProjects);\n    startTimer(projectIndex, taskIndex);\n  };\n  const addWave = (projectIndex, taskIndex) => {\n    const updatedProjects = [...projects];\n    const task = updatedProjects[projectIndex].tasks[taskIndex];\n    task.sessions = task.sessions || [];\n    task.isRunning = false;\n    //task.startDate = new Date().toLocaleString();\n    const session = {\n      startDate: new Date().toLocaleString(),\n      startTime: new Date().getTime(),\n      endTime: new Date().getTime()\n    };\n    task.sessions.push(session);\n    setProjects(updatedProjects);\n  };\n  const subtractWave = (projectIndex, taskIndex) => {\n    const updatedProjects = [...projects];\n    const task = updatedProjects[projectIndex].tasks[taskIndex];\n    task.sessions = task.sessions || [];\n    task.isRunning = false;\n    task.sessions.pop();\n    setProjects(updatedProjects);\n  };\n  const getTotalTime = totalTimeMilliseconds => {\n    let hours = Math.floor(totalTimeMilliseconds / 3600000);\n    hours = hours < 10 ? `0${hours}` : hours;\n    let minutes = Math.floor(totalTimeMilliseconds % 3600000 / 60000);\n    minutes = minutes < 10 ? `0${minutes}` : minutes;\n    let seconds = Math.floor(totalTimeMilliseconds % 60000 / 1000);\n    seconds = seconds < 10 ? `0${seconds}` : seconds;\n    const totalTime = `${hours}:${minutes}:${seconds}`;\n    return totalTime;\n  };\n  const handleStopTask = (projectIndex, taskIndex) => {\n    const updatedProjects = [...projects];\n    const task = updatedProjects[projectIndex].tasks[taskIndex];\n    task.sessions = task.sessions || [];\n    task.isRunning = false;\n    const startTime = task.sessions[task.sessions.length - 1].startTime;\n    const startDate = task.sessions[task.sessions.length - 1].startDate;\n    const endTime = new Date().getTime();\n    const endDate = new Date().toLocaleString();\n    const totalTimeMilliseconds = Math.round(endTime - startTime);\n    const totalTime = getTotalTime(totalTimeMilliseconds);\n    let runningTime = task.sessions[task.sessions.length - 1].runningTime;\n    runningTime = runningTime === undefined ? task.sessions[task.sessions.length - 2].runningTime : runningTime;\n    //alert(`runningTime: ${runningTime}`)\n    runningTime = runningTime === '0s' ? totalTimeMilliseconds : runningTime + totalTimeMilliseconds;\n    const runningTimeDisplay = getTotalTime(runningTime);\n    const session = {\n      startDate: startDate,\n      startTime: startTime,\n      endDate: endDate,\n      endTime: endTime,\n      totalTime: totalTime,\n      runningTime: runningTime,\n      runningTimeDisplay: runningTimeDisplay\n    };\n    //alert(JSON.stringify(session,null,2))\n    task.runningTime = runningTime;\n    task.runningTimeDisplay = runningTimeDisplay;\n    task.sessions.push(session);\n    setProjects(updatedProjects);\n    stopTimer(projectIndex, taskIndex);\n  };\n  const startTimer = (projectIndex, taskIndex) => {\n    const updatedProjects = [...projects];\n    const task = updatedProjects[projectIndex].tasks[taskIndex];\n    const startTime = new Date().getTime();\n    const session = task.sessions[task.sessions.length - 1];\n    task.timerId = setInterval(() => {\n      const currentTime = new Date().getTime();\n      const elapsedTime = currentTime - startTime;\n      const seconds = Math.floor(elapsedTime / 1000);\n      const minutes = Math.floor(seconds / 60);\n      const hours = Math.floor(minutes / 60);\n      const timeString = `${hours < 10 ? `0${hours}` : hours}:${minutes % 60 < 10 ? `0${minutes % 60}` : minutes % 60}:${seconds % 60 < 10 ? `0${seconds % 60}` : seconds % 60}`;\n      //task.runningTime = timeString;\n      //task.runningTimeDisplay = timeString;\n      //session.runningTime = timeString;\n      //session.runningTimeDisplay = timeString;\n      setProjects(updatedProjects);\n    }, 1000);\n  };\n  const stopTimer = (projectIndex, taskIndex) => {\n    const updatedProjects = [...projects];\n    const task = updatedProjects[projectIndex].tasks[taskIndex];\n    const session = task.sessions[task.sessions.length - 1];\n    clearInterval(task.timerId);\n    task.sessions.splice(task.sessions.length - 2, 1);\n    task.totalTime = task.totalTime + session.runningTime;\n    setProjects(updatedProjects);\n  };\n  const handleToggleCollapse = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n  const handleProjectToggle = projectIndex => {\n    //setIsCollapsed(!isCollapsed);\n    const updatedProjects = [...projects];\n    const project = updatedProjects[projectIndex];\n    project.isCollapsed = !project.isCollapsed;\n    setProjects(updatedProjects);\n    return !project.isCollapsed ? setIsCollapsed(false) : null;\n  };\n  const getProjectTime = project => {\n    let projectTotal = 0;\n    project.tasks.forEach(task => {\n      console.log(`${project.description} task: ${getTotalTime(task.runningTime)}`);\n      projectTotal += task.runningTime;\n    });\n    project.totalTime = projectTotal;\n    console.log(`getProjectTime => ${project.description}: ${getTotalTime(projectTotal)}`);\n    return projectTotal;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-dark\",\n      children: /*#__PURE__*/_jsxDEV(DropDown, {\n        value: tracking,\n        options: trackables,\n        onChange: handleDropdownChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggleCollapse,\n      children: isCollapsed ? 'Expand All' : 'Collapse All'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this), tracking === 'tasks' ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newProjectDescription,\n          onChange: e => setNewProjectDescription(e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              e.preventDefault();\n              handleAddProject();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddProject,\n          children: \"Add Tracking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: projects.map((project, projectIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"r-10 bg-darker m-5 p-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"r-10 bg-black m-5 p-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"greet bold color-yellow\",\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description color-light\",\n              children: [project.createdDate, \" Time: \", getTotalTime(getProjectTime(project))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addTask(projectIndex),\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteProject(projectIndex),\n              children: \"Delete Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleProjectToggle(projectIndex),\n              children: project.isCollapsed ? 'Expand' : 'Collapse'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-green bold\",\n            children: isCollapsed || project.isCollapsed ? '' : `${project.description} Task List:`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: isCollapsed || project.isCollapsed ? null : project.tasks.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-black m-5 p-10 lowerBorder\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-10 r-10 m-10 bg-dark\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bold color-yellow\",\n                  children: task.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [task.sessions.length, \" Total: \", task.runningTimeDisplay, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-10 r-10 m-10 bg-dark\",\n                children: task.sessions.map((session, sessionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"description color-light\",\n                  children: [session.startDate, \" - \", String(session.endDate).split(', ')[1], \" \", session.totalTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 45\n              }, this), task.isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleStopTask(projectIndex, taskIndex),\n                children: \"Stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleStartTask(projectIndex, taskIndex),\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteTask(projectIndex, taskIndex),\n                children: \"Delete Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 45\n              }, this)]\n            }, taskIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 33\n          }, this)]\n        }, projectIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 19\n    }, this), tracking === 'solar/battery' ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Solar/Battery Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newProjectDescription,\n          onChange: e => setNewProjectDescription(e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              e.preventDefault();\n              handleAddProject();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddProject,\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: projects.map((project, projectIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"r-10 bg-darker m-5 p-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"r-10 bg-black m-5 p-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"greet bold color-yellow\",\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description color-light\",\n              children: [project.createdDate, \" Time: \", getTotalTime(getProjectTime(project))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addTask(projectIndex),\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteProject(projectIndex),\n              children: \"Delete Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleProjectToggle(projectIndex),\n              children: project.isCollapsed ? 'Expand' : 'Collapse'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: isCollapsed || project.isCollapsed ? null : project.tasks.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-black m-5 p-10 lowerBorder\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-10 r-10 m-10 bg-dark\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bold color-yellow\",\n                  children: task.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [task.sessions.length, \" Total: \", task.runningTimeDisplay, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-10 r-10 m-10 bg-dark\",\n                children: task.sessions.map((session, sessionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"description color-light\",\n                  children: [session.startDate, \" - \", String(session.endDate).split(', ')[1], \" \", session.totalTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 45\n              }, this), task.isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleStopTask(projectIndex, taskIndex),\n                children: \"Stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleStartTask(projectIndex, taskIndex),\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteTask(projectIndex, taskIndex),\n                children: \"Delete Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 45\n              }, this)]\n            }, taskIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 33\n          }, this)]\n        }, projectIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 19\n    }, this), tracking === 'sets' ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Track Sets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: projects.map((project, projectIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"r-10 bg-darker m-5 p-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"r-10 bg-black m-5 p-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"greet bold color-yellow\",\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"description color-light\",\n              children: [project.createdDate, \" Time: \", getTotalTime(getProjectTime(project))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addSet(projectIndex),\n              children: \"Add Set\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteProject(projectIndex),\n              children: \"Delete Log\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-green bold\",\n            children: isCollapsed || project.isCollapsed ? '' : `${project.description} Task List:`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: isCollapsed || project.isCollapsed ? null : project.tasks.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-black m-5 p-10 lowerBorder\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-10 r-10 m-10 bg-dark\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bold color-yellow\",\n                  children: task.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Waves: \", task.sessions.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => addWave(projectIndex, taskIndex),\n                  children: \"Wave +\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => subtractWave(projectIndex, taskIndex),\n                  children: \"Wave -\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteTask(projectIndex, taskIndex),\n                children: \"Delete Set\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-10 r-10 m-10 bg-dark\",\n                children: task.sessions.map((session, sessionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"description color-light p-10\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"button\",\n                    onClick: () => task.sessions[sessionIndex].isLiked = !task.sessions[sessionIndex].isLiked,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mr-5\",\n                      children: [String(session.startDate).split(', ')[1], \"  - Wave \", sessionIndex + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: task.sessions[sessionIndex].isLiked ? thumbsUp : thumbsDown,\n                      alt: \"like\",\n                      className: \"shaka mb--10\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 45\n              }, this)]\n            }, taskIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 33\n          }, this)]\n        }, projectIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 9\n  }, this);\n};\n_s(ProjectTaskTracker, \"GDKq3mXhzuipEn9hVWbhUKYbKCc=\");\n_c = ProjectTaskTracker;\nexport default ProjectTaskTracker;\nvar _c;\n$RefreshReg$(_c, \"ProjectTaskTracker\");","map":{"version":3,"names":["React","useState","useEffect","DropDown","thumbsUp","thumbsDown","jsxDEV","_jsxDEV","ProjectTaskTracker","_s","projects","setProjects","JSON","parse","localStorage","getItem","tracking","setTracking","isCollapsed","setIsCollapsed","newProjectDescription","setNewProjectDescription","newTaskDescription","setNewTaskDescription","activeProjectIndex","setActiveProjectIndex","trackables","storedProjects","setItem","stringify","currentProjects","length","handleAddProject","handleDropdownChange","event","target","value","project","description","createdDate","Date","toLocaleString","startTime","getTime","tasks","prevProjects","addTask","projectIndex","taskDescription","prompt","batteryDescription","batteryLevel","solarDescription","solarLogDescription","session","startDate","endTime","endDate","totalTime","runningTime","sessions","push","task","isRunning","updatedProjects","unshift","addSet","handleAddTask","handleDeleteProject","index","splice","handleDeleteTask","taskIndex","handleStartTask","startTimer","addWave","subtractWave","pop","getTotalTime","totalTimeMilliseconds","hours","Math","floor","minutes","seconds","handleStopTask","round","undefined","runningTimeDisplay","stopTimer","timerId","setInterval","currentTime","elapsedTime","timeString","clearInterval","handleToggleCollapse","handleProjectToggle","getProjectTime","projectTotal","forEach","console","log","children","className","options","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Fragment","type","e","onKeyDown","key","preventDefault","map","sessionIndex","String","split","isLiked","src","alt","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/TaskTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DropDown from '../forms/DropDown.js';\nimport thumbsUp from '../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../assets/images/ThumbsDown.png';\n\nconst ProjectTaskTracker = () => {\n\n    const [projects, setProjects] = useState(JSON.parse(localStorage.getItem('projects')) || []);\n    const [tracking, setTracking] = useState(localStorage.getItem('tracking') || 'tasks');\n    const [isCollapsed, setIsCollapsed] = useState(false);\n    const [newProjectDescription, setNewProjectDescription] = useState((tracking === 'sets') ? 'WAVES' : (tracking === 'solar/battery') ? 'Solar / Battery Log' : '');\n    const [newTaskDescription, setNewTaskDescription] = useState('');\n    const [activeProjectIndex, setActiveProjectIndex] = useState(-1);\n\n    const trackables = ['tasks', 'sets', 'events', 'solar/battery'];\n\n    useEffect(() => {\n        const storedProjects = localStorage.getItem('projects');\n        if (storedProjects) {\n            setProjects(JSON.parse(storedProjects));\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('projects', JSON.stringify(projects));\n    }, [projects]);\n    /*\n        useEffect(() => {\n            localStorage.setItem('tracking', tracking);\n            console.log(`tracking: ${JSON.stringify(tracking,null,2)}`)\n            if (tracking === 'sets') {\n                setNewProjectDescription('WAVES');\n                return (projects.length<1) ? handleAddProject(): null;\n            }\n        }, [tracking]);\n    */\n    useEffect(() => {\n        localStorage.setItem('tracking', tracking);\n        if (tracking === 'sets') {\n            setNewProjectDescription('WAVES');\n            const storedProjects = localStorage.getItem('projects');\n            if (storedProjects) {\n                const currentProjects = JSON.parse(storedProjects);\n                if (currentProjects.length < 1) {\n                    handleAddProject();\n                }\n            }\n        }\n        if (tracking === 'solar/battery') {\n            setNewProjectDescription('Solar / Battery Log');\n            const storedProjects = localStorage.getItem('projects');\n            if (storedProjects) {\n                const currentProjects = JSON.parse(storedProjects);\n                if (currentProjects.length < 1) {\n                    handleAddProject();\n                }\n            }\n        }\n    }, [tracking]);\n\n    const handleDropdownChange = (event) => {\n        setTracking(event.target.value);\n    };\n\n    const handleAddProject = () => {\n        const project = {\n            description: newProjectDescription,\n            createdDate: new Date().toLocaleString(),\n            startTime: new Date().getTime(),\n            tasks: []\n        };\n        setProjects(prevProjects => [project, ...prevProjects]);\n    };\n\n    const addTask = (projectIndex) => {\n        const taskDescription = (tracking !== 'solar/battery') \n            ? prompt('Enter task description:') \n            : null;\n        const batteryDescription = (tracking === 'solar/battery') \n            ? prompt('Battery Type:') \n            : null;\n        const batteryLevel = (tracking === 'solar/battery') \n            ? prompt('Battery Level:') \n            : null;\n        const solarDescription = (tracking === 'solar/battery') \n            ? prompt('Solar Type:') \n            : null;\n        const solarLogDescription = `${batteryDescription} + ${solarDescription}: ${batteryLevel}-100%`\n        if (taskDescription || batteryDescription) {\n            const session = {\n                startDate: new Date().toLocaleString(),\n                startTime: new Date().getTime(),\n                endTime: '',\n                endDate: '',\n                totalTime: '',\n                runningTime: '0s'\n            }\n            const sessions = [];\n            sessions.push(session);\n            const task = {\n                startTime: new Date().getTime(),\n                endTime: '',\n                description: (tracking === 'tasks') ? taskDescription : solarLogDescription,\n                sessions: sessions,\n                isRunning: true,\n                runningTime: '0s'\n            };\n            const updatedProjects = [...projects];\n            updatedProjects[projectIndex].tasks.unshift(task);\n            updatedProjects[projectIndex].isCollapsed = false;\n            setProjects(updatedProjects);\n        }\n    };\n\n    const addSet = (projectIndex) => {\n        const updatedProjects = [...projects];\n        const taskDescription = `Set ${updatedProjects[projectIndex].tasks.length + 1}`;\n        if (taskDescription) {\n            const session = {\n                startDate: new Date().toLocaleString(),\n                startTime: new Date().getTime(),\n                endTime: '',\n                endDate: '',\n                totalTime: '',\n                runningTime: '0s'\n            }\n            const sessions = [];\n            sessions.push(session);\n            const task = {\n                startTime: new Date().getTime(),\n                endTime: '',\n                description: taskDescription,\n                sessions: sessions,\n                isRunning: true,\n                runningTime: '0s'\n            };\n            updatedProjects[projectIndex].tasks.unshift(task);\n            updatedProjects[projectIndex].isCollapsed = false;\n            setProjects(updatedProjects);\n        }\n    };\n\n    const handleAddTask = (projectIndex) => {\n        const task = {\n            description: newTaskDescription,\n            startDate: new Date().toLocaleString(),\n            startTime: new Date().getTime(),\n            endTime: '',\n            endDate: '',\n            totalTime: '',\n            runningTime: '0s',\n            isRunning: true\n        };\n        const updatedProjects = [...projects];\n        updatedProjects[activeProjectIndex].tasks.unshift(task);\n        setProjects(updatedProjects);\n        setNewTaskDescription('');\n        setActiveProjectIndex(projectIndex)\n    };\n\n    const handleDeleteProject = (index) => {\n        const updatedProjects = [...projects];\n        updatedProjects.splice(index, 1);\n        setProjects(updatedProjects);\n    };\n\n    const handleDeleteTask = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        updatedProjects[projectIndex].tasks.splice(taskIndex, 1);\n        setProjects(updatedProjects);\n    };\n\n    const handleStartTask = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        task.sessions = task.sessions || [];\n        task.isRunning = true;\n        //task.startDate = new Date().toLocaleString();\n        const session = {\n            startDate: new Date().toLocaleString(),\n            startTime: new Date().getTime(),\n            endTime: ''\n        }\n        task.sessions.push(session)\n        setProjects(updatedProjects);\n        startTimer(projectIndex, taskIndex);\n    };\n    const addWave = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        task.sessions = task.sessions || [];\n        task.isRunning = false;\n        //task.startDate = new Date().toLocaleString();\n        const session = {\n            startDate: new Date().toLocaleString(),\n            startTime: new Date().getTime(),\n            endTime: new Date().getTime(),\n        }\n        task.sessions.push(session)\n        setProjects(updatedProjects);\n    };\n    const subtractWave = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        task.sessions = task.sessions || [];\n        task.isRunning = false;\n        task.sessions.pop();\n        setProjects(updatedProjects);\n    };\n    const getTotalTime = (totalTimeMilliseconds) => {\n        let hours = Math.floor(totalTimeMilliseconds / 3600000);\n        hours = (hours < 10) ? `0${hours}` : hours;\n        let minutes = Math.floor((totalTimeMilliseconds % 3600000) / 60000);\n        minutes = (minutes < 10) ? `0${minutes}` : minutes;\n        let seconds = Math.floor((totalTimeMilliseconds % 60000) / 1000);\n        seconds = (seconds < 10) ? `0${seconds}` : seconds;\n        const totalTime = `${hours}:${minutes}:${seconds}`;\n        return totalTime\n    }\n    const handleStopTask = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        task.sessions = task.sessions || [];\n        task.isRunning = false;\n        const startTime = task.sessions[task.sessions.length - 1].startTime;\n        const startDate = task.sessions[task.sessions.length - 1].startDate;\n        const endTime = new Date().getTime();\n        const endDate = new Date().toLocaleString();\n        const totalTimeMilliseconds = Math.round(endTime - startTime);\n        const totalTime = getTotalTime(totalTimeMilliseconds);\n        let runningTime = task.sessions[task.sessions.length - 1].runningTime;\n        runningTime = (runningTime === undefined) ? task.sessions[task.sessions.length - 2].runningTime : runningTime;\n        //alert(`runningTime: ${runningTime}`)\n        runningTime = (runningTime === '0s') ? totalTimeMilliseconds : (runningTime + totalTimeMilliseconds);\n        const runningTimeDisplay = getTotalTime(runningTime);\n        const session = {\n            startDate: startDate,\n            startTime: startTime,\n            endDate: endDate,\n            endTime: endTime,\n            totalTime: totalTime,\n            runningTime: runningTime,\n            runningTimeDisplay: runningTimeDisplay\n        }\n        //alert(JSON.stringify(session,null,2))\n        task.runningTime = runningTime;\n        task.runningTimeDisplay = runningTimeDisplay;\n        task.sessions.push(session)\n        setProjects(updatedProjects);\n        stopTimer(projectIndex, taskIndex);\n    };\n\n    const startTimer = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        const startTime = new Date().getTime();\n        const session = task.sessions[task.sessions.length - 1]\n\n        task.timerId = setInterval(() => {\n            const currentTime = new Date().getTime();\n            const elapsedTime = currentTime - startTime;\n            const seconds = Math.floor(elapsedTime / 1000);\n            const minutes = Math.floor(seconds / 60);\n            const hours = Math.floor(minutes / 60);\n            const timeString = `${(hours < 10) ? `0${hours}` : hours}:${((minutes % 60) < 10) ? `0${(minutes % 60)}` : (minutes % 60)}:${((seconds % 60) < 10) ? `0${(seconds % 60)}` : (seconds % 60)}`;\n            //task.runningTime = timeString;\n            //task.runningTimeDisplay = timeString;\n            //session.runningTime = timeString;\n            //session.runningTimeDisplay = timeString;\n            setProjects(updatedProjects);\n        }, 1000);\n    };\n\n    const stopTimer = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        const session = task.sessions[task.sessions.length - 1]\n        clearInterval(task.timerId);\n        task.sessions.splice((task.sessions.length - 2), 1);\n        task.totalTime = task.totalTime + session.runningTime;\n        setProjects(updatedProjects);\n    };\n\n    const handleToggleCollapse = () => {\n        setIsCollapsed(!isCollapsed);\n    };\n    const handleProjectToggle = (projectIndex) => {\n        //setIsCollapsed(!isCollapsed);\n        const updatedProjects = [...projects];\n        const project = updatedProjects[projectIndex];\n        project.isCollapsed = !project.isCollapsed;\n\n        setProjects(updatedProjects);\n        return (!project.isCollapsed) ? setIsCollapsed(false) : null;\n    };\n\n    const getProjectTime = (project) => {\n        let projectTotal = 0;\n        project.tasks.forEach((task) => {\n            console.log(`${project.description} task: ${getTotalTime(task.runningTime)}`)\n            projectTotal += task.runningTime;\n        });\n        project.totalTime = projectTotal;\n        console.log(`getProjectTime => ${project.description}: ${getTotalTime(projectTotal)}`)\n        return projectTotal;\n    };\n\n\n    return (\n        <div>\n            <div className='color-dark'>\n                <DropDown\n                    value={tracking}\n                    options={trackables}\n                    onChange={handleDropdownChange}\n                />\n            </div>\n            <button onClick={handleToggleCollapse}>{isCollapsed ? 'Expand All' : 'Collapse All'}</button>\n            <br />\n            <br />\n            {(tracking === 'tasks') ?\n                <React.Fragment>\n                    <div>\n                        <input\n                            type=\"text\"\n                            value={newProjectDescription}\n                            onChange={(e) => setNewProjectDescription(e.target.value)}\n                            onKeyDown={(e) => {\n                                if (e.key === 'Enter') {\n                                    e.preventDefault();\n                                    handleAddProject();\n                                }\n                            }}\n                        />\n\n                        <button onClick={handleAddProject}>Add Tracking</button>\n                    </div>\n                    <br />\n                    <div>\n                        {projects.map((project, projectIndex) => (\n                            <div key={projectIndex} className='r-10 bg-darker m-5 p-10'>\n                                <div className='r-10 bg-black m-5 p-10'>\n                                    <div className='greet bold color-yellow'>{project.description}</div>\n                                    <div className='description color-light'>{project.createdDate} Time: {getTotalTime(getProjectTime(project))}</div>\n                                    <button onClick={() => addTask(projectIndex)}>\n                                        Add Task\n                                    </button>\n                                    <button onClick={() => handleDeleteProject(projectIndex)}>\n                                        Delete Project\n                                    </button>\n                                    <button onClick={() => handleProjectToggle(projectIndex)}>\n                                        {project.isCollapsed ? 'Expand' : 'Collapse'}\n                                    </button>\n                                </div>\n                                <div className='color-green bold'>{(isCollapsed || project.isCollapsed) ? '' : `${project.description} Task List:`}</div>\n                                <div>\n                                    {(isCollapsed || project.isCollapsed) ? null : project.tasks.map((task, taskIndex) => (\n                                        <div key={taskIndex} className='bg-black m-5 p-10 lowerBorder'>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                <div className='bold color-yellow'>{task.description}</div>\n                                                <div>{task.sessions.length} Total: {task.runningTimeDisplay} </div>\n                                            </div>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                {task.sessions.map((session, sessionIndex) => (\n                                                    <div className='description color-light'>{session.startDate} - {String(session.endDate).split(', ')[1]} {session.totalTime}\n                                                    </div>\n                                                ))}\n                                            </div>\n                                            {task.isRunning ? (\n                                                <button onClick={() => handleStopTask(projectIndex, taskIndex)}>\n                                                    Stop\n                                                </button>\n                                            ) : (\n                                                <button onClick={() => handleStartTask(projectIndex, taskIndex)}>\n                                                    Start\n                                                </button>\n                                            )}\n                                            <button onClick={() => handleDeleteTask(projectIndex, taskIndex)}>\n                                                Delete Task\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </React.Fragment>\n                : <React.Fragment></React.Fragment>}\n            \n            {(tracking === 'solar/battery') ?\n                <React.Fragment>\n                    <div>\n                        <h3>Solar/Battery Log</h3>\n                        <input\n                            type=\"text\"\n                            value={newProjectDescription}\n                            onChange={(e) => setNewProjectDescription(e.target.value)}\n                            onKeyDown={(e) => {\n                                if (e.key === 'Enter') {\n                                    e.preventDefault();\n                                    handleAddProject();\n                                }\n                            }}\n                        />\n\n                        <button onClick={handleAddProject}>Add Project</button>\n                    </div>\n                    <br />\n                    <div>\n                        {projects.map((project, projectIndex) => (\n                            <div key={projectIndex} className='r-10 bg-darker m-5 p-10'>\n                                <div className='r-10 bg-black m-5 p-10'>\n                                    <div className='greet bold color-yellow'>{project.description}</div>\n                                    <div className='description color-light'>{project.createdDate} Time: {getTotalTime(getProjectTime(project))}</div>\n                                    <button onClick={() => addTask(projectIndex)}>\n                                        Add Task\n                                    </button>\n                                    <button onClick={() => handleDeleteProject(projectIndex)}>\n                                        Delete Project\n                                    </button>\n                                    <button onClick={() => handleProjectToggle(projectIndex)}>\n                                        {project.isCollapsed ? 'Expand' : 'Collapse'}\n                                    </button>\n                                </div>\n                                <div>\n                                    {(isCollapsed || project.isCollapsed) ? null : project.tasks.map((task, taskIndex) => (\n                                        <div key={taskIndex} className='bg-black m-5 p-10 lowerBorder'>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                <div className='bold color-yellow'>{task.description}</div>\n                                                <div>{task.sessions.length} Total: {task.runningTimeDisplay} </div>\n                                            </div>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                {task.sessions.map((session, sessionIndex) => (\n                                                    <div className='description color-light'>{session.startDate} - {String(session.endDate).split(', ')[1]} {session.totalTime}\n                                                    </div>\n                                                ))}\n                                            </div>\n                                            {task.isRunning ? (\n                                                <button onClick={() => handleStopTask(projectIndex, taskIndex)}>\n                                                    Stop\n                                                </button>\n                                            ) : (\n                                                <button onClick={() => handleStartTask(projectIndex, taskIndex)}>\n                                                    Start\n                                                </button>\n                                            )}\n                                            <button onClick={() => handleDeleteTask(projectIndex, taskIndex)}>\n                                                Delete Task\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </React.Fragment>\n                : <React.Fragment></React.Fragment>\n            }\n\n            {(tracking === 'sets') ?\n                <React.Fragment>\n                    <div>\n                        <h3>Track Sets</h3>\n                    </div>\n                    <br />\n                    <div>\n                        {projects.map((project, projectIndex) => (\n                            <div key={projectIndex} className='r-10 bg-darker m-5 p-10'>\n                                <div className='r-10 bg-black m-5 p-10'>\n                                    <div className='greet bold color-yellow'>{project.description}</div>\n                                    <div className='description color-light'>{project.createdDate} Time: {getTotalTime(getProjectTime(project))}</div>\n                                    <button onClick={() => addSet(projectIndex)}>\n                                        Add Set\n                                    </button>\n                                    <button onClick={() => handleDeleteProject(projectIndex)}>\n                                        Delete Log\n                                    </button>\n                                </div>\n                                <div className='color-green bold'>{(isCollapsed || project.isCollapsed) ? '' : `${project.description} Task List:`}</div>\n                                <div>\n                                    {(isCollapsed || project.isCollapsed) ? null : project.tasks.map((task, taskIndex) => (\n                                        <div key={taskIndex} className='bg-black m-5 p-10 lowerBorder'>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                <div className='bold color-yellow'>{task.description}</div>\n                                                <div>Waves: {task.sessions.length}</div>\n                                            </div>\n                                            <React.Fragment>\n                                                <button onClick={() => addWave(projectIndex, taskIndex)}>\n                                                    Wave +\n                                                </button>\n                                                <button onClick={() => subtractWave(projectIndex, taskIndex)}>\n                                                    Wave -\n                                                </button>\n                                            </React.Fragment>\n                                            <button onClick={() => handleDeleteTask(projectIndex, taskIndex)}>\n                                                Delete Set\n                                            </button>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                {task.sessions.map((session, sessionIndex) => (\n                                                    <div className='description color-light p-10'>\n                                                        <div className=\"button\" onClick={() => task.sessions[sessionIndex].isLiked = !task.sessions[sessionIndex].isLiked}>\n                                                            <span className='mr-5'>{String(session.startDate).split(', ')[1]}  - Wave {sessionIndex + 1}</span>\n                                                            <img src={(task.sessions[sessionIndex].isLiked) ? thumbsUp : thumbsDown} alt='like' className='shaka mb--10' />\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </React.Fragment>\n                : <React.Fragment></React.Fragment>}\n        </div>\n    );\n};\n\nexport default ProjectTaskTracker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}