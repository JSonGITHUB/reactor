{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/BuoyData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuoyData = () => {\n  _s();\n  const fetch = require('node-fetch'); // If you're running this in Node.js\n  const [swellHeight, setSwellHeight] = useState(null);\n  const buoyId = '46224'; // Buoy ID for Oceanside, California\n\n  useEffect(() => {\n    // Fetch the swell height for the Oceanside buoy\n    getBuoyDataForOceanside(buoyId).then(data => {\n      // Assuming the data contains swell height in feet\n      setSwellHeight(data.swellHeight);\n    }).catch(error => {\n      console.error('Error fetching buoy data:', error);\n    });\n  }, [buoyId]);\n  async function getBuoyDataForOceanside(buoyId) {\n    const apiUrl = `https://api.ndbc.noaa.gov/api/v1/datagetter?station=${buoyId}&datatype=swv&units=english&format=json`;\n    const apiUrlTxt = `https://www.ndbc.noaa.gov/data/realtime2/${buoyId}.txt`;\n    try {\n      const response = await fetch(apiUrlTxt);\n      const data = await response.json();\n\n      // Check if the API request was successful\n      if (response.ok) {\n        // Assuming the data is an array, and we're interested in the first entry\n        const firstEntry = data[0];\n\n        // Extract swell height\n        const swellHeight = firstEntry.swv1;\n\n        // Log the swell height\n        console.log(`Swell height at Oceanside buoy (Buoy ID ${buoyId}): ${swellHeight} feet`);\n      } else {\n        console.error(`Error fetching data: ${data.message}`);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: swellHeight !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Swell height at Oceanside buoy (Buoy ID ${buoyId}): ${swellHeight} feet`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading swell height...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(BuoyData, \"1VDoLyIKJLkZAKBcIhwRP22YQkc=\");\n_c = BuoyData;\nexport default BuoyData;\nvar _c;\n$RefreshReg$(_c, \"BuoyData\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","BuoyData","_s","fetch","require","swellHeight","setSwellHeight","buoyId","getBuoyDataForOceanside","then","data","catch","error","console","apiUrl","apiUrlTxt","response","json","ok","firstEntry","swv1","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/BuoyData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst BuoyData = () => {\n\n  const fetch = require('node-fetch');  // If you're running this in Node.js\n  const [swellHeight, setSwellHeight] = useState(null);\n  const buoyId = '46224';  // Buoy ID for Oceanside, California\n\n  useEffect(() => {\n    // Fetch the swell height for the Oceanside buoy\n    getBuoyDataForOceanside(buoyId)\n      .then(data => {\n        // Assuming the data contains swell height in feet\n        setSwellHeight(data.swellHeight);\n      })\n      .catch(error => {\n        console.error('Error fetching buoy data:', error);\n      });\n  }, [buoyId]);\n\n  async function getBuoyDataForOceanside(buoyId) {\n    const apiUrl = `https://api.ndbc.noaa.gov/api/v1/datagetter?station=${buoyId}&datatype=swv&units=english&format=json`;\n    const apiUrlTxt = `https://www.ndbc.noaa.gov/data/realtime2/${buoyId}.txt`\n    try {\n      const response = await fetch(apiUrlTxt);\n      const data = await response.json();\n  \n      // Check if the API request was successful\n      if (response.ok) {\n        // Assuming the data is an array, and we're interested in the first entry\n        const firstEntry = data[0];\n  \n        // Extract swell height\n        const swellHeight = firstEntry.swv1;\n  \n        // Log the swell height\n        console.log(`Swell height at Oceanside buoy (Buoy ID ${buoyId}): ${swellHeight} feet`);\n      } else {\n        console.error(`Error fetching data: ${data.message}`);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n\n  return (\n    <div>\n      {swellHeight !== null ? (\n        <div>\n          {`Swell height at Oceanside buoy (Buoy ID ${buoyId}): ${swellHeight} feet`}\n        </div>\n      ) : (\n        <div>Loading swell height...</div>\n      )}\n    </div>\n  );\n  \n};\n\nexport default BuoyData;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAMC,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAE;EACtC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMS,MAAM,GAAG,OAAO,CAAC,CAAE;;EAEzBV,SAAS,CAAC,MAAM;IACd;IACAW,uBAAuB,CAACD,MAAM,CAAC,CAC5BE,IAAI,CAACC,IAAI,IAAI;MACZ;MACAJ,cAAc,CAACI,IAAI,CAACL,WAAW,CAAC;IAClC,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,eAAeC,uBAAuBA,CAACD,MAAM,EAAE;IAC7C,MAAMO,MAAM,GAAI,uDAAsDP,MAAO,yCAAwC;IACrH,MAAMQ,SAAS,GAAI,4CAA2CR,MAAO,MAAK;IAC1E,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMb,KAAK,CAACY,SAAS,CAAC;MACvC,MAAML,IAAI,GAAG,MAAMM,QAAQ,CAACC,IAAI,CAAC,CAAC;;MAElC;MACA,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf;QACA,MAAMC,UAAU,GAAGT,IAAI,CAAC,CAAC,CAAC;;QAE1B;QACA,MAAML,WAAW,GAAGc,UAAU,CAACC,IAAI;;QAEnC;QACAP,OAAO,CAACQ,GAAG,CAAE,2CAA0Cd,MAAO,MAAKF,WAAY,OAAM,CAAC;MACxF,CAAC,MAAM;QACLQ,OAAO,CAACD,KAAK,CAAE,wBAAuBF,IAAI,CAACY,OAAQ,EAAC,CAAC;MACvD;IACF,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF;EAEA,oBACEZ,OAAA;IAAAuB,QAAA,EACGlB,WAAW,KAAK,IAAI,gBACnBL,OAAA;MAAAuB,QAAA,EACI,2CAA0ChB,MAAO,MAAKF,WAAY;IAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,gBAEN3B,OAAA;MAAAuB,QAAA,EAAK;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAClC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGV,CAAC;AAACzB,EAAA,CAvDID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAyDd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}