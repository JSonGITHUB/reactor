{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/LogEntry.js\";\nimport React from 'react';\nimport Dialog from './functional/Dialog.js'; //import shakaBlack from './assets/images/shakaBlack.png';\n//import thumbsUp from './assets/images/ThumbsUp.png';\n//import thumbsDown from './assets/images/ThumbsDown.png';\n\nimport Selector from './Forms/FunctionalSelector.js';\nimport RadioSelector from './Forms/FormRadio.js'; //import DateTimePicker from 'react-datetime-picker';\n\nimport DatePicker from 'react-date-picker';\n\nclass LogEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.logIt = () => this.state.log !== undefined && JSON.stringify(this.state.log) !== \"{}\" ? console.log(`LogEntry.state.log: ${JSON.stringify(this.state.log)}`) : console.log(`LogEntry.log: ${this.replaceBrackets(this.replaceCommas(this.log))}`);\n\n    this.replaceCommas = value => JSON.stringify(value).replace(/,/g, \",\\n\\t\");\n\n    this.replaceBrackets = value => value.replace(/{/g, \"{\\n\\t\").replace(/}}/g, \"\\n\\t}\\n}\").replace(/},/g, \"\\n\\t}\");\n\n    this.items = () => this.state.items;\n\n    this.defaultSelection = item => Math.round(item.selections.length / 2);\n\n    this.radioItems = (item, groupTitle) => /*#__PURE__*/React.createElement(RadioSelector, {\n      header: groupTitle,\n      groupTitle: groupTitle,\n      selected: Math.floor(item.selections.length / 2),\n      label: item.description,\n      items: item.selections,\n      onChange: this.handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 40\n      }\n    });\n\n    this.selector = (item, groupTitle) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radius-10 p-20 bg-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(Selector, {\n      groupTitle: groupTitle,\n      selected: this.defaultSelection(item),\n      label: item.description,\n      items: item.selections,\n      onChange: this.handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }));\n\n    this.radio = (item, groupTitle) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radius-10 bg-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 35\n      }\n    }, this.radioItems(item, groupTitle));\n\n    this.group = item => item.group;\n\n    this.selectionInterface = (item, groupTitle) => item.type === \"radio\" ? this.radio(item, groupTitle) : this.selector(item, groupTitle);\n\n    this.groups = () => this.items().map(item => {\n      const getKey = () => item.description.toString().toUpperCase() + Math.round(Math.random() * 100);\n\n      const headerClasses = 'subHeader color-yellow';\n      const selectorClasses = \"greet p-20 bg-vdk-green flex3Column\";\n      const groupClasses = \"flexContainer radius-10\";\n      const description = item.description;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(),\n        className: headerClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, item.description), /*#__PURE__*/React.createElement(\"div\", {\n        className: groupClasses,\n        key: getKey(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, this.group(item).map(group => /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(),\n        className: selectorClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }\n      }, this.selectionInterface(group, description)))));\n    });\n\n    this.categories = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 24\n      }\n    }, this.groups());\n\n    this.dateEntry = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5 subHeader color-yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexContainer bg-vdk-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      onChange: this.onDateChange,\n      value: this.state.date,\n      className: \"p-10 bg-green flex3Column radius-10 m-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 31\n      }\n    })));\n\n    this.buttonLabel = props.buttonLabe;\n    this.title = props.title;\n    this.log = {\n      Location: {},\n      Swell: {},\n      Tide: {},\n      Wind: {},\n      Conditions: {}\n    };\n    this.message = props.message;\n    this.state = {\n      date: new Date(),\n      items: props.items,\n      log: {}\n    };\n    this.handleSelection = this.handleSelection.bind(this);\n    this.updateNotes = this.updateNotes.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onDateChange = this.onDateChange.bind(this);\n  }\n\n  handleSelection(groupTitle, label, selected) {\n    if (groupTitle !== 1) {\n      //            console.log(`handleSelection =>  groupTitle: ${groupTitle}`)\n      let prop = {};\n      prop[groupTitle] = {};\n      prop[groupTitle][label] = selected;\n      this.log[groupTitle][label] = selected; //            console.log(`handleSelection => this.log: ${JSON.stringify(this.log)}`)\n      //this.logIt();\n\n      this.props.onChange(groupTitle, label, selected);\n      this.setState({\n        prop\n      });\n    }\n  }\n\n  updateNotes(event) {\n    this.setState({\n      notes: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert(`Your Welcome! Check console...`);\n    this.logIt();\n    event.preventDefault();\n  }\n\n  onDateChange(date) {\n    //const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thurdsday\", \"Friday\", \"Saturday\"]\n    //const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    //const hours = (hours) => (hours>12) ? (hours-12) : hours;\n    //const timeOfDay = (hours) => (hours>12) ? \"PM\" : \"AM\";\n    //const month = (date !== null) ? date.getMonth()+1 : false;\n    //const day = (date !== null) ? date.getDate() : false;\n    //const year = (date !== null) ? date.getFullYear() : false;\n    //const minutes = (minutesIn) => (minutesIn<10) ? (0+String(minutesIn)) : minutesIn;\n    //const time = (date !== null) ? `${hours(date.getHours())}:${minutes(date.getMinutes())}${timeOfDay(date.getHours())}` : false;\n    this.setState({\n      date: date\n    }); //console.log(`${JSON.stringify(date)}`)\n    //console.log(`${days[date.getDay()]}`)\n    //console.log(`${months[date.getMonth()]}`)\n    //console.log(`${date.getDate()}`)\n    //console.log(`${date.getFullYear()}`)\n    //console.log(`${hours(date.getHours())}:${date.getMinutes()}${timeOfDay(date.getHours())}`)\n    //console.log(`${date.getMonth()+1}/${date.getDate()}/${date.getFullYear()}`)\n\n    /*        \n    this.setState({\n        month: month,\n        day: day,\n        year: year,\n        //time: time\n    })\n    */\n  }\n\n  render() {\n    this.logIt();\n    return /*#__PURE__*/React.createElement(Dialog, {\n      title: this.title,\n      message: this.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, this.dateEntry(), this.categories(), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.entry,\n      onChange: this.updateNotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 86\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 91\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, this.buttonLabel)));\n  }\n\n}\n\nexport default LogEntry;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/LogEntry.js"],"names":["React","Dialog","Selector","RadioSelector","DatePicker","LogEntry","Component","constructor","props","logIt","state","log","undefined","JSON","stringify","console","replaceBrackets","replaceCommas","value","replace","items","defaultSelection","item","Math","round","selections","length","radioItems","groupTitle","floor","description","handleSelection","selector","radio","group","selectionInterface","type","groups","map","getKey","toString","toUpperCase","random","headerClasses","selectorClasses","groupClasses","categories","dateEntry","onDateChange","date","buttonLabel","buttonLabe","title","Location","Swell","Tide","Wind","Conditions","message","Date","bind","updateNotes","handleSubmit","label","selected","prop","onChange","setState","event","notes","target","alert","preventDefault","render","entry"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dialog from './functional/Dialog.js';\n//import shakaBlack from './assets/images/shakaBlack.png';\n//import thumbsUp from './assets/images/ThumbsUp.png';\n//import thumbsDown from './assets/images/ThumbsDown.png';\nimport Selector from './Forms/FunctionalSelector.js';\nimport RadioSelector from './Forms/FormRadio.js';\n//import DateTimePicker from 'react-datetime-picker';\nimport DatePicker from 'react-date-picker';\n\nclass LogEntry extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.buttonLabel = props.buttonLabe;\n        this.title = props.title;\n        this.log = {\n            Location: {},\n            Swell: {},\n            Tide: {},\n            Wind: {},\n            Conditions: {},\n        };\n        this.message = props.message;\n        this.state = {\n            date: new Date(),\n            items: props.items,\n            log: {}\n        };\n        this.handleSelection = this.handleSelection.bind(this);\n        this.updateNotes = this.updateNotes.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n    }\n    handleSelection(groupTitle, label, selected) {\n        \n        if (groupTitle !== 1) {\n//            console.log(`handleSelection =>  groupTitle: ${groupTitle}`)\n            let prop = {}\n            prop[groupTitle] = {};\n            prop[groupTitle][label] = selected;\n            this.log[groupTitle][label] = selected\n//            console.log(`handleSelection => this.log: ${JSON.stringify(this.log)}`)\n            //this.logIt();\n            this.props.onChange(groupTitle, label, selected);\n            this.setState({\n                prop\n            });\n        } \n    }\n    updateNotes(event) {\n        this.setState({\n            notes: event.target.value\n        });\n    }\n    logIt = () => (this.state.log !== undefined && JSON.stringify(this.state.log) !== \"{}\") ? console.log(`LogEntry.state.log: ${JSON.stringify(this.state.log)}`) : console.log(`LogEntry.log: ${this.replaceBrackets(this.replaceCommas(this.log))}`);\n    handleSubmit(event) {\n        alert(`Your Welcome! Check console...`);\n        this.logIt();\n        event.preventDefault();\n    }\n    onDateChange(date) {\n        //const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thurdsday\", \"Friday\", \"Saturday\"]\n        //const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n        //const hours = (hours) => (hours>12) ? (hours-12) : hours;\n        //const timeOfDay = (hours) => (hours>12) ? \"PM\" : \"AM\";\n        //const month = (date !== null) ? date.getMonth()+1 : false;\n        //const day = (date !== null) ? date.getDate() : false;\n        //const year = (date !== null) ? date.getFullYear() : false;\n        //const minutes = (minutesIn) => (minutesIn<10) ? (0+String(minutesIn)) : minutesIn;\n        //const time = (date !== null) ? `${hours(date.getHours())}:${minutes(date.getMinutes())}${timeOfDay(date.getHours())}` : false;\n        this.setState({\n            date: date \n        });\n        //console.log(`${JSON.stringify(date)}`)\n        //console.log(`${days[date.getDay()]}`)\n        //console.log(`${months[date.getMonth()]}`)\n        //console.log(`${date.getDate()}`)\n        //console.log(`${date.getFullYear()}`)\n        //console.log(`${hours(date.getHours())}:${date.getMinutes()}${timeOfDay(date.getHours())}`)\n        //console.log(`${date.getMonth()+1}/${date.getDate()}/${date.getFullYear()}`)\n/*        \nthis.setState({\n    month: month,\n    day: day,\n    year: year,\n    //time: time\n})\n*/\n    }\n    replaceCommas = (value) => JSON.stringify(value).replace(/,/g,\",\\n\\t\");\n    replaceBrackets = (value) => (value).replace(/{/g,\"{\\n\\t\").replace(/}}/g,\"\\n\\t}\\n}\").replace(/},/g,\"\\n\\t}\");\n    items = () => this.state.items;\n    defaultSelection = (item) => Math.round(item.selections.length/2); \n    radioItems = (item, groupTitle) => <RadioSelector\n                    header={groupTitle}\n                    groupTitle={groupTitle} \n                    selected={Math.floor(item.selections.length/2)} \n                    label={item.description} \n                    items={item.selections} \n                    onChange={this.handleSelection}\n                />;\n    selector = (item, groupTitle) => <div className=\"radius-10 p-20 bg-green\">\n                <Selector \n                    groupTitle={groupTitle} \n                    selected={this.defaultSelection(item)} \n                    label={item.description} \n                    items={item.selections}\n                    onChange={this.handleSelection}\n                />\n            </div>;\n\n    radio = (item, groupTitle) => <div className=\"radius-10 bg-green\">\n                {this.radioItems(item, groupTitle)}\n            </div>;\n    group = (item) => item.group;\n    selectionInterface = (item, groupTitle) => (item.type === \"radio\") ? this.radio(item, groupTitle) : this.selector(item, groupTitle);\n\n    groups = () => this.items().map((item) => {\n        const getKey = () => item.description.toString().toUpperCase()+(Math.round(Math.random()*100));\n        const headerClasses = 'subHeader color-yellow';\n        const selectorClasses = \"greet p-20 bg-vdk-green flex3Column\";\n        const groupClasses = \"flexContainer radius-10\";\n        const description = item.description;\n        return <div key={getKey()}>\n                    <div key={getKey()} className={headerClasses}>\n                        {item.description}\n                    </div>\n                    <div className={groupClasses} key={getKey()}>\n                        {this.group(item).map((group) => \n                            <div key={getKey()} className={selectorClasses}>\n                                {this.selectionInterface(group, description)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n    })\n    categories = () => <div className='description'>{this.groups()}</div>;\n    dateEntry = () => <div>\n                        <div className='mb-5 subHeader color-yellow'>Date</div>\n                        <div className='flexContainer bg-vdk-green'>\n                            <DatePicker\n                                onChange={this.onDateChange}\n                                value={this.state.date} \n                                className='p-10 bg-green flex3Column radius-10 m-20'\n                            /><br/>\n                        </div>\n                    </div>\n    \n    render() {\n        this.logIt();\n        return (\n            <Dialog title={this.title} message={this.message}>\n                <form onSubmit={this.handleSubmit}>\n                    {this.dateEntry()}\n                    {this.categories()}\n                    <br/>\n                    <textarea value={this.state.entry} onChange={this.updateNotes} /><br/><br/>\n                    <button onClick={this.handleSubmit}>\n                        {this.buttonLabel}\n                    </button>\n                </form>\n            </Dialog>\n        );\n    };\n}\n\nexport default LogEntry;"]},"metadata":{},"sourceType":"module"}