{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/LogEntry.js\";\nimport React from 'react';\nimport Dialog from './functional/Dialog.js'; //import shakaBlack from './assets/images/shakaBlack.png';\n//import thumbsUp from './assets/images/ThumbsUp.png';\n//import thumbsDown from './assets/images/ThumbsDown.png';\n\nimport Selector from './Forms/FunctionalSelector.js';\nimport RadioSelector from './Forms/FormRadio.js'; //import DateTimePicker from 'react-datetime-picker';\n\nimport DatePicker from 'react-date-picker';\n\nclass LogEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.replaceCommas = value => JSON.stringify(value).replace(/\",\"/g, '\",\\n\\t\"').replace(/},\"/g, '},\\n\"');\n\n    this.replaceBrackets = value => value.replace(/\":{\"/g, '\":\\n{\\n\\t\"').replace(/{\"/g, '{\\n\"').replace(/}/g, '\\n}').replace(/},/g, '},\\n').replace(/}/g, '').replace(/{/g, '').replace(/\":\"/g, ': ').replace(/\"/g, '').replace(/,/g, '');\n\n    this.getStateLog = () => this.props.getStateLog();\n\n    this.items = () => this.state.items;\n\n    this.hasBeenSelected = (item, groupTitle) => item.selections.indexOf(this.log[groupTitle][item.description]) !== -1 ? true : false;\n\n    this.defaultSelection = (item, groupTitle) => this.hasBeenSelected(item, groupTitle) ? item.selections.indexOf(this.log[groupTitle][item.description]) : 0;\n\n    this.selectorColor = (item, groupTitle) => this.hasBeenSelected(item, groupTitle) ? \"completedSelector\" : \"incompletedSelector\";\n\n    this.radioItems = (item, groupTitle) => /*#__PURE__*/React.createElement(RadioSelector, {\n      header: groupTitle,\n      groupTitle: groupTitle,\n      selected: this.defaultSelection(item, groupTitle),\n      label: item.description,\n      items: item.selections,\n      onChange: this.handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 40\n      }\n    });\n\n    this.selector = (item, groupTitle) => {\n      const setSelectorStatus = item.selections.indexOf(this.log[groupTitle][item.description]) !== -1 ? this.selectorStatus.push(true) : this.selectorStatus.push(false);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: this.selectorColor(item, groupTitle) + \" radius-10 p-20 bg-green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, item.description, \": \"), /*#__PURE__*/React.createElement(Selector, {\n        groupTitle: groupTitle,\n        selected: this.defaultSelection(item, groupTitle),\n        label: item.description,\n        items: item.selections,\n        onChange: this.handleSelection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    this.radio = (item, groupTitle) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radius-10 bg-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 35\n      }\n    }, this.radioItems(item, groupTitle));\n\n    this.group = item => item.group;\n\n    this.selectionInterface = (item, groupTitle) => item.type === \"radio\" ? this.radio(item, groupTitle) : this.selector(item, groupTitle);\n\n    this.groups = () => this.items().map(item => {\n      const getKey = keyPrefix => keyPrefix + item.description.toString().toUpperCase() + Math.random() * 100;\n\n      const headerClasses = 'subHeader color-yellow';\n      const selectorClasses = \"greet p-20 bg-vdk-green flex3Column\";\n      const groupClasses = \"flexContainer radius-10\";\n      const description = item.description;\n\n      const addToLogs = group => {\n        this.log[description][group.description] = group.selections[this.defaultSelection(group, description)]; //this.props.onChange(description, group.description, group.selections[this.defaultSelection(group, description)], false);\n      }; // const logger = this.group(item).map((group) => addToLogs(group));\n\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"groupConainer\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"groupHeader\"),\n        className: headerClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, item.description), /*#__PURE__*/React.createElement(\"div\", {\n        className: groupClasses,\n        key: getKey(\"groupSubConainer\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, this.group(item).map(group => /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"selectorConainer\"),\n        className: selectorClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, this.selectionInterface(group, description)))));\n    });\n\n    this.categories = () => {\n      this.selectorStatus = [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 16\n        }\n      }, this.groups());\n    };\n\n    this.dateEntry = () => {\n      const logExists = this.state.log !== undefined && JSON.stringify(this.state.log) !== \"{}\" ? true : false;\n\n      const stateLogDate = () => this.state.log.Day.Date;\n\n      const getDate = () => logExists ? stateLogDate() : this.state.date;\n\n      alert(this.state.date.getDay());\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-5 subHeader color-yellow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flexContainer bg-vdk-green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, {\n        onChange: this.onDateChange,\n        value: getDate(),\n        className: \"p-10 bg-green flex3Column radius-10 m-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 23\n        }\n      })));\n    };\n\n    this.selectorStatus = [];\n    this.buttonLabel = props.buttonLabel;\n    this.title = props.title;\n    this.log = {\n      Day: {},\n      Location: {},\n      Swell: {},\n      Tide: {},\n      Wind: {},\n      Conditions: {},\n      Comments: {}\n    };\n    this.message = props.message;\n    this.state = {\n      date: new Date(),\n      items: props.items,\n      log: {}\n    };\n    this.handleSelection = this.handleSelection.bind(this);\n    this.updateNotes = this.updateNotes.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onDateChange = this.onDateChange.bind(this);\n  }\n\n  handleSelection(groupTitle, label, selected) {\n    if (typeof groupTitle === \"string\") {\n      this.log[groupTitle][label] = selected;\n      this.props.onChange(groupTitle, label, selected, true);\n      this.setState({\n        log: this.log\n      });\n    }\n  }\n\n  updateNotes(event) {\n    this.handleSelection(\"Comments\", \"notes\", event.target.value);\n  }\n\n  handleSubmit(event) {\n    const logExists = this.state.log !== undefined && JSON.stringify(this.state.log) !== \"{}\" ? true : false;\n\n    const consoleStateLogData = () => console.log(`LogEntry.state.log: ${this.replaceBrackets(this.replaceCommas(this.state.log))}`);\n\n    const consoleLogEntryData = () => console.log(`LogEntry.log: ${this.replaceBrackets(this.replaceCommas(this.log))}`);\n\n    const logIt = () => logExists ? consoleStateLogData() : consoleLogEntryData();\n\n    const selectorStatusComplete = this.selectorStatus.includes(false) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n\n    if (selectorStatusComplete) {\n      logIt();\n    }\n\n    event.preventDefault();\n  }\n\n  onDateChange(date) {\n    const pickerDate = date;\n    date = String(date);\n    const day = date.substring(8, 10);\n    const month = date.substring(4, 7);\n    const year = date.substring(11, 15);\n    const logDate = {\n      \"month\": month,\n      \"day\": day,\n      \"year\": year\n    };\n    this.handleSelection(\"Day\", \"Date\", pickerDate);\n  }\n\n  render() {\n    console.log(`GET STATE LOG ${JSON.stringify(this.getStateLog())}`);\n    return /*#__PURE__*/React.createElement(Dialog, {\n      title: this.title,\n      message: this.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, this.dateEntry(), this.categories(), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, \"Additional Comments: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"10\",\n      cols: \"75\",\n      value: this.state.entry,\n      onChange: this.updateNotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 106\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 111\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, this.buttonLabel)));\n  }\n\n}\n\nexport default LogEntry;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/LogEntry.js"],"names":["React","Dialog","Selector","RadioSelector","DatePicker","LogEntry","Component","constructor","props","replaceCommas","value","JSON","stringify","replace","replaceBrackets","getStateLog","items","state","hasBeenSelected","item","groupTitle","selections","indexOf","log","description","defaultSelection","selectorColor","radioItems","handleSelection","selector","setSelectorStatus","selectorStatus","push","radio","group","selectionInterface","type","groups","map","getKey","keyPrefix","toString","toUpperCase","Math","random","headerClasses","selectorClasses","groupClasses","addToLogs","categories","dateEntry","logExists","undefined","stateLogDate","Day","Date","getDate","date","alert","getDay","onDateChange","buttonLabel","title","Location","Swell","Tide","Wind","Conditions","Comments","message","bind","updateNotes","handleSubmit","label","selected","onChange","setState","event","target","consoleStateLogData","console","consoleLogEntryData","logIt","selectorStatusComplete","includes","window","confirm","preventDefault","pickerDate","String","day","substring","month","year","logDate","render","entry"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dialog from './functional/Dialog.js';\n//import shakaBlack from './assets/images/shakaBlack.png';\n//import thumbsUp from './assets/images/ThumbsUp.png';\n//import thumbsDown from './assets/images/ThumbsDown.png';\nimport Selector from './Forms/FunctionalSelector.js';\nimport RadioSelector from './Forms/FormRadio.js';\n//import DateTimePicker from 'react-datetime-picker';\nimport DatePicker from 'react-date-picker';\n\nclass LogEntry extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.selectorStatus = [];\n        this.buttonLabel = props.buttonLabel;\n        this.title = props.title;\n        this.log = {\n            Day: {},\n            Location: {},\n            Swell: {},\n            Tide: {},\n            Wind: {},\n            Conditions: {},\n            Comments: {}\n        };\n        this.message = props.message;\n        this.state = {\n            date: new Date(),\n            items: props.items,\n            log: {}\n        };\n        this.handleSelection = this.handleSelection.bind(this);\n        this.updateNotes = this.updateNotes.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n    }\n    handleSelection(groupTitle, label, selected) {\n        if (typeof groupTitle === \"string\") {\n            this.log[groupTitle][label] = selected;\n            this.props.onChange(groupTitle, label, selected, true);\n            this.setState({\n                log: this.log\n            });\n        } \n    }\n    updateNotes(event) {\n        this.handleSelection(\"Comments\", \"notes\", event.target.value);\n    }\n    handleSubmit(event) {\n        const logExists = (this.state.log !== undefined && JSON.stringify(this.state.log) !== \"{}\") ? true : false;\n        const consoleStateLogData = () => console.log(`LogEntry.state.log: ${this.replaceBrackets(this.replaceCommas(this.state.log))}`);\n        const consoleLogEntryData = () => console.log(`LogEntry.log: ${this.replaceBrackets(this.replaceCommas(this.log))}`)\n        const logIt = () => (logExists) ? consoleStateLogData() : consoleLogEntryData();\n        const selectorStatusComplete = (this.selectorStatus.includes(false)) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n        if (selectorStatusComplete) {\n            logIt();\n        }\n        event.preventDefault();\n    }\n    onDateChange(date) {\n        const pickerDate = date;\n        date = String(date);\n        const day = date.substring(8,10);\n        const month = date.substring(4,7);\n        const year = date.substring(11,15);\n        const logDate = {\n            \"month\": month,\n            \"day\": day,\n            \"year\": year\n        }\n        this.handleSelection(\"Day\", \"Date\", pickerDate);\n    }\n    replaceCommas = (value) => JSON.stringify(value).replace(/\",\"/g,'\",\\n\\t\"').replace(/},\"/g,'},\\n\"');\n    replaceBrackets = (value) => (value).replace(/\":{\"/g,'\":\\n{\\n\\t\"').replace(/{\"/g,'{\\n\"').replace(/}/g,'\\n}').replace(/},/g,'},\\n').replace(/}/g,'').replace(/{/g,'').replace(/\":\"/g,': ').replace(/\"/g,'').replace(/,/g,'');\n    getStateLog = () => this.props.getStateLog();\n    items = () => this.state.items;\n    hasBeenSelected = (item,groupTitle) => ((item.selections.indexOf(this.log[groupTitle][item.description])) !== -1) ? true : false;\n    defaultSelection = (item,groupTitle) => (this.hasBeenSelected(item,groupTitle)) ? (item.selections.indexOf(this.log[groupTitle][item.description])) : 0; \n    selectorColor = (item,groupTitle) => (this.hasBeenSelected(item,groupTitle)) ? \"completedSelector\" : \"incompletedSelector\";\n    \n    radioItems = (item, groupTitle) => <RadioSelector\n                    header={groupTitle}\n                    groupTitle={groupTitle} \n                    selected={this.defaultSelection(item,groupTitle)} \n                    label={item.description} \n                    items={item.selections} \n                    onChange={this.handleSelection}\n                />;\n    selector = (item, groupTitle) => {\n\n            const setSelectorStatus = ((item.selections.indexOf(this.log[groupTitle][item.description])) !== -1) ? this.selectorStatus.push(true) : this.selectorStatus.push(false);\n            \n            return <div className={this.selectorColor(item,groupTitle) + \" radius-10 p-20 bg-green\"}>\n                <div className=\"mb-5\">{item.description}: </div>\n                <Selector \n                    groupTitle={groupTitle} \n                    selected={this.defaultSelection(item,groupTitle)} \n                    label={item.description} \n                    items={item.selections}\n                    onChange={this.handleSelection}\n                />\n            </div>;\n    }\n\n    radio = (item, groupTitle) => <div className=\"radius-10 bg-green\">\n                {this.radioItems(item, groupTitle)}\n            </div>;\n    group = (item) => item.group;\n    selectionInterface = (item, groupTitle) => (item.type === \"radio\") ? this.radio(item, groupTitle) : this.selector(item, groupTitle);\n\n    groups = () => this.items().map((item) => {\n        const getKey = (keyPrefix) => keyPrefix + item.description.toString().toUpperCase()+(Math.random()*100);\n        const headerClasses = 'subHeader color-yellow';\n        const selectorClasses = \"greet p-20 bg-vdk-green flex3Column\";\n        const groupClasses = \"flexContainer radius-10\";\n        const description = item.description;\n        const addToLogs = (group) => {\n            this.log[description][group.description] = group.selections[this.defaultSelection(group, description)]\n            //this.props.onChange(description, group.description, group.selections[this.defaultSelection(group, description)], false);\n        }\n       // const logger = this.group(item).map((group) => addToLogs(group));\n        return <div key={getKey(\"groupConainer\")}>\n                    <div key={getKey(\"groupHeader\")} className={headerClasses}>\n                        {item.description}\n                    </div>\n                    <div className={groupClasses} key={getKey(\"groupSubConainer\")}>\n                        {this.group(item).map((group) => \n                            <div key={getKey(\"selectorConainer\")} className={selectorClasses}>\n                                {this.selectionInterface(group, description)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n    })\n    categories = () => {\n        this.selectorStatus = [];\n        return <div className='description'>{this.groups()}</div>;\n    }\n    dateEntry = () => {\n\n            const logExists = (this.state.log !== undefined && JSON.stringify(this.state.log) !== \"{}\") ? true : false;\n            const stateLogDate = () => this.state.log.Day.Date;\n            const getDate = () => (logExists) ? stateLogDate() : this.state.date;\n            alert(this.state.date.getDay())\n            return <div>\n                <div className='mb-5 subHeader color-yellow'>Date</div>\n                <div className='flexContainer bg-vdk-green'>\n                    <DatePicker\n                        onChange={this.onDateChange}\n                        value={getDate()} \n                        className='p-10 bg-green flex3Column radius-10 m-20'\n                    /><br/>\n                </div>\n            </div>\n    }\n    \n    render() {\n        console.log(`GET STATE LOG ${JSON.stringify(this.getStateLog())}`)\n        return (\n            <Dialog title={this.title} message={this.message}>\n                <form onSubmit={this.handleSubmit}>\n                    {this.dateEntry()}\n                    {this.categories()}\n                    <br/>\n                    \n                    <div className=\"mb-5\">Additional Comments: </div>\n                    <textarea rows=\"10\" cols=\"75\" value={this.state.entry} onChange={this.updateNotes} /><br/><br/>\n                    <button onClick={this.handleSubmit}>\n                        {this.buttonLabel}\n                    </button>\n                </form>\n            </Dialog>\n        );\n    };\n}\n\nexport default LogEntry;"]},"metadata":{},"sourceType":"module"}