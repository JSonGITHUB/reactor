{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreKeeper = () => {\n  _s();\n  const initPlayers = ['You', 'Me'];\n  const initScores = localStorage.getItem('twoPlayerScores') || [0, 0];\n  const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n  const winners = [5, 10, 11, 15, 20, 21];\n  const dominoWinners = [50, 100, 150, 200];\n  const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n  const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n  //const [ editStatus, setEdit ] = useState(false);\n  const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n  const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n  const [twoPlayerScores, setTwoPlayerScores] = useState(initScores);\n  const [timerOn, setTimerOn] = useState(false);\n  const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n  const [timesUp, setTimesUp] = useState(false);\n  const [heatLength, setHeatLength] = useState(60 * 60);\n  const [waveCount, setWaveCount] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  const [sortedPlayers, setSortedPlayers] = useState([]);\n  const [sortedScores, setSortedScores] = useState([]);\n  //const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n  //const [ twoPlayerWinner, setTwoPlayerWinner ] = useState(null);\n  const darts = game !== 'darts' ? false : true;\n  const dominos = game !== 'dominos' ? false : true;\n  const surf = game !== 'surf' ? false : true;\n  const golf = game !== 'golf' ? false : true;\n  const cricketKey = (player, index) => `${player}Cricket${index}`;\n  const golfKey = (player, index) => `${player}Golf${index}`;\n  //const surfKey = (player, index) => `${player}Surf${index}`;\n  const dominoKey = (player, index) => `${player}Domino${index}`;\n  //const dartsScores = ['-','/', 'X', 'O'];\n  const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n  const golfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n  //const surfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const golfPars = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n  const dominoScoring = [50, 100, 150, 200];\n  const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n  const playerScores = [{\n    name: 'Player 1',\n    scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88]\n  }, {\n    name: 'Player 2',\n    scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81]\n  }, {\n    name: 'Player 3',\n    scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89]\n  }];\n  const formatTime = timeInSeconds => {\n    const hours = Math.floor(timeInSeconds / 3600);\n    const minutes = Math.floor(timeInSeconds % 3600 / 60);\n    const seconds = timeInSeconds % 60;\n    const formattedHours = hours.toString().padStart(2, '0');\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    const formattedSeconds = seconds.toString().padStart(2, '0');\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  };\n  useEffect(() => {\n    let intervalId;\n    if (timerOn) {\n      intervalId = setInterval(() => {\n        setTime(prevTime => {\n          const newTime = prevTime - 1;\n          if (newTime <= 0) {\n            clearInterval(intervalId);\n            setTimesUp(true);\n            return 0;\n          }\n          return newTime;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [timerOn]);\n  useEffect(() => {\n    if (timesUp) {\n      setTimerOn(false);\n      setTime(heatLength);\n      console.log(`heatLength: ${heatLength}`);\n      setTimesUp(false);\n    }\n  }, [timesUp]);\n  /*\n  useEffect(() => {\n       const playerData = players.map((player, index) => ({ player, score: surfersScores[index] }));\n      playerData.sort((a, b) => b.score - a.score);\n       const sortedPlayers = playerData.map((data) => data.player);\n      const sortedScores = playerData.map((data) => data.score);\n       setSortedPlayers(sortedPlayers);\n      setSortedScores(sortedScores);\n       localStorage.setItem('players', JSON.stringify(sortedPlayers));\n      localStorage.setItem('surfersScores', JSON.stringify(sortedScores));\n   }, [players, surfersScores]);\n  */\n  const toggleTimer = () => {\n    if (timerOn) {\n      setTimerOn(false);\n    } else {\n      setTimerOn(true);\n    }\n  };\n  if (darts && winner !== 21) {\n    localStorage.setItem('winner', 21);\n    setWinner(Number(localStorage.getItem('winner')));\n  }\n  /*\n  if (dominos && winner !== 200) {\n      localStorage.setItem('winner', 200);\n      setWinner(Number(localStorage.getItem('winner')));\n  }\n  */\n  const getDartTotal = player => {\n    let total = 0;\n    const score = index => localStorage.getItem(cricketKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    dartScoring.map((target, index) => addToTotal(Number(score(index))));\n    console.log(`getDartTotalplayer=> ${player}: ${total}`);\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const getGolfTotal = player => {\n    if (!golf) return;\n    let total = 0;\n    const score = index => localStorage.getItem(golfKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    golfScoring.map((target, index) => {\n      console.log(`getGolfTotal=> ${golfKey(player, index)} ${index}: ${total}`);\n      addToTotal(Number(score(index)));\n    });\n    //console.log(`getGolfTotalplayer=> ${player}: ${total}`)\n    return total;\n  };\n  /*\n  const getSurfTotal = (player) => {\n      if (!surf) return;\n      let total = 0;\n      const score = (index) => localStorage.getItem(surfKey(player, index)) || 0;\n      const addToTotal = (value) => total = total + value;\n      surfScoring.map((target, index) => {\n          console.log(`getSurfTotal=> ${surfKey(player, index)} ${index}: ${total}`)\n          addToTotal(Number(score(index)))\n      }\n      );\n      //console.log(`getsurfTotalplayer=> ${player}: ${total}`)\n      return total;\n  }\n  */\n  const getDominoTotal = player => {\n    let total = 0;\n    const score = index => localStorage.getItem(dominoKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    dominoScoring.map((target, index) => addToTotal(Number(score(index))));\n    //console.log(`getDominoTotalplayer=> ${player}: ${total}`)\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const updateTwoPlayerScores = (player, index, score) => {\n    const newScores = [];\n    players.map((player, index) => newScores.push(getDartTotal(player)));\n    //console.log(`updateTwoPlayerScores=>\\nplayer: ${player}\\nindex: ${index}\\nscore: ${score}\\nnewScore: ${JSON.stringify(newScores)}`)\n    //console.log(`${players[0]}: ${twoPlayerScores[0]}\\n${players[1]}: ${twoPlayerScores[1]}`)\n    //const isWinner = (score) => (score >= winner) ? true : false;\n    //players.map((player, index) => (isWinner(newScores[index])) ? setTwoPlayerWinner(index) : setTwoPlayerWinner(3));\n    localStorage.setItem('winner', twoPlayerScores);\n    localStorage.setItem('twoPlayerScores', twoPlayerScores);\n    setTwoPlayerScores(newScores);\n  };\n  //console.log(`players: ${players}`)\n  const set21 = () => {\n    if (darts) {\n      localStorage.setItem('winner', 21);\n      setWinner(Number(localStorage.getItem('winner')));\n    }\n  };\n  const selectGame = (groupTitle, label, selected) => {\n    localStorage.setItem('game', selected);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setGame(localStorage.getItem('game'));\n    set21();\n  };\n  const selectWinner = (groupTitle, label, selected) => {\n    localStorage.setItem('winner', selected);\n    localStorage.setItem('gameStatus', 'gameOver');\n    setWinner(Number(localStorage.getItem('winner')));\n  };\n  const setTimer = (groupTitle, label, selected) => {\n    localStorage.setItem('timer', selected);\n    setTime(selected * 60);\n    setHeatLength(selected * 60);\n  };\n  const clear = event => {\n    alert('Note was cleared: ' + event.value);\n    localStorage.setItem('players', JSON.stringify(initPlayers));\n    localStorage.setItem('gameStatus', 'inProgress');\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const reset = event => {\n    //alert('Note was cleared: ');\n    //const cricketKey = (player,index) => `${player}Cricket${index}`;\n    //const golfKey = (player,index) => `${player}Golf${index}`;\n    //const dominoKey = (player,index) => `${player}Domino${index}`;\n    let id = (player, index) => darts ? cricketKey(player, index) : player;\n    id = (player, index) => dominos ? dominoKey(player, index) : player;\n    id = (player, index) => golf ? golfKey(player, index) : player;\n    id = (player, index) => surf ? surfKey(player, index) : player;\n    const initValue = 0;\n    if (darts) {\n      players.map(player => dartScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n    } else if (dominos) {\n      //players.map((player) => dominoScoring.map((target,index) => localStorage.setItem(id(player, index), initValue)));\n      players.map(player => dominoScoring.map((target, index) => localStorage.setItem(dominoKey(player, index), initValue)));\n    } else {\n      players.map((player, index) => localStorage.setItem(id(player, index), initValue));\n    }\n    localStorage.setItem('gameStatus', 'inProgress');\n    getScore();\n  };\n  const addPlayer = event => {\n    //alert('Note was cleared: ' + value);\n    const newPlayer = prompt('Enter new name', '');\n    let newPlayers = players;\n    if (newPlayer !== null) {\n      newPlayers.push(newPlayer);\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n    //getScore();\n  };\n  /*\n  const edit = (event) => {\n      setEdit(!editStatus);\n  }\n  */\n  const editPlayer = index => {\n    //console.log(`edit: ${index}`);\n    const newPlayer = prompt('Enter new name', players[index]);\n    if (newPlayer !== null) {\n      let newPlayers = players;\n      newPlayers[index] = newPlayer;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n      getScore();\n    }\n  };\n  const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n  /*\n  const deletePlayer = (index) => {\n      //console.log(`state: ${JSON.stringify(state,null,2)}`)\n      //console.log(`delete at: ${index}`)\n      let newPlayers = players;\n      newPlayers.splice(index, 1);\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n      //getScore();\n  }\n  */\n  const deletePlayer = index => {\n    console.log(`deletePlayer => ${index}`);\n    const newPlayers = players.slice();\n    newPlayers.splice(index, 1);\n    playerScores.splice(index, 1);\n    surfersScores.splice(index, 1);\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const scorecards = () => {\n    //console.log(`build Scorecards`)\n    const scorecard = (player, index, score) => {\n      if (darts) {\n        console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(CricketScore, {\n          game: game,\n          player: player,\n          index: index,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateTwoPlayerScores: updateTwoPlayerScores,\n          winner: winner\n        }, getKey(player), false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 24\n        }, this);\n      }\n      if (dominos) {\n        console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(Dominos, {\n          game: game,\n          player: player,\n          index: index,\n          scoreTotal: score,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          getDominoTotal: getDominoTotal,\n          updateTwoPlayerScores: updateTwoPlayerScores,\n          winner: winner\n        }, getKey(player), false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 24\n        }, this);\n      }\n      if (golf) {\n        console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(ScoreCard, {\n          game: game,\n          player: golfPars[index],\n          index: index,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateTwoPlayerScores: updateTwoPlayerScores,\n          winner: winner\n        }, getKey(player), false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 24\n        }, this);\n      }\n      if (surf) {\n        console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(ScoreCard, {\n          game: game,\n          player: player,\n          index: index,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateTwoPlayerScores: updateTwoPlayerScores,\n          winner: winner\n        }, getKey(player), false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 24\n        }, this);\n      }\n      console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n      return /*#__PURE__*/_jsxDEV(ScoreCard, {\n        game: game,\n        player: player,\n        index: index,\n        editPlayer: editPlayer,\n        deletePlayer: deletePlayer,\n        updateTwoPlayerScores: updateTwoPlayerScores,\n        winner: winner\n      }, getKey(player), false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 20\n      }, this);\n    };\n    const rankStatus = (player, index, score) => {\n      console.log(`ranksStatus => surfersScores player: ${player} index: ${index} score: ${score}`);\n      const winsBy = 'Wins by 7.17';\n      const needs = 'Needs 0.01';\n      if (index === 0) {\n        return winsBy;\n      }\n      return needs;\n    };\n    const surfingRanks = (player, index, score) => {\n      const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer width-100-percent size20 bold\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-10 p-10 w-100\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3ColumnLeft m-1 p-10\",\n          children: player\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3ColumnRight mr-10 p-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"copyright bold\",\n            children: rankStatus(player, index, score)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 17\n        }, this)]\n      }, getKey(player), true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 34\n      }, this);\n      return surferScores;\n    };\n    const findTwoHighestIndices = scores => {\n      let highestIndex = 0;\n      let secondHighestIndex = -1;\n      scores.forEach((score, index) => {\n        if (score > scores[highestIndex]) {\n          secondHighestIndex = highestIndex;\n          highestIndex = index;\n        } else if (secondHighestIndex === -1 || score > scores[secondHighestIndex]) {\n          secondHighestIndex = index;\n        }\n      });\n      return [highestIndex, secondHighestIndex];\n    };\n    const getWave = (playerId, index, score) => {\n      console.log(`getWave => playerId: ${playerId} index: ${index} score: ${score}`);\n      const highestScores = findTwoHighestIndices(playerScores[playerId].scores);\n      const highestId = highestScores[0];\n      const secondHighestId = highestScores[1];\n      const firstScore = index === highestId ? true : false;\n      const secondScore = index === secondHighestId ? true : false;\n      const getClasses = firstScore || secondScore ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n      const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"greet bold color-yellow bg-dkYellow w-100 p-5\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getClasses,\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 26\n      }, this);\n      return wave;\n    };\n    const addScoreForPlayer = (players, playerIndex, score) => {\n      if (playerIndex >= 0 && playerIndex < players.length) {\n        players[playerIndex].scores.push(score);\n      }\n    };\n    // Add a new score for Player 1\n    //addScoreForPlayer(players, 0, 94);\n\n    // Find the indices of the two highest scores for each player\n    const getTwoHighestScores = playerIndex => {\n      const player = playerScores[playerIndex];\n      const [highestIndex, secondHighestIndex] = findTwoHighestIndices(playerScores[playerIndex].scores);\n      console.log(`${player.name}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n      return {\n        'highScoreIndex': highestIndex,\n        'secondHighScoreIndex': secondHighestIndex\n      };\n    };\n    const floatDecimalOneDigit = number => {\n      if (Number.isInteger(number) && number >= 10 && number <= 99) {\n        return number / 10;\n      } else {\n        return null;\n      }\n    };\n    const surfingScores = (player, index, score) => {\n      if (surf) {\n        console.log(`surfingScores => player: ${player} index: ${index} score:${playerScores[index].scores[0]}`);\n        const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flexContainer width-100-percent mt--10 mb--10\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-10 p-5 w-100 size40 mt-10\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex3ColumnLeft m-1 p-5 size40 mt-10\",\n              children: player\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex3ColumnRight mr-10 p-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"size25 bold\",\n                children: score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: rankStatus(player, index, score)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 25\n            }, this)]\n          }, getKey(player), true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-scroll color-white copyright m-10\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"container mt-10\",\n                  children: playerScores[index].scores.map((score, wave) => getWave(index, wave, floatDecimalOneDigit(score)))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 38\n        }, this);\n        return surferScores;\n      }\n      return;\n    };\n    const renderedItems = players.map((player, index) => scorecard(player, index));\n    const dartScores = dartScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(players[0], index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(players[1], index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 62\n    }, this));\n    const golfScores = golfScoring.map((hole, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(golfPars[index], index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: hole\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(golfPars[index], index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 13\n      }, this)]\n    }, getKey(hole), true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 61\n    }, this));\n    const surfScores = surfScoring.map((wave, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(index, index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: wave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(index, index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 13\n      }, this)]\n    }, getKey(wave), true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 61\n    }, this));\n    /*\n    const getSurfScore = (index) => {\n        const scoreTotal = (floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex])));\n        console.log(`getSurfScore => score: ${scoreTotal}`);\n        //surfersScores.map((score, index) => console.log(`getSurfScore1 => surfer${index} score:${score}`))\n        surfersScores[index] = scoreTotal;\n        //surfersScores.map((score, index) => console.log(`getSurfScore2 => surfer${index} score:${score}`))\n        const playerData = players.map((player, index) => ({ player, score: surfersScores[index] }));\n        playerData.sort((a, b) => b.score - a.score);\n        const sortedPlayers = playerData.map((data, index) => data.player);\n        const sortedScores = playerData.map((data, index) => surfersScores[index] = data.score);\n        localStorage.setItem('players', JSON.stringify(sortedPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        //setPlayers(sortedPlayers)\n        return scoreTotal;\n    }\n    */\n    const getSurfScore = index => {\n      if (surf) {\n        const newPlayer = {\n          'name': players[index],\n          'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        };\n        if (playerScores.length < players.length) {\n          playerScores.push(newPlayer);\n        }\n        const scoreTotal = floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex]));\n        return scoreTotal;\n      }\n      return;\n    };\n\n    //const surfingRankboard = players.map((player, index) => surfingRanks(player, index))};\n    const surfingScoreboard = sortedPlayers.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n    const dominoScores = dominoScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent p-5\",\n        children: scorecard(players[0], index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent p-5\",\n        children: scorecard(players[1], index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 66\n    }, this));\n    const setGameOver = playerIndex => {\n      localStorage.setItem('gameStatus', 'gameOver');\n      localStorage.setItem(`player${playerIndex}`, 'winner');\n      //setGameStatus('gameOver');\n      return true;\n    };\n    const setGameInProgress = playerIndex => {\n      if (playerIndex > 0) {\n        if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n          localStorage.setItem('gameStatus', 'inProgress');\n        }\n      }\n      localStorage.setItem(`player${playerIndex}`, 'loser');\n      //setGameStatus('inProgress');\n      return false;\n    };\n    const isWinner = playerIndex => getDartTotal(players[playerIndex]) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const isDominoWinner = playerIndex => getDominoTotal(players[playerIndex]) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const dartClass = playerIndex => 'flex3Column p-20 size25 bold' + (isWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dominoClass = playerIndex => 'flex3Column p-20 size25 bold' + (isDominoWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dartScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDartTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-yellow navBranding w-200\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDartTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 13\n      }, this), dartScores]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 32\n    }, this);\n    const golfScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getGolfTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-yellow navBranding w-200\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getGolfTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 13\n      }, this), golfScores]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 32\n    }, this);\n    const surfScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getSurfTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-yellow navBranding w-200\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getSurfTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 13\n      }, this), surfScores]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 32\n    }, this);\n    players.map((player, index) => scorecard(player, index));\n    const dominoScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(0),\n          children: [players[0], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDominoTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-yellow navBranding w-200\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(1),\n          children: [players[1], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDominoTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 13\n      }, this), dominoScores]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 34\n    }, this);\n    if (darts) return dartScoreboard;\n    if (dominos) return dominoScoreboard;\n    if (golf) return golfScoreboard;\n    //if (surf) return surfScoreboard\n    if (surf) return surfingScoreboard;else return renderedItems;\n  };\n  //console.log(`localStorage => game: ${localStorage.getItem('game')}`)\n  //console.log(`localStorage => gameStatus: ${localStorage.getItem('gameStatus')}`)\n  //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n  //console.log(`localStorage => winner: ${localStorage.getItem('winner')}`)\n  //console.log(`localStorage => twoPlayerScores: ${localStorage.getItem('twoPlayerScores')}`)\n  //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n  //console.log(`localStorage => player1: ${localStorage.getItem('players1')}`)\n  //console.log(`localStorage => player2: ${localStorage.getItem('players2')}`)\n  console.log(`time: ${time}`);\n  const getTimerButtonClasses = () => {\n    const timerButtonClasses = timerOn ? 'bg-red m-10 r-10 bold size20 p-20 color-light' : 'bg-green m-10 r-10 bold size20 p-20 color-light';\n    return timerButtonClasses;\n  };\n  const getTimerClasses = () => {\n    const timerClasses = time < 120 ? 'blinking-fade' : '';\n    return timerClasses;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fadeIn mt--30\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-20\",\n      children: [/*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"game\",\n        label: \"item.description\",\n        items: games,\n        selected: game,\n        onChange: selectGame,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: darts || dominos ? '98%' : '65%'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 17\n      }, this), darts || golf ? /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"winner\",\n        label: \"i.description\",\n        items: dominos ? dominoWinners : surf ? heatLengths : winners,\n        selected: surf ? time / 60 : winner,\n        onChange: surf ? setTimer : selectWinner,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: \"30%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 27\n      }, this), surf ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: getTimerButtonClasses(),\n          onClick: () => toggleTimer(),\n          children: timerOn ? 'STOP' : 'START'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-dkBlue m-10 r-10 bold size20 p-20 color-light0\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: getTimerClasses(),\n            children: formatTime(time)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 92\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flexContainer color-yellow bold greet ml-10 mr-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-10 p-10 w-100 bg-dkGreen m-1 r-5-lft\",\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex3ColumnLeft m-1 p-10 bg-dkGreen m-1\",\n              children: \"Athlete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex3ColumnRight mr-10 p-10 bg-dkGreen m-1 r-5-rt\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 13\n    }, this), scorecards(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow\",\n          onClick: () => addPlayer(),\n          children: \"add player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black\",\n          onClick: () => reset(),\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow\",\n          onClick: () => clear(),\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 622,\n    columnNumber: 9\n  }, this);\n};\n_s(ScoreKeeper, \"MLqhWL9QRKuyM5IO/Zf+3lr6Mu8=\");\n_c = ScoreKeeper;\nexport default ScoreKeeper;\nvar _c;\n$RefreshReg$(_c, \"ScoreKeeper\");","map":{"version":3,"names":["React","useState","useEffect","ScoreCard","CricketScore","Dominos","Selector","getKey","jsxDEV","_jsxDEV","ScoreKeeper","_s","initPlayers","initScores","localStorage","getItem","games","winners","dominoWinners","heatLengths","players","setPlayers","JSON","parse","game","setGame","winner","setWinner","Number","twoPlayerScores","setTwoPlayerScores","timerOn","setTimerOn","time","setTime","timesUp","setTimesUp","heatLength","setHeatLength","waveCount","setWaveCount","sortedPlayers","setSortedPlayers","sortedScores","setSortedScores","darts","dominos","surf","golf","cricketKey","player","index","golfKey","dominoKey","dartScoring","golfScoring","golfPars","dominoScoring","gameStatus","setGameStatus","playerScores","name","scores","formatTime","timeInSeconds","hours","Math","floor","minutes","seconds","formattedHours","toString","padStart","formattedMinutes","formattedSeconds","intervalId","setInterval","prevTime","newTime","clearInterval","console","log","toggleTimer","setItem","getDartTotal","total","score","addToTotal","value","map","target","getGolfTotal","getDominoTotal","updateTwoPlayerScores","newScores","push","set21","selectGame","groupTitle","label","selected","selectWinner","setTimer","clear","event","alert","stringify","reset","id","surfKey","initValue","getScore","addPlayer","newPlayer","prompt","newPlayers","editPlayer","window","location","pathname","deletePlayer","slice","splice","surfersScores","scorecards","scorecard","fileName","_jsxFileName","lineNumber","columnNumber","scoreTotal","rankStatus","winsBy","needs","surfingRanks","surferScores","className","children","findTwoHighestIndices","highestIndex","secondHighestIndex","forEach","getWave","playerId","highestScores","highestId","secondHighestId","firstScore","secondScore","getClasses","wave","class","addScoreForPlayer","playerIndex","length","getTwoHighestScores","floatDecimalOneDigit","number","isInteger","surfingScores","renderedItems","dartScores","golfScores","hole","surfScores","surfScoring","getSurfScore","highScoreIndex","secondHighScoreIndex","surfingScoreboard","dominoScores","setGameOver","setGameInProgress","isWinner","isDominoWinner","dartClass","dominoClass","dartScoreboard","Fragment","golfScoreboard","surfScoreboard","getSurfTotal","dominoScoreboard","getTimerButtonClasses","timerButtonClasses","getTimerClasses","timerClasses","items","onChange","fontSize","padding","width","onClick","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\n\nconst ScoreKeeper = () => {\n\n    const initPlayers = ['You', 'Me'];\n    const initScores = localStorage.getItem('twoPlayerScores') || [0, 0];\n    const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n    const winners = [5, 10, 11, 15, 20, 21];\n    const dominoWinners = [50, 100, 150, 200];\n    const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n    //const [ editStatus, setEdit ] = useState(false);\n    const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n    const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n    const [twoPlayerScores, setTwoPlayerScores] = useState(initScores);\n    const [timerOn, setTimerOn] = useState(false);\n    const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n    const [timesUp, setTimesUp] = useState(false);\n    const [heatLength, setHeatLength] = useState(60 * 60);\n    const [waveCount, setWaveCount] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n    const [sortedPlayers, setSortedPlayers] = useState([]);\n    const [sortedScores, setSortedScores] = useState([]);\n    //const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n    //const [ twoPlayerWinner, setTwoPlayerWinner ] = useState(null);\n    const darts = (game !== 'darts') ? false : true;\n    const dominos = (game !== 'dominos') ? false : true;\n    const surf = (game !== 'surf') ? false : true;\n    const golf = (game !== 'golf') ? false : true;\n    const cricketKey = (player, index) => `${player}Cricket${index}`;\n    const golfKey = (player, index) => `${player}Golf${index}`;\n    //const surfKey = (player, index) => `${player}Surf${index}`;\n    const dominoKey = (player, index) => `${player}Domino${index}`;\n    //const dartsScores = ['-','/', 'X', 'O'];\n    const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n    const golfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n    //const surfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const golfPars = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n    const dominoScoring = [50, 100, 150, 200];\n    const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n    const playerScores = [\n        { name: 'Player 1', scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88] },\n        { name: 'Player 2', scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81] },\n        { name: 'Player 3', scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89] },\n    ];\n\n    const formatTime = (timeInSeconds) => {\n        const hours = Math.floor(timeInSeconds / 3600);\n        const minutes = Math.floor((timeInSeconds % 3600) / 60);\n        const seconds = timeInSeconds % 60;\n\n        const formattedHours = hours.toString().padStart(2, '0');\n        const formattedMinutes = minutes.toString().padStart(2, '0');\n        const formattedSeconds = seconds.toString().padStart(2, '0');\n\n        return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n    };\n    useEffect(() => {\n        let intervalId;\n        if (timerOn) {\n            intervalId = setInterval(() => {\n                setTime((prevTime) => {\n                    const newTime = prevTime - 1;\n                    if (newTime <= 0) {\n                        clearInterval(intervalId);\n                        setTimesUp(true);\n                        return 0;\n                    }\n                    return newTime;\n                });\n            }, 1000);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [timerOn]);\n\n    useEffect(() => {\n        if (timesUp) {\n            setTimerOn(false);\n            setTime(heatLength);\n            console.log(`heatLength: ${heatLength}`)\n            setTimesUp(false);\n        }\n    }, [timesUp]);\n    /*\n    useEffect(() => {\n\n        const playerData = players.map((player, index) => ({ player, score: surfersScores[index] }));\n        playerData.sort((a, b) => b.score - a.score);\n\n        const sortedPlayers = playerData.map((data) => data.player);\n        const sortedScores = playerData.map((data) => data.score);\n\n        setSortedPlayers(sortedPlayers);\n        setSortedScores(sortedScores);\n\n        localStorage.setItem('players', JSON.stringify(sortedPlayers));\n        localStorage.setItem('surfersScores', JSON.stringify(sortedScores));\n\n    }, [players, surfersScores]);\n    */\n    const toggleTimer = () => {\n        if (timerOn) {\n            setTimerOn(false)\n        } else {\n            setTimerOn(true)\n        }\n    }\n\n    if (darts && winner !== 21) {\n        localStorage.setItem('winner', 21);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    /*\n    if (dominos && winner !== 200) {\n        localStorage.setItem('winner', 200);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    */\n    const getDartTotal = (player) => {\n        let total = 0;\n        const score = (index) => localStorage.getItem(cricketKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        dartScoring.map((target, index) => addToTotal(Number(score(index))));\n        console.log(`getDartTotalplayer=> ${player}: ${total}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const getGolfTotal = (player) => {\n        if (!golf) return;\n        let total = 0;\n        const score = (index) => localStorage.getItem(golfKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        golfScoring.map((target, index) => {\n            console.log(`getGolfTotal=> ${golfKey(player, index)} ${index}: ${total}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        //console.log(`getGolfTotalplayer=> ${player}: ${total}`)\n        return total;\n    }\n    /*\n    const getSurfTotal = (player) => {\n        if (!surf) return;\n        let total = 0;\n        const score = (index) => localStorage.getItem(surfKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n            console.log(`getSurfTotal=> ${surfKey(player, index)} ${index}: ${total}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        //console.log(`getsurfTotalplayer=> ${player}: ${total}`)\n        return total;\n    }\n    */\n    const getDominoTotal = (player) => {\n        let total = 0;\n        const score = (index) => localStorage.getItem(dominoKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        dominoScoring.map((target, index) => addToTotal(Number(score(index))));\n        //console.log(`getDominoTotalplayer=> ${player}: ${total}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const updateTwoPlayerScores = (player, index, score) => {\n        const newScores = [];\n        players.map((player, index) => newScores.push(getDartTotal(player)));\n        //console.log(`updateTwoPlayerScores=>\\nplayer: ${player}\\nindex: ${index}\\nscore: ${score}\\nnewScore: ${JSON.stringify(newScores)}`)\n        //console.log(`${players[0]}: ${twoPlayerScores[0]}\\n${players[1]}: ${twoPlayerScores[1]}`)\n        //const isWinner = (score) => (score >= winner) ? true : false;\n        //players.map((player, index) => (isWinner(newScores[index])) ? setTwoPlayerWinner(index) : setTwoPlayerWinner(3));\n        localStorage.setItem('winner', twoPlayerScores);\n        localStorage.setItem('twoPlayerScores', twoPlayerScores);\n        setTwoPlayerScores(newScores);\n    }\n    //console.log(`players: ${players}`)\n    const set21 = () => {\n        if (darts) {\n            localStorage.setItem('winner', 21);\n            setWinner(Number(localStorage.getItem('winner')));\n        }\n    }\n    const selectGame = (groupTitle, label, selected) => {\n        localStorage.setItem('game', selected)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setGame(localStorage.getItem('game'));\n        set21();\n    }\n    const selectWinner = (groupTitle, label, selected) => {\n        localStorage.setItem('winner', selected)\n        localStorage.setItem('gameStatus', 'gameOver');\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const setTimer = (groupTitle, label, selected) => {\n        localStorage.setItem('timer', selected);\n        setTime(selected * 60);\n        setHeatLength(selected * 60);\n    }\n    const clear = (event) => {\n        alert('Note was cleared: ' + event.value);\n        localStorage.setItem('players', JSON.stringify(initPlayers));\n        localStorage.setItem('gameStatus', 'inProgress');\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n    const reset = (event) => {\n        //alert('Note was cleared: ');\n        //const cricketKey = (player,index) => `${player}Cricket${index}`;\n        //const golfKey = (player,index) => `${player}Golf${index}`;\n        //const dominoKey = (player,index) => `${player}Domino${index}`;\n        let id = (player, index) => (darts) ? cricketKey(player, index) : player;\n        id = (player, index) => (dominos) ? dominoKey(player, index) : player;\n        id = (player, index) => (golf) ? golfKey(player, index) : player;\n        id = (player, index) => (surf) ? surfKey(player, index) : player;\n        const initValue = 0;\n        if (darts) {\n            players.map((player) => dartScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n        } else if (dominos) {\n            //players.map((player) => dominoScoring.map((target,index) => localStorage.setItem(id(player, index), initValue)));\n            players.map((player) => dominoScoring.map((target, index) => localStorage.setItem(dominoKey(player, index), initValue)));\n        } else {\n            players.map((player, index) => localStorage.setItem(id(player, index), initValue));\n        }\n        localStorage.setItem('gameStatus', 'inProgress');\n        getScore();\n    }\n    const addPlayer = (event) => {\n        //alert('Note was cleared: ' + value);\n        const newPlayer = prompt('Enter new name', '');\n        let newPlayers = players;\n        if (newPlayer !== null) {\n            newPlayers.push(newPlayer);\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n        //getScore();\n    }\n    /*\n    const edit = (event) => {\n        setEdit(!editStatus);\n    }\n    */\n    const editPlayer = (index) => {\n        //console.log(`edit: ${index}`);\n        const newPlayer = prompt('Enter new name', players[index]);\n        if (newPlayer !== null) {\n            let newPlayers = players;\n            newPlayers[index] = newPlayer;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n            getScore();\n        }\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n    /*\n    const deletePlayer = (index) => {\n        //console.log(`state: ${JSON.stringify(state,null,2)}`)\n        //console.log(`delete at: ${index}`)\n        let newPlayers = players;\n        newPlayers.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        //getScore();\n    }\n    */\n    const deletePlayer = (index) => {\n        console.log(`deletePlayer => ${index}`)\n        const newPlayers = players.slice();\n        newPlayers.splice(index, 1);\n        playerScores.splice(index, 1);\n        surfersScores.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    };\n    \n    const scorecards = () => {\n        //console.log(`build Scorecards`)\n        const scorecard = (player, index, score) => {\n            if (darts) {\n                console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n                return <CricketScore\n                    game={game}\n                    player={player}\n                    index={index}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateTwoPlayerScores={updateTwoPlayerScores}\n                    winner={winner}\n                    key={getKey(player)}\n                />\n            }\n            if (dominos) {\n                console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n                return <Dominos\n                    game={game}\n                    player={player}\n                    index={index}\n                    scoreTotal={score}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    getDominoTotal={getDominoTotal}\n                    updateTwoPlayerScores={updateTwoPlayerScores}\n                    winner={winner}\n                    key={getKey(player)}\n                />\n            }\n            if (golf) {\n                console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n                return <ScoreCard\n                    game={game}\n                    player={golfPars[index]}\n                    index={index}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateTwoPlayerScores={updateTwoPlayerScores}\n                    winner={winner}\n                    key={getKey(player)}\n                />\n            }\n            if (surf) {\n                console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n                return <ScoreCard\n                    game={game}\n                    player={player}\n                    index={index}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateTwoPlayerScores={updateTwoPlayerScores}\n                    winner={winner}\n                    key={getKey(player)}\n                />\n            }\n            console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n            return <ScoreCard\n                game={game}\n                player={player}\n                index={index}\n                editPlayer={editPlayer}\n                deletePlayer={deletePlayer}\n                updateTwoPlayerScores={updateTwoPlayerScores}\n                winner={winner}\n                key={getKey(player)}\n            />\n        }\n        const rankStatus = (player, index, score) => {\n            console.log(`ranksStatus => surfersScores player: ${player} index: ${index} score: ${score}`)\n            const winsBy = 'Wins by 7.17';\n            const needs = 'Needs 0.01';\n            if (index === 0) {\n                return winsBy\n            }\n            return needs\n        }\n        const surfingRanks = (player, index, score) => {\n            const surferScores = <div className='flexContainer width-100-percent size20 bold' key={getKey(player)}>\n                <div className='ml-10 p-10 w-100'>{index + 1}</div>\n                <div className='flex3ColumnLeft m-1 p-10'>{player}</div>\n                <div className='flex3ColumnRight mr-10 p-10'>\n                    <div>{score}</div>\n                    <div className='copyright bold'>{rankStatus(player, index, score)}</div>\n                </div>\n            </div>\n            return surferScores\n        }\n        const findTwoHighestIndices = (scores) => {\n            let highestIndex = 0;\n            let secondHighestIndex = -1;\n\n            scores.forEach((score, index) => {\n                if (score > scores[highestIndex]) {\n                    secondHighestIndex = highestIndex;\n                    highestIndex = index;\n                } else if (secondHighestIndex === -1 || score > scores[secondHighestIndex]) {\n                    secondHighestIndex = index;\n                }\n            });\n\n            return [highestIndex, secondHighestIndex];\n        };\n        const getWave = (playerId, index, score) => {\n            console.log(`getWave => playerId: ${playerId} index: ${index} score: ${score}`);\n            const highestScores = findTwoHighestIndices(playerScores[playerId].scores);\n            const highestId = highestScores[0];\n            const secondHighestId = highestScores[1];\n            const firstScore = (index === highestId) ? true : false;\n            const secondScore = (index === secondHighestId) ? true : false;\n            const getClasses = (firstScore || secondScore) ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n            const wave = <div class=\"column\">\n                <div className='greet bold color-yellow bg-dkYellow w-100 p-5'>{index + 1}</div>\n                <div className={getClasses}>{score}</div>\n            </div>\n            return wave\n        }\n        const addScoreForPlayer = (players, playerIndex, score) => {\n            if (playerIndex >= 0 && playerIndex < players.length) {\n                players[playerIndex].scores.push(score);\n            }\n        };\n        // Add a new score for Player 1\n        //addScoreForPlayer(players, 0, 94);\n\n        // Find the indices of the two highest scores for each player\n        const getTwoHighestScores = (playerIndex) => {\n            const player = playerScores[playerIndex];\n            const [highestIndex, secondHighestIndex] = findTwoHighestIndices(playerScores[playerIndex].scores);\n            console.log(`${player.name}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n            return {\n                'highScoreIndex': highestIndex,\n                'secondHighScoreIndex': secondHighestIndex\n            }\n        }\n\n        const floatDecimalOneDigit = (number) => {\n            if (Number.isInteger(number) && number >= 10 && number <= 99) {\n                return number / 10;\n            } else {\n                return null;\n            }\n        };\n\n        const surfingScores = (player, index, score) => {\n            if (surf) {\n                console.log(`surfingScores => player: ${player} index: ${index} score:${playerScores[index].scores[0]}`);\n                const surferScores = <div>\n                    <div className='flexContainer width-100-percent mt--10 mb--10' key={getKey(player)}>\n                        <div className='ml-10 p-5 w-100 size40 mt-10'>{index + 1}</div>\n                        <div className='flex3ColumnLeft m-1 p-5 size40 mt-10'>{player}</div>\n                        <div className='flex3ColumnRight mr-10 p-5'>\n                            <div className='size25 bold'>{score}</div>\n                            <div>{rankStatus(player, index, score)}</div>\n                        </div>\n                    </div>\n                    <div>\n                        <div>\n                            <div className='h-scroll color-white copyright m-10'>\n                                <div class=\"container mt-10\">\n                                    {playerScores[index].scores.map((score, wave) => getWave(index, wave, floatDecimalOneDigit(score)))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                return surferScores\n            }\n            return\n        }\n        const renderedItems = players.map((player, index) => scorecard(player, index));\n\n        const dartScores = dartScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex3Column p-5'>\n                {scorecard(players[0], index)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(players[1], index)}\n            </div>\n        </div>);\n\n        const golfScores = golfScoring.map((hole, index) => <div className='flexContainer width-100-percent' key={getKey(hole)}>\n            <div className='flex3Column p-5'>\n                {scorecard(golfPars[index], index)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {hole}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(golfPars[index], index)}\n            </div>\n        </div>);\n\n        const surfScores = surfScoring.map((wave, index) => <div className='flexContainer width-100-percent' key={getKey(wave)}>\n            <div className='flex3Column p-5'>\n                {scorecard(index, index)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {wave}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(index, index)}\n            </div>\n        </div>);\n        /*\n        const getSurfScore = (index) => {\n            const scoreTotal = (floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex])));\n            console.log(`getSurfScore => score: ${scoreTotal}`);\n            //surfersScores.map((score, index) => console.log(`getSurfScore1 => surfer${index} score:${score}`))\n            surfersScores[index] = scoreTotal;\n            //surfersScores.map((score, index) => console.log(`getSurfScore2 => surfer${index} score:${score}`))\n            const playerData = players.map((player, index) => ({ player, score: surfersScores[index] }));\n            playerData.sort((a, b) => b.score - a.score);\n            const sortedPlayers = playerData.map((data, index) => data.player);\n            const sortedScores = playerData.map((data, index) => surfersScores[index] = data.score);\n            localStorage.setItem('players', JSON.stringify(sortedPlayers));\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n            //setPlayers(sortedPlayers)\n            return scoreTotal;\n        }\n        */\n        const getSurfScore = (index) => {\n            if (surf) {\n                const newPlayer = {\n                    'name': players[index],\n                    'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n                }\n                if (playerScores.length < players.length) {\n                    playerScores.push(newPlayer)\n                }\n                const scoreTotal = floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex]));\n                return scoreTotal;\n            }\n            return\n        };\n\n        //const surfingRankboard = players.map((player, index) => surfingRanks(player, index))};\n        const surfingScoreboard = sortedPlayers.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n\n        const dominoScores = dominoScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex2Column10Percent p-5'>\n                {scorecard(players[0], index, score)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex2Column10Percent p-5'>\n                {scorecard(players[1], index, score)}\n            </div>\n        </div>);\n\n        const setGameOver = (playerIndex) => {\n            localStorage.setItem('gameStatus', 'gameOver');\n            localStorage.setItem(`player${playerIndex}`, 'winner');\n            //setGameStatus('gameOver');\n            return true;\n        }\n        const setGameInProgress = (playerIndex) => {\n            if (playerIndex > 0) {\n                if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n                    localStorage.setItem('gameStatus', 'inProgress')\n                }\n            }\n            localStorage.setItem(`player${playerIndex}`, 'loser');\n            //setGameStatus('inProgress');\n            return false;\n        }\n        const isWinner = (playerIndex) => (getDartTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n        const isDominoWinner = (playerIndex) => (getDominoTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n\n        const dartClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        const dominoClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isDominoWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n\n        const dartScoreboard = <React.Fragment>\n            <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                <div className={dartClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getDartTotal(players[0])}</div></div>\n                <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                <div className={dartClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getDartTotal(players[1])}</div></div>\n            </div>\n            {dartScores}\n        </React.Fragment>\n\n        const golfScoreboard = <React.Fragment>\n            <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                <div className={dartClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getGolfTotal(players[0])}</div></div>\n                <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                <div className={dartClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getGolfTotal(players[1])}</div></div>\n            </div>\n            {golfScores}\n        </React.Fragment>\n\n        const surfScoreboard = <React.Fragment>\n            <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                <div className={dartClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getSurfTotal(players[0])}</div></div>\n                <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                <div className={dartClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getSurfTotal(players[1])}</div></div>\n            </div>\n            {surfScores}\n        </React.Fragment>\n\n        players.map((player, index) => scorecard(player, index));\n\n        const dominoScoreboard = <React.Fragment>\n            <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                <div className={dominoClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getDominoTotal(players[0])}</div></div>\n                <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                <div className={dominoClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getDominoTotal(players[1])}</div></div>\n            </div>\n            {dominoScores}\n        </React.Fragment>\n\n        if (darts) return dartScoreboard\n        if (dominos) return dominoScoreboard\n        if (golf) return golfScoreboard\n        //if (surf) return surfScoreboard\n        if (surf) return surfingScoreboard\n        else return renderedItems;\n    }\n    //console.log(`localStorage => game: ${localStorage.getItem('game')}`)\n    //console.log(`localStorage => gameStatus: ${localStorage.getItem('gameStatus')}`)\n    //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n    //console.log(`localStorage => winner: ${localStorage.getItem('winner')}`)\n    //console.log(`localStorage => twoPlayerScores: ${localStorage.getItem('twoPlayerScores')}`)\n    //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n    //console.log(`localStorage => player1: ${localStorage.getItem('players1')}`)\n    //console.log(`localStorage => player2: ${localStorage.getItem('players2')}`)\n    console.log(`time: ${time}`)\n\n    const getTimerButtonClasses = () => {\n        const timerButtonClasses = timerOn ? 'bg-red m-10 r-10 bold size20 p-20 color-light' : 'bg-green m-10 r-10 bold size20 p-20 color-light';\n        return timerButtonClasses;\n    }\n    const getTimerClasses = () => {\n        const timerClasses = (time < 120) ? 'blinking-fade' : '';\n        return timerClasses;\n    }\n\n    return (\n        <div className='fadeIn mt--30'>\n            <div className='mb-20'>\n                <Selector\n                    groupTitle='game'\n                    label='item.description'\n                    items={games}\n                    selected={game}\n                    onChange={selectGame}\n                    fontSize='25'\n                    padding='10px'\n                    width={(darts || dominos) ? '98%' : '65%'}\n                />\n                {\n                    (darts || golf)\n                        ? <React.Fragment></React.Fragment>\n                        : <Selector\n                            groupTitle='winner'\n                            label='i.description'\n                            items={(dominos) ? dominoWinners : ((surf) ? heatLengths : winners)}\n                            selected={(surf) ? (time / 60) : winner}\n                            onChange={(surf) ? setTimer : selectWinner}\n                            fontSize='25'\n                            padding='10px'\n                            width='30%'\n                        />\n                }\n                {(surf) ?\n                    <React.Fragment>\n                        <div className={getTimerButtonClasses()} onClick={() => toggleTimer()}>\n                            {(timerOn) ? 'STOP' : 'START'}\n                        </div>\n                        <div className='bg-dkBlue m-10 r-10 bold size20 p-20 color-light0'><span className={getTimerClasses()}>{formatTime(time)}</span></div>\n                        <div>\n                            <div className='flexContainer color-yellow bold greet ml-10 mr-10'>\n                                <div className='ml-10 p-10 w-100 bg-dkGreen m-1 r-5-lft'>Rank</div>\n                                <div className='flex3ColumnLeft m-1 p-10 bg-dkGreen m-1'>Athlete</div>\n                                <div className='flex3ColumnRight mr-10 p-10 bg-dkGreen m-1 r-5-rt'>Total</div>\n                            </div>\n                        </div>\n\n                    </React.Fragment>\n                    :\n                    <React.Fragment></React.Fragment>\n                }\n            </div>\n            {scorecards()}\n            {/*surfingRankboard*/}\n            <div className='flexContainer width-100-percent'>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow' onClick={() => addPlayer()}>add player</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black' onClick={() => reset()}>reset</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow' onClick={() => clear()}>clear</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScoreKeeper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}