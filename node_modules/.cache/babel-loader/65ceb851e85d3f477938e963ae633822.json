{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/LogEntry.js\";\nimport React from 'react';\nimport Dialog from './functional/Dialog.js';\nimport Selector from './forms/FunctionalSelector.js';\nimport RadioSelector from './forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from './utils/KeyGenerator.js';\n\nclass LogEntry extends React.Component {\n  //log = (this.lastPostId !== \"\") ? this.lastPostId : this.logTemplate;\n  constructor(props) {\n    super(props);\n    this.log = JSON.parse(localStorage.getItem(\"ThuApr3020207:03:14PM\"));\n    this.logTemplate = {\n      Day: {},\n      Location: {},\n      Swell: {},\n      Tide: {},\n      Wind: {},\n      Conditions: {},\n      Comments: {}\n    };\n    this.postDirectory = localStorage.getItem(\"postDirectory\") === null ? [] : JSON.parse(localStorage.getItem(\"postDirectory\"));\n    this.lastPostId = localStorage.getItem(\"lastPostId\") === null ? \"ThuApr3020207:03:14PM\" : localStorage.getItem(\"lastPostId\");\n\n    this.getRecordId = () => {\n      const date = new Date();\n      const log = this.state.log !== undefined && JSON.stringify(this.state.log, null, 2) !== \"{}\" ? JSON.stringify(this.state.log, null, 2) : JSON.stringify(this.log, null, 2);\n      const st = date.toDateString().replace(/ /g, \"\");\n      const nd = date.toLocaleTimeString().replace(/ /g, \"\");\n      console.log(`${st}${nd}: ${log}`);\n      localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n      return `${st}${nd}`;\n    };\n\n    this.getStateLog = () => this.props.getStateLog();\n\n    this.items = () => this.state.items;\n\n    this.hasBeenSelected = (item, groupTitle) => item.selections.indexOf(this.log[groupTitle][item.description]) !== -1 ? true : false;\n\n    this.defaultSelection = (item, groupTitle) => this.hasBeenSelected(item, groupTitle) ? item.selections.indexOf(this.log[groupTitle][item.description]) : 0;\n\n    this.selectorColor = (item, groupTitle) => this.hasBeenSelected(item, groupTitle) ? \"completedSelector\" : \"incompletedSelector\";\n\n    this.radioItems = (item, groupTitle) => /*#__PURE__*/React.createElement(RadioSelector, {\n      header: groupTitle,\n      groupTitle: groupTitle,\n      selected: this.defaultSelection(item, groupTitle),\n      label: item.description,\n      items: item.selections,\n      onChange: this.handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 40\n      }\n    });\n\n    this.selector = (item, groupTitle) => {\n      //const setSelectorStatus = ((item.selections.indexOf(this.log[groupTitle][item.description])) !== -1) ? this.selectorStatus.push(true) : this.selectorStatus.push(false);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: this.selectorColor(item, groupTitle) + \" r-vw p-vw bg-green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, item.description, \": \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Selector, {\n        groupTitle: groupTitle,\n        selected: this.defaultSelection(item, groupTitle),\n        label: item.description,\n        items: item.selections,\n        onChange: this.handleSelection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      })));\n    };\n\n    this.radio = (item, groupTitle) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"r-vw bg-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 35\n      }\n    }, this.radioItems(item, groupTitle));\n\n    this.group = item => item.group;\n\n    this.selectionInterface = (item, groupTitle) => item.type === \"radio\" ? this.radio(item, groupTitle) : this.selector(item, groupTitle);\n\n    this.groups = () => this.items().map(item => {\n      const headerClasses = 'subHeader color-yellow';\n      const selectorClasses = \"greet p-vw bg-vdk-green flex3Column\";\n      const groupClasses = window.innerWidth < 500 ? \"r-vw\" : \"flexContainer r-vw\";\n      const description = item.description;\n\n      const addToLogs = group => {\n        this.log[description][group.description] = group.selections[this.defaultSelection(group, description)]; //this.props.onChange(description, group.description, group.selections[this.defaultSelection(group, description)], false);\n      }; // const logger = this.group(item).map((group) => addToLogs(group));\n\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"groupConainer\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"groupHeader\"),\n        className: headerClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, item.description), /*#__PURE__*/React.createElement(\"div\", {\n        className: groupClasses,\n        key: getKey(\"groupSubConainer\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, this.group(item).map(group => /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"selectorConainer\"),\n        className: selectorClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }, this.selectionInterface(group, description)))));\n    });\n\n    this.categories = () => {\n      this.selectorStatus = [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 16\n        }\n      }, this.groups());\n    };\n\n    this.dateEntry = () => {\n      const logExists = this.state.log !== undefined && JSON.stringify(this.state.log, null, 2) !== \"{}\" ? true : false;\n\n      const stateLogDate = () => this.state.log.Day.Date;\n\n      const getDate = () => logExists ? stateLogDate() : this.state.date;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-5 subHeader color-yellow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flexContainer bg-vdk-green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, {\n        onChange: this.onDateChange,\n        value: getDate(),\n        className: \"p-vw bg-green flex3Column r-vw m-vw\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 23\n        }\n      })));\n    };\n\n    this.selectorStatus = [];\n    this.buttonLabel = props.buttonLabel;\n    this.title = props.title;\n    this.message = props.message;\n    this.state = {\n      date: new Date(),\n      items: props.items,\n      log: {}\n    };\n    this.handleSelection = this.handleSelection.bind(this);\n    this.updateNotes = this.updateNotes.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onDateChange = this.onDateChange.bind(this);\n  }\n\n  handleSelection(groupTitle, label, selected) {\n    if (typeof groupTitle === \"string\") {\n      this.log[groupTitle][label] = selected;\n      this.props.onChange(groupTitle, label, selected, true);\n      this.setState({\n        log: this.log\n      });\n    }\n  }\n\n  updateNotes(event) {\n    this.handleSelection(\"Comments\", \"notes\", event.target.value);\n  }\n\n  handleSubmit(event) {\n    const log = this.state.log !== undefined && JSON.stringify(this.state.log, null, 2) !== \"{}\" ? this.state.log : this.log;\n    const recordId = this.getRecordId();\n    let postDirectory = \"\";\n    let post = \"\";\n\n    const logIt = () => {\n      this.postDirectory.push(recordId);\n      postDirectory = JSON.stringify(this.postDirectory);\n      console.log(`postDirectory: ${postDirectory}`);\n      post = JSON.stringify(log, null, 2);\n      console.log(`post: ${post}`);\n      localStorage.setItem(recordId, post);\n      localStorage.setItem(\"postDirectory\", postDirectory);\n    };\n\n    const selectorStatusComplete = this.selectorStatus.includes(false) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n\n    if (selectorStatusComplete) {\n      logIt();\n    }\n\n    event.preventDefault();\n  }\n\n  onDateChange(date) {\n    const pickerDate = date;\n    date = String(date);\n    const day = pickerDate.getDate();\n    const month = pickerDate.getMonth() + 1;\n    const year = pickerDate.getFullYear();\n    const logDate = {\n      \"month\": month,\n      \"day\": day,\n      \"year\": year\n    };\n    this.handleSelection(\"Day\", \"Date\", pickerDate);\n    this.handleSelection(\"Day\", \"Day\", day);\n    this.handleSelection(\"Day\", \"Month\", month);\n    this.handleSelection(\"Day\", \"Year\", year);\n  }\n\n  render() {\n    //console.log(`GET STATE LOG ${JSON.stringify(this.getStateLog(), null, 2)}`)\n    return /*#__PURE__*/React.createElement(Dialog, {\n      title: this.title,\n      message: this.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, this.dateEntry(), this.categories(), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, \"Additional Comments: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"10\",\n      cols: window.innerWidth / 15,\n      value: this.state.entry,\n      onChange: this.updateNotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 124\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 129\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, this.buttonLabel)));\n  }\n\n}\n\nexport default LogEntry;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/LogEntry.js"],"names":["React","Dialog","Selector","RadioSelector","DatePicker","getKey","LogEntry","Component","constructor","props","log","JSON","parse","localStorage","getItem","logTemplate","Day","Location","Swell","Tide","Wind","Conditions","Comments","postDirectory","lastPostId","getRecordId","date","Date","state","undefined","stringify","st","toDateString","replace","nd","toLocaleTimeString","console","setItem","getStateLog","items","hasBeenSelected","item","groupTitle","selections","indexOf","description","defaultSelection","selectorColor","radioItems","handleSelection","selector","radio","group","selectionInterface","type","groups","map","headerClasses","selectorClasses","groupClasses","window","innerWidth","addToLogs","categories","selectorStatus","dateEntry","logExists","stateLogDate","getDate","onDateChange","buttonLabel","title","message","bind","updateNotes","handleSubmit","label","selected","onChange","setState","event","target","value","recordId","post","logIt","push","selectorStatusComplete","includes","confirm","preventDefault","pickerDate","String","day","month","getMonth","year","getFullYear","logDate","render","entry"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dialog from './functional/Dialog.js';\nimport Selector from './forms/FunctionalSelector.js';\nimport RadioSelector from './forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from './utils/KeyGenerator.js';\n\nclass LogEntry extends React.Component {\n    log = JSON.parse(localStorage.getItem(\"ThuApr3020207:03:14PM\"));\n   logTemplate = {\n        Day: {},\n        Location: {},\n        Swell: {},\n        Tide: {},\n        Wind: {},\n        Conditions: {},\n        Comments: {}\n    };\n    postDirectory = (localStorage.getItem(\"postDirectory\") === null) ? [] : JSON.parse(localStorage.getItem(\"postDirectory\"));\n    lastPostId = (localStorage.getItem(\"lastPostId\") === null) ? \"ThuApr3020207:03:14PM\" : localStorage.getItem(\"lastPostId\");\n    //log = (this.lastPostId !== \"\") ? this.lastPostId : this.logTemplate;\n    constructor(props) {\n        super(props);\n        this.selectorStatus = [];\n        this.buttonLabel = props.buttonLabel;\n        this.title = props.title;\n        this.message = props.message;\n        this.state = {\n            date: new Date(),\n            items: props.items,\n            log: {}\n        };\n        this.handleSelection = this.handleSelection.bind(this);\n        this.updateNotes = this.updateNotes.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n    }\n    handleSelection(groupTitle, label, selected) {\n        if (typeof groupTitle === \"string\") {\n            this.log[groupTitle][label] = selected;\n            this.props.onChange(groupTitle, label, selected, true);\n            this.setState({\n                log: this.log\n            });\n        } \n    }\n    updateNotes(event) {\n        this.handleSelection(\"Comments\", \"notes\", event.target.value);\n    }\n    getRecordId = () => {\n        const date = new Date()\n        const log = (this.state.log !== undefined && JSON.stringify(this.state.log, null, 2) !== \"{}\") ? JSON.stringify(this.state.log, null, 2) : JSON.stringify(this.log, null, 2);\n        const st = date.toDateString().replace(/ /g,\"\");\n        const nd = date.toLocaleTimeString().replace(/ /g,\"\");\n        console.log(`${st}${nd}: ${log}`)\n        localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n        return `${st}${nd}`;\n    }\n    handleSubmit(event) {\n        const log = (this.state.log !== undefined && JSON.stringify(this.state.log, null, 2) !== \"{}\") ? this.state.log : this.log;\n        const recordId = this.getRecordId();\n        let postDirectory = \"\";\n        let post = \"\";\n        const logIt = () => {\n            this.postDirectory.push(recordId);\n            postDirectory = JSON.stringify(this.postDirectory);\n            console.log(`postDirectory: ${postDirectory}`)\n            post = JSON.stringify(log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n            localStorage.setItem(\"postDirectory\", postDirectory);\n        }\n        const selectorStatusComplete = (this.selectorStatus.includes(false)) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n        if (selectorStatusComplete) {\n            logIt();\n        }\n        event.preventDefault();\n    }\n    onDateChange(date) {\n        const pickerDate = date;\n        date = String(date);\n        const day = pickerDate.getDate();\n        const month = pickerDate.getMonth()+1;\n        const year = pickerDate.getFullYear();\n        const logDate = {\n            \"month\": month,\n            \"day\": day,\n            \"year\": year\n        }\n        this.handleSelection(\"Day\", \"Date\", pickerDate);\n        this.handleSelection(\"Day\", \"Day\", day);\n        this.handleSelection(\"Day\", \"Month\", month);\n        this.handleSelection(\"Day\", \"Year\", year);\n    }\n    getStateLog = () => this.props.getStateLog();\n    items = () => this.state.items;\n    hasBeenSelected = (item,groupTitle) => ((item.selections.indexOf(this.log[groupTitle][item.description])) !== -1) ? true : false;\n    defaultSelection = (item,groupTitle) => (this.hasBeenSelected(item,groupTitle)) ? (item.selections.indexOf(this.log[groupTitle][item.description])) : 0; \n    selectorColor = (item,groupTitle) => (this.hasBeenSelected(item,groupTitle)) ? \"completedSelector\" : \"incompletedSelector\";\n    \n    radioItems = (item, groupTitle) => <RadioSelector\n                    header={groupTitle}\n                    groupTitle={groupTitle} \n                    selected={this.defaultSelection(item,groupTitle)} \n                    label={item.description} \n                    items={item.selections} \n                    onChange={this.handleSelection}\n                />;\n    selector = (item, groupTitle) => {\n\n            //const setSelectorStatus = ((item.selections.indexOf(this.log[groupTitle][item.description])) !== -1) ? this.selectorStatus.push(true) : this.selectorStatus.push(false);\n            \n            return <div className={this.selectorColor(item,groupTitle) + \" r-vw p-vw bg-green\"}>\n                <div className=\"mb-5\">{item.description}: </div>\n                <div className=\"mb-5\">\n                    <Selector \n                        groupTitle={groupTitle} \n                        selected={this.defaultSelection(item,groupTitle)} \n                        label={item.description} \n                        items={item.selections}\n                        onChange={this.handleSelection}\n                    />\n                </div>\n            </div>;\n    }\n\n    radio = (item, groupTitle) => <div className=\"r-vw bg-green\">\n                {this.radioItems(item, groupTitle)}\n            </div>;\n    group = (item) => item.group;\n    selectionInterface = (item, groupTitle) => (item.type === \"radio\") ? this.radio(item, groupTitle) : this.selector(item, groupTitle);\n\n    groups = () => this.items().map((item) => {\n        const headerClasses = 'subHeader color-yellow';\n        const selectorClasses = \"greet p-vw bg-vdk-green flex3Column\";\n        const groupClasses = (window.innerWidth < 500) ? \"r-vw\" : \"flexContainer r-vw\";\n        const description = item.description;\n        const addToLogs = (group) => {\n            this.log[description][group.description] = group.selections[this.defaultSelection(group, description)]\n            //this.props.onChange(description, group.description, group.selections[this.defaultSelection(group, description)], false);\n        }\n       // const logger = this.group(item).map((group) => addToLogs(group));\n        return <div key={getKey(\"groupConainer\")}>\n                    <div key={getKey(\"groupHeader\")} className={headerClasses}>\n                        {item.description}\n                    </div>\n                    <div className={groupClasses} key={getKey(\"groupSubConainer\")}>\n                        {this.group(item).map((group) => \n                            <div key={getKey(\"selectorConainer\")} className={selectorClasses}>\n                                {this.selectionInterface(group, description)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n    })\n    categories = () => {\n        this.selectorStatus = [];\n        return <div className='description'>{this.groups()}</div>;\n    }\n    dateEntry = () => {\n\n            const logExists = (this.state.log !== undefined && JSON.stringify(this.state.log, null, 2) !== \"{}\") ? true : false;\n            const stateLogDate = () => this.state.log.Day.Date;\n            const getDate = () => (logExists) ? stateLogDate() : this.state.date;\n            return <div>\n                <div className='mb-5 subHeader color-yellow'>Date</div>\n                <div className='flexContainer bg-vdk-green'>\n                    <DatePicker\n                        onChange={this.onDateChange}\n                        value={getDate()} \n                        className='p-vw bg-green flex3Column r-vw m-vw'\n                    /><br/>\n                </div>\n            </div>\n    }\n    \n    render() {\n        //console.log(`GET STATE LOG ${JSON.stringify(this.getStateLog(), null, 2)}`)\n        return (\n            <Dialog title={this.title} message={this.message}>\n                <form onSubmit={this.handleSubmit}>\n                    {this.dateEntry()}\n                    {this.categories()}\n                    <br/>\n                    \n                    <div className=\"mb-5\">Additional Comments: </div>\n                    <textarea rows=\"10\" cols={window.innerWidth/15} value={this.state.entry} onChange={this.updateNotes} /><br/><br/>\n                    <button onClick={this.handleSubmit}>\n                        {this.buttonLabel}\n                    </button>\n                </form>\n            </Dialog>\n        );\n    };\n}\n\nexport default LogEntry;"]},"metadata":{},"sourceType":"module"}