{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var toCelsius=function toCelsius(fahrenheit){return(fahrenheit-32)*5/9;};var tryConvert=function tryConvert(temperature,convert){var input=parseFloat(temperature);if(Number.isNaN(input)){return'';}var output=convert(input);var rounded=Math.round(output*1000)/1000;return rounded.toString();};var toFahrenheit=function toFahrenheit(celsius){return celsius*9/5+32;};var BoilingVerdict=function BoilingVerdict(props){var celsius=props.celsius;if(celsius>=100){return/*#__PURE__*/_jsx(\"p\",{className:\"color-red\",children:\"water is boiling...\"});}if(celsius<=0){return/*#__PURE__*/_jsx(\"p\",{className:\"color-blue\",children:\"water is freezing...\"});}return/*#__PURE__*/_jsx(\"p\",{className:\"color-yellow\",children:\"water is not boiling or freezing...\"});};export default BoilingVerdict;export{toCelsius,tryConvert,toFahrenheit};","map":{"version":3,"names":["React","jsx","_jsx","toCelsius","fahrenheit","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","toFahrenheit","celsius","BoilingVerdict","props","className","children"],"sources":["/Users/js/Dev/my-first-reactor/src/components/converter/BoilingVerdict.js"],"sourcesContent":["import React from 'react';\n\nconst toCelsius = (fahrenheit) => (fahrenheit - 32) * 5 / 9;\nconst tryConvert = (temperature, convert) => {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n        return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n};\nconst toFahrenheit = (celsius) => (celsius * 9 / 5) + 32;\nconst BoilingVerdict = props => {\n    const { celsius } = props;\n    if (celsius >= 100) { return <p className='color-red'>water is boiling...</p> }\n    if (celsius <= 0) { return <p className='color-blue'>water is freezing...</p> }\n    return <p className='color-yellow'>water is not boiling or freezing...</p>;\n}\n\nexport default BoilingVerdict;\nexport {\n    toCelsius,\n    tryConvert,\n    toFahrenheit\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,GAAM,CAAAC,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,UAAU,QAAK,CAACA,UAAU,CAAG,EAAE,EAAI,CAAC,CAAG,CAAC,GAC3D,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,WAAW,CAAEC,OAAO,CAAK,CACzC,GAAM,CAAAC,KAAK,CAAGC,UAAU,CAACH,WAAW,CAAC,CACrC,GAAII,MAAM,CAACC,KAAK,CAACH,KAAK,CAAC,CAAE,CACrB,MAAO,EAAE,CACb,CACA,GAAM,CAAAI,MAAM,CAAGL,OAAO,CAACC,KAAK,CAAC,CAC7B,GAAM,CAAAK,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAAG,IAAI,CAAC,CAAG,IAAI,CAChD,MAAO,CAAAC,OAAO,CAACG,QAAQ,CAAC,CAAC,CAC7B,CAAC,CACD,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,OAAO,QAAM,CAAAA,OAAO,CAAG,CAAC,CAAG,CAAC,CAAI,EAAE,GACxD,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAGC,KAAK,CAAI,CAC5B,GAAQ,CAAAF,OAAO,CAAKE,KAAK,CAAjBF,OAAO,CACf,GAAIA,OAAO,EAAI,GAAG,CAAE,CAAE,mBAAOhB,IAAA,MAAGmB,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,qBAAmB,CAAG,CAAC,CAAC,CAC9E,GAAIJ,OAAO,EAAI,CAAC,CAAE,CAAE,mBAAOhB,IAAA,MAAGmB,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,sBAAoB,CAAG,CAAC,CAAC,CAC9E,mBAAOpB,IAAA,MAAGmB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,qCAAmC,CAAG,CAAC,CAC9E,CAAC,CAED,cAAe,CAAAH,cAAc,CAC7B,OACIhB,SAAS,CACTE,UAAU,CACVY,YAAY"},"metadata":{},"sourceType":"module"}