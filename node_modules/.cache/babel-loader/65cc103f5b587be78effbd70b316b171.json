{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreKeeper = () => {\n  _s();\n  const initPlayers = ['You', 'Me'];\n  const initScores = localStorage.getItem('twoPlayerScores') || [0, 0];\n  const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n  const winners = [5, 10, 11, 15, 20, 21];\n  const dominoWinners = [50, 100, 150, 200];\n  const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n  const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n  //const [ editStatus, setEdit ] = useState(false);\n  const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n  const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n  const [twoPlayerScores, setTwoPlayerScores] = useState(initScores);\n  const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n  const [heatLength, setHeatLength] = useState(60 * 60);\n  const [waveCount, setWaveCount] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  const [sortedPlayers, setSortedPlayers] = useState([]);\n  const darts = game !== 'darts' ? false : true;\n  const dominos = game !== 'dominos' ? false : true;\n  const surf = game !== 'surf' ? false : true;\n  const golf = game !== 'golf' ? false : true;\n  const cricketKey = (player, index) => `${player}Cricket${index}`;\n  const golfKey = (player, index) => `${player}Golf${index}`;\n  const surfKey = (player, index) => `${player}Surf${index}`;\n  const dominoKey = (player, index) => `${player}Domino${index}`;\n  const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n  const golfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n  const golfPars = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n  const dominoScoring = [50, 100, 150, 200];\n  const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n  const getSurfScore = index => {\n    if (surf) {\n      const newPlayer = {\n        'name': players[index],\n        'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n      };\n      if (playerScores.length < players.length) {\n        playerScores.push(newPlayer);\n      }\n      const scoreTotal = floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex]));\n      return scoreTotal;\n    }\n    return;\n  };\n  useEffect(() => {\n    const surfersScores = [];\n    console.log(`sortedPlayers => ${sortedPlayers}`);\n    const surfingScoreboard = sortedPlayers.map((player, index) => {\n      surfersScores[index] = getSurfScore(index);\n    });\n    localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n  }, [sortedPlayers]);\n  const setGameInProgress = playerIndex => {\n    if (playerIndex > 0) {\n      if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n        localStorage.setItem('gameStatus', 'inProgress');\n      }\n    }\n    localStorage.setItem(`player${playerIndex}`, 'loser');\n    //setGameStatus('inProgress');\n    return false;\n  };\n  const isWinner = playerIndex => getDartTotal(players[playerIndex]) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n  const playerScores = [{\n    name: 'Player 1',\n    scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88]\n  }, {\n    name: 'Player 2',\n    scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81]\n  }, {\n    name: 'Player 3',\n    scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89]\n  }];\n  const setGameOver = playerIndex => {\n    localStorage.setItem('gameStatus', 'gameOver');\n    localStorage.setItem(`player${playerIndex}`, 'winner');\n    //setGameStatus('gameOver');\n    return true;\n  };\n  const setTimer = (groupTitle, label, selected) => {\n    localStorage.setItem('timer', selected);\n    setTime(selected * 60);\n    setHeatLength(selected * 60);\n  };\n  if (darts && winner !== 21) {\n    localStorage.setItem('winner', 21);\n    setWinner(Number(localStorage.getItem('winner')));\n  }\n  const getDartTotal = player => {\n    let total = 0;\n    const score = index => localStorage.getItem(cricketKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    dartScoring.map((target, index) => addToTotal(Number(score(index))));\n    console.log(`getDartTotalplayer=> ${player}: ${total}`);\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const getGolfTotal = player => {\n    if (!golf) return;\n    let total = 0;\n    const score = index => localStorage.getItem(golfKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    golfScoring.map((target, index) => {\n      console.log(`getGolfTotal=> ${golfKey(player, index)} ${index}: ${total}`);\n      addToTotal(Number(score(index)));\n    });\n    //console.log(`getGolfTotalplayer=> ${player}: ${total}`)\n    return total;\n  };\n  const getDominoTotal = player => {\n    let total = 0;\n    const score = index => localStorage.getItem(dominoKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    dominoScoring.map((target, index) => addToTotal(Number(score(index))));\n    //console.log(`getDominoTotalplayer=> ${player}: ${total}`)\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const updateTwoPlayerScores = (player, index, score) => {\n    const newScores = [];\n    players.map((player, index) => newScores.push(getDartTotal(player)));\n    //console.log(`updateTwoPlayerScores=>\\nplayer: ${player}\\nindex: ${index}\\nscore: ${score}\\nnewScore: ${JSON.stringify(newScores)}`)\n    //console.log(`${players[0]}: ${twoPlayerScores[0]}\\n${players[1]}: ${twoPlayerScores[1]}`)\n    //const isWinner = (score) => (score >= winner) ? true : false;\n    //players.map((player, index) => (isWinner(newScores[index])) ? setTwoPlayerWinner(index) : setTwoPlayerWinner(3));\n    localStorage.setItem('winner', twoPlayerScores);\n    localStorage.setItem('twoPlayerScores', twoPlayerScores);\n    setTwoPlayerScores(newScores);\n  };\n  //console.log(`players: ${players}`)\n  const set21 = () => {\n    if (darts) {\n      localStorage.setItem('winner', 21);\n      setWinner(Number(localStorage.getItem('winner')));\n    }\n  };\n  const selectGame = (groupTitle, label, selected) => {\n    localStorage.setItem('game', selected);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setGame(localStorage.getItem('game'));\n    set21();\n  };\n  const selectWinner = (groupTitle, label, selected) => {\n    localStorage.setItem('winner', selected);\n    localStorage.setItem('gameStatus', 'gameOver');\n    setWinner(Number(localStorage.getItem('winner')));\n  };\n  const clear = event => {\n    alert('Note was cleared: ' + event.value);\n    localStorage.setItem('players', JSON.stringify(initPlayers));\n    localStorage.setItem('gameStatus', 'inProgress');\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const reset = event => {\n    //alert('Note was cleared: ');\n    //const cricketKey = (player,index) => `${player}Cricket${index}`;\n    //const golfKey = (player,index) => `${player}Golf${index}`;\n    //const dominoKey = (player,index) => `${player}Domino${index}`;\n    let id = (player, index) => darts ? cricketKey(player, index) : player;\n    id = (player, index) => dominos ? dominoKey(player, index) : player;\n    id = (player, index) => golf ? golfKey(player, index) : player;\n    id = (player, index) => surf ? surfKey(player, index) : player;\n    const initValue = 0;\n    if (darts) {\n      players.map(player => dartScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n    } else if (dominos) {\n      //players.map((player) => dominoScoring.map((target,index) => localStorage.setItem(id(player, index), initValue)));\n      players.map(player => dominoScoring.map((target, index) => localStorage.setItem(dominoKey(player, index), initValue)));\n    } else {\n      players.map((player, index) => localStorage.setItem(id(player, index), initValue));\n    }\n    localStorage.setItem('gameStatus', 'inProgress');\n    getScore();\n  };\n  const addPlayer = event => {\n    //alert('Note was cleared: ' + value);\n    const newPlayer = prompt('Enter new name', '');\n    let newPlayers = players;\n    if (newPlayer !== null) {\n      newPlayers.push(newPlayer);\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n    //getScore();\n  };\n\n  const editPlayer = index => {\n    //console.log(`edit: ${index}`);\n    const newPlayer = prompt('Enter new name', players[index]);\n    if (newPlayer !== null) {\n      let newPlayers = players;\n      newPlayers[index] = newPlayer;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n      getScore();\n    }\n  };\n  const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n  const deletePlayer = index => {\n    console.log(`deletePlayer => ${index}`);\n    const newPlayers = players.slice();\n    newPlayers.splice(index, 1);\n    //playerScores.splice(index, 1);\n    //surfersScores.splice(index, 1);\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const scorecards = () => {\n    //console.log(`build Scorecards`)\n    const scorecard = (player, index, score) => {\n      if (darts) {\n        console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(CricketScore, {\n          game: game,\n          player: player,\n          index: index,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateTwoPlayerScores: updateTwoPlayerScores,\n          winner: winner\n        }, getKey(player), false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 24\n        }, this);\n      }\n      if (dominos) {\n        console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(Dominos, {\n          game: game,\n          player: player,\n          index: index,\n          scoreTotal: score,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          getDominoTotal: getDominoTotal,\n          updateTwoPlayerScores: updateTwoPlayerScores,\n          winner: winner\n        }, getKey(player), false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 24\n        }, this);\n      }\n      if (golf) {\n        console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(ScoreCard, {\n          game: game,\n          player: golfPars[index],\n          index: index,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateTwoPlayerScores: updateTwoPlayerScores,\n          winner: winner\n        }, getKey(player), false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 24\n        }, this);\n      }\n      console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n      return /*#__PURE__*/_jsxDEV(ScoreCard, {\n        game: game,\n        player: player,\n        index: index,\n        editPlayer: editPlayer,\n        deletePlayer: deletePlayer,\n        updateTwoPlayerScores: updateTwoPlayerScores,\n        winner: winner\n      }, getKey(player), false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 20\n      }, this);\n    };\n    const rankStatus = (player, index, score) => {\n      console.log(`ranksStatus => surfersScores player: ${player} index: ${index} score: ${score}`);\n      const winsBy = 'Wins by 7.17';\n      const needs = 'Needs 0.01';\n      if (index === 0) {\n        return winsBy;\n      }\n      return needs;\n    };\n    const findTwoHighestIndices = scores => {\n      let highestIndex = 0;\n      let secondHighestIndex = -1;\n      scores.forEach((score, index) => {\n        if (score > scores[highestIndex]) {\n          secondHighestIndex = highestIndex;\n          highestIndex = index;\n        } else if (secondHighestIndex === -1 || score > scores[secondHighestIndex]) {\n          secondHighestIndex = index;\n        }\n      });\n      return [highestIndex, secondHighestIndex];\n    };\n    const getWave = (playerId, index, score) => {\n      console.log(`getWave => playerId: ${playerId} index: ${index} score: ${score}`);\n      const highestScores = findTwoHighestIndices(playerScores[playerId].scores);\n      const highestId = highestScores[0];\n      const secondHighestId = highestScores[1];\n      const firstScore = index === highestId ? true : false;\n      const secondScore = index === secondHighestId ? true : false;\n      const getClasses = firstScore || secondScore ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n      const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"greet bold color-yellow bg-dkYellow w-100 p-5\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getClasses,\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 26\n      }, this);\n      return wave;\n    };\n\n    // Find the indices of the two highest scores for each player\n    const getTwoHighestScores = playerIndex => {\n      const player = playerScores[playerIndex];\n      const [highestIndex, secondHighestIndex] = findTwoHighestIndices(playerScores[playerIndex].scores);\n      console.log(`${player.name}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n      return {\n        'highScoreIndex': highestIndex,\n        'secondHighScoreIndex': secondHighestIndex\n      };\n    };\n    const floatDecimalOneDigit = number => {\n      if (Number.isInteger(number) && number >= 10 && number <= 99) {\n        return number / 10;\n      } else {\n        return null;\n      }\n    };\n    const surfingScores = (player, index, score) => {\n      if (surf) {\n        console.log(`surfingScores => player: ${player} index: ${index} score:${playerScores[index].scores[0]}`);\n        const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flexContainer width-100-percent mt--10 mb--10\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-10 p-5 w-100 size40 mt-10\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex3ColumnLeft m-1 p-5 size40 mt-10\",\n              children: player\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex3ColumnRight mr-10 p-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"size25 bold\",\n                children: score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: rankStatus(player, index, score)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 25\n            }, this)]\n          }, getKey(player), true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-scroll color-white copyright m-10\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"container mt-10\",\n                  children: playerScores[index].scores.map((score, wave) => getWave(index, wave, floatDecimalOneDigit(score)))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 38\n        }, this);\n        return surferScores;\n      }\n      return;\n    };\n    const renderedItems = players.map((player, index) => scorecard(player, index));\n    const dartScores = dartScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(players[0], index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(players[1], index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 62\n    }, this));\n    const golfScores = golfScoring.map((hole, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(golfPars[index], index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: hole\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(golfPars[index], index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 13\n      }, this)]\n    }, getKey(hole), true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 61\n    }, this));\n\n    //const surfingRankboard = players.map((player, index) => surfingRanks(player, index))};\n    const surfingScoreboard = sortedPlayers.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n    const dominoScores = dominoScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent p-5\",\n        children: scorecard(players[0], index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent p-5\",\n        children: scorecard(players[1], index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 66\n    }, this));\n    const isDominoWinner = playerIndex => getDominoTotal(players[playerIndex]) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const dartClass = playerIndex => 'flex3Column p-20 size25 bold' + (isWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dominoClass = playerIndex => 'flex3Column p-20 size25 bold' + (isDominoWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dartScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDartTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-yellow navBranding w-200\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDartTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }, this), dartScores]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 32\n    }, this);\n    const golfScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getGolfTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-yellow navBranding w-200\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getGolfTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 13\n      }, this), golfScores]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 32\n    }, this);\n    players.map((player, index) => scorecard(player, index));\n    const dominoScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(0),\n          children: [players[0], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDominoTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-yellow navBranding w-200\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(1),\n          children: [players[1], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDominoTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 13\n      }, this), dominoScores]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 34\n    }, this);\n    if (darts) return dartScoreboard;\n    if (dominos) return dominoScoreboard;\n    if (golf) return golfScoreboard;\n    //if (surf) return surfScoreboard\n    if (surf) return surfingScoreboard;else return renderedItems;\n  };\n  //console.log(`localStorage => game: ${localStorage.getItem('game')}`)\n  //console.log(`localStorage => gameStatus: ${localStorage.getItem('gameStatus')}`)\n  //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n  //console.log(`localStorage => winner: ${localStorage.getItem('winner')}`)\n  //console.log(`localStorage => twoPlayerScores: ${localStorage.getItem('twoPlayerScores')}`)\n  //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n  //console.log(`localStorage => player1: ${localStorage.getItem('players1')}`)\n  //console.log(`localStorage => player2: ${localStorage.getItem('players2')}`)\n  console.log(`time: ${time}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fadeIn mt--30\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-20\",\n      children: [/*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"game\",\n        label: \"item.description\",\n        items: games,\n        selected: game,\n        onChange: selectGame,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: darts || dominos ? '98%' : '65%'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }, this), darts || golf ? /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"winner\",\n        label: \"i.description\",\n        items: dominos ? dominoWinners : surf ? heatLengths : winners,\n        selected: surf ? time / 60 : winner,\n        onChange: surf ? setTimer : selectWinner,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: \"30%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 27\n      }, this), surf ? /*#__PURE__*/_jsxDEV(SurfScores, {\n        editPlayer: editPlayer,\n        deletePlayer: deletePlayer,\n        winner: winner,\n        updateTwoPlayerScores: updateTwoPlayerScores,\n        game: game,\n        surfKey: surfKey,\n        time: time,\n        setTime: setTime,\n        heatLength: heatLength,\n        setSortedPlayers: setSortedPlayers,\n        isWinner: isWinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }, this), scorecards(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow\",\n          onClick: () => addPlayer(),\n          children: \"add player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black\",\n          onClick: () => reset(),\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow\",\n          onClick: () => clear(),\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 450,\n    columnNumber: 9\n  }, this);\n};\n_s(ScoreKeeper, \"id06On9+bmOEzWrr+nHPTzyT25Q=\");\n_c = ScoreKeeper;\nexport default ScoreKeeper;\nvar _c;\n$RefreshReg$(_c, \"ScoreKeeper\");","map":{"version":3,"names":["React","useState","useEffect","ScoreCard","CricketScore","Dominos","SurfScores","Selector","getKey","jsxDEV","_jsxDEV","ScoreKeeper","_s","initPlayers","initScores","localStorage","getItem","games","winners","dominoWinners","heatLengths","players","setPlayers","JSON","parse","game","setGame","winner","setWinner","Number","twoPlayerScores","setTwoPlayerScores","time","setTime","heatLength","setHeatLength","waveCount","setWaveCount","sortedPlayers","setSortedPlayers","darts","dominos","surf","golf","cricketKey","player","index","golfKey","surfKey","dominoKey","dartScoring","golfScoring","golfPars","dominoScoring","gameStatus","setGameStatus","getSurfScore","newPlayer","playerScores","length","push","scoreTotal","floatDecimalOneDigit","scores","getTwoHighestScores","highScoreIndex","secondHighScoreIndex","surfersScores","console","log","surfingScoreboard","map","setItem","stringify","setGameInProgress","playerIndex","isWinner","getDartTotal","setGameOver","name","setTimer","groupTitle","label","selected","total","score","addToTotal","value","target","getGolfTotal","getDominoTotal","updateTwoPlayerScores","newScores","set21","selectGame","selectWinner","clear","event","alert","reset","id","initValue","getScore","addPlayer","prompt","newPlayers","editPlayer","window","location","pathname","deletePlayer","slice","splice","scorecards","scorecard","fileName","_jsxFileName","lineNumber","columnNumber","rankStatus","winsBy","needs","findTwoHighestIndices","highestIndex","secondHighestIndex","forEach","getWave","playerId","highestScores","highestId","secondHighestId","firstScore","secondScore","getClasses","wave","className","children","number","isInteger","surfingScores","surferScores","class","renderedItems","dartScores","golfScores","hole","dominoScores","isDominoWinner","dartClass","dominoClass","dartScoreboard","Fragment","golfScoreboard","dominoScoreboard","items","onChange","fontSize","padding","width","onClick","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\n\nconst ScoreKeeper = () => {\n\n    const initPlayers = ['You', 'Me'];\n    const initScores = localStorage.getItem('twoPlayerScores') || [0, 0];\n    const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n    const winners = [5, 10, 11, 15, 20, 21];\n    const dominoWinners = [50, 100, 150, 200];\n    const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n    //const [ editStatus, setEdit ] = useState(false);\n    const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n    const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n    const [twoPlayerScores, setTwoPlayerScores] = useState(initScores);\n    const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n    const [heatLength, setHeatLength] = useState(60 * 60);\n    const [waveCount, setWaveCount] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n    const [sortedPlayers, setSortedPlayers] = useState([]);\n    const darts = (game !== 'darts') ? false : true;\n    const dominos = (game !== 'dominos') ? false : true;\n    const surf = (game !== 'surf') ? false : true;\n    const golf = (game !== 'golf') ? false : true;\n    const cricketKey = (player, index) => `${player}Cricket${index}`;\n    const golfKey = (player, index) => `${player}Golf${index}`;\n    const surfKey = (player, index) => `${player}Surf${index}`;\n    const dominoKey = (player, index) => `${player}Domino${index}`;\n    const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n    const golfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n    const golfPars = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n    const dominoScoring = [50, 100, 150, 200];\n    const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n    \n    const getSurfScore = (index) => {\n        if (surf) {\n            const newPlayer = {\n                'name': players[index],\n                'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n            }\n            if (playerScores.length < players.length) {\n                playerScores.push(newPlayer)\n            }\n            const scoreTotal = floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex]));\n            return scoreTotal;\n        }\n        return\n    };\n    \n    useEffect(() => {\n        const surfersScores = [];\n        console.log(`sortedPlayers => ${sortedPlayers}`)\n        const surfingScoreboard = sortedPlayers.map((player, index) => {\n            surfersScores[index] = getSurfScore(index);\n        })\n        localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n    }, [sortedPlayers]);\n\n    const setGameInProgress = (playerIndex) => {\n        if (playerIndex > 0) {\n            if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n                localStorage.setItem('gameStatus', 'inProgress')\n            }\n        }\n        localStorage.setItem(`player${playerIndex}`, 'loser');\n        //setGameStatus('inProgress');\n        return false;\n    }\n    const isWinner = (playerIndex) => (getDartTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const playerScores = [\n        { name: 'Player 1', scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88] },\n        { name: 'Player 2', scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81] },\n        { name: 'Player 3', scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89] },\n    ];\n    const setGameOver = (playerIndex) => {\n        localStorage.setItem('gameStatus', 'gameOver');\n        localStorage.setItem(`player${playerIndex}`, 'winner');\n        //setGameStatus('gameOver');\n        return true;\n    }\n    const setTimer = (groupTitle, label, selected) => {\n        localStorage.setItem('timer', selected);\n        setTime(selected * 60);\n        setHeatLength(selected * 60);\n    }\n    \n    if (darts && winner !== 21) {\n        localStorage.setItem('winner', 21);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const getDartTotal = (player) => {\n        let total = 0;\n        const score = (index) => localStorage.getItem(cricketKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        dartScoring.map((target, index) => addToTotal(Number(score(index))));\n        console.log(`getDartTotalplayer=> ${player}: ${total}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const getGolfTotal = (player) => {\n        if (!golf) return;\n        let total = 0;\n        const score = (index) => localStorage.getItem(golfKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        golfScoring.map((target, index) => {\n            console.log(`getGolfTotal=> ${golfKey(player, index)} ${index}: ${total}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        //console.log(`getGolfTotalplayer=> ${player}: ${total}`)\n        return total;\n    }\n    const getDominoTotal = (player) => {\n        let total = 0;\n        const score = (index) => localStorage.getItem(dominoKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        dominoScoring.map((target, index) => addToTotal(Number(score(index))));\n        //console.log(`getDominoTotalplayer=> ${player}: ${total}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const updateTwoPlayerScores = (player, index, score) => {\n        const newScores = [];\n        players.map((player, index) => newScores.push(getDartTotal(player)));\n        //console.log(`updateTwoPlayerScores=>\\nplayer: ${player}\\nindex: ${index}\\nscore: ${score}\\nnewScore: ${JSON.stringify(newScores)}`)\n        //console.log(`${players[0]}: ${twoPlayerScores[0]}\\n${players[1]}: ${twoPlayerScores[1]}`)\n        //const isWinner = (score) => (score >= winner) ? true : false;\n        //players.map((player, index) => (isWinner(newScores[index])) ? setTwoPlayerWinner(index) : setTwoPlayerWinner(3));\n        localStorage.setItem('winner', twoPlayerScores);\n        localStorage.setItem('twoPlayerScores', twoPlayerScores);\n        setTwoPlayerScores(newScores);\n    }\n    //console.log(`players: ${players}`)\n    const set21 = () => {\n        if (darts) {\n            localStorage.setItem('winner', 21);\n            setWinner(Number(localStorage.getItem('winner')));\n        }\n    }\n    const selectGame = (groupTitle, label, selected) => {\n        localStorage.setItem('game', selected)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setGame(localStorage.getItem('game'));\n        set21();\n    }\n    const selectWinner = (groupTitle, label, selected) => {\n        localStorage.setItem('winner', selected)\n        localStorage.setItem('gameStatus', 'gameOver');\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const clear = (event) => {\n        alert('Note was cleared: ' + event.value);\n        localStorage.setItem('players', JSON.stringify(initPlayers));\n        localStorage.setItem('gameStatus', 'inProgress');\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n    const reset = (event) => {\n        //alert('Note was cleared: ');\n        //const cricketKey = (player,index) => `${player}Cricket${index}`;\n        //const golfKey = (player,index) => `${player}Golf${index}`;\n        //const dominoKey = (player,index) => `${player}Domino${index}`;\n        let id = (player, index) => (darts) ? cricketKey(player, index) : player;\n        id = (player, index) => (dominos) ? dominoKey(player, index) : player;\n        id = (player, index) => (golf) ? golfKey(player, index) : player;\n        id = (player, index) => (surf) ? surfKey(player, index) : player;\n        const initValue = 0;\n        if (darts) {\n            players.map((player) => dartScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n        } else if (dominos) {\n            //players.map((player) => dominoScoring.map((target,index) => localStorage.setItem(id(player, index), initValue)));\n            players.map((player) => dominoScoring.map((target, index) => localStorage.setItem(dominoKey(player, index), initValue)));\n        } else {\n            players.map((player, index) => localStorage.setItem(id(player, index), initValue));\n        }\n        localStorage.setItem('gameStatus', 'inProgress');\n        getScore();\n    }\n    const addPlayer = (event) => {\n        //alert('Note was cleared: ' + value);\n        const newPlayer = prompt('Enter new name', '');\n        let newPlayers = players;\n        if (newPlayer !== null) {\n            newPlayers.push(newPlayer);\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n        //getScore();\n    }\n    \n    const editPlayer = (index) => {\n        //console.log(`edit: ${index}`);\n        const newPlayer = prompt('Enter new name', players[index]);\n        if (newPlayer !== null) {\n            let newPlayers = players;\n            newPlayers[index] = newPlayer;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n            getScore();\n        }\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n    \n    const deletePlayer = (index) => {\n        console.log(`deletePlayer => ${index}`)\n        const newPlayers = players.slice();\n        newPlayers.splice(index, 1);\n        //playerScores.splice(index, 1);\n        //surfersScores.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    };\n    \n    const scorecards = () => {\n        //console.log(`build Scorecards`)\n        const scorecard = (player, index, score) => {\n            if (darts) {\n                console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n                return <CricketScore\n                    game={game}\n                    player={player}\n                    index={index}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateTwoPlayerScores={updateTwoPlayerScores}\n                    winner={winner}\n                    key={getKey(player)}\n                />\n            }\n            if (dominos) {\n                console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n                return <Dominos\n                    game={game}\n                    player={player}\n                    index={index}\n                    scoreTotal={score}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    getDominoTotal={getDominoTotal}\n                    updateTwoPlayerScores={updateTwoPlayerScores}\n                    winner={winner}\n                    key={getKey(player)}\n                />\n            }\n            if (golf) {\n                console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n                return <ScoreCard\n                    game={game}\n                    player={golfPars[index]}\n                    index={index}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateTwoPlayerScores={updateTwoPlayerScores}\n                    winner={winner}\n                    key={getKey(player)}\n                />\n            }\n            console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n            return <ScoreCard\n                game={game}\n                player={player}\n                index={index}\n                editPlayer={editPlayer}\n                deletePlayer={deletePlayer}\n                updateTwoPlayerScores={updateTwoPlayerScores}\n                winner={winner}\n                key={getKey(player)}\n            />\n        }\n        const rankStatus = (player, index, score) => {\n            console.log(`ranksStatus => surfersScores player: ${player} index: ${index} score: ${score}`)\n            const winsBy = 'Wins by 7.17';\n            const needs = 'Needs 0.01';\n            if (index === 0) {\n                return winsBy\n            }\n            return needs\n        }\n        const findTwoHighestIndices = (scores) => {\n            let highestIndex = 0;\n            let secondHighestIndex = -1;\n\n            scores.forEach((score, index) => {\n                if (score > scores[highestIndex]) {\n                    secondHighestIndex = highestIndex;\n                    highestIndex = index;\n                } else if (secondHighestIndex === -1 || score > scores[secondHighestIndex]) {\n                    secondHighestIndex = index;\n                }\n            });\n\n            return [highestIndex, secondHighestIndex];\n        };\n        const getWave = (playerId, index, score) => {\n            console.log(`getWave => playerId: ${playerId} index: ${index} score: ${score}`);\n            const highestScores = findTwoHighestIndices(playerScores[playerId].scores);\n            const highestId = highestScores[0];\n            const secondHighestId = highestScores[1];\n            const firstScore = (index === highestId) ? true : false;\n            const secondScore = (index === secondHighestId) ? true : false;\n            const getClasses = (firstScore || secondScore) ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n            const wave = <div className=\"column\">\n                <div className='greet bold color-yellow bg-dkYellow w-100 p-5'>{index + 1}</div>\n                <div className={getClasses}>{score}</div>\n            </div>\n            return wave\n        }\n\n        // Find the indices of the two highest scores for each player\n        const getTwoHighestScores = (playerIndex) => {\n            const player = playerScores[playerIndex];\n            const [highestIndex, secondHighestIndex] = findTwoHighestIndices(playerScores[playerIndex].scores);\n            console.log(`${player.name}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n            return {\n                'highScoreIndex': highestIndex,\n                'secondHighScoreIndex': secondHighestIndex\n            }\n        }\n\n        const floatDecimalOneDigit = (number) => {\n            if (Number.isInteger(number) && number >= 10 && number <= 99) {\n                return number / 10;\n            } else {\n                return null;\n            }\n        };\n        const surfingScores = (player, index, score) => {\n            if (surf) {\n                console.log(`surfingScores => player: ${player} index: ${index} score:${playerScores[index].scores[0]}`);\n                const surferScores = <div>\n                    <div className='flexContainer width-100-percent mt--10 mb--10' key={getKey(player)}>\n                        <div className='ml-10 p-5 w-100 size40 mt-10'>{index + 1}</div>\n                        <div className='flex3ColumnLeft m-1 p-5 size40 mt-10'>{player}</div>\n                        <div className='flex3ColumnRight mr-10 p-5'>\n                            <div className='size25 bold'>{score}</div>\n                            <div>{rankStatus(player, index, score)}</div>\n                        </div>\n                    </div>\n                    <div>\n                        <div>\n                            <div className='h-scroll color-white copyright m-10'>\n                                <div class=\"container mt-10\">\n                                    {playerScores[index].scores.map((score, wave) => getWave(index, wave, floatDecimalOneDigit(score)))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                return surferScores\n            }\n            return\n        }\n        const renderedItems = players.map((player, index) => scorecard(player, index));\n\n        const dartScores = dartScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex3Column p-5'>\n                {scorecard(players[0], index)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(players[1], index)}\n            </div>\n        </div>);\n\n        const golfScores = golfScoring.map((hole, index) => <div className='flexContainer width-100-percent' key={getKey(hole)}>\n            <div className='flex3Column p-5'>\n                {scorecard(golfPars[index], index)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {hole}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(golfPars[index], index)}\n            </div>\n        </div>);\n        \n        //const surfingRankboard = players.map((player, index) => surfingRanks(player, index))};\n        const surfingScoreboard = sortedPlayers.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n       \n        const dominoScores = dominoScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex2Column10Percent p-5'>\n                {scorecard(players[0], index, score)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex2Column10Percent p-5'>\n                {scorecard(players[1], index, score)}\n            </div>\n        </div>);\n\n        const isDominoWinner = (playerIndex) => (getDominoTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n\n        const dartClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        const dominoClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isDominoWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n\n        const dartScoreboard = <React.Fragment>\n            <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                <div className={dartClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getDartTotal(players[0])}</div></div>\n                <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                <div className={dartClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getDartTotal(players[1])}</div></div>\n            </div>\n            {dartScores}\n        </React.Fragment>\n\n        const golfScoreboard = <React.Fragment>\n            <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                <div className={dartClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getGolfTotal(players[0])}</div></div>\n                <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                <div className={dartClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getGolfTotal(players[1])}</div></div>\n            </div>\n            {golfScores}\n        </React.Fragment>\n        \n        players.map((player, index) => scorecard(player, index));\n\n        const dominoScoreboard = <React.Fragment>\n            <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                <div className={dominoClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getDominoTotal(players[0])}</div></div>\n                <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                <div className={dominoClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getDominoTotal(players[1])}</div></div>\n            </div>\n            {dominoScores}\n        </React.Fragment>\n\n        if (darts) return dartScoreboard\n        if (dominos) return dominoScoreboard\n        if (golf) return golfScoreboard\n        //if (surf) return surfScoreboard\n        if (surf) return surfingScoreboard\n        else return renderedItems;\n    }\n    //console.log(`localStorage => game: ${localStorage.getItem('game')}`)\n    //console.log(`localStorage => gameStatus: ${localStorage.getItem('gameStatus')}`)\n    //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n    //console.log(`localStorage => winner: ${localStorage.getItem('winner')}`)\n    //console.log(`localStorage => twoPlayerScores: ${localStorage.getItem('twoPlayerScores')}`)\n    //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n    //console.log(`localStorage => player1: ${localStorage.getItem('players1')}`)\n    //console.log(`localStorage => player2: ${localStorage.getItem('players2')}`)\n    console.log(`time: ${time}`)\n\n    return (\n        <div className='fadeIn mt--30'>\n            <div className='mb-20'>\n                <Selector\n                    groupTitle='game'\n                    label='item.description'\n                    items={games}\n                    selected={game}\n                    onChange={selectGame}\n                    fontSize='25'\n                    padding='10px'\n                    width={(darts || dominos) ? '98%' : '65%'}\n                />\n                {\n                    (darts || golf)\n                        ? <React.Fragment></React.Fragment>\n                        : <Selector\n                            groupTitle='winner'\n                            label='i.description'\n                            items={(dominos) ? dominoWinners : ((surf) ? heatLengths : winners)}\n                            selected={(surf) ? (time / 60) : winner}\n                            onChange={(surf) ? setTimer : selectWinner}\n                            fontSize='25'\n                            padding='10px'\n                            width='30%'\n                        />\n                }\n                {(surf) ?\n                    <SurfScores\n                        editPlayer={editPlayer}\n                        deletePlayer={deletePlayer}\n                        winner={winner}\n                        updateTwoPlayerScores={updateTwoPlayerScores}\n                        game={game}\n                        surfKey={surfKey}\n                        time={time}\n                        setTime={setTime}\n                        heatLength={heatLength}\n                        setSortedPlayers={setSortedPlayers}\n                        isWinner={isWinner}\n                    ></SurfScores>\n                    :\n                    <React.Fragment></React.Fragment>\n                    \n                }\n            </div>\n            {scorecards()}\n            <div className='flexContainer width-100-percent'>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow' onClick={() => addPlayer()}>add player</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black' onClick={() => reset()}>reset</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow' onClick={() => clear()}>clear</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScoreKeeper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}