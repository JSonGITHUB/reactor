{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/TextColorizer.js\";\nimport React from 'react';\n\nclass TextColorizer extends React.Component {\n  constructor(_text) {\n    super();\n    this.colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n    this.colorIndex = 0;\n\n    this.getNextColor = () => {\n      this.colorIndex = this.colorIndex === this.colors.length - 1 ? 0 : this.colorIndex + 1;\n      return this.colors[this.colorIndex];\n    };\n\n    this.total = (text, character) => text + `<span className=\"${this.getNextColor()}\">${character}</span>`;\n\n    this.colorize = (value, index, array) => {\n      //console.log(\"index: \" + index); \n      //console.log(\"array: \" + array); \n      //console.log(\"value: \" + value);\n      const character = value;\n      const colorizedCharacter = `<span className=\"${this.getNextColor()}\">${character}</span>`;\n      return colorizedCharacter;\n    };\n\n    this.text = _text.text; //console.log(`text: ${text.text}`);\n  }\n\n  render() {\n    button = /*#__PURE__*/React.createElement(CharacterElement, {\n      className: this.handleLoginClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bigHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    }, this.text.split('').reduce(this.total));\n  }\n\n}\n\nexport default TextColorizer;\n\nfunction CharacterElement(props) {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Login\");\n}\n\nbutton = /*#__PURE__*/React.createElement(LoginButton, {\n  onClick: this.handleLoginClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }\n});\n\n/*#__PURE__*/\nReact.createElement(\"button\", {\n  onClick: props.onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }\n}, \"Login\");","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/TextColorizer.js"],"names":["React","TextColorizer","Component","constructor","text","colors","colorIndex","getNextColor","length","total","character","colorize","value","index","array","colorizedCharacter","render","button","handleLoginClick","split","reduce","CharacterElement","props","className","onClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd;AADc,SAKlBC,MALkB,GAKT,CAAC,aAAD,EAAgB,cAAhB,EAAgC,WAAhC,CALS;AAAA,SAMlBC,UANkB,GAML,CANK;;AAAA,SAOlBC,YAPkB,GAOH,MAAM;AACjB,WAAKD,UAAL,GAAoB,KAAKA,UAAN,KAAuB,KAAKD,MAAL,CAAYG,MAAZ,GAAmB,CAA3C,GAAiD,CAAjD,GAAsD,KAAKF,UAAL,GAAkB,CAA1F;AACA,aAAO,KAAKD,MAAL,CAAY,KAAKC,UAAjB,CAAP;AACH,KAViB;;AAAA,SAalBG,KAbkB,GAaV,CAACL,IAAD,EAAOM,SAAP,KAAqBN,IAAI,GAAI,oBAAmB,KAAKG,YAAL,EAAoB,KAAIG,SAAU,SAbxE;;AAAA,SAclBC,QAdkB,GAcP,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyB;AAChC;AACA;AACA;AACA,YAAMJ,SAAS,GAAGE,KAAlB;AACA,YAAMG,kBAAkB,GAAI,oBAAmB,KAAKR,YAAL,EAAoB,KAAIG,SAAU,SAAjF;AACA,aAAOK,kBAAP;AACH,KArBiB;;AAEd,SAAKX,IAAL,GAAYA,KAAI,CAACA,IAAjB,CAFc,CAGd;AACH;;AAkBDY,EAAAA,MAAM,GAAG;AACLC,IAAAA,MAAM,gBAAG,oBAAC,gBAAD;AAAkB,MAAA,SAAS,EAAE,KAAKC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAT;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKd,IAAL,CAAUe,KAAV,CAAgB,EAAhB,EAAoBC,MAApB,CAA2B,KAAKX,KAAhC,CAA5B,CAAP;AACH;;AA3BuC;;AA8B5C,eAAeR,aAAf;;AAEA,SAASoB,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,sBACE;AAAM,IAAA,SAAS,EAAEA,KAAK,CAACC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAKD;;AACDN,MAAM,gBAAG,oBAAC,WAAD;AAAa,EAAA,OAAO,EAAE,KAAKC,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAT;;AACA;AAAA;AAAQ,EAAA,OAAO,EAAEI,KAAK,CAACE,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React from 'react';\nclass TextColorizer extends React.Component {\n    text;\n    constructor(text) {\n        super();\n        this.text = text.text;\n        //console.log(`text: ${text.text}`);\n    }\n    colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n    colorIndex = 0;\n    getNextColor = () => { \n        this.colorIndex = ((this.colorIndex) === (this.colors.length-1)) ? 0 : (this.colorIndex + 1);\n        return this.colors[this.colorIndex];\n    };\n//    total = (text, character) => text + `<span className=\"${this.getNextColor}\">${character}</span>`;\n    \n    total = (text, character) => text + `<span className=\"${this.getNextColor()}\">${character}</span>`;\n    colorize = (value, index, array) => {\n        //console.log(\"index: \" + index); \n        //console.log(\"array: \" + array); \n        //console.log(\"value: \" + value);\n        const character = value;\n        const colorizedCharacter = `<span className=\"${this.getNextColor()}\">${character}</span>`;\n        return colorizedCharacter;\n    }\n    render() {\n        button = <CharacterElement className={this.handleLoginClick} />;\n        return <div className=\"bigHeader\">{this.text.split('').reduce(this.total)}</div>;\n    }\n}\n\nexport default TextColorizer;\n\nfunction CharacterElement(props) {\n    return (\n      <span className={props.className}>\n        Login\n      </span>\n    );\n  }\n  button = <LoginButton onClick={this.handleLoginClick} />;\n  <button onClick={props.onClick}>\n        Login\n      </button>"]},"metadata":{},"sourceType":"module"}