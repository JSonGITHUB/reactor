{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/LogData.js\";\nimport React from 'react';\nimport LogDirectory from './LogDirectory.js';\nimport LogId from './LogId.js';\n\nclass LogData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.logDirectory = new LogDirectory();\n    this.logId = new LogId();\n    this.getLogTemplate = {\n      Day: {\n        Date: \"2020-04-07T07:00:00.000Z\",\n        Day: 7,\n        Month: 4,\n        Year: 2020\n      },\n      Location: {\n        Break: \"HB: Sanchos\"\n      },\n      Swell: {\n        Direction: \"W\",\n        Height: \"head high\",\n        Report: \"4ft\"\n      },\n      Tide: {\n        Phase: \"High => Low\",\n        Height: \"2ft\"\n      },\n      Wind: {\n        Direction: \"N\",\n        Orientation: \"Offshore\",\n        MPH: \"5mph\",\n        Surface: \"Glassy\"\n      },\n      Conditions: {\n        Conditions: \"Firing\"\n      },\n      Comments: {\n        notes: \"All time HB, pouring rain, glassy, peaky barrels.\"\n      }\n    };\n\n    this.getDate = () => this.state.log.Day.Date;\n\n    console.log(`LogData !!!!! props.logId: ${props.logId}`);\n    console.log(`LogData !!!!! logDirectory: ${JSON.stringify(this.logDirectory.getDirectory(), null, 2)}`);\n    this.state = {\n      logId: props.logId === null ? this.logId.generateNewLogId() : props.logId,\n      log: JSON.parse(localStorage.getItem(props.logId)) === null ? this.getLogTemplate : JSON.parse(localStorage.getItem(props.logId))\n    };\n  }\n\n  render() {\n    console.log(`LogData => render: this.state.logId: ${this.state.logId} - this.state.log: ${this.state.log}`);\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    }, \"Count: \", this.state.logDirectory.length);\n  }\n\n}\n\nexport default LogData;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/LogData.js"],"names":["React","LogDirectory","LogId","LogData","Component","constructor","props","logDirectory","logId","getLogTemplate","Day","Date","Month","Year","Location","Break","Swell","Direction","Height","Report","Tide","Phase","Wind","Orientation","MPH","Surface","Conditions","Comments","notes","getDate","state","log","console","JSON","stringify","getDirectory","generateNewLogId","parse","localStorage","getItem","render","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AACA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAsClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SApCnBC,YAoCmB,GApCJ,IAAIN,YAAJ,EAoCI;AAAA,SAnCnBO,KAmCmB,GAnCX,IAAIN,KAAJ,EAmCW;AAAA,SAjCnBO,cAiCmB,GAjCF;AACbC,MAAAA,GAAG,EAAE;AACHC,QAAAA,IAAI,EAAE,0BADH;AAEHD,QAAAA,GAAG,EAAE,CAFF;AAGHE,QAAAA,KAAK,EAAE,CAHJ;AAIHC,QAAAA,IAAI,EAAE;AAJH,OADQ;AAObC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE;AADC,OAPG;AAUbC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,GADN;AAELC,QAAAA,MAAM,EAAE,WAFH;AAGLC,QAAAA,MAAM,EAAE;AAHH,OAVM;AAebC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,aADH;AAEJH,QAAAA,MAAM,EAAE;AAFJ,OAfO;AAmBbI,MAAAA,IAAI,EAAE;AACJL,QAAAA,SAAS,EAAE,GADP;AAEJM,QAAAA,WAAW,EAAE,UAFT;AAGJC,QAAAA,GAAG,EAAE,MAHD;AAIJC,QAAAA,OAAO,EAAE;AAJL,OAnBO;AAyBbC,MAAAA,UAAU,EAAE;AACVA,QAAAA,UAAU,EAAE;AADF,OAzBC;AA4BbC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE;AADC;AA5BG,KAiCE;;AAAA,SASnBC,OATmB,GAST,MAAM,KAAKC,KAAL,CAAWC,GAAX,CAAerB,GAAf,CAAmBC,IAThB;;AAEfqB,IAAAA,OAAO,CAACD,GAAR,CAAa,8BAA6BzB,KAAK,CAACE,KAAM,EAAtD;AACAwB,IAAAA,OAAO,CAACD,GAAR,CAAa,+BAA8BE,IAAI,CAACC,SAAL,CAAe,KAAK3B,YAAL,CAAkB4B,YAAlB,EAAf,EAAgD,IAAhD,EAAsD,CAAtD,CAAyD,EAApG;AACA,SAAKL,KAAL,GAAa;AACTtB,MAAAA,KAAK,EAAGF,KAAK,CAACE,KAAN,KAAgB,IAAjB,GAAyB,KAAKA,KAAL,CAAW4B,gBAAX,EAAzB,GAAyD9B,KAAK,CAACE,KAD7D;AAETuB,MAAAA,GAAG,EAAGE,IAAI,CAACI,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBjC,KAAK,CAACE,KAA3B,CAAX,MAAkD,IAAnD,GAA2D,KAAKC,cAAhE,GAAiFwB,IAAI,CAACI,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBjC,KAAK,CAACE,KAA3B,CAAX;AAF7E,KAAb;AAIH;;AAGDgC,EAAAA,MAAM,GAAG;AACLR,IAAAA,OAAO,CAACD,GAAR,CAAa,wCAAuC,KAAKD,KAAL,CAAWtB,KAAM,sBAAqB,KAAKsB,KAAL,CAAWC,GAAI,EAAzG;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKD,KAAL,CAAWvB,YAAX,CAAwBkC,MAAnC,CAAP;AACH;;AApDiC;;AAuDtC,eAAetC,OAAf","sourcesContent":["import React from 'react';\nimport LogDirectory from './LogDirectory.js';\nimport LogId from './LogId.js';\nclass LogData extends React.Component {\n    \n    logDirectory = new LogDirectory();\n    logId = new LogId();\n    \n    getLogTemplate = {\n        Day: {\n          Date: \"2020-04-07T07:00:00.000Z\",\n          Day: 7,\n          Month: 4,\n          Year: 2020\n        },\n        Location: {\n          Break: \"HB: Sanchos\"\n        },\n        Swell: {\n          Direction: \"W\",\n          Height: \"head high\",\n          Report: \"4ft\"\n        },\n        Tide: {\n          Phase: \"High => Low\",\n          Height: \"2ft\"\n        },\n        Wind: {\n          Direction: \"N\",\n          Orientation: \"Offshore\",\n          MPH: \"5mph\",\n          Surface: \"Glassy\"\n        },\n        Conditions: {\n          Conditions: \"Firing\"\n        },\n        Comments: {\n          notes: \"All time HB, pouring rain, glassy, peaky barrels.\"\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(`LogData !!!!! props.logId: ${props.logId}`)\n        console.log(`LogData !!!!! logDirectory: ${JSON.stringify(this.logDirectory.getDirectory(),null, 2)}`)\n        this.state = {\n            logId: (props.logId === null) ? this.logId.generateNewLogId() : props.logId,\n            log: (JSON.parse(localStorage.getItem(props.logId)) === null) ? this.getLogTemplate : JSON.parse(localStorage.getItem(props.logId))\n        }\n    }\n    getDate = () => this.state.log.Day.Date;\n    \n    render() {      \n        console.log(`LogData => render: this.state.logId: ${this.state.logId} - this.state.log: ${this.state.log}`);\n        return <p>Count: {this.state.logDirectory.length}</p> \n    }\n    \n}\nexport default LogData;"]},"metadata":{},"sourceType":"module"}