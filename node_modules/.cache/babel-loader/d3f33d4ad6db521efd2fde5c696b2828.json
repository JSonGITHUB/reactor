{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/SurfLocation.js\";\nimport React from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport Tide from './Tide.js';\nimport WaterTemp from './WaterTemp.js';\nimport AirTemp from './AirTemp.js';\nimport WindDirection from './WindDirection.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport Dialog from '../functional/Dialog.js';\nimport swell1 from '../../assets/images/wavePrimary.png';\nimport swell2 from '../../assets/images/waveSecondaryB.png';\nimport N from '../../assets/images/windN.png';\nimport NE from '../../assets/images/windNE.png';\nimport E from '../../assets/images/windE.png';\nimport SE from '../../assets/images/windSE.png';\nimport S from '../../assets/images/windS.png';\nimport SW from '../../assets/images/windSW.png';\nimport W from '../../assets/images/windW.png';\nimport NW from '../../assets/images/windNW.png';\nimport tide from '../../assets/images/tide.png';\nimport PostDirectory from './PostDirectory.js';\n\nclass SurfLocation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.posts = new PostDirectory();\n\n    this.getStarKind = kind => {\n      let classes = \"shaka r-20 p-2\";\n      classes = kind === \"wind\" ? classes + \" bg-white\" : classes;\n      return classes;\n    };\n\n    this.getTideIcon = /*#__PURE__*/React.createElement(\"img\", {\n      src: tide,\n      className: `mb--5 ${this.getStarKind(\"tide\")}`,\n      alt: \"tide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    });\n\n    this.getSwellIcon = id => {\n      if (id === 1) {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: swell1,\n          className: `mb--5 ${this.getStarKind(\"tide\")}`,\n          alt: \"swell1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 20\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: swell2,\n          className: `mb--5 ${this.getStarKind(\"tide\")}`,\n          alt: \"swell2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.getWindIcon = () => {\n      const windDirection = this.state.windDirection;\n\n      if (windDirection === \"N\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: N,\n          className: `mb--5 ${this.getStarKind(\"tide\")}`,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"NE\" || windDirection === \"NNE\" || windDirection === \"ENE\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: NE,\n          className: `mb--5 ${this.getStarKind(\"tide\")}`,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"E\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: E,\n          className: `mb--5 ${this.getStarKind(\"tide\")}`,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"SE\" || windDirection === \"SSE\" || windDirection === \"ESE\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: SE,\n          className: `mb--5 ${this.getStarKind(\"tide\")}`,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"S\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: S,\n          className: `mb--5 ${this.getStarKind(\"tide\")}`,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"SW\" || windDirection === \"SSW\" || windDirection === \"WSW\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: SW,\n          className: `mb--5 ${this.getStarKind(\"tide\")}`,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"W\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: W,\n          className: `mb--5 ${this.getStarKind(\"tide\")}`,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"NW\" || windDirection === \"NNW\" || windDirection === \"WNW\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: NW,\n          className: `mb--5 ${this.getStarKind(\"tide\")}`,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.getMatchIcon = kind => {\n      let icon = kind === \"swell1\" ? \"swell1\" : \"swell2\";\n      icon = kind === \"wind\" ? \"wind\" : icon;\n      icon = kind === \"tide\" ? \"tide\" : icon;\n\n      if (kind === \"swell1\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: swell1,\n          className: this.getStarKind(kind),\n          alt: kind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 20\n          }\n        });\n      } else if (kind === \"swell2\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: swell2,\n          className: this.getStarKind(kind),\n          alt: kind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 20\n          }\n        });\n      } else if (kind === \"tide\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: tide,\n          className: this.getStarKind(kind),\n          alt: kind,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 20\n          }\n        });\n      } else if (kind === \"wind\") {\n        const windDirection = this.state.windDirection;\n\n        if (windDirection === \"N\") {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: N,\n            className: this.getStarKind(kind),\n            alt: kind,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 24\n            }\n          });\n        } else if (windDirection === \"NE\" || windDirection === \"NNE\" || windDirection === \"ENE\") {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: NE,\n            className: this.getStarKind(kind),\n            alt: kind,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 24\n            }\n          });\n        } else if (windDirection === \"E\") {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: E,\n            className: this.getStarKind(kind),\n            alt: kind,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 24\n            }\n          });\n        } else if (windDirection === \"SE\" || windDirection === \"SSE\" || windDirection === \"ESE\") {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: SE,\n            className: this.getStarKind(kind),\n            alt: kind,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 24\n            }\n          });\n        } else if (windDirection === \"S\") {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: S,\n            className: this.getStarKind(kind),\n            alt: kind,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 24\n            }\n          });\n        } else if (windDirection === \"SW\" || windDirection === \"SSW\" || windDirection === \"WSW\") {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: SW,\n            className: this.getStarKind(kind),\n            alt: kind,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 24\n            }\n          });\n        } else if (windDirection === \"W\") {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: W,\n            className: this.getStarKind(kind),\n            alt: kind,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 24\n            }\n          });\n        } else if (windDirection === \"NW\" || windDirection === \"NNW\" || windDirection === \"WNW\") {\n          return /*#__PURE__*/React.createElement(\"img\", {\n            src: NW,\n            className: this.getStarKind(kind),\n            alt: kind,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 24\n            }\n          });\n        }\n      }\n    };\n\n    this.secondsToSec = () => \"sec\";\n\n    this.getStarDetails = kind => {\n      let details = \"\";\n      details = kind === \"tide\" ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bold color-neogreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 39\n        }\n      }, this.state.height, \"'\") : details;\n      details = kind === \"wind\" ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bold color-neogreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 39\n        }\n      }, this.state.windSpeed, \"-\", this.state.windGusts, \"kts\") : details;\n      details = kind === \"swell1\" ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bold color-neogreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 46\n        }\n      }, `${this.state.swell1Height}${this.state.swell1Height.includes(\"ft\") ? \"\" : \"'\"}`), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bold color-neogreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 173\n        }\n      }, this.state.swell1Angle, \"\\xB0\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bold color-neogreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 241\n        }\n      }, this.state.swell1Interval.replace(\" seconds\", this.secondsToSec()))) : details;\n      details = kind === \"swell2\" ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bold color-neogreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 46\n        }\n      }, `${this.state.swell2Height}${this.state.swell2Height.includes(\"ft\") ? \"\" : \"'\"}`), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bold color-neogreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 173\n        }\n      }, this.state.swell2Angle, \"\\xB0\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bold color-neogreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 241\n        }\n      }, this.state.swell2Interval.replace(\" seconds\", this.secondsToSec()))) : details;\n      return details;\n    };\n\n    this.getState = kind => {\n      if (kind === \"swell1\") {\n        return this.state.swell1Direction;\n      } else if (kind === \"swell2\") {\n        return this.state.swell2Direction;\n      } else if (kind === \"tide\") {\n        return this.state.tide;\n      } else if (kind === \"wind\") {\n        return this.state.windDirection;\n      }\n    };\n\n    this.star = matchKind => /*#__PURE__*/React.createElement(\"div\", {\n      key: getKey(\"star\"),\n      className: \"flex3Column bg-lite mr-5 ml-5 p-10 r-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 27\n      }\n    }, this.getMatchIcon(matchKind), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"greet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, this.getState(matchKind), this.getStarDetails(matchKind)));\n\n    this.getStars = stars => stars.map(star => this.star(star));\n\n    this.generateNewLogId = () => {\n      const date = new Date();\n      const st = date.toDateString().replace(/ /g, \"\");\n      const nd = date.toLocaleTimeString().replace(/ /g, \"\");\n      localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n      const newId = `${st}${nd}`;\n      console.log(`LogId: generateNewLogId => this.state.logId: ${newId}`);\n      return newId;\n    };\n\n    this.createLog = item => {\n      const recordId = this.generateNewLogId();\n      let getCurrentTime = new Date();\n      const year = getCurrentTime.getFullYear();\n      const currentMonth = getCurrentTime.getMonth() + 1;\n      const month = currentMonth < 10 ? `0${currentMonth}` : currentMonth;\n      const currentDate = getCurrentTime.getDate();\n      const date = currentDate < 10 ? `0${currentDate}` : currentDate;\n      const currentHour = getCurrentTime.getHours();\n      const hours = currentHour < 10 ? `0${currentHour}` : currentHour;\n      const startHour = currentHour - 1 < 10 ? `0${currentHour - 1}` : currentHour - 1;\n      const currentMinutes = getCurrentTime.getMinutes();\n      const minutes = currentMinutes < 10 ? `0${currentMinutes}` : currentMinutes;\n      const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n      const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n      getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n\n      const getWaveHeight = height => {\n        const heights = [\"knee high\", \"waist high\", \"shoulder high\", \"head high\", \"over head\", \"foot over head\", \"couple of feet over head\", \"couple of feet over head\", \"couple of feet over head\", \"couple of feet over head\", \"couple of feet overhead\", \"double over head\", \"double over head\", \"double over head\", \"triple over head\", \"triple over head\", \"triple over head\", \"triple over head\"];\n        height = height.replace(\"ft\", \"\");\n        height = Number(height) - 1;\n        height = height < 0 ? heights[0] : heights[height];\n        return height;\n      };\n\n      const getWindMPH = () => {\n        let mph = Number(this.state.windGusts) + 1;\n        mph = mph + \"mph\";\n        return mph;\n      };\n\n      const getSurface = () => {\n        const surfaces = [\"oily glass\", \"glassy\", \"textured\", \"choppy\", \"victory at sea\"];\n        let surface = Math.floor((Number(this.state.windGusts) + 1) / 3);\n        surface = surfaces > 3 ? surfaces[4] : surfaces[surface];\n        return surface;\n      };\n\n      const getWindOrientation = () => {\n        const directions = {\n          \"N\": \"sideshore => lefts\",\n          \"NE\": \"sideshore => lefts\",\n          \"ENE\": \"offshore\",\n          \"NNE\": \"offshore\",\n          \"NW\": \"onshore\",\n          \"NNW\": \"sideshore => lefts\",\n          \"W\": \"onshore\",\n          \"WNW\": \"onshore\",\n          \"E\": \"offshore\",\n          \"ESE\": \"sideshore => rights\",\n          \"S\": \"sideshore => rights\",\n          \"SE\": \"sideshore => rights\",\n          \"SSE\": \"sideshore => rights\",\n          \"WSW\": \"onshore\",\n          \"SW\": \"sideshore => rights\",\n          \"SSW\": \"sideshore => rights\"\n        };\n        return directions[this.state.windDirection];\n      };\n\n      const getNotes = () => {\n        let notes = `${this.state.swell1Height}(${getWaveHeight(this.state.swell1Height)})`;\n        notes = `${notes} out of the ${this.state.swell1Direction}`;\n        notes = `${notes}(${this.state.swell1Angle})`;\n        notes = `${notes} at ${this.state.swell1Interval}.`;\n        notes = `${notes} It was a ${this.state.tide} tide`;\n        notes = `${notes}(${Number(this.state.height).toFixed(0)}ft).`;\n        notes = `${notes} the wind was ${getWindOrientation()} out of the ${this.state.windDirection} at ${getWindMPH()}.`;\n        notes = `${notes} The conditions were ${getSurface()}.`;\n        return notes;\n      };\n\n      const logObj = {\n        Day: {\n          Date: `${year}-${month}-${date}T${hours}:${minutes}:00.000Z`,\n          Day: date,\n          Month: month,\n          Year: year\n        },\n        Location: {\n          Break: item.name\n        },\n        Surf: {\n          Height: getWaveHeight(this.state.swell1Height),\n          Report: this.state.swell1Height,\n          Shape: \"close-outs\"\n        },\n        Swell1: {\n          Height: this.state.swell1Height,\n          Direction: this.state.swell1Direction,\n          Angle: this.state.swell1Angle,\n          Interval: this.state.swell1Interval\n        },\n        Swell2: {\n          Height: this.state.swell2Height,\n          Direction: this.state.swell2Direction,\n          Angle: this.state.swell2Angle,\n          Interval: this.state.swell2Interval\n        },\n        Swell3: {\n          Height: \"1ft\",\n          Direction: \"NW\",\n          Angle: \"180\",\n          Interval: \"6 seconds\"\n        },\n        Tide: {\n          Phase: this.state.tide,\n          Height: Number(this.state.height).toFixed(0) + \"ft\"\n        },\n        Wind: {\n          Direction: this.state.windDirection,\n          Orientation: getWindOrientation(),\n          MPH: getWindMPH(),\n          Surface: getSurface()\n        },\n        Conditions: {\n          Conditions: \"Good\"\n        },\n        Comments: {\n          \"notes\": getNotes()\n        }\n      }; //return logObj;\n\n      let postDirectory = this.posts.getDirectory();\n      let post = \"\";\n\n      const logIt = () => {\n        postDirectory.push(recordId);\n        postDirectory = JSON.stringify(postDirectory);\n        console.log(`postDirectory: ${postDirectory}`);\n        post = JSON.stringify(logObj, null, 2);\n        console.log(`post: ${post}`);\n        localStorage.setItem(recordId, post); //localStorage.setItem(\"postDirectory\", postDirectory);\n\n        this.posts.add(recordId);\n      };\n\n      logIt();\n      this.setState({\n        logged: true\n      });\n    };\n\n    this.logLocation = item => this.state.logged === true ? alert(\"log already exists\") : this.createLog(item);\n\n    const {\n      windDirection: _windDirection,\n      windSpeed,\n      windGusts,\n      swell1Direction,\n      swell2Direction,\n      swell1Angle,\n      swell2Angle,\n      swell1Height,\n      swell2Height,\n      swell1Interval,\n      swell2Interval,\n      tide: _tide,\n      height: _height,\n      stars: _stars\n    } = props.state;\n    this.state = {\n      logged: false,\n      windDirection: _windDirection,\n      windSpeed: windSpeed,\n      windGusts: windGusts,\n      swell1Direction: swell1Direction,\n      swell2Direction: swell2Direction,\n      swell1Angle: swell1Angle,\n      swell2Angle: swell2Angle,\n      swell1Height: swell1Height,\n      swell2Height: swell2Height,\n      swell1Interval: swell1Interval,\n      swell2Interval: swell2Interval,\n      tide: _tide,\n      height: _height,\n      stars: _stars\n    };\n    this.createLog = this.createLog.bind(this);\n  }\n\n  render() {\n    const item = this.props.item;\n    const {\n      windDirection,\n      windSpeed,\n      windGusts,\n      swell1Direction,\n      swell2Direction,\n      swell1Angle,\n      swell2Angle,\n      swell1Height,\n      swell2Height,\n      swell1Interval,\n      swell2Interval,\n      tide,\n      height,\n      stars\n    } = this.state;\n\n    const statusClass = status => status === true ? \"color-neogreen\" : \"color-yellow\";\n\n    const subStatusClass = status => status === true ? \"color-orange\" : \"color-yellow\";\n\n    const swell1Match = item => item.swell.indexOf(swell1Direction) > -1 ? true : false;\n\n    const swell2Match = item => item.swell.indexOf(swell2Direction) > -1 ? true : false;\n\n    const windMatch = item => item.wind.indexOf(windDirection) > -1 ? true : false;\n\n    const tideMatch = item => item.tide.indexOf(tide) > -1 ? true : false;\n\n    const swell2DirectionMatch = direction => direction === swell2Direction ? true : false;\n\n    const windDirectionMatch = direction => direction.wind === windDirection ? true : false;\n\n    const tideDirectionMatch = direction => direction.tide === tide ? true : false;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: getKey(\"loc\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"r-10 m-10 p-20 bg-dkGreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width100Percent flexContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    }, this.getStars(this.props.matches)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-10 navBranding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 25\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"greet color-yellow p-5 bg-dkGreen mt-15 mb-10 r-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 25\n      }\n    }, `${this.props.regionMatch} miles`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexContainer m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columnRight pr-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-neogreen bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }, \"Swell: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-neogreen bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 33\n      }\n    }, \"Wind: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-neogreen bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 33\n      }\n    }, \"Tide: \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columnLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 33\n      }\n    }, item.swell.map((swell, i) => /*#__PURE__*/React.createElement(\"span\", {\n      key: getKey(\"swell\"),\n      className: swell === this.state.swell1Direction ? statusClass(swell1Match(item)) : subStatusClass(swell2DirectionMatch(swell)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 68\n      }\n    }, swell, i + 1 === item.swell.length ? \"\" : \", \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: statusClass(windMatch(item)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 33\n      }\n    }, item.wind.map((wind, i) => /*#__PURE__*/React.createElement(\"span\", {\n      key: getKey(\"wind\"),\n      className: statusClass(windDirectionMatch({\n        wind\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 65\n      }\n    }, wind, i + 1 === item.wind.length ? \"\" : \", \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: statusClass(tideMatch(item)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 33\n      }\n    }, item.tide.map((tide, i) => /*#__PURE__*/React.createElement(\"span\", {\n      key: getKey(\"tide\"),\n      className: statusClass(tideDirectionMatch({\n        tide\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 106\n      }\n    }, tide, i + 1 === item.tide.length ? \"\" : \", \")))))), this.state.logged === true ? /*#__PURE__*/React.createElement(Link, {\n      className: \"noUnderline\",\n      key: getKey(\"link\"),\n      to: {\n        pathname: '/SurfLog',\n        state: {\n          logId: {\n            item\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App button bg-yellow color-black p-10 r-10 mt-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 29\n      }\n    }, \"Edit Log\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App button bg-yellow color-black p-10 r-10 mt-20\",\n      onClick: this.logLocation(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 25\n      }\n    }, \"Log Session\")));\n  }\n\n}\n\nexport default SurfLocation;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/SurfLocation.js"],"names":["React","getKey","Tide","WaterTemp","AirTemp","WindDirection","Selector","Dialog","swell1","swell2","N","NE","E","SE","S","SW","W","NW","tide","PostDirectory","SurfLocation","Component","constructor","props","posts","getStarKind","kind","classes","getTideIcon","getSwellIcon","id","getWindIcon","windDirection","state","getMatchIcon","icon","secondsToSec","getStarDetails","details","height","windSpeed","windGusts","swell1Height","includes","swell1Angle","swell1Interval","replace","swell2Height","swell2Angle","swell2Interval","getState","swell1Direction","swell2Direction","star","matchKind","getStars","stars","map","generateNewLogId","date","Date","st","toDateString","nd","toLocaleTimeString","localStorage","setItem","newId","console","log","createLog","item","recordId","getCurrentTime","year","getFullYear","currentMonth","getMonth","month","currentDate","getDate","currentHour","getHours","hours","startHour","currentMinutes","getMinutes","minutes","getEndTime","getStartTime","getWaveHeight","heights","Number","getWindMPH","mph","getSurface","surfaces","surface","Math","floor","getWindOrientation","directions","getNotes","notes","toFixed","logObj","Day","Month","Year","Location","Break","name","Surf","Height","Report","Shape","Swell1","Direction","Angle","Interval","Swell2","Swell3","Phase","Wind","Orientation","MPH","Surface","Conditions","Comments","postDirectory","getDirectory","post","logIt","push","JSON","stringify","add","setState","logged","logLocation","alert","bind","render","statusClass","status","subStatusClass","swell1Match","swell","indexOf","swell2Match","windMatch","wind","tideMatch","swell2DirectionMatch","direction","windDirectionMatch","tideDirectionMatch","matches","regionMatch","i","length","pathname","logId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport Tide from './Tide.js';\nimport WaterTemp from './WaterTemp.js';\nimport AirTemp from './AirTemp.js';\nimport WindDirection from './WindDirection.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport Dialog from '../functional/Dialog.js';\nimport swell1 from '../../assets/images/wavePrimary.png'\nimport swell2 from '../../assets/images/waveSecondaryB.png'\nimport N from '../../assets/images/windN.png'\nimport NE from '../../assets/images/windNE.png'\nimport E from '../../assets/images/windE.png'\nimport SE from '../../assets/images/windSE.png'\nimport S from '../../assets/images/windS.png'\nimport SW from '../../assets/images/windSW.png'\nimport W from '../../assets/images/windW.png'\nimport NW from '../../assets/images/windNW.png'\nimport tide from '../../assets/images/tide.png'\nimport PostDirectory from './PostDirectory.js';\n\nclass SurfLocation extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        const {windDirection, windSpeed, windGusts, swell1Direction, swell2Direction, swell1Angle, swell2Angle, swell1Height, swell2Height, swell1Interval, swell2Interval, tide, height, stars} = props.state;\n        this.state = {\n            logged: false,\n            windDirection: windDirection,\n            windSpeed: windSpeed, \n            windGusts: windGusts,\n            swell1Direction: swell1Direction, \n            swell2Direction: swell2Direction,\n            swell1Angle: swell1Angle,\n            swell2Angle: swell2Angle,\n            swell1Height: swell1Height,\n            swell2Height: swell2Height,\n            swell1Interval: swell1Interval,\n            swell2Interval: swell2Interval,\n            tide: tide, \n            height: height,\n            stars: stars\n        };\n        this.createLog = this.createLog.bind(this);\n    }\n\n    posts = new PostDirectory();\n    getStarKind = (kind) => {\n        let classes = \"shaka r-20 p-2\";\n        classes = (kind === \"wind\") ? (classes + \" bg-white\") : classes; \n        return classes;\n    }\n    getTideIcon = <img src={tide} className={`mb--5 ${this.getStarKind(\"tide\")}`} alt=\"tide\" />;\n    getSwellIcon = (id) => {\n        if (id === 1) {\n            return <img src={swell1} className={`mb--5 ${this.getStarKind(\"tide\")}`} alt=\"swell1\" />\n        } else {\n            return <img src={swell2} className={`mb--5 ${this.getStarKind(\"tide\")}`} alt=\"swell2\" />;\n        }\n    }\n    getWindIcon = () => {\n        const windDirection = this.state.windDirection;\n        if (windDirection === \"N\") {\n            return <img src={N} className={`mb--5 ${this.getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if ((windDirection === \"NE\") || (windDirection === \"NNE\") || (windDirection === \"ENE\")) {\n            return <img src={NE} className={`mb--5 ${this.getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if (windDirection === \"E\") {\n            return <img src={E} className={`mb--5 ${this.getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if ((windDirection === \"SE\") || (windDirection === \"SSE\") || (windDirection === \"ESE\")) {\n            return <img src={SE} className={`mb--5 ${this.getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if (windDirection === \"S\") {\n            return <img src={S} className={`mb--5 ${this.getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if ((windDirection === \"SW\") || (windDirection === \"SSW\") || (windDirection === \"WSW\")) {\n            return <img src={SW} className={`mb--5 ${this.getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if (windDirection === \"W\") {\n            return <img src={W} className={`mb--5 ${this.getStarKind(\"tide\")}`} alt={windDirection} />;\n        } else if ((windDirection === \"NW\") || (windDirection === \"NNW\") || (windDirection === \"WNW\")) {\n            return <img src={NW} className={`mb--5 ${this.getStarKind(\"tide\")}`} alt={windDirection} />;\n        }\n    }\n    getMatchIcon = (kind) => {\n        let icon = (kind === \"swell1\") ? \"swell1\" : \"swell2\";\n        icon = (kind === \"wind\") ? \"wind\" : icon;\n        icon = (kind === \"tide\") ? \"tide\" : icon;\n        if (kind === \"swell1\") {\n            return <img src={swell1} className={this.getStarKind(kind)} alt={kind} />\n        } else if (kind === \"swell2\") {\n            return <img src={swell2} className={this.getStarKind(kind)} alt={kind} />;\n        } else if (kind === \"tide\") {\n            return <img src={tide} className={this.getStarKind(kind)} alt={kind} />;\n        } else if (kind === \"wind\") {\n            const windDirection = this.state.windDirection;\n            if (windDirection === \"N\") {\n                return <img src={N} className={this.getStarKind(kind)} alt={kind} />;\n            } else if ((windDirection === \"NE\") || (windDirection === \"NNE\") || (windDirection === \"ENE\")) {\n                return <img src={NE} className={this.getStarKind(kind)} alt={kind} />;\n            } else if (windDirection === \"E\") {\n                return <img src={E} className={this.getStarKind(kind)} alt={kind} />;\n            } else if ((windDirection === \"SE\") || (windDirection === \"SSE\") || (windDirection === \"ESE\")) {\n                return <img src={SE} className={this.getStarKind(kind)} alt={kind} />;\n            } else if (windDirection === \"S\") {\n                return <img src={S} className={this.getStarKind(kind)} alt={kind} />;\n            } else if ((windDirection === \"SW\") || (windDirection === \"SSW\") || (windDirection === \"WSW\")) {\n                return <img src={SW} className={this.getStarKind(kind)} alt={kind} />;\n            } else if (windDirection === \"W\") {\n                return <img src={W} className={this.getStarKind(kind)} alt={kind} />;\n            } else if ((windDirection === \"NW\") || (windDirection === \"NNW\") || (windDirection === \"WNW\")) {\n                return <img src={NW} className={this.getStarKind(kind)} alt={kind} />;\n            }\n        }\n    }\n    secondsToSec = () => \"sec\"\n    getStarDetails = (kind) => {\n        let details = \"\";\n        details = (kind === \"tide\") ? <div className=\"bold color-neogreen\">{this.state.height}'</div> : details;\n        details = (kind === \"wind\") ? <div className=\"bold color-neogreen\">{this.state.windSpeed}-{this.state.windGusts}kts</div> : details;\n        details = (kind === \"swell1\") ? <div><div className=\"bold color-neogreen\">{`${this.state.swell1Height}${(this.state.swell1Height.includes(\"ft\")) ? \"\" : \"'\"}`}</div><div className=\"bold color-neogreen\">{this.state.swell1Angle}°</div><div className=\"bold color-neogreen\">{this.state.swell1Interval.replace(\" seconds\",this.secondsToSec())}</div></div> : details;\n        details = (kind === \"swell2\") ? <div><div className=\"bold color-neogreen\">{`${this.state.swell2Height}${(this.state.swell2Height.includes(\"ft\")) ? \"\" : \"'\"}`}</div><div className=\"bold color-neogreen\">{this.state.swell2Angle}°</div><div className=\"bold color-neogreen\">{this.state.swell2Interval.replace(\" seconds\",this.secondsToSec())}</div></div> : details;\n        return details\n    }\n    getState = (kind) => {\n        if (kind === \"swell1\") {\n            return this.state.swell1Direction;\n        } else if (kind === \"swell2\") {\n            return this.state.swell2Direction;\n        } else if (kind === \"tide\") {\n            return this.state.tide;\n        } else if (kind === \"wind\") {\n            return this.state.windDirection;\n        }\n    }\n    star = (matchKind) => <div key={getKey(\"star\")} className=\"flex3Column bg-lite mr-5 ml-5 p-10 r-10\">\n                            {this.getMatchIcon(matchKind)}\n                            <div className=\"greet\">{this.getState(matchKind)}{this.getStarDetails(matchKind)}</div>\n                        </div>;\n    getStars = (stars) => stars.map((star) => this.star(star));\n    generateNewLogId = () => {\n        const date = new Date()\n        const st = date.toDateString().replace(/ /g,\"\");\n        const nd = date.toLocaleTimeString().replace(/ /g,\"\");\n        localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n        const newId = `${st}${nd}`;\n        console.log(`LogId: generateNewLogId => this.state.logId: ${newId}`);\n        return newId;\n    }\n    createLog = (item) => {\n        const recordId = this.generateNewLogId();\n        let getCurrentTime = new Date();\n        const year = getCurrentTime.getFullYear();\n        const currentMonth = getCurrentTime.getMonth()+1;\n        const month = ((currentMonth)<10) ? `0${(currentMonth)}` : currentMonth;\n        const currentDate = getCurrentTime.getDate();\n        const date = (currentDate<10) ? `0${currentDate}` : currentDate;\n        const currentHour = getCurrentTime.getHours();\n        const hours = (currentHour<10) ? `0${currentHour}` : currentHour;\n        const startHour = ((currentHour-1)<10) ? `0${(currentHour-1)}` : (currentHour-1);\n        const currentMinutes = getCurrentTime.getMinutes();\n        const minutes = (currentMinutes<10) ? `0${currentMinutes}` : currentMinutes;\n        const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n        getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        const getWaveHeight = (height) => {\n            const heights = [\"knee high\", \"waist high\", \"shoulder high\", \"head high\", \"over head\", \"foot over head\", \"couple of feet over head\", \"couple of feet over head\",\"couple of feet over head\",\"couple of feet over head\",\"couple of feet overhead\",\"double over head\",\"double over head\",\"double over head\",\"triple over head\",\"triple over head\",\"triple over head\",\"triple over head\"]\n            height = height.replace(\"ft\",\"\");     \n            height = Number(height) - 1;\n            height = (height<0) ? heights[0] : heights[height];\n            return height;     \n        }\n        const getWindMPH = () => {\n            let mph = Number(this.state.windGusts)+1;\n            mph = mph + \"mph\";\n            return mph\n        }\n        const getSurface = () => {\n            const surfaces = [\"oily glass\", \"glassy\", \"textured\", \"choppy\", \"victory at sea\"];\n            let surface = Math.floor((Number(this.state.windGusts)+1)/3);\n            surface = (surfaces > 3) ? surfaces[4] : surfaces[surface];\n            return surface;\n        }\n        const getWindOrientation = () => {\n            const directions = {\n                \"N\": \"sideshore => lefts\",\n                \"NE\": \"sideshore => lefts\",\n                \"ENE\": \"offshore\",\n                \"NNE\": \"offshore\",\n                \"NW\": \"onshore\",\n                \"NNW\": \"sideshore => lefts\",\n                \"W\": \"onshore\",\n                \"WNW\": \"onshore\",\n                \"E\": \"offshore\",\n                \"ESE\": \"sideshore => rights\",\n                \"S\": \"sideshore => rights\",\n                \"SE\": \"sideshore => rights\",\n                \"SSE\": \"sideshore => rights\",\n                \"WSW\": \"onshore\",\n                \"SW\": \"sideshore => rights\",\n                \"SSW\": \"sideshore => rights\"\n            }\n            return directions[this.state.windDirection]\n        }\n        const getNotes = () => {\n            let notes = `${this.state.swell1Height}(${getWaveHeight(this.state.swell1Height)})`;\n            notes = `${notes} out of the ${this.state.swell1Direction}`;\n            notes = `${notes}(${this.state.swell1Angle})`;\n            notes = `${notes} at ${this.state.swell1Interval}.`;\n            notes = `${notes} It was a ${this.state.tide} tide`;\n            notes = `${notes}(${Number(this.state.height).toFixed(0)}ft).`;\n            notes = `${notes} the wind was ${getWindOrientation()} out of the ${this.state.windDirection} at ${getWindMPH()}.`;\n            notes = `${notes} The conditions were ${getSurface()}.`;\n            return notes;\n        }\n        const logObj = {\n            Day: {\n                Date: `${year}-${month}-${date}T${hours}:${minutes}:00.000Z`,\n                Day: date,\n                Month: month,\n                Year: year\n            },\n            Location: {\n                Break: item.name\n            },\n            Surf: {\n                Height: getWaveHeight(this.state.swell1Height),\n                Report: this.state.swell1Height,\n                Shape: \"close-outs\"\n            },\n            Swell1: {\n                Height: this.state.swell1Height,\n                Direction: this.state.swell1Direction,\n                Angle: this.state.swell1Angle,\n                Interval: this.state.swell1Interval,\n            },\n            Swell2: {\n                Height: this.state.swell2Height,\n                Direction: this.state.swell2Direction,\n                Angle: this.state.swell2Angle,\n                Interval: this.state.swell2Interval,\n            },\n            Swell3: {\n                Height: \"1ft\",\n                Direction: \"NW\",\n                Angle: \"180\",\n                Interval: \"6 seconds\",\n            },\n            Tide: {\n                Phase: this.state.tide,\n                Height: Number(this.state.height).toFixed(0)+\"ft\"\n            },\n            Wind: {\n                Direction: this.state.windDirection,\n                Orientation: getWindOrientation(),\n                MPH: getWindMPH(),\n                Surface: getSurface()\n            },\n            Conditions: {\n                Conditions: \"Good\"\n            },\n            Comments: {\n                \"notes\": getNotes()\n            }\n        }\n        //return logObj;\n        let postDirectory = this.posts.getDirectory();\n        let post = \"\";\n        const logIt = () => {\n            postDirectory.push(recordId);\n            postDirectory = JSON.stringify(postDirectory);\n            console.log(`postDirectory: ${postDirectory}`)\n            post = JSON.stringify(logObj, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n            //localStorage.setItem(\"postDirectory\", postDirectory);\n            this.posts.add(recordId);\n        }\n        logIt();\n        this.setState({\n            logged: true\n        })\n    };\n    logLocation = (item) => (this.state.logged === true) ? alert(\"log already exists\") : this.createLog(item);\n    render() {\n        const item = this.props.item;\n        const {windDirection, windSpeed, windGusts, swell1Direction, swell2Direction, swell1Angle, swell2Angle, swell1Height, swell2Height, swell1Interval, swell2Interval, tide, height, stars} = this.state;\n        const statusClass = (status) => (status === true) ? \"color-neogreen\" : \"color-yellow\"; \n        const subStatusClass = (status) => (status === true) ? \"color-orange\" : \"color-yellow\"; \n        const swell1Match = (item) => (item.swell.indexOf(swell1Direction)>-1) ? true : false;\n        const swell2Match = (item) => (item.swell.indexOf(swell2Direction)>-1) ? true : false;\n        const windMatch = (item) => (item.wind.indexOf(windDirection)>-1) ? true : false;\n        const tideMatch = (item) => (item.tide.indexOf(tide)>-1) ? true : false;\n        const swell2DirectionMatch = (direction) => (direction===swell2Direction) ? true : false;\n        const windDirectionMatch = (direction) => (direction.wind === windDirection) ? true : false;\n        const tideDirectionMatch = (direction) => (direction.tide === tide) ? true : false;\n        \n        return (\n            <div key={getKey(\"loc\")}>\n                <div className=\"r-10 m-10 p-20 bg-dkGreen\">\n                        <div className=\"width100Percent flexContainer\">{this.getStars(this.props.matches)}</div>\n                        <div className=\"mt-10 navBranding\">{item.name}</div>\n                        <div className=\"greet color-yellow p-5 bg-dkGreen mt-15 mb-10 r-5\">{`${this.props.regionMatch} miles`}</div>\n                    <div className=\"flexContainer\">\n                        <div className=\"flexContainer m-auto\">\n                            <div className=\"columnRight pr-10\">\n                                <div className=\"color-neogreen bold\">Swell: </div>\n                                <div className=\"color-neogreen bold\">Wind: </div>\n                                <div className=\"color-neogreen bold\">Tide: </div>\n                            </div>\n                            <div className=\"columnLeft\">\n                                <div>{item.swell.map((swell, i) => <span key={getKey(\"swell\")} className={(swell === this.state.swell1Direction) ? statusClass(swell1Match(item)) : subStatusClass(swell2DirectionMatch(swell))}>{swell}{((i+1) === item.swell.length)? \"\" : \", \"}</span>)}</div>\n                                <div className={statusClass(windMatch(item))}>\n                                    {item.wind.map((wind, i) => <span key={getKey(\"wind\")} className={statusClass(windDirectionMatch({wind}))}>\n                                                                {wind}{((i+1) === item.wind.length)? \"\" : \", \"}\n                                                            </span>)}\n                                </div>\n                                <div className={statusClass(tideMatch(item))}>{item.tide.map((tide,i) => <span key={getKey(\"tide\")} className={statusClass(tideDirectionMatch({tide}))}>{tide}{((i+1) === item.tide.length)? \"\" : \", \"}</span>)}</div>\n                            </div>\n                        </div>\n                        \n                    </div>\n                    {(this.state.logged === true) ? \n                        <Link className=\"noUnderline\" key={getKey(\"link\")} to={{\n                            pathname: '/SurfLog',\n                            state: {\n                            logId: {item}\n                            }\n                        }}>\n                            <div className=\"App button bg-yellow color-black p-10 r-10 mt-20\">Edit Log</div>\n                        </Link>\n                    : \n                        <div className=\"App button bg-yellow color-black p-10 r-10 mt-20\" onClick={this.logLocation(item)}>Log Session</div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\nexport default SurfLocation;"]},"metadata":{},"sourceType":"module"}