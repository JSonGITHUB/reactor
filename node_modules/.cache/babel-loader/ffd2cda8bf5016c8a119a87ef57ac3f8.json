{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/LogEntryFunctional.js\";\nimport React, { useState } from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport RadioSelector from '../forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport { BrowserRouter as Link, Route } from 'react-router-dom';\nimport LogId from './LogId.js';\nimport selector from './Selector.js';\nimport group from './Group.js';\nimport templateData from './TemplateData.js';\n\nconst LogEntry = ({\n  logId,\n  onChange,\n  getStateLog,\n  title,\n  message,\n  buttonLabel,\n  items\n}) => {\n  const postDirectory = new PostDirectory();\n\n  const logIdExists = () => logId !== undefined && logId !== \"\" ? false : true;\n\n  const localLastPostIdExists = () => localStorage.getItem(\"lastPostId\") === null ? false : true;\n\n  const getLocalLastPostId = () => localLastPostIdExists() ? localStorage.getItem(\"lastPostId\") : postDirectory.getLastItem();\n\n  const getLastPostId = () => logIdExists() ? logId : getLocalLastPostId();\n\n  const localLogExists = () => localStorage.getItem(logId) === null ? false : true;\n\n  const getLog = () => localLogExists() ? JSON.parse(localStorage.getItem(logId)) : templateData;\n\n  const [status, setStatus] = useState({\n    posts: postDirectory,\n    lastPostId: getLastPostId(),\n    date: new Date(),\n    log: getLog(),\n    change: false,\n    spot: localStorage.getItem('spot'),\n    logIdComponent: new LogId({\n      logId: getLastPostId(),\n      log: getLog()\n    })\n  });\n\n  const handleSelection = (groupTitle, label, selected) => {\n    if (typeof groupTitle === \"string\") {\n      const currentLog = status.log;\n      currentLog[groupTitle][label] = selected;\n      setStatus(prevState => ({ ...prevState,\n        log: currentLog,\n        change: true\n      }));\n      onChange(groupTitle, label, selected, true);\n    }\n  };\n\n  const updateNotes = event => {\n    handleSelection(\"Comments\", \"notes\", event.target.value);\n  };\n\n  const handleSubmit = event => {\n    console.log(`handleSubmit: ${JSON.stringify(status.log, null, 2)}`);\n    const recordId = status.logIdComponent.generateNewLogId();\n    console.log(`handleSubmit: recordId: ${recordId}`);\n    let postDirectory = status.posts.getDirectory();\n    let post = \"\";\n\n    const logIt = () => {\n      postDirectory.push(recordId);\n      postDirectory = JSON.stringify(postDirectory);\n      console.log(`postDirectory: ${postDirectory}`);\n      post = JSON.stringify(status.log, null, 2);\n      console.log(`post: ${post}`);\n      localStorage.setItem(recordId, post); //localStorage.setItem(\"postDirectory\", postDirectory);\n\n      status.posts.add(recordId);\n    };\n\n    logIt();\n  };\n\n  const handleSave = event => {\n    console.log(`handleSave: ${status.log}`);\n    const recordId = status.lastPostId;\n    let post = \"\";\n\n    const logIt = () => {\n      post = JSON.stringify(status.log, null, 2);\n      console.log(`post: ${post}`);\n      localStorage.setItem(recordId, post);\n    };\n\n    logIt();\n  };\n\n  const handleDelete = event => {\n    const recordId = status.lastPostId;\n    console.log(`handleDelete => recordId: ${recordId}`);\n    status.posts.delete(recordId);\n  };\n\n  const onDateChange = date => {\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    handleSelection(\"Day\", \"Date\", date);\n    handleSelection(\"Day\", \"Day\", day);\n    handleSelection(\"Day\", \"Month\", month);\n    handleSelection(\"Day\", \"Year\", year);\n  };\n\n  const getItems = () => items;\n\n  const selected = (item, groupTitle) => item.selections.indexOf(status.log[groupTitle][item.description]) !== -1 ? true : false;\n\n  const defaultSelection = (item, groupTitle) => selected(item, groupTitle) ? item.selections.indexOf(status.log[groupTitle][item.description]) : 0;\n\n  const radioItems = (item, groupTitle) => {\n    return /*#__PURE__*/React.createElement(RadioSelector, {\n      header: groupTitle,\n      groupTitle: groupTitle,\n      selected: defaultSelection(item, groupTitle),\n      label: item.description,\n      items: item.selections,\n      onChange: handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    });\n  };\n\n  const radio = (item, groupTitle) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"r-vw bg-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 41\n    }\n  }, radioItems(item, groupTitle));\n\n  const selectionInterface = (item, groupTitle) => item.type === 'radio' ? radio(item, groupTitle) : selector(item, groupTitle, status.spot, defaultSelection, handleSelection, selected);\n\n  const groups = () => getItems().map(item => {\n    const headerClasses = 'subHeader color-yellow';\n    const selectorClasses = 'greet p-vw bg-vdkGreen flex3Column';\n    const groupClasses = window.innerWidth < 500 ? \"r-vw\" : \"flexContainer width-100-percent r-vw\";\n    const description = item.description; //console.log(`description: ${JSON.stringify(item,null,2)}`)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: getKey(\"groupConainer\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: getKey(\"groupHeader\"),\n      className: headerClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, item.description), /*#__PURE__*/React.createElement(\"div\", {\n      className: groupClasses,\n      key: getKey(\"groupSubConainer\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, group(item).map(group => /*#__PURE__*/React.createElement(\"div\", {\n      key: getKey(\"selectorContainer\"),\n      className: selectorClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, selectionInterface(group, description)))));\n  });\n\n  const categories = () => {\n    status.selectorStatus = [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 16\n      }\n    }, groups());\n  };\n\n  const getLogObject = () => status.log;\n\n  const dateEntry = () => {\n    const logExists = status.log !== undefined && status.log !== null && JSON.stringify(status.log, null, 2) !== \"{}\" ? true : false;\n\n    const stateLogDate = () => getLogObject().Day.Date;\n\n    const getDate = () => logExists === true ? new Date(stateLogDate()) : new Date(status.date);\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5 subHeader color-yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexContainer width-100-percent bg-vdkGreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      onChange: onDateChange,\n      value: getDate(),\n      className: \"p-vw bg-green flex3Column r-vw m-vw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 27\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    title: title,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, dateEntry(), categories(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, \"Additional Comments: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"10\",\n    cols: window.innerWidth / 15,\n    value: status.log.Comments.notes,\n    onChange: updateNotes,\n    className: \"mt-10 greet p-10 r-10 brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 28\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    className: \"noUnderline color-black\",\n    to: \"/LogDirectory\",\n    onClick: () => handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleSubmit,\n    className: \"button m-1 greet p-20 r-10 bg-green brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, buttonLabel)), /*#__PURE__*/React.createElement(Link, {\n    className: \"noUnderline color-black\",\n    to: \"/LogDirectory\",\n    onClick: () => handleSave(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button m-1 greet p-20 r-10 bg-yellow shadow brdr-yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, \"save\")), /*#__PURE__*/React.createElement(Link, {\n    className: \"noUnderline color-black\",\n    to: \"/LogDirectory\",\n    onClick: () => handleDelete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button m-1 greet p-20 r-10 bg-red brdr-red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, \"delete\")), /*#__PURE__*/React.createElement(PostDirectory, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default LogEntry;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LogEntryFunctional.js"],"names":["React","useState","Dialog","RadioSelector","DatePicker","getKey","PostDirectory","BrowserRouter","Link","Route","LogId","selector","group","templateData","LogEntry","logId","onChange","getStateLog","title","message","buttonLabel","items","postDirectory","logIdExists","undefined","localLastPostIdExists","localStorage","getItem","getLocalLastPostId","getLastItem","getLastPostId","localLogExists","getLog","JSON","parse","status","setStatus","posts","lastPostId","date","Date","log","change","spot","logIdComponent","handleSelection","groupTitle","label","selected","currentLog","prevState","updateNotes","event","target","value","handleSubmit","console","stringify","recordId","generateNewLogId","getDirectory","post","logIt","push","setItem","add","handleSave","handleDelete","delete","onDateChange","day","getDate","month","getMonth","year","getFullYear","getItems","item","selections","indexOf","description","defaultSelection","radioItems","radio","selectionInterface","type","groups","map","headerClasses","selectorClasses","groupClasses","window","innerWidth","categories","selectorStatus","getLogObject","dateEntry","logExists","stateLogDate","Day","Comments","notes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport RadioSelector from '../forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport {BrowserRouter as Link, Route} from 'react-router-dom';\nimport LogId from './LogId.js';\nimport selector from './Selector.js';\nimport group from './Group.js';\nimport templateData from './TemplateData.js';\n\nconst LogEntry = ({ logId, onChange, getStateLog, title, message, buttonLabel, items }) => {\n\n    const postDirectory = new PostDirectory();\n    const logIdExists = () => (logId !== undefined && logId !== \"\" ) ? false : true;\n    const localLastPostIdExists = () => (localStorage.getItem(\"lastPostId\") === null) ? false : true;\n    const getLocalLastPostId = () => (localLastPostIdExists()) ? localStorage.getItem(\"lastPostId\") : postDirectory.getLastItem(); \n    const getLastPostId = () => (logIdExists()) ? logId : getLocalLastPostId();\n    const localLogExists = () => (localStorage.getItem(logId) === null) ? false : true;\n    const getLog = () => (localLogExists()) ? JSON.parse(localStorage.getItem(logId)) : templateData;\n\n    const [status, setStatus] = useState({\n        posts: postDirectory,\n        lastPostId: getLastPostId(),\n        date: new Date(),\n        log: getLog(),\n        change: false,\n        spot: localStorage.getItem('spot'),\n        logIdComponent: new LogId({logId: getLastPostId(), log: getLog()})\n    });\n\n    const handleSelection = (groupTitle, label, selected) => {\n        if (typeof groupTitle === \"string\") {\n            const currentLog = status.log;\n            currentLog[groupTitle][label] = selected;\n            setStatus(prevState => ({\n                ...prevState,\n                log: currentLog,\n                change: true\n            }));\n            onChange(groupTitle, label, selected, true);\n        } \n    }\n    const updateNotes = (event) => {\n        handleSelection(\"Comments\", \"notes\", event.target.value);\n    }\n    const handleSubmit = (event) => {\n        console.log(`handleSubmit: ${JSON.stringify(status.log, null, 2)}`)\n        const recordId = status.logIdComponent.generateNewLogId();\n        console.log(`handleSubmit: recordId: ${recordId}`)\n        let postDirectory = status.posts.getDirectory();\n        let post = \"\";\n        const logIt = () => {\n            postDirectory.push(recordId);\n            postDirectory = JSON.stringify(postDirectory);\n            console.log(`postDirectory: ${postDirectory}`)\n            post = JSON.stringify(status.log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n            //localStorage.setItem(\"postDirectory\", postDirectory);\n            status.posts.add(recordId);\n        }\n        logIt();\n    }\n    const handleSave = (event) => {\n        console.log(`handleSave: ${status.log}`)\n        const recordId = status.lastPostId;\n        let post = \"\";\n        const logIt = () => {\n            post = JSON.stringify(status.log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n        }\n        logIt();\n    }\n    const handleDelete = (event) => {\n        const recordId = status.lastPostId;\n        console.log(`handleDelete => recordId: ${recordId}`)\n        status.posts.delete(recordId);\n    }\n    const onDateChange = (date) => {\n        const day = date.getDate();\n        const month = date.getMonth()+1;\n        const year = date.getFullYear();\n        handleSelection(\"Day\", \"Date\", date);\n        handleSelection(\"Day\", \"Day\", day);\n        handleSelection(\"Day\", \"Month\", month);\n        handleSelection(\"Day\", \"Year\", year);\n    }\n    const getItems = () => items;\n    const selected = (item, groupTitle) => ((item.selections.indexOf(status.log[groupTitle][item.description])) !== -1) ? true : false;\n    const defaultSelection = (item, groupTitle) => (selected(item, groupTitle)) ? (item.selections.indexOf(status.log[groupTitle][item.description])) : 0; \n    \n    const radioItems = (item, groupTitle) => {\n        return (\n            <RadioSelector\n                header={groupTitle}\n                groupTitle={groupTitle} \n                selected={defaultSelection(item,groupTitle)} \n                label={item.description} \n                items={item.selections} \n                onChange={handleSelection}\n            />\n        )\n    };\n\n    const radio = (item, groupTitle) => <div className=\"r-vw bg-green\">\n                {radioItems(item, groupTitle)}\n            </div>;\n    \n    const selectionInterface = (item, groupTitle) => (item.type === 'radio') ? radio(item, groupTitle) : selector(item, groupTitle, status.spot, defaultSelection, handleSelection, selected);\n    const groups = () => getItems().map((item) => {\n        const headerClasses = 'subHeader color-yellow';\n        const selectorClasses = 'greet p-vw bg-vdkGreen flex3Column';\n        const groupClasses = (window.innerWidth < 500) ? \"r-vw\" : \"flexContainer width-100-percent r-vw\";\n        const description = item.description;\n        //console.log(`description: ${JSON.stringify(item,null,2)}`)\n       return <div key={getKey(\"groupConainer\")}>\n                    <div key={getKey(\"groupHeader\")} className={headerClasses}>\n                        {item.description}\n                    </div>\n                    <div className={groupClasses} key={getKey(\"groupSubConainer\")}>\n                        {group(item).map((group) => \n                            <div key={getKey(\"selectorContainer\")} className={selectorClasses}>\n                                {selectionInterface(group, description)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n    });\n    const categories = () => {\n        status.selectorStatus = [];\n        return <div className='description'>{groups()}</div>;\n    }\n    const getLogObject = () => status.log;\n    const dateEntry = () => {\n        const logExists = (status.log !== undefined && status.log !== null && JSON.stringify(status.log, null, 2) !== \"{}\") ? true : false;\n        const stateLogDate = () => getLogObject().Day.Date;\n        const getDate = () => (logExists === true) ? new Date(stateLogDate()) : new Date(status.date);\n        return <React.Fragment>\n                    <div className='mb-5 subHeader color-yellow'>Date</div>\n                    <div className='flexContainer width-100-percent bg-vdkGreen'>\n                        <DatePicker\n                            onChange={onDateChange}\n                            value={getDate()} \n                            className='p-vw bg-green flex3Column r-vw m-vw'\n                        /><br/>\n                    </div>\n                </React.Fragment>\n    }\n    \n    return (\n        <Route>\n            <Dialog title={title} message={message}>\n                <form onSubmit={handleSubmit}>\n                    {dateEntry()}\n                    {categories()}\n                    <br/>\n                    <div className=\"mb-5\">Additional Comments: </div>\n                    <textarea \n                        rows=\"10\" \n                        cols={window.innerWidth/15} \n                        value={status.log.Comments.notes} \n                        onChange={updateNotes} \n                        className=\"mt-10 greet p-10 r-10 brdr-green\"\n                    /><br/><br/>\n                    <Link className=\"noUnderline color-black\"\n                        to=\"/LogDirectory\"\n                        onClick={() => handleSubmit()}>\n                        <div onClick={handleSubmit} className=\"button m-1 greet p-20 r-10 bg-green brdr-green\">\n                            {buttonLabel}\n                        </div>\n                    </Link> \n                    <Link className=\"noUnderline color-black\"\n                        to=\"/LogDirectory\"\n                        onClick={() => handleSave()}>\n                        <div className=\"button m-1 greet p-20 r-10 bg-yellow shadow brdr-yellow\">\n                            save\n                        </div>\n                    </Link>\n                    <Link className=\"noUnderline color-black\"\n                        to=\"/LogDirectory\"\n                        onClick={() => handleDelete()}>\n                        <div  className=\"button m-1 greet p-20 r-10 bg-red brdr-red\">\n                            delete\n                        </div>\n                    </Link>\n                    <PostDirectory />\n                </form>\n            </Dialog>\n        </Route>\n    );\n}\n\nexport default LogEntry;"]},"metadata":{},"sourceType":"module"}