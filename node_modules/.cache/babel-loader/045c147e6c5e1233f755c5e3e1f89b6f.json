{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/forms/FormRadio.js\";\nimport React from 'react';\nimport shakaBlack from '../../assets/images/shakaBlack.png';\nimport thumbsUp from '../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../assets/images/ThumbsDown.png';\nimport getKey from '../utils/KeyGenerator.js';\n/*\n<FormRadio \n          selected={\"Ahi\"} \n          header = {\"Poki Bowl\"} \n          items = {[\"one\", \"two\", \"three\"]}\n        />\n*/\n\nclass FormRadio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.items = props.items;\n    this.state = {\n      value: props.selected,\n      selected: props.selected,\n      select: props.selected,\n      header: props.header,\n      label: props.label,\n      groupTitle: props.groupTitle,\n      items: props.items\n    };\n  }\n\n  selectItems() {\n    const getIcon = (item, index, select) => {\n      const value = item.toString();\n      const displayClass = select === true ? \"shakingShaka shaka\" : \"shaka\";\n      let displayColor = index === 0 ? \"bg-neogreen\" : \"bg-yellow\";\n      displayColor = index === 2 ? \"bg-red\" : displayColor;\n      const buttonClass = displayColor + \" pt-10 pb-5 r-10 m-5 button\";\n\n      const click = () => {\n        this.props.onChange(this.state.groupTitle, this.state.groupTitle, item);\n        this.setState({\n          selected: index,\n          value: item\n        });\n      };\n\n      let icon = index === 0 ? shakaBlack : thumbsUp;\n      icon = index === 2 ? thumbsDown : icon;\n      const generateUppercaseKey = item.toString().toUpperCase() + Math.round(Math.random() * 100);\n      const checked = Number(this.state.selected) === Number(index) ? true : false;\n      const descriptionClass = \"description color-black ml-5\";\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: buttonClass,\n        onClick: click,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        id: value,\n        src: icon,\n        alt: value,\n        className: displayClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 83\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: index,\n        key: getKey(item),\n        type: \"radio\",\n        value: item,\n        onChange: click,\n        checked: checked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: descriptionClass,\n        key: generateUppercaseKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, item)));\n    };\n\n    const icon = (item, index, select) => {\n      let iconOut = \"\";\n      iconOut = getIcon(item, index, select);\n      return iconOut;\n    };\n\n    const isSelected = index => Number(this.state.selected) === Number(index) ? true : false;\n\n    return this.state.items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, icon(item, index, isSelected(index))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-5 p-20 m-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, this.selectItems());\n  }\n\n}\n\nexport default FormRadio;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/forms/FormRadio.js"],"names":["React","shakaBlack","thumbsUp","thumbsDown","getKey","FormRadio","Component","constructor","props","items","state","value","selected","select","header","label","groupTitle","selectItems","getIcon","item","index","toString","displayClass","displayColor","buttonClass","click","onChange","setState","icon","generateUppercaseKey","toUpperCase","Math","round","random","checked","Number","descriptionClass","iconOut","isSelected","map","toLowerCase","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA;;;;;;;;AAOA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAaD,KAAK,CAACC,KAAnB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEH,KAAK,CAACI,QADJ;AAETA,MAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAFP;AAGTC,MAAAA,MAAM,EAAEL,KAAK,CAACI,QAHL;AAITE,MAAAA,MAAM,EAAEN,KAAK,CAACM,MAJL;AAKTC,MAAAA,KAAK,EAAEP,KAAK,CAACO,KALJ;AAMTC,MAAAA,UAAU,EAAER,KAAK,CAACQ,UANT;AAOTP,MAAAA,KAAK,EAAED,KAAK,CAACC;AAPJ,KAAb;AASH;;AAEDQ,EAAAA,WAAW,GAAG;AACV,UAAMC,OAAO,GAAE,CAACC,IAAD,EAAOC,KAAP,EAAcP,MAAd,KAAyB;AACpC,YAAMF,KAAK,GAAGQ,IAAI,CAACE,QAAL,EAAd;AACA,YAAMC,YAAY,GAAIT,MAAM,KAAK,IAAZ,GAAoB,oBAApB,GAA2C,OAAhE;AAEA,UAAIU,YAAY,GAAIH,KAAK,KAAK,CAAX,GAAgB,aAAhB,GAAgC,WAAnD;AACAG,MAAAA,YAAY,GAAIH,KAAK,KAAK,CAAX,GAAgB,QAAhB,GAA2BG,YAA1C;AAEA,YAAMC,WAAW,GAAGD,YAAY,GAAG,6BAAnC;;AAEA,YAAME,KAAK,GAAG,MAAM;AAChB,aAAKjB,KAAL,CAAWkB,QAAX,CAAoB,KAAKhB,KAAL,CAAWM,UAA/B,EAA2C,KAAKN,KAAL,CAAWM,UAAtD,EAAkEG,IAAlE;AACA,aAAKQ,QAAL,CAAc;AACVf,UAAAA,QAAQ,EAAEQ,KADA;AAEVT,UAAAA,KAAK,EAAEQ;AAFG,SAAd;AAIH,OAND;;AAQA,UAAIS,IAAI,GAAIR,KAAK,KAAK,CAAX,GAAgBnB,UAAhB,GAA6BC,QAAxC;AACA0B,MAAAA,IAAI,GAAIR,KAAK,KAAK,CAAX,GAAgBjB,UAAhB,GAA6ByB,IAApC;AACA,YAAMC,oBAAoB,GAAGV,IAAI,CAACE,QAAL,GAAgBS,WAAhB,KAA+BC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,CAA5D;AACA,YAAMC,OAAO,GAAGC,MAAM,CAAC,KAAKzB,KAAL,CAAWE,QAAZ,CAAN,KAAgCuB,MAAM,CAACf,KAAD,CAAtC,GAAgD,IAAhD,GAAuD,KAAvE;AACA,YAAMgB,gBAAgB,GAAG,8BAAzB;AACA,0BAAO;AAAK,QAAA,SAAS,EAAEZ,WAAhB;AAA6B,QAAA,OAAO,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACH;AAAK,QAAA,EAAE,EAAEd,KAAT;AAAgB,QAAA,GAAG,EAAEiB,IAArB;AAA2B,QAAA,GAAG,EAAEjB,KAAhC;AAAuC,QAAA,SAAS,EAAEW,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,eAC+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD/D,eAEH;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,EAAE,EAAEF,KAAX;AAAkB,QAAA,GAAG,EAAEhB,MAAM,CAACe,IAAD,CAA7B;AAAqC,QAAA,IAAI,EAAC,OAA1C;AAAkD,QAAA,KAAK,EAAEA,IAAzD;AAA+D,QAAA,QAAQ,EAAEM,KAAzE;AAAgF,QAAA,OAAO,EAAES,OAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAM,QAAA,SAAS,EAAEE,gBAAjB;AAAmC,QAAA,GAAG,EAAEP,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+DV,IAA/D,CAFJ,CAFG,CAAP;AAOH,KA7BD;;AA+BA,UAAMS,IAAI,GAAG,CAACT,IAAD,EAAOC,KAAP,EAAcP,MAAd,KAAyB;AAClC,UAAIwB,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,GAAGnB,OAAO,CAACC,IAAD,EAAOC,KAAP,EAAcP,MAAd,CAAjB;AACA,aAAOwB,OAAP;AACH,KAJD;;AAMA,UAAMC,UAAU,GAAIlB,KAAD,IAAYe,MAAM,CAAC,KAAKzB,KAAL,CAAWE,QAAZ,CAAN,KAAgCuB,MAAM,CAACf,KAAD,CAAvC,GAAkD,IAAlD,GAAyD,KAAvF;;AACA,WAAO,KAAKV,KAAL,CAAWD,KAAX,CAAiB8B,GAAjB,CAAqB,CAACpB,IAAD,EAAOC,KAAP,kBACxB;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAED,IAAI,CAACE,QAAL,GAAgBmB,WAAhB,KAA+BT,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,IAAI,CAACT,IAAD,EAAOC,KAAP,EAAckB,UAAU,CAAClB,KAAD,CAAxB,CADT,CADG,CAAP;AAMH;;AAEDqB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKxB,WAAL,EADL,CADJ;AAKH;;AArEmC;;AAuExC,eAAeZ,SAAf","sourcesContent":["import React from 'react';\nimport shakaBlack from '../../assets/images/shakaBlack.png';\nimport thumbsUp from '../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../assets/images/ThumbsDown.png';\nimport getKey from '../utils/KeyGenerator.js';\n/*\n<FormRadio \n          selected={\"Ahi\"} \n          header = {\"Poki Bowl\"} \n          items = {[\"one\", \"two\", \"three\"]}\n        />\n*/\nclass FormRadio extends React.Component {\n\n    constructor(props) {\n        super(props); \n        this.items = props.items;\n        this.state = { \n            value: props.selected,\n            selected: props.selected,\n            select: props.selected,\n            header: props.header,\n            label: props.label,\n            groupTitle: props.groupTitle,\n            items: props.items\n        }\n    };\n\n    selectItems() {\n        const getIcon =(item, index, select) => {\n            const value = item.toString();\n            const displayClass = (select === true) ? \"shakingShaka shaka\" : \"shaka\";\n            \n            let displayColor = (index === 0) ? \"bg-neogreen\" : \"bg-yellow\";\n            displayColor = (index === 2) ? \"bg-red\" : displayColor;\n            \n            const buttonClass = displayColor + \" pt-10 pb-5 r-10 m-5 button\";\n            \n            const click = () => {\n                this.props.onChange(this.state.groupTitle, this.state.groupTitle, item);\n                this.setState({\n                    selected: index,\n                    value: item\n                });\n            }\n            \n            let icon = (index === 0) ? shakaBlack : thumbsUp;\n            icon = (index === 2) ? thumbsDown : icon;\n            const generateUppercaseKey = item.toString().toUpperCase()+(Math.round(Math.random()*100));\n            const checked = Number(this.state.selected) === Number(index) ? true : false;\n            const descriptionClass = \"description color-black ml-5\";\n            return <div className={buttonClass} onClick={click}>\n                <img id={value} src={icon} alt={value} className={displayClass} /><br/>\n                <div className=\"p-10\">\n                    <input id={index} key={getKey(item)} type=\"radio\" value={item} onChange={click} checked={checked}/>\n                    <span className={descriptionClass} key={generateUppercaseKey}>{item}</span>\n                </div>\n            </div>;\n        }\n\n        const icon = (item, index, select) => {\n            let iconOut = \"\";\n            iconOut = getIcon(item, index, select);\n            return iconOut;\n        } \n        \n        const isSelected = (index) => (Number(this.state.selected) === Number(index)) ? true : false;\n        return this.state.items.map((item, index) =>\n            <div className=\"flex3Column\" key={item.toString().toLowerCase()+(Math.round(Math.random()*100))} >\n                {icon(item, index, isSelected(index))}\n            </div>\n        )\n\n    }\n\n    render() {\n        return (\n            <div className=\"m-5 p-20 m-5\">    \n                {this.selectItems()}\n            </div>\n        );\n    };\n}\nexport default FormRadio;"]},"metadata":{},"sourceType":"module"}