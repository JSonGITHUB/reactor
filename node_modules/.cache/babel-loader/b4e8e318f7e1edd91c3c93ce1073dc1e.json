{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/Forms/FormRadio.js\";\nimport React from 'react';\nimport shakaBlack from '../assets/images/shakaBlack.png';\nimport thumbsUp from '../assets/images/ThumbsUp.png';\nimport thumbsDown from '../assets/images/ThumbsDown.png';\n/*\n<FormRadio \n          selected={\"Ahi\"} \n          header = {\"Poki Bowl\"} \n          items = {[\"one\", \"two\", \"three\"]}\n        />\n*/\n\nclass FormRadio extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        selected: event.target.id,\n        value: event.target.value\n      });\n    };\n\n    this.items = props.items;\n    this.state = {\n      value: props.selected,\n      selected: props.selected,\n      select: props.selected,\n      header: props.header,\n      label: props.label,\n      groupTitle: props.groupTitle,\n      items: props.items\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  selectItems() {\n    const report = value => {\n      let index = value === \"Awesome\" ? 0 : 1;\n      index = value === \"Bad\" ? 3 : index;\n      this.setState({\n        selected: index,\n        value: value\n      });\n    };\n\n    const getIcon = (value, select) => {\n      const displayClass = select === true ? \"shakingShaka shaka\" : \"shaka\";\n      let displayColor = value === \"Firing\" ? \"bg-neogreen\" : \"bg-yellow\";\n      displayColor = value === \"Bad\" ? \"bg-red\" : displayColor;\n      const buttonClass = displayColor + \" flex3Column pt-10 pb-5 radius-10 m-5\";\n      let icon = value === \"Firing\" ? shakaBlack : thumbsUp;\n      icon = value === \"Bad\" ? thumbsDown : icon;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: buttonClass,\n        onClick: report(value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        id: value,\n        src: icon,\n        alt: value,\n        className: displayClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    const icon = (itemValue, select) => {\n      let iconOut = \"\";\n      iconOut = getIcon(itemValue, select);\n      return iconOut;\n    };\n\n    return this.state.items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: index,\n      key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n      type: \"radio\",\n      value: item.toString(),\n      onChange: this.handleChange,\n      checked: Number(this.state.selected) === Number(index) ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"description\",\n      key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, item.toString()), icon(item.toString(), Number(this.state.selected) === Number(index) ? true : false)));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-5 p-20 m-5 flexContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, this.selectItems());\n  }\n\n}\n\nexport default FormRadio;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/Forms/FormRadio.js"],"names":["React","shakaBlack","thumbsUp","thumbsDown","FormRadio","Component","constructor","props","handleChange","event","setState","selected","target","id","value","items","state","select","header","label","groupTitle","bind","handleSubmit","selectItems","report","index","getIcon","displayClass","displayColor","buttonClass","icon","itemValue","iconOut","map","item","toString","toLowerCase","Math","round","random","Number","preventDefault","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport shakaBlack from '../assets/images/shakaBlack.png';\nimport thumbsUp from '../assets/images/ThumbsUp.png';\nimport thumbsDown from '../assets/images/ThumbsDown.png';\n/*\n<FormRadio \n          selected={\"Ahi\"} \n          header = {\"Poki Bowl\"} \n          items = {[\"one\", \"two\", \"three\"]}\n        />\n*/\nclass FormRadio extends React.Component {\n\n    constructor(props) {\n        super(props); \n        this.items = props.items;\n        this.state = { \n            value: props.selected,\n            selected: props.selected,\n            select: props.selected,\n            header: props.header,\n            label: props.label,\n            groupTitle: props.groupTitle,\n            items: props.items\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    };\n\n    handleChange = (event) => {\n        this.setState({\n            selected: event.target.id,\n            value: event.target.value\n        });\n    }\n    selectItems() {\n        \n        const report = (value) => {\n            let index = (value === \"Awesome\") ? 0 : 1;\n            index = (value === \"Bad\") ? 3 : index;\n            this.setState({\n                selected: index,\n                value: value\n            })\n        };\n        \n        const getIcon =(value, select) => {\n            const displayClass = (select === true) ? \"shakingShaka shaka\" : \"shaka\";\n            \n            let displayColor = (value === \"Firing\") ? \"bg-neogreen\" : \"bg-yellow\";\n            displayColor = (value === \"Bad\") ? \"bg-red\" : displayColor;\n            \n            const buttonClass = displayColor + \" flex3Column pt-10 pb-5 radius-10 m-5\";\n            \n            let icon = (value === \"Firing\") ? shakaBlack : thumbsUp;\n            icon = (value === \"Bad\") ? thumbsDown : icon;\n            \n            return <div className={buttonClass} onClick={report(value)}>\n                <img id={value} src={icon} alt={value} className={displayClass} />\n            </div>;\n        }\n\n        const icon = (itemValue, select) => {\n            let iconOut = \"\";\n            iconOut = getIcon(itemValue, select);\n            return iconOut;\n        } \n        \n        \n        return this.state.items.map((item, index) =>\n            <div className=\"flex3Column\" key={item.toString().toLowerCase()+(Math.round(Math.random()*100))} >\n                <input id={index} key={item.toString().toLowerCase()+(Math.round(Math.random()*100))} type=\"radio\" value={item.toString()} onChange={this.handleChange} checked={Number(this.state.selected) === Number(index) ? true : false}/>\n                <span className=\"description\" key={item.toString().toLowerCase()+(Math.round(Math.random()*100))}>{item.toString()}</span>\n                {icon(item.toString(), (Number(this.state.selected) === Number(index)) ? true : false)}\n            </div>\n        )\n\n    } \n    handleSubmit(event) {\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <div className=\"m-5 p-20 m-5 flexContainer\">    \n                {this.selectItems()}\n            </div>\n        );\n    };\n}\nexport default FormRadio;"]},"metadata":{},"sourceType":"module"}