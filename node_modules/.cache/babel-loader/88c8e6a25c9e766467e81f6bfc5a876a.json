{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/SpotPicker.js\";\nimport React from 'react';\nimport getKey from './utils/KeyGenerator.js';\n\nclass SpotPicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.locations = () => this.state.locations;\n\n    this.groups = () => this.locations().map(location => {\n      const headerClasses = 'subHeader color-yellow';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"spot\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"header\"),\n        className: headerClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, location.name));\n    });\n\n    this.state = {\n      tide: props.tide,\n      swellDirection: props.swellDirection,\n      windDirection: props.windDirection\n    };\n  }\n\n  componentDidMount() {\n    let data;\n\n    const returnJSON = response => response.json();\n\n    const returnRejection = response => Promise.reject({\n      status: response.status,\n      data\n    });\n\n    const validate = response => response.ok ? returnJSON(response) : returnRejection(response);\n\n    const uri = 'https://jsongithub.github.io/portfolio/assets/data/gpsData.json';\n    fetch(uri).then(response => validate(response)).then(data => {\n      this.setState({\n        isLoaded: true,\n        locations: data\n      });\n    }).catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n  }\n\n  render() {\n    let {\n      isLoaded,\n      locations\n    } = this.state;\n    console.log(`Location data: ${JSON.stringify(locations(0), null, 2)}`);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-neogreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"HELLO from the spot picker:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 44\n      }\n    }), \"Wind: \", this.props.windDirection, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 49\n      }\n    }), \"Swell: \", this.props.swellDirection, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 51\n      }\n    }), \"Tide: \", this.props.tide, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 40\n      }\n    }), \"Locations:\", \"?\");\n  }\n\n}\n\nexport default SpotPicker;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/SpotPicker.js"],"names":["React","getKey","SpotPicker","Component","constructor","props","locations","state","groups","map","location","headerClasses","name","tide","swellDirection","windDirection","componentDidMount","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","uri","fetch","then","setState","isLoaded","catch","err","console","log","window","pathname","render","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAwBnBC,SAxBmB,GAwBP,MAAM,KAAKC,KAAL,CAAWD,SAxBV;;AAAA,SAyBnBE,MAzBmB,GAyBV,MAAM,KAAKF,SAAL,GAAiBG,GAAjB,CAAsBC,QAAD,IAAc;AAC9C,YAAMC,aAAa,GAAG,wBAAtB;AACA,0BAAO;AAAK,QAAA,GAAG,EAAEV,MAAM,CAAC,MAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACK;AAAK,QAAA,GAAG,EAAEA,MAAM,CAAC,QAAD,CAAhB;AAA4B,QAAA,SAAS,EAAEU,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,QAAQ,CAACE,IADd,CADL,CAAP;AAKH,KAPc,CAzBI;;AAEf,SAAKL,KAAL,GAAa;AACTM,MAAAA,IAAI,EAAER,KAAK,CAACQ,IADH;AAETC,MAAAA,cAAc,EAAET,KAAK,CAACS,cAFb;AAGTC,MAAAA,aAAa,EAAEV,KAAK,CAACU;AAHZ,KAAb;AAKH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,IAAJ;;AACA,UAAMC,UAAU,GAAIC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAjC;;AACA,UAAMC,eAAe,GAAIF,QAAD,IAAcG,OAAO,CAACC,MAAR,CAAe;AAACC,MAAAA,MAAM,EAAEL,QAAQ,CAACK,MAAlB;AAA0BP,MAAAA;AAA1B,KAAf,CAAtC;;AACA,UAAMQ,QAAQ,GAAIN,QAAD,IAAeA,QAAQ,CAACO,EAAV,GAAgBR,UAAU,CAACC,QAAD,CAA1B,GAAuCE,eAAe,CAACF,QAAD,CAArF;;AACA,UAAMQ,GAAG,GAAG,iEAAZ;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUV,QAAQ,IAAIM,QAAQ,CAACN,QAAD,CAD9B,EAEKU,IAFL,CAEUZ,IAAI,IAAI;AACV,WAAKa,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,IADA;AAEVzB,QAAAA,SAAS,EAAEW;AAFD,OAAd;AAIH,KAPL,EAQKe,KARL,CAQWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAa,+BAA8BR,GAAI,YAAWS,MAAM,CAAC1B,QAAP,CAAgB2B,QAAS,IAAnF,EAAwFJ,GAAxF,CARlB;AASH;;AAWDK,EAAAA,MAAM,GAAG;AACL,QAAI;AAACP,MAAAA,QAAD;AAAWzB,MAAAA;AAAX,QAAwB,KAAKC,KAAjC;AACA2B,IAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBI,IAAI,CAACC,SAAL,CAAelC,SAAS,CAAC,CAAD,CAAxB,EAA6B,IAA7B,EAAmC,CAAnC,CAAsC,EAApE;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD/B,YAEW,KAAKD,KAAL,CAAWU,aAFtB,eAEoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFpC,aAGY,KAAKV,KAAL,CAAWS,cAHvB,eAGsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHtC,YAIW,KAAKT,KAAL,CAAWQ,IAJtB,eAI2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJ3B,gBAKe,GALf,CADJ;AASH;;AAhDoC;;AAmDzC,eAAeX,UAAf","sourcesContent":["import React from 'react';\nimport getKey from './utils/KeyGenerator.js';\n\nclass SpotPicker extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tide: props.tide,\n            swellDirection: props.swellDirection,\n            windDirection: props.windDirection\n        };\n    }\n    componentDidMount() {\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        const uri = 'https://jsongithub.github.io/portfolio/assets/data/gpsData.json';\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                this.setState({\n                    isLoaded: true,\n                    locations: data\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n    }\n    locations = () => this.state.locations;\n    groups = () => this.locations().map((location) => {\n        const headerClasses = 'subHeader color-yellow';\n        return <div key={getKey(\"spot\")}>\n                    <div key={getKey(\"header\")} className={headerClasses}>\n                        {location.name}\n                    </div>\n                </div>\n    })\n    \n    render() {\n        let {isLoaded, locations} = this.state;\n        console.log(`Location data: ${JSON.stringify(locations(0), null, 2)}`)\n        return (  \n            <div className=\"color-neogreen\">\n                HELLO from the spot picker:<br/>\n                Wind: {this.props.windDirection}<br/>\n                Swell: {this.props.swellDirection}<br/>\n                Tide: {this.props.tide}<br/>\n                Locations:{\"?\"}\n            </div>         \n        )\n    }\n    \n}\nexport default SpotPicker;"]},"metadata":{},"sourceType":"module"}