{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/LogData.js\";\nimport React from 'react';\n\nclass LogData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDate = () => this.state.log.Day.Date;\n\n    this.getLogTemplate = {\n      Day: {},\n      Location: {},\n      Swell: {},\n      Tide: {},\n      Wind: {},\n      Conditions: {},\n      Comments: {}\n    };\n    this.state = {\n      recordId: props.recordId,\n      log: JSON.parse(localStorage.getItem(props.recordId))\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }\n    }, \"Count: \", this.state.postDirectory.length);\n  }\n\n}\n\nexport default LogData;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/LogData.js"],"names":["React","LogData","Component","constructor","props","getDate","state","log","Day","Date","getLogTemplate","Location","Swell","Tide","Wind","Conditions","Comments","recordId","JSON","parse","localStorage","getItem","render","postDirectory","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,OAPmB,GAOT,MAAM,KAAKC,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBC,IAPhB;;AAAA,SAQnBC,cARmB,GAQF;AACbF,MAAAA,GAAG,EAAE,EADQ;AAEbG,MAAAA,QAAQ,EAAE,EAFG;AAGbC,MAAAA,KAAK,EAAE,EAHM;AAIbC,MAAAA,IAAI,EAAE,EAJO;AAKbC,MAAAA,IAAI,EAAE,EALO;AAMbC,MAAAA,UAAU,EAAE,EANC;AAObC,MAAAA,QAAQ,EAAE;AAPG,KARE;AAEf,SAAKV,KAAL,GAAa;AACTW,MAAAA,QAAQ,EAAEb,KAAK,CAACa,QADP;AAETV,MAAAA,GAAG,EAAEW,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBjB,KAAK,CAACa,QAA3B,CAAX;AAFI,KAAb;AAIH;;AAYDK,EAAAA,MAAM,GAAG;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKhB,KAAL,CAAWiB,aAAX,CAAyBC,MAApC,CAAP;AACP;;AAtBiC;;AAyBtC,eAAevB,OAAf","sourcesContent":["import React from 'react';\nclass LogData extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            recordId: props.recordId,\n            log: JSON.parse(localStorage.getItem(props.recordId))\n        };\n    }\n    getDate = () => this.state.log.Day.Date;\n    getLogTemplate = {\n        Day: {},\n        Location: {},\n        Swell: {},\n        Tide: {},\n        Wind: {},\n        Conditions: {},\n        Comments: {}\n    };\n    \n    render() {      \n            return <p>Count: {this.state.postDirectory.length}</p> \n    }\n    \n}\nexport default LogData;"]},"metadata":{},"sourceType":"module"}