{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js\";\nimport React, { useState } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport { openweatherAPI_KEY, openweatherAPI_BASE_URL } from '../../apis/config';\nimport N from '../../assets/images/windN.png';\nimport NE from '../../assets/images/windNE.png';\nimport E from '../../assets/images/windE.png';\nimport SE from '../../assets/images/windSE.png';\nimport S from '../../assets/images/windS.png';\nimport SW from '../../assets/images/windSW.png';\nimport W from '../../assets/images/windW.png';\nimport NW from '../../assets/images/windNW.png';\n\nconst CitySelector = () => {\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n  //Metric\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n  //Image Source\n  //http://openweathermap.org/img/wn/10d@2x.png\n  const key = openweatherAPI_KEY;\n  const baseUrl = openweatherAPI_BASE_URL;\n  const [city, setCity] = useState('Carlsbad, CA');\n  const [results, setResults] = useState('');\n  const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n\n  const displayResults = results => {\n    const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n    const getWeekdayIndex = day => weekdays.findIndex(weekDay => weekDay.includes(day));\n\n    const angleArray = [0, 25, 45, 65, 90, 115, 135, 160, 180, 205, 225, 250, 270, 295, 315, 340];\n    const directionArray = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'];\n\n    const getWindDirection = direction => {\n      const windAngle = direction.toFixed(0);\n      const angleIndex = angleArray.findIndex(angle => angle >= windAngle);\n      return directionArray[angleIndex];\n    };\n\n    const windIcon = direction => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: direction,\n        className: \"mb--5 shaka r-20 p-2\",\n        alt: direction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }\n      });\n    };\n\n    const getWindIcon = direction => {\n      const windDirection = direction;\n      console.log(`windDirection: ${windDirection}`);\n\n      if (windDirection === \"N\") {\n        return windIcon(N);\n      } else if (windDirection === \"NE\" || windDirection === \"NNE\" || windDirection === \"ENE\") {\n        return windIcon(NE);\n      } else if (windDirection === \"E\") {\n        return windIcon(E);\n      } else if (windDirection === \"SE\" || windDirection === \"SSE\" || windDirection === \"ESE\") {\n        return windIcon(SE);\n      } else if (windDirection === \"S\") {\n        return windIcon(S);\n      } else if (windDirection === \"SW\" || windDirection === \"SSW\" || windDirection === \"WSW\") {\n        return windIcon(SW);\n      } else if (windDirection === \"W\") {\n        return windIcon(W);\n      } else if (windDirection === \"NW\" || windDirection === \"NNW\" || windDirection === \"WNW\") {\n        return windIcon(NW);\n      }\n    };\n\n    const list = results.list.map(item => {\n      const main = item.main;\n\n      const fahrenheit = k => (k - 273.15) * (9 / 5) + 32;\n\n      const temp = fahrenheit(main.temp).toFixed(1);\n      const temp_min = fahrenheit(main.temp_min).toFixed(1);\n      const temp_max = fahrenheit(main.temp_max).toFixed(1);\n      const feels_like = `feels like: ${fahrenheit(main.feels_like).toFixed(1)}Â°`;\n      const temperature = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow bold mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }\n      }, \"temperature: \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 p-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, temp, \"\\xB0\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"copyright\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }\n      }, temp_min, \"\\xB0\")));\n      const humidity = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 30\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow bold mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      }, \"humidity: \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 p-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }\n      }, main.humidity, \"%\"));\n      const weather = item.weather[0];\n      const mainDescription = weather.main;\n      const description = weather.description;\n      const icon = weather.icon;\n      const wind = item.wind;\n\n      const windSpeed = () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 37\n        }\n      }, wind.speed.toFixed(0), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"copyright\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 41\n        }\n      }, \" mph\"));\n\n      const windDirection = () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 41\n        }\n      }, wind.deg, \"\\xB0\");\n\n      const windDisplay = () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow bold mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 45\n        }\n      }, \"wind: \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 p-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 m-5 pt-5 pb-5 bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 49\n        }\n      }, getWindIcon(getWindDirection(wind.deg))), getWindDirection(wind.deg), windDirection(), windSpeed()));\n\n      const visibility = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow bold mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 37\n        }\n      }, \"visibility: \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 p-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 37\n        }\n      }, item.visibility, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"copyright\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 41\n        }\n      }, \" ft\")));\n\n      const period = () => item.dt_txt;\n\n      const momentArray = () => period().split(' ');\n\n      console.log(`momentArray: ${momentArray()[0]}`);\n      const date = momentArray()[0];\n      console.log(`date: ${date}`);\n      const dateArray = date.split(' ');\n      const weekday = weekdays[getWeekdayIndex(dateArray[0])];\n      const month = dateArray[1];\n      const day = dateArray[2];\n      const year = dateArray[3];\n      const timeArray = dateArray[4].split(':');\n      const hour = timeArray[0];\n      const getHour = hour > 12 ? hour - 12 : hour;\n      const timeOfDay = hour > 12 ? 'pm' : 'am';\n      const minutes = timeArray[1];\n      const getTime = `${getHour}:${minutes}`;\n      const time = getTime;\n      const displayDate = `${month} ${day} ${year}`;\n      const cards = [temperature, windDisplay(), humidity, visibility];\n\n      const card = matchKind => /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey('card'),\n        className: \"flex4Column bg-lite mr-5 ml-5 p-10 r-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      }, matchKind));\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"width100Percant p-10 m-20 r-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow p-10 navBranding\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, weekday), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greet color-neogreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }, displayDate), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greet color-neogreen mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, time, \" \", timeOfDay), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bg-green r-10 p-10 ml-5 mr-5 mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow navBranding p-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }, mainDescription), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greet color-neogreen shadow p-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, description)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"width100Percent flexContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, cards.map(item => card(item))));\n    });\n    console.log(`display: ${JSON.stringify(results, null, 2)}`);\n    setResults(list);\n  };\n\n  const onSearch = () => {\n    fetch(`${baseUrl}${urlEnd}${key}`).then(response => response.json()) //        .then((result) => console.log(`${JSON.stringify(result,null, 2)}`))\n    .then(results => displayResults(results));\n  };\n\n  const onKeyDown = event => {\n    if (event.keyCode === 13) {\n      onSearch();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"navBranding color-yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Search your city\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyDown: onKeyDown,\n    value: city,\n    placeholder: \"Enter city\",\n    onChange: event => setCity(event.target.value),\n    className: \"greet p-20 r-10 w-200 brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSearch,\n    className: \"ml-5 greet p-20 r-10 w-200 bg-green brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \"Check Weather\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"white shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, results));\n};\n\nexport default CitySelector;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js"],"names":["React","useState","getKey","openweatherAPI_KEY","openweatherAPI_BASE_URL","N","NE","E","SE","S","SW","W","NW","CitySelector","key","baseUrl","city","setCity","results","setResults","urlEnd","displayResults","weekdays","getWeekdayIndex","day","findIndex","weekDay","includes","angleArray","directionArray","getWindDirection","direction","windAngle","toFixed","angleIndex","angle","windIcon","getWindIcon","windDirection","console","log","list","map","item","main","fahrenheit","k","temp","temp_min","temp_max","feels_like","temperature","humidity","weather","mainDescription","description","icon","wind","windSpeed","speed","deg","windDisplay","visibility","period","dt_txt","momentArray","split","date","dateArray","weekday","month","year","timeArray","hour","getHour","timeOfDay","minutes","getTime","time","displayDate","cards","card","matchKind","JSON","stringify","onSearch","fetch","then","response","json","onKeyDown","event","keyCode","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport { openweatherAPI_KEY, openweatherAPI_BASE_URL } from '../../apis/config';\nimport N from '../../assets/images/windN.png'\nimport NE from '../../assets/images/windNE.png'\nimport E from '../../assets/images/windE.png'\nimport SE from '../../assets/images/windSE.png'\nimport S from '../../assets/images/windS.png'\nimport SW from '../../assets/images/windSW.png'\nimport W from '../../assets/images/windW.png'\nimport NW from '../../assets/images/windNW.png'\n\nconst CitySelector = () => {\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n    //Metric\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n    //Image Source\n    //http://openweathermap.org/img/wn/10d@2x.png\n    const key = openweatherAPI_KEY;\n    const baseUrl = openweatherAPI_BASE_URL;\n\n    const [city, setCity] = useState('Carlsbad, CA');\n    const [results, setResults] = useState('');\n    const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n\n    const displayResults = (results) => {\n\n        const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n        const getWeekdayIndex = (day) => weekdays.findIndex(weekDay => weekDay.includes(day));\n        const angleArray = [ 0, 25, 45, 65, 90, 115, 135, 160, 180, 205, 225, 250, 270, 295, 315, 340];\n        const directionArray = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'];\n        \n        const getWindDirection = (direction) => {\n            const windAngle = direction.toFixed(0);\n            const angleIndex = angleArray.findIndex(angle => angle >= windAngle);\n            return directionArray[angleIndex];\n        }\n        const windIcon = (direction) => {\n            return <img src={direction} className='mb--5 shaka r-20 p-2' alt={direction} />\n        }\n        const getWindIcon = (direction) => {\n            const windDirection = direction;\n            console.log(`windDirection: ${windDirection}`)\n            if (windDirection === \"N\") {\n                return windIcon(N);\n            } else if ((windDirection === \"NE\") || (windDirection === \"NNE\") || (windDirection === \"ENE\")) {\n                return windIcon(NE);\n            } else if (windDirection === \"E\") {\n                return windIcon(E);\n            } else if ((windDirection === \"SE\") || (windDirection === \"SSE\") || (windDirection === \"ESE\")) {\n                return windIcon(SE);\n            } else if (windDirection === \"S\") {\n                return windIcon(S);\n            } else if ((windDirection === \"SW\") || (windDirection === \"SSW\") || (windDirection === \"WSW\")) {\n                return windIcon(SW);\n            } else if (windDirection === \"W\") {\n                return windIcon(W);\n            } else if ((windDirection === \"NW\") || (windDirection === \"NNW\") || (windDirection === \"WNW\")) {\n                return windIcon(NW);\n            }\n        }\n        \n        const list = results.list.map((item) => {\n            const main = item.main;\n            const fahrenheit = (k) => ((k - 273.15) * (9/5) + 32);\n            const temp = fahrenheit(main.temp).toFixed(1);\n            const temp_min = fahrenheit(main.temp_min).toFixed(1);\n            const temp_max = fahrenheit(main.temp_max).toFixed(1);\n            const feels_like = `feels like: ${fahrenheit(main.feels_like).toFixed(1)}Â°`;\n            const temperature = <div>\n                            <div className='color-yellow bold mb-10'>temperature: </div>\n                            <div className='r-5 p-10 bg-dkGreen'>\n                                {temp}Â°<br/>\n                                <span className='copyright'>{temp_min}Â°</span>\n                            </div>\n                        </div>;\n            \n            const humidity = <div>\n                                <div className='color-yellow bold mb-10'>humidity: </div>\n                                <div className='r-5 p-10 bg-dkGreen'>\n                                    {main.humidity}%\n                                </div>\n                            </div>\n            const weather = item.weather[0];\n            const mainDescription = weather.main;\n            const description = weather.description;\n            const icon = weather.icon;\n            const wind = item.wind;\n            const windSpeed = () => <div>\n                                        {wind.speed.toFixed(0)}\n                                        <span className='copyright'> mph</span>\n                                    </div>;\n            \n            const windDirection = () => <div>{wind.deg}Â°</div>;\n            const windDisplay = () => <div>\n                                            <div className='color-yellow bold mb-10'>wind: </div>\n                                            <div className='r-5 p-10 bg-dkGreen'>\n                                                <div className=\"r-5 m-5 pt-5 pb-5 bg-white\">\n                                                    {getWindIcon(getWindDirection(wind.deg))}\n                                                </div>\n                                                {getWindDirection(wind.deg)}\n                                                {windDirection()}\n                                                {windSpeed()}\n                                            </div>\n                                        </div>\n            const visibility = <div>\n                                    <div className='color-yellow bold mb-10'>visibility: </div>\n                                    <div className='r-5 p-10 bg-dkGreen'>\n                                        {item.visibility}\n                                        <span className='copyright'> ft</span>\n                                    </div>\n                            </div>;\n            const period = () => item.dt_txt;\n            const momentArray = () => period().split(' ');\n            console.log(`momentArray: ${momentArray()[0]}`)\n            const date = momentArray()[0];\n            console.log(`date: ${date}`)\n            const dateArray = date.split(' ');\n            const weekday = weekdays[getWeekdayIndex(dateArray[0])];\n            const month = dateArray[1];\n            const day = dateArray[2];\n            const year = dateArray[3];\n            const timeArray = dateArray[4].split(':');\n            const hour = timeArray[0];\n            const getHour = (hour>12) ? (hour-12) : hour;\n            const timeOfDay = (hour>12) ? 'pm' : 'am';\n            const minutes = timeArray[1];\n            const getTime = `${getHour}:${minutes}`;\n            const time = getTime;\n            const displayDate = `${month} ${day} ${year}`\n            const cards = [temperature, windDisplay(), humidity, visibility]\n\n            const card = (matchKind) => <div key={getKey('card')} className='flex4Column bg-lite mr-5 ml-5 p-10 r-10'>\n                            {/*this.getMatchIcon(matchKind)*/}\n                            <div className='greet'>{matchKind}</div>\n                        </div>;\n            return (\n                <div className='width100Percant p-10 m-20 r-10 bg-dkGreen'>\n                    <div className='color-yellow p-10 navBranding'>{weekday}</div>\n                    <div className='greet color-neogreen'>{displayDate}</div>\n                    <div className='greet color-neogreen mb-20'>{time} {timeOfDay}</div>\n                    <div className='bg-green r-10 p-10 ml-5 mr-5 mb-10'>\n                        <div className='color-yellow navBranding p-5'>{mainDescription}</div>\n                        <div className='greet color-neogreen shadow p-5'>{description}</div>\n                    </div>\n                    <div className='width100Percent flexContainer'>\n                        {cards.map((item) => card(item))}\n                    </div>\n                </div>\n            )\n        })\n        console.log(`display: ${JSON.stringify(results, null, 2)}`)\n        setResults(list)\n    }\n\n    const onSearch = () => {\n        fetch(`${baseUrl}${urlEnd}${key}`)\n        .then((response) => response.json())\n//        .then((result) => console.log(`${JSON.stringify(result,null, 2)}`))\n        .then((results) => displayResults(results));\n    };\n    const onKeyDown = (event) => {\n        if (event.keyCode === 13) {\n            onSearch();\n        }\n    };\n    return (\n        <div>\n            <h1 className='navBranding color-yellow'>Search your city</h1>\n            <input onKeyDown={onKeyDown} value={city} placeholder='Enter city'\n                    onChange={(event) => setCity(event.target.value)} className='greet p-20 r-10 w-200 brdr-green'/>\n            <button onClick={onSearch} className='ml-5 greet p-20 r-10 w-200 bg-green brdr-green'>\n                Check Weather\n            </button>\n            <div className='white shadow'>{results}</div>\n        </div>\n    );\n};\n\nexport default CitySelector;"]},"metadata":{},"sourceType":"module"}