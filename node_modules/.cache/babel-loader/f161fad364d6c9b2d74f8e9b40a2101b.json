{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/SurfScores.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LongPressButton from './LongPressButton.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport ScoreCard from './ScoreCard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurfScores = _ref => {\n  _s();\n  let {\n    player,\n    index,\n    scoreTotal,\n    editPlayer,\n    deletePlayer,\n    winner,\n    updateTwoPlayerScores,\n    game,\n    surfKey\n  } = _ref;\n  const initPlayers = ['You', 'Me'];\n  const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n  const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || []);\n  const [timerOn, setTimerOn] = useState(false);\n  const surfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  const playerScores = [{\n    name: 'Player 1',\n    scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88]\n  }, {\n    name: 'Player 2',\n    scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81]\n  }, {\n    name: 'Player 3',\n    scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89]\n  }];\n  useEffect(() => {\n    const playerData = players.map((player, index) => ({\n      player,\n      score: surfersScores[index]\n    }));\n    playerData.sort((a, b) => b.score - a.score);\n    const sortedPlayers = playerData.map(data => data.player);\n    const sortedScores = playerData.map(data => data.score);\n    setSortedPlayers(sortedPlayers);\n    setSortedScores(sortedScores);\n    localStorage.setItem('players', JSON.stringify(sortedPlayers));\n    localStorage.setItem('surfersScores', JSON.stringify(sortedScores));\n  }, [players, surfersScores]);\n  useEffect(() => {\n    let intervalId;\n    if (timerOn) {\n      intervalId = setInterval(() => {\n        setTime(prevTime => {\n          const newTime = prevTime - 1;\n          if (newTime <= 0) {\n            clearInterval(intervalId);\n            setTimesUp(true);\n            return 0;\n          }\n          return newTime;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [timerOn]);\n  useEffect(() => {\n    if (timesUp) {\n      setTimerOn(false);\n      setTime(heatLength);\n      console.log(`heatLength: ${heatLength}`);\n      setTimesUp(false);\n    }\n  }, [timesUp]);\n  const toggleTimer = () => {\n    if (timerOn) {\n      setTimerOn(false);\n    } else {\n      setTimerOn(true);\n    }\n  };\n  const rankStatus = (player, index, score) => {\n    console.log(`ranksStatus => surfersScores player: ${player} index: ${index} score: ${score}`);\n    const winsBy = 'Wins by 7.17';\n    const needs = 'Needs 0.01';\n    if (index === 0) {\n      return winsBy;\n    }\n    return needs;\n  };\n  const surfingRanks = (player, index, score) => {\n    const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent size20 bold\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-10 p-10 w-100\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3ColumnLeft m-1 p-10\",\n        children: player\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3ColumnRight mr-10 p-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"copyright bold\",\n          children: rankStatus(player, index, score)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, getKey(player), true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 30\n    }, this);\n    return surferScores;\n  };\n  const findTwoHighestIndices = scores => {\n    let highestIndex = 0;\n    let secondHighestIndex = -1;\n    scores.forEach((score, index) => {\n      if (score > scores[highestIndex]) {\n        secondHighestIndex = highestIndex;\n        highestIndex = index;\n      } else if (secondHighestIndex === -1 || score > scores[secondHighestIndex]) {\n        secondHighestIndex = index;\n      }\n    });\n    return [highestIndex, secondHighestIndex];\n  };\n  const getWave = (playerId, index, score) => {\n    console.log(`getWave => playerId: ${playerId} index: ${index} score: ${score}`);\n    const highestScores = findTwoHighestIndices(playerScores[playerId].scores);\n    const highestId = highestScores[0];\n    const secondHighestId = highestScores[1];\n    const firstScore = index === highestId ? true : false;\n    const secondScore = index === secondHighestId ? true : false;\n    const getClasses = firstScore || secondScore ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n    const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"greet bold color-yellow bg-dkYellow w-100 p-5\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getClasses,\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 22\n    }, this);\n    return wave;\n  };\n  const addScoreForPlayer = (players, playerIndex, score) => {\n    if (playerIndex >= 0 && playerIndex < players.length) {\n      players[playerIndex].scores.push(score);\n    }\n  };\n  //addScoreForPlayer(players, 0, 94);\n  // Find the indices of the two highest scores for each player\n  const getTwoHighestScores = playerIndex => {\n    const player = playerScores[playerIndex];\n    const [highestIndex, secondHighestIndex] = findTwoHighestIndices(playerScores[playerIndex].scores);\n    console.log(`${player.name}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n    return {\n      'highScoreIndex': highestIndex,\n      'secondHighScoreIndex': secondHighestIndex\n    };\n  };\n  const floatDecimalOneDigit = number => {\n    if (Number.isInteger(number) && number >= 10 && number <= 99) {\n      return number / 10;\n    } else {\n      return null;\n    }\n  };\n  const surfingScores = (player, index, score) => {\n    console.log(`surfingScores => player: ${player} index: ${index} score:${playerScores[index].scores[0]}`);\n    const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer width-100-percent mt--10 mb--10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-10 p-5 w-100 size40 mt-10\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3ColumnLeft m-1 p-5 size40 mt-10\",\n          children: player\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3ColumnRight mr-10 p-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"size25 bold\",\n            children: score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: rankStatus(player, index, score)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)]\n      }, getKey(player), true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-scroll color-white copyright m-10\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"container mt-10\",\n              children: playerScores[index].scores.map((score, wave) => getWave(index, wave, floatDecimalOneDigit(score)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 30\n    }, this);\n    return surferScores;\n  };\n  const getSurfTotal = player => {\n    let total = 0;\n    const score = index => localStorage.getItem(surfKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    surfScoring.map((target, index) => {\n      console.log(`getSurfTotal=> ${surfKey(player, index)} ${index}: ${total}`);\n      addToTotal(Number(score(index)));\n    });\n    //console.log(`getsurfTotalplayer=> ${player}: ${total}`)\n    return total;\n  };\n  const scorecard = (player, index, score) => {\n    console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n    return /*#__PURE__*/_jsxDEV(ScoreCard, {\n      game: game,\n      player: player,\n      index: index,\n      editPlayer: editPlayer,\n      deletePlayer: deletePlayer,\n      updateTwoPlayerScores: updateTwoPlayerScores,\n      winner: winner\n    }, getKey(player), false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 16\n    }, this);\n  };\n  const surfScores = surfScoring.map((wave, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexContainer width-100-percent\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex3Column p-5\",\n      children: scorecard(index, index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-20 r-5 font50 color-yellow m-auto\",\n      children: wave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex3Column p-5\",\n      children: scorecard(index, index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this)]\n  }, getKey(wave), true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 57\n  }, this));\n  const getSurfScore = index => {\n    const newPlayer = {\n      'name': players[index],\n      'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    };\n    if (playerScores.length < players.length) {\n      playerScores.push(newPlayer);\n    }\n    const scoreTotal = floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex]));\n    return scoreTotal;\n  };\n  const surfingScoreboard = sortedPlayers.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n  const surfClass = playerIndex => 'flex3Column p-20 size25 bold' + (isWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n  const surfScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: surfClass(0),\n        children: [players[0], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-yellow mt-10\",\n          children: getSurfTotal(players[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 bg-yellow navBranding w-200\",\n        children: \"vs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: surfClass(1),\n        children: [players[1], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-yellow mt-10\",\n          children: getSurfTotal(players[1])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this), surfScores]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 28\n  }, this);\n  const getTimerButtonClasses = () => {\n    const timerButtonClasses = timerOn ? 'bg-red m-10 r-10 bold size20 p-20 color-light' : 'bg-green m-10 r-10 bold size20 p-20 color-light';\n    return timerButtonClasses;\n  };\n  const getTimerClasses = () => {\n    const timerClasses = time < 120 ? 'blinking-fade' : '';\n    return timerClasses;\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getTimerButtonClasses(),\n      onClick: () => toggleTimer(),\n      children: timerOn ? 'STOP' : 'START'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dkBlue m-10 r-10 bold size20 p-20 color-light0\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: getTimerClasses(),\n        children: formatTime(time)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 84\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer color-yellow bold greet ml-10 mr-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-10 p-10 w-100 bg-dkGreen m-1 r-5-lft\",\n          children: \"Rank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3ColumnLeft m-1 p-10 bg-dkGreen m-1\",\n          children: \"Athlete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3ColumnRight mr-10 p-10 bg-dkGreen m-1 r-5-rt\",\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 12\n  }, this);\n};\n_s(SurfScores, \"DA5jzZZvBaV/IjrYQbVwxTGSAuA=\");\n_c = SurfScores;\nexport default SurfScores;\nvar _c;\n$RefreshReg$(_c, \"SurfScores\");","map":{"version":3,"names":["React","useState","useEffect","LongPressButton","Selector","getKey","ScoreCard","jsxDEV","_jsxDEV","SurfScores","_ref","_s","player","index","scoreTotal","editPlayer","deletePlayer","winner","updateTwoPlayerScores","game","surfKey","initPlayers","players","setPlayers","JSON","parse","localStorage","getItem","surfersScores","setSurfersScores","timerOn","setTimerOn","surfScoring","playerScores","name","scores","playerData","map","score","sort","a","b","sortedPlayers","data","sortedScores","setSortedPlayers","setSortedScores","setItem","stringify","intervalId","setInterval","setTime","prevTime","newTime","clearInterval","setTimesUp","timesUp","heatLength","console","log","toggleTimer","rankStatus","winsBy","needs","surfingRanks","surferScores","className","children","fileName","_jsxFileName","lineNumber","columnNumber","findTwoHighestIndices","highestIndex","secondHighestIndex","forEach","getWave","playerId","highestScores","highestId","secondHighestId","firstScore","secondScore","getClasses","wave","class","addScoreForPlayer","playerIndex","length","push","getTwoHighestScores","floatDecimalOneDigit","number","Number","isInteger","surfingScores","getSurfTotal","total","addToTotal","value","target","scorecard","surfScores","getSurfScore","newPlayer","highScoreIndex","secondHighScoreIndex","surfingScoreboard","surfClass","isWinner","surfScoreboard","Fragment","getTimerButtonClasses","timerButtonClasses","getTimerClasses","timerClasses","time","onClick","formatTime","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/SurfScores.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LongPressButton from './LongPressButton.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport ScoreCard from './ScoreCard.js';\n\nconst SurfScores = ({ player, index, scoreTotal, editPlayer, deletePlayer, winner, updateTwoPlayerScores, game, surfKey}) => {\n\n    const initPlayers = ['You', 'Me'];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n    const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n    const [timerOn, setTimerOn] = useState(false);\n    const surfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const playerScores = [\n        { name: 'Player 1', scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88] },\n        { name: 'Player 2', scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81] },\n        { name: 'Player 3', scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89] },\n    ];\n    \n    useEffect(() => {\n\n        const playerData = players.map((player, index) => ({ player, score: surfersScores[index] }));\n        playerData.sort((a, b) => b.score - a.score);\n\n        const sortedPlayers = playerData.map((data) => data.player);\n        const sortedScores = playerData.map((data) => data.score);\n\n        setSortedPlayers(sortedPlayers);\n        setSortedScores(sortedScores);\n\n        localStorage.setItem('players', JSON.stringify(sortedPlayers));\n        localStorage.setItem('surfersScores', JSON.stringify(sortedScores));\n\n    }, [players, surfersScores]);\n\n    useEffect(() => {\n        let intervalId;\n        if (timerOn) {\n            intervalId = setInterval(() => {\n                setTime((prevTime) => {\n                    const newTime = prevTime - 1;\n                    if (newTime <= 0) {\n                        clearInterval(intervalId);\n                        setTimesUp(true);\n                        return 0;\n                    }\n                    return newTime;\n                });\n            }, 1000);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [timerOn]);\n\n    useEffect(() => {\n        if (timesUp) {\n            setTimerOn(false);\n            setTime(heatLength);\n            console.log(`heatLength: ${heatLength}`)\n            setTimesUp(false);\n        }\n    }, [timesUp]);\n\n    const toggleTimer = () => {\n        if (timerOn) {\n            setTimerOn(false)\n        } else {\n            setTimerOn(true)\n        }\n    }\n\n    const rankStatus = (player, index, score) => {\n        console.log(`ranksStatus => surfersScores player: ${player} index: ${index} score: ${score}`)\n        const winsBy = 'Wins by 7.17';\n        const needs = 'Needs 0.01';\n        if (index === 0) {\n            return winsBy\n        }\n        return needs\n    }\n\n    const surfingRanks = (player, index, score) => {\n        const surferScores = <div className='flexContainer width-100-percent size20 bold' key={getKey(player)}>\n            <div className='ml-10 p-10 w-100'>{index + 1}</div>\n            <div className='flex3ColumnLeft m-1 p-10'>{player}</div>\n            <div className='flex3ColumnRight mr-10 p-10'>\n                <div>{score}</div>\n                <div className='copyright bold'>{rankStatus(player, index, score)}</div>\n            </div>\n        </div>\n        return surferScores\n    }\n\n    const findTwoHighestIndices = (scores) => {\n        let highestIndex = 0;\n        let secondHighestIndex = -1;\n\n        scores.forEach((score, index) => {\n            if (score > scores[highestIndex]) {\n                secondHighestIndex = highestIndex;\n                highestIndex = index;\n            } else if (secondHighestIndex === -1 || score > scores[secondHighestIndex]) {\n                secondHighestIndex = index;\n            }\n        });\n\n        return [highestIndex, secondHighestIndex];\n    };\n\n    const getWave = (playerId, index, score) => {\n        console.log(`getWave => playerId: ${playerId} index: ${index} score: ${score}`);\n        const highestScores = findTwoHighestIndices(playerScores[playerId].scores);\n        const highestId = highestScores[0];\n        const secondHighestId = highestScores[1];\n        const firstScore = (index === highestId) ? true : false;\n        const secondScore = (index === secondHighestId) ? true : false;\n        const getClasses = (firstScore || secondScore) ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n        const wave = <div class=\"column\">\n            <div className='greet bold color-yellow bg-dkYellow w-100 p-5'>{index + 1}</div>\n            <div className={getClasses}>{score}</div>\n        </div>\n        return wave\n    }\n\n    const addScoreForPlayer = (players, playerIndex, score) => {\n        if (playerIndex >= 0 && playerIndex < players.length) {\n            players[playerIndex].scores.push(score);\n        }\n    };\n    //addScoreForPlayer(players, 0, 94);\n    // Find the indices of the two highest scores for each player\n    const getTwoHighestScores = (playerIndex) => {\n        const player = playerScores[playerIndex];\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(playerScores[playerIndex].scores);\n        console.log(`${player.name}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            'highScoreIndex': highestIndex,\n            'secondHighScoreIndex': secondHighestIndex\n        }\n    }\n    const floatDecimalOneDigit = (number) => {\n        if (Number.isInteger(number) && number >= 10 && number <= 99) {\n            return number / 10;\n        } else {\n            return null;\n        }\n    };\n\n    const surfingScores = (player, index, score) => {\n        console.log(`surfingScores => player: ${player} index: ${index} score:${playerScores[index].scores[0]}`);\n        const surferScores = <div>\n            <div className='flexContainer width-100-percent mt--10 mb--10' key={getKey(player)}>\n                <div className='ml-10 p-5 w-100 size40 mt-10'>{index + 1}</div>\n                <div className='flex3ColumnLeft m-1 p-5 size40 mt-10'>{player}</div>\n                <div className='flex3ColumnRight mr-10 p-5'>\n                    <div className='size25 bold'>{score}</div>\n                    <div>{rankStatus(player, index, score)}</div>\n                </div>\n            </div>\n            <div>\n                <div>\n                    <div className='h-scroll color-white copyright m-10'>\n                        <div class=\"container mt-10\">\n                            {playerScores[index].scores.map((score, wave) => getWave(index, wave, floatDecimalOneDigit(score)))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        return surferScores\n    }\n\n    const getSurfTotal = (player) => {\n        let total = 0;\n        const score = (index) => localStorage.getItem(surfKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n            console.log(`getSurfTotal=> ${surfKey(player, index)} ${index}: ${total}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        //console.log(`getsurfTotalplayer=> ${player}: ${total}`)\n        return total;\n    }\n\n    const scorecard = (player, index, score) => {\n        \n        console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n        return <ScoreCard\n            game={game}\n            player={player}\n            index={index}\n            editPlayer={editPlayer}\n            deletePlayer={deletePlayer}\n            updateTwoPlayerScores={updateTwoPlayerScores}\n            winner={winner}\n            key={getKey(player)}\n        />\n\n    }\n\n    const surfScores = surfScoring.map((wave, index) => <div className='flexContainer width-100-percent' key={getKey(wave)}>\n            <div className='flex3Column p-5'>\n                {scorecard(index, index)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {wave}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(index, index)}\n            </div>\n        </div>);\n\n    const getSurfScore = (index) => {\n        const newPlayer = {\n            'name': players[index],\n            'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        }\n        if (playerScores.length < players.length) {\n            playerScores.push(newPlayer)\n        }\n        const scoreTotal = floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex]));\n        return scoreTotal;\n    };\n\n    const surfingScoreboard = sortedPlayers.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n\n    const surfClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        \n    const surfScoreboard = <React.Fragment>\n                <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                    <div className={surfClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getSurfTotal(players[0])}</div></div>\n                    <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                    <div className={surfClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getSurfTotal(players[1])}</div></div>\n                </div>\n                {surfScores}\n            </React.Fragment>\n        \n    const getTimerButtonClasses = () => {\n        const timerButtonClasses = timerOn ? 'bg-red m-10 r-10 bold size20 p-20 color-light' : 'bg-green m-10 r-10 bold size20 p-20 color-light';\n        return timerButtonClasses;\n    }\n    const getTimerClasses = () => {\n        const timerClasses = (time < 120) ? 'blinking-fade' : '';\n        return timerClasses;\n    }\n\n    return <React.Fragment>\n                <div className={getTimerButtonClasses()} onClick={() => toggleTimer()}>\n                    {(timerOn) ? 'STOP' : 'START'}\n                </div>\n                <div className='bg-dkBlue m-10 r-10 bold size20 p-20 color-light0'><span className={getTimerClasses()}>{formatTime(time)}</span></div>\n                <div>\n                    <div className='flexContainer color-yellow bold greet ml-10 mr-10'>\n                        <div className='ml-10 p-10 w-100 bg-dkGreen m-1 r-5-lft'>Rank</div>\n                        <div className='flex3ColumnLeft m-1 p-10 bg-dkGreen m-1'>Athlete</div>\n                        <div className='flex3ColumnRight mr-10 p-10 bg-dkGreen m-1 r-5-rt'>Total</div>\n                    </div>\n                </div>\n\n            </React.Fragment>\n\n}\n   \nexport default SurfScores;"],"mappings":"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"},"metadata":{},"sourceType":"module"}