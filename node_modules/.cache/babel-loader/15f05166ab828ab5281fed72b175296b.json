{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/Logger.js\";\nimport React from 'react';\nimport LogEntry from './LogEntry.js';\n\nclass Logger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.templateData = {\n      Day: {},\n      Location: {},\n      Swell: {},\n      Wind: {},\n      Tide: {},\n      Conditions: {},\n      Comments: {}\n    };\n\n    this.getStateLog = () => this.state.log;\n\n    this.appData = () => {\n      let data;\n\n      const returnJSON = response => response.json();\n\n      const returnRejection = response => Promise.reject({\n        status: response.status,\n        data\n      });\n\n      const validate = response => response.ok ? returnJSON(response) : returnRejection(response);\n\n      const myInit = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        mode: 'cors',\n        cache: 'default'\n      };\n      const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n      fetch(uri).then(response => validate(response)).then(data => console.log(`DATA ============> ${JSON.stringify(data, null, 2)})`)).catch(err => console.log(\"Something went wrong!\\n\", err));\n    };\n\n    this.log = this.templateData;\n    this.state = {\n      date: new Date(),\n      log: {}\n    };\n    this.updateLog = this.updateLog.bind(this);\n    this.getStateLog = this.getStateLog.bind(this);\n  }\n\n  updateLog(groupTitle, label, selected, set) {\n    this.log[groupTitle][label] = selected;\n\n    if (groupTitle !== undefined && groupTitle !== 1 && selected !== undefined && set) {\n      this.setState({\n        log: this.log\n      });\n    }\n  }\n\n  render() {\n    console.log(`Logger => ${JSON.stringify(this.state, null, 2)}`);\n    return /*#__PURE__*/React.createElement(LogEntry, {\n      onChange: this.updateLog,\n      getStateLog: this.getStateLog,\n      title: \"Session Log\",\n      message: \"Add your session data\",\n      buttonLabel: \"Submit\",\n      items: this.appData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Logger;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/Logger.js"],"names":["React","LogEntry","Logger","Component","constructor","props","templateData","Day","Location","Swell","Wind","Tide","Conditions","Comments","getStateLog","state","log","appData","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","myInit","method","headers","mode","cache","uri","fetch","then","console","JSON","stringify","catch","err","date","Date","updateLog","bind","groupTitle","label","selected","set","undefined","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LogEntry from './LogEntry.js';\n   \nclass Logger extends React.Component {\n\n    templateData = {\n        Day: {},\n        Location: {},\n        Swell: {},\n        Wind: {},\n        Tide: {},\n        Conditions: {},\n        Comments: {}\n    };\n\n    constructor(props) {\n        super(props);\n        this.log = this.templateData;\n        this.state = {\n            date: new Date(),\n            log: {}\n        };\n        this.updateLog = this.updateLog.bind(this);\n        this.getStateLog = this.getStateLog.bind(this);\n    }\n\n    updateLog(groupTitle, label, selected, set) {\n        this.log[groupTitle][label] = selected;\n        if (groupTitle !== undefined && groupTitle !== 1 && selected !== undefined && set) {\n            this.setState({log: this.log});\n        }\n    }\n    getStateLog = () => this.state.log;\n    appData = () => {\n        let data\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        const myInit = {\n            method:'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            cache: 'default'\n        };\n        const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => console.log(`DATA ============> ${JSON.stringify(data, null, 2)})`))\n            .catch(err => console.log(\"Something went wrong!\\n\", err));\n    }\n\n    render() {\n        console.log(`Logger => ${JSON.stringify(this.state, null, 2)}`)\n        return (\n            <LogEntry\n                onChange={this.updateLog} \n                getStateLog={this.getStateLog} \n                title=\"Session Log\" \n                message=\"Add your session data\"  \n                buttonLabel=\"Submit\" \n                items={this.appData()}\n            />\n        )\n    }\n}\nexport default Logger;"]},"metadata":{},"sourceType":"module"}