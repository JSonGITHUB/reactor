{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/WindDirection.js\";\nimport React from 'react';\nimport Loader from '../utils/Loader.js';\nimport N from '../../assets/images/windN.png';\nimport NE from '../../assets/images/windNE.png';\nimport E from '../../assets/images/windE.png';\nimport SE from '../../assets/images/windSE.png';\nimport S from '../../assets/images/windS.png';\nimport SW from '../../assets/images/windSW.png';\nimport W from '../../assets/images/windW.png';\nimport NW from '../../assets/images/windNW.png';\n\nclass WindDirection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWindData = () => {\n      console.log(`getWind ->`);\n      let data;\n\n      const returnJSON = response => response.json();\n\n      const returnRejection = response => Promise.reject({\n        status: response.status,\n        data\n      });\n\n      const validate = response => response.ok ? returnJSON(response) : returnRejection(response);\n\n      let getCurrentTime = new Date();\n      const year = getCurrentTime.getFullYear();\n      const currentMonth = getCurrentTime.getMonth() + 1;\n      const month = currentMonth < 10 ? `0${currentMonth}` : currentMonth;\n      const currentDate = getCurrentTime.getDate();\n      const date = currentDate < 10 ? `0${currentDate}` : currentDate;\n      const currentHour = getCurrentTime.getHours();\n      const hours = currentHour < 10 ? `0${currentHour}` : currentHour;\n      const startHour = currentHour - 1 < 10 ? `0${currentHour - 1}` : currentHour - 1;\n      const currentMinutes = getCurrentTime.getMinutes();\n      const minutes = currentMinutes < 10 ? `0${currentMinutes}` : currentMinutes;\n      const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n      const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n      getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n      console.log(`Wind   - getStartTime: ${getStartTime} => getEndTime: ${getEndTime}`);\n      const uriWind = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getStartTime}&end_date=${getEndTime}&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n      const uriWindTest = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2020:00&end_date=20200520%2020:00&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n      const tri = 'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?date=latest&station=9410230&product=wind&time_zone=lst&units=english&format=json';\n      const uri = tri;\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\"; //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n\n      fetch(proxyurl + uri).then(response => validate(response)).then(data => {\n        console.log(`WindDirection => direction: ${JSON.stringify(data.data[data.data.length - 1], null, 2)}`);\n        this.props.setWind(data.data[data.data.length - 1].dr, data.data[data.data.length - 1].d, data.data[data.data.length - 1].s, data.data[data.data.length - 1].g);\n        this.setState({\n          station: data.metadata.name,\n          speed: data.data[data.data.length - 1].s,\n          angle: data.data[data.data.length - 1].d,\n          direction: data.data[data.data.length - 1].dr,\n          gusts: data.data[data.data.length - 1].g\n        });\n      }).catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n    };\n\n    this.getInterval = () => 300000;\n\n    this.getWindIcon = () => {\n      const windDirection = this.state.direction;\n      const classes = \"mt--10 mb--5 shaka r-20 p-2 bg-white\";\n\n      if (windDirection === \"N\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: N,\n          className: classes,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"NE\" || windDirection === \"NNE\" || windDirection === \"ENE\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: NE,\n          className: classes,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"E\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: E,\n          className: classes,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"SE\" || windDirection === \"SSE\" || windDirection === \"ESE\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: SE,\n          className: classes,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"S\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: S,\n          className: classes,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"SW\" || windDirection === \"SSW\" || windDirection === \"WSW\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: SW,\n          className: classes,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"W\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: W,\n          className: classes,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 20\n          }\n        });\n      } else if (windDirection === \"NW\" || windDirection === \"NNW\" || windDirection === \"WNW\") {\n        return /*#__PURE__*/React.createElement(\"img\", {\n          src: NW,\n          className: classes,\n          alt: windDirection,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.getCurrentWind = () => {\n      const {\n        columns\n      } = this.props;\n      const {\n        direction,\n        angle,\n        speed,\n        gusts\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, this.getWindIcon(), `${direction} ${Number(angle).toFixed(0)}Â°`), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, `${Number(speed).toFixed(0)}-${Number(gusts).toFixed(0)}`, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"greet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 82\n        }\n      }, \"knots\")));\n    };\n\n    this.state = {\n      direction: null,\n      columns: props.columns,\n      station: null,\n      speed: null,\n      angle: null,\n      gusts: null\n    };\n  }\n\n  componentDidMount() {\n    this.getWindData();\n    this.timerID = setInterval(() => this.getWindData(), this.getInterval());\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  /*\n  Water Level: 2.01 ft Above MLLW\n  Next Tide at 3:09 PM: Low 1.70 ft\n  Gusting to: 12.3 kts from WSW\n  */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 16\n      }\n    }, this.getCurrentWind());\n  }\n\n}\n\nexport default WindDirection;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/WindDirection.js"],"names":["React","Loader","N","NE","E","SE","S","SW","W","NW","WindDirection","Component","constructor","props","getWindData","console","log","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","getCurrentTime","Date","year","getFullYear","currentMonth","getMonth","month","currentDate","getDate","date","currentHour","getHours","hours","startHour","currentMinutes","getMinutes","minutes","getEndTime","getStartTime","uriWind","uriWindTest","tri","uri","proxyurl","fetch","then","JSON","stringify","length","setWind","dr","d","s","g","setState","station","metadata","name","speed","angle","direction","gusts","catch","err","window","location","pathname","getInterval","getWindIcon","windDirection","state","classes","getCurrentWind","columns","Number","toFixed","componentDidMount","timerID","setInterval","componentWillUnmount","clearInterval","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Loader from '../utils/Loader.js';\nimport N from '../../assets/images/windN.png'\nimport NE from '../../assets/images/windNE.png'\nimport E from '../../assets/images/windE.png'\nimport SE from '../../assets/images/windSE.png'\nimport S from '../../assets/images/windS.png'\nimport SW from '../../assets/images/windSW.png'\nimport W from '../../assets/images/windW.png'\nimport NW from '../../assets/images/windNW.png'\n\nclass WindDirection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            direction: null,\n            columns: props.columns,\n            station: null,\n            speed: null,\n            angle: null,\n            gusts: null\n        }\n    }\n    getWindData = () => {\n        console.log(`getWind ->`);\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        let getCurrentTime = new Date();\n        const year = getCurrentTime.getFullYear();\n        const currentMonth = getCurrentTime.getMonth()+1;\n        const month = ((currentMonth)<10) ? `0${(currentMonth)}` : currentMonth;\n        const currentDate = getCurrentTime.getDate();\n        const date = (currentDate<10) ? `0${currentDate}` : currentDate;\n        const currentHour = getCurrentTime.getHours();\n        const hours = (currentHour<10) ? `0${currentHour}` : currentHour;\n        const startHour = ((currentHour-1)<10) ? `0${(currentHour-1)}` : (currentHour-1);\n        const currentMinutes = getCurrentTime.getMinutes();\n        const minutes = (currentMinutes<10) ? `0${currentMinutes}` : currentMinutes;\n        const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n        getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        console.log(`Wind   - getStartTime: ${getStartTime} => getEndTime: ${getEndTime}`)\n        const uriWind = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getStartTime}&end_date=${getEndTime}&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriWindTest = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2020:00&end_date=20200520%2020:00&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const tri = 'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?date=latest&station=9410230&product=wind&time_zone=lst&units=english&format=json'\n        const uri = tri;\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n        //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        fetch(proxyurl + uri)\n            .then(response => validate(response))\n            .then(data => {\n                console.log(`WindDirection => direction: ${JSON.stringify(data.data[data.data.length - 1],null,2)}`)\n                this.props.setWind(data.data[data.data.length - 1].dr, data.data[data.data.length - 1].d, data.data[data.data.length - 1].s, data.data[data.data.length - 1].g)\n                this.setState({\n                    station: data.metadata.name,\n                    speed: data.data[data.data.length - 1].s,\n                    angle: data.data[data.data.length - 1].d,\n                    direction: data.data[data.data.length - 1].dr,\n                    gusts: data.data[data.data.length - 1].g\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n\n    }\n    /*\n    {\n        \"metadata\":{\n            \"id\":\"9410230\",\n            \"name\":\"La Jolla\",\n            \"lat\":\"32.8669\",\n            \"lon\":\"-117.2571\"\n        }, \n        \"data\": [\n            {\n                \"t\":\"2020-05-20 20:00\", \n                \"s\":\"5.25\", \n                \"d\":\"313.00\",\n                 \"dr\":\"NW\", \n                 \"g\":\"7.39\", \n                 \"f\":\"0,0\"\n            }\n        ]\n    }\n    */\n    getInterval = () => 300000;\n    componentDidMount() {\n        this.getWindData()\n        this.timerID = setInterval(() => this.getWindData(), this.getInterval());\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    /*\n    Water Level: 2.01 ft Above MLLW\n    Next Tide at 3:09 PM: Low 1.70 ft\n    Gusting to: 12.3 kts from WSW\n    */\n    getWindIcon = () => {\n        const windDirection = this.state.direction;\n        const classes = \"mt--10 mb--5 shaka r-20 p-2 bg-white\";\n        if (windDirection === \"N\") {\n            return <img src={N} className={classes} alt={windDirection} />;\n        } else if ((windDirection === \"NE\") || (windDirection === \"NNE\") || (windDirection === \"ENE\")) {\n            return <img src={NE} className={classes} alt={windDirection} />;\n        } else if (windDirection === \"E\") {\n            return <img src={E} className={classes} alt={windDirection} />;\n        } else if ((windDirection === \"SE\") || (windDirection === \"SSE\") || (windDirection === \"ESE\")) {\n            return <img src={SE} className={classes} alt={windDirection} />;\n        } else if (windDirection === \"S\") {\n            return <img src={S} className={classes} alt={windDirection} />;\n        } else if ((windDirection === \"SW\") || (windDirection === \"SSW\") || (windDirection === \"WSW\")) {\n            return <img src={SW} className={classes} alt={windDirection} />;\n        } else if (windDirection === \"W\") {\n            return <img src={W} className={classes} alt={windDirection} />;\n        } else if ((windDirection === \"NW\") || (windDirection === \"NNW\") || (windDirection === \"WNW\")) {\n            return <img src={NW} className={classes} alt={windDirection} />;\n        }\n    }\n    getCurrentWind = () => {\n        const { columns } = this.props;\n        const { direction, angle, speed, gusts } = this.state;\n        return (\n            <div>\n                <div>{this.getWindIcon()}{`${direction} ${Number(angle).toFixed(0)}Â°`}</div>\n                <div>{`${Number(speed).toFixed(0)}-${Number(gusts).toFixed(0)}`} <span className=\"greet\">knots</span></div>\n            </div>\n        )\n    }\n    render() {\n        return <div>{this.getCurrentWind()}</div>\n    };\n}\n\nexport default WindDirection;"]},"metadata":{},"sourceType":"module"}