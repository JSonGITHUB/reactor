{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/Lister.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CustomSpan from './CustomSpan.js';\n\nclass Lister extends React.Component {\n  constructor(text) {\n    super();\n    this.colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n    this.colorIndex = -1;\n    this.output = \"\";\n\n    this.getNextColor = () => {\n      this.colorIndex = this.colorIndex + 1;\n      return this.colors[this.colorIndex];\n    };\n\n    this.colorize = (value, index, array) => {\n      //console.log(\"index: \" + index); \n      //console.log(\"array: \" + array); \n      //        console.log(\"value: \" + value);\n      const character = value;\n      this.output = this.output + `<span className=\"${this.getNextColor()}\">${character}</span>`;\n    };\n\n    this.text = text.text;\n  } //letters = this.text.split('');\n\n\n  render() {\n    let yourClassName = \"\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bigHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, this.text.split('').map(function (listValue, index) {\n      yourClassName = this.colors[index];\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: yourClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 28\n        }\n      }, listValue); //return <span className={(index > 0) ? \"color-yellow\" : \"color-green\"}>{listValue}</span>;\n    }));\n  }\n\n}\n\nexport default Lister;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/Lister.js"],"names":["React","ReactDOM","CustomSpan","Lister","Component","constructor","text","colors","colorIndex","output","getNextColor","colorize","value","index","array","character","render","yourClassName","split","map","listValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AASjCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd;AADc,SAPlBC,MAOkB,GAPT,CAAC,aAAD,EAAgB,cAAhB,EAAgC,WAAhC,CAOS;AAAA,SANlBC,UAMkB,GANL,CAAC,CAMI;AAAA,SALlBC,MAKkB,GALT,EAKS;;AAAA,SAJlBC,YAIkB,GAJH,MAAM;AACjB,WAAKF,UAAL,GAAkB,KAAKA,UAAL,GAAkB,CAApC;AACA,aAAO,KAAKD,MAAL,CAAY,KAAKC,UAAjB,CAAP;AACH,KACiB;;AAAA,SAKlBG,QALkB,GAKP,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyB;AAChC;AACA;AACR;AACQ,YAAMC,SAAS,GAAGH,KAAlB;AACA,WAAKH,MAAL,GAAc,KAAKA,MAAL,GAAe,oBAAmB,KAAKC,YAAL,EAAoB,KAAIK,SAAU,SAAlF;AACH,KAXiB;;AAEd,SAAKT,IAAL,GAAYA,IAAI,CAACA,IAAjB;AACH,GAZgC,CAajC;;;AAQAU,EAAAA,MAAM,GAAG;AACL,QAAIC,aAAa,GAAG,EAApB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKX,IAAL,CAAUY,KAAV,CAAgB,EAAhB,EAAoBC,GAApB,CAAwB,UAASC,SAAT,EAAoBP,KAApB,EAA0B;AAC/CI,MAAAA,aAAa,GAAG,KAAKV,MAAL,CAAYM,KAAZ,CAAhB;AACA,0BAAO;AAAM,QAAA,SAAS,EAAEI,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCG,SAAjC,CAAP,CAF+C,CAG/C;AACH,KAJA,CADL,CADJ;AASH;;AAhCgC;;AAmCrC,eAAejB,MAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CustomSpan from './CustomSpan.js'\n\nclass Lister extends React.Component {\n    text;\n    colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n    colorIndex = -1;\n    output = \"\";\n    getNextColor = () => { \n        this.colorIndex = this.colorIndex + 1;\n        return this.colors[this.colorIndex];\n    };\n    constructor(text) {\n        super();\n        this.text = text.text;\n    }\n    //letters = this.text.split('');\n    colorize = (value, index, array) => {\n        //console.log(\"index: \" + index); \n        //console.log(\"array: \" + array); \n//        console.log(\"value: \" + value);\n        const character = value;\n        this.output = this.output + `<span className=\"${this.getNextColor()}\">${character}</span>`;\n    }\n    render() {\n        let yourClassName = \"\";\n        return (\n            <div className='bigHeader'>\n                {this.text.split('').map(function(listValue, index){\n                    yourClassName = this.colors[index];\n                    return <span className={yourClassName}>{listValue}</span>;\n                    //return <span className={(index > 0) ? \"color-yellow\" : \"color-green\"}>{listValue}</span>;\n                })}\n            </div>\n          );\n    }\n}\n\nexport default Lister;"]},"metadata":{},"sourceType":"module"}