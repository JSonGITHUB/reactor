{"ast":null,"code":"import _slicedToArray from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';export default function Adder(props){// Declare a new state variable, which we'll call \"count\"\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var label=props.label?props.label:\"How many?\";var unit=props.unit?props.unit:\"\";return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,label),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return setCount(count-1);}},\"-\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return setCount(count+1);}},\"+\"),/*#__PURE__*/React.createElement(\"p\",null,count,unit));}","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/hooks/Adder.js"],"names":["React","useState","Adder","props","count","setCount","label","unit"],"mappings":"qJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,cAAe,SAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACnC;AADmC,cAETF,QAAQ,CAAC,CAAD,CAFC,wCAE5BG,KAF4B,eAErBC,QAFqB,eAGjC,GAAMC,CAAAA,KAAK,CAAIH,KAAK,CAACG,KAAP,CAAgBH,KAAK,CAACG,KAAtB,CAA8B,WAA5C,CACA,GAAMC,CAAAA,IAAI,CAAIJ,KAAK,CAACI,IAAP,CAAeJ,KAAK,CAACI,IAArB,CAA4B,EAAzC,CACF,mBACE,4CACE,6BAAID,KAAJ,CADF,cAEE,8BAAQ,OAAO,CAAE,yBAAMD,CAAAA,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAd,EAAjB,MAFF,cAKE,8BAAQ,OAAO,CAAE,yBAAMC,CAAAA,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAd,EAAjB,MALF,cAQE,6BAAIA,KAAJ,CAAWG,IAAX,CARF,CADF,CAYD","sourcesContent":["import React, { useState } from 'react';\n\nexport default function Adder(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n    const label = (props.label) ? props.label : \"How many?\";\n    const unit = (props.unit) ? props.unit : \"\";\n  return (\n    <div>\n      <p>{label}</p>\n      <button onClick={() => setCount(count - 1)}>\n        -\n      </button>\n      <button onClick={() => setCount(count + 1)}>\n        +\n      </button>\n      <p>{count}{unit}</p>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}