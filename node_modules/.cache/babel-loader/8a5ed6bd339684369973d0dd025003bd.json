{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRatesConfig.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport menu from '../../assets/images/menuYellow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExchangeRatesConfig = _ref => {\n  _s();\n  let {\n    onExchangeRatesChange\n  } = _ref;\n  const defaultRates = {\n    USD: 1,\n    MXN: 17.16,\n    // Mexican Peso\n    NIO: 36.55,\n    // Nicaraguan Cordovas\n    CRC: 541.23,\n    // Costa Rican Colones\n    IDR: 15045.30,\n    // Indonesian Rupiah\n    AUD: 1.50 // Australian Dollar\n  };\n\n  const [exchangeRates, setExchangeRates] = useState(defaultRates);\n  const [settings, setSettings] = useState(false);\n  useEffect(() => {\n    const savedExchangeRates = JSON.parse(localStorage.getItem('exchangeRates')) || {};\n    const fetchRates = async () => {\n      try {\n        //const response = await fetch('https://api.exchangeratesapi.io/v1/' + endpoint + '?access_key=' + access_key + '&from=' + from + '&to=' + to + '&amount=' + amount);\n        const response = await fetch('http://localhost:3002/currency');\n        const data = await response.json();\n        console.log(`data: ${JSON.stringify(data, null, 2)}`);\n        setExchangeRates(data);\n        onExchangeRatesChange(exchangeRates);\n      } catch (error) {\n        //console.error('Error fetching exchange rates:', error);\n        //setData(templateData);\n      }\n    };\n    alert(`savedExchangeRates: ${JSON.stringify(savedExchangeRates, null, 2)}`);\n    const currentExchangeRates = savedExchangeRates != {} ? savedExchangeRates : fetchRates();\n    alert(`currentExchangeRates: ${JSON.stringify(currentExchangeRates, null, 2)}`);\n    if (currentExchangeRates != {} && currentExchangeRates === savedExchangeRates) {\n      alert('WHAT!!!');\n      setExchangeRates(currentExchangeRates);\n      onExchangeRatesChange(exchangeRates);\n    }\n    alert(`exchangeRates: ${JSON.stringify(exchangeRates, null, 2)}`);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n    onExchangeRatesChange(exchangeRates);\n  }, [exchangeRates]);\n  useEffect(() => {\n    localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n    onExchangeRatesChange(exchangeRates); // Invoke the callback when rates change\n  }, [exchangeRates, onExchangeRatesChange]);\n  const toggleSettings = () => {\n    setSettings(!settings);\n  };\n  const handleRateChange = (rate, value) => {\n    console.log(`handleRateChange 1 - value: ${value} rate: ${rate}`);\n    setExchangeRates(prevState => ({\n      ...prevState,\n      [rate]: value\n    }));\n    onExchangeRatesChange(exchangeRates);\n  };\n  const handleRateEnter = e => {\n    console.log(`handleRateEnter:1 - key: ${e.key}`);\n    if (e.key === 'Enter') {\n      console.log(`handleRateEnter:2 - key: ${e.key}`);\n      toggleSettings();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"color-yellow button\",\n        src: menu,\n        alt: \"open menu\",\n        onClick: () => toggleSettings()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), settings ? Object.keys(exchangeRates).map(rate => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"p-20 m-5 color-lite bold\",\n        htmlFor: rate,\n        children: rate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"p-20 m-5 color-lite bold bg-black\",\n        type: \"number\",\n        id: rate,\n        value: exchangeRates[rate],\n        onChange: e => handleRateChange(rate, e.target.value),\n        onKeyDown: e => handleRateEnter(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }, this)]\n    }, rate, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(ExchangeRatesConfig, \"cSg8rAcUVm/EvDUtICdXvK40KDM=\");\n_c = ExchangeRatesConfig;\nexport default ExchangeRatesConfig;\nvar _c;\n$RefreshReg$(_c, \"ExchangeRatesConfig\");","map":{"version":3,"names":["React","useState","useEffect","menu","jsxDEV","_jsxDEV","ExchangeRatesConfig","_ref","_s","onExchangeRatesChange","defaultRates","USD","MXN","NIO","CRC","IDR","AUD","exchangeRates","setExchangeRates","settings","setSettings","savedExchangeRates","JSON","parse","localStorage","getItem","fetchRates","response","fetch","data","json","console","log","stringify","error","alert","currentExchangeRates","setItem","toggleSettings","handleRateChange","rate","value","prevState","handleRateEnter","e","key","children","className","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","htmlFor","type","id","onChange","target","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRatesConfig.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport menu from '../../assets/images/menuYellow.png';\n\nconst ExchangeRatesConfig = ({ onExchangeRatesChange }) => {\n\n    const defaultRates = {\n        USD: 1,\n        MXN: 17.16,   // Mexican Peso\n        NIO: 36.55,   // Nicaraguan Cordovas\n        CRC: 541.23,    // Costa Rican Colones\n        IDR: 15045.30,  // Indonesian Rupiah\n        AUD: 1.50,    // Australian Dollar\n    }\n\n    const [exchangeRates, setExchangeRates] = useState(defaultRates);\n    const [settings, setSettings] = useState(false);\n\n    useEffect(() => {\n\n        const savedExchangeRates = JSON.parse(localStorage.getItem('exchangeRates')) || {};\n\n        const fetchRates = async () => {\n            try {\n                //const response = await fetch('https://api.exchangeratesapi.io/v1/' + endpoint + '?access_key=' + access_key + '&from=' + from + '&to=' + to + '&amount=' + amount);\n                const response = await fetch('http://localhost:3002/currency');\n                const data = await response.json();\n                console.log(`data: ${JSON.stringify(data, null, 2)}`);\n                setExchangeRates(data);\n                onExchangeRatesChange(exchangeRates)\n            } catch (error) {\n                //console.error('Error fetching exchange rates:', error);\n                //setData(templateData);\n            }\n        };\n        alert(`savedExchangeRates: ${JSON.stringify(savedExchangeRates, null, 2)}`)\n        const currentExchangeRates = (savedExchangeRates != {}) ? savedExchangeRates : fetchRates();\n        alert(`currentExchangeRates: ${JSON.stringify(currentExchangeRates, null, 2)}`)\n        if ((currentExchangeRates != {}) && (currentExchangeRates === savedExchangeRates)) {\n            alert('WHAT!!!')\n            setExchangeRates(currentExchangeRates);\n            onExchangeRatesChange(exchangeRates);\n        }\n        alert(`exchangeRates: ${JSON.stringify(exchangeRates, null, 2)}`)\n\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n        onExchangeRatesChange(exchangeRates);\n    }, [exchangeRates]);\n\n    useEffect(() => {\n        localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n        onExchangeRatesChange(exchangeRates); // Invoke the callback when rates change\n    }, [exchangeRates, onExchangeRatesChange]);\n\n    const toggleSettings = () => {\n        setSettings(!settings)\n    }\n\n    const handleRateChange = (rate, value) => {\n        console.log(`handleRateChange 1 - value: ${value} rate: ${rate}`);\n        setExchangeRates(prevState => ({\n            ...prevState,\n            [rate]: value\n        }));\n        onExchangeRatesChange(exchangeRates);\n    }\n    const handleRateEnter = (e) => {\n        console.log(`handleRateEnter:1 - key: ${e.key}`);\n        if (e.key === 'Enter') {\n            console.log(`handleRateEnter:2 - key: ${e.key}`);\n            toggleSettings();\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <img className='color-yellow button' src={menu} alt=\"open menu\" onClick={() => toggleSettings()} />\n            </div>\n            {settings ? (\n                Object.keys(exchangeRates).map(rate => (\n                    <div key={rate}>\n                        <label\n                            className='p-20 m-5 color-lite bold'\n                            htmlFor={rate}\n                        >\n                            {rate}\n                        </label>\n                        <input\n                            className='p-20 m-5 color-lite bold bg-black'\n                            type=\"number\"\n                            id={rate}\n                            value={exchangeRates[rate]}\n                            onChange={e => handleRateChange(rate, e.target.value)}\n                            onKeyDown={e => handleRateEnter(e)}\n                        />\n                    </div>\n                ))\n            ) : (\n                <div></div>\n            )}\n        </div>\n    );\n\n};\n\nexport default ExchangeRatesConfig;"],"mappings":"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"},"metadata":{},"sourceType":"module"}