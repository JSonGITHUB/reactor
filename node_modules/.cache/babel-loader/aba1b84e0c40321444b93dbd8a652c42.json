{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/Tide.js\";\nimport React from 'react';\nimport Loader from '../utils/Loader.js'; //import tide from '../../assets/images/tide.png'\n\nclass Tide extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getTideData = () => {\n      console.log(`getTide ->`);\n      let data;\n\n      const returnJSON = response => response.json();\n\n      const returnRejection = response => Promise.reject({\n        status: response.status,\n        data\n      });\n\n      const validate = response => response.ok ? returnJSON(response) : returnRejection(response);\n\n      let getCurrentTime = new Date();\n      const getEndTime = `${getCurrentTime.getFullYear()}${getCurrentTime.getMonth() + 1 < 10 ? `0${getCurrentTime.getMonth() + 1}` : getCurrentTime.getMonth() + 1}${getCurrentTime.getDate() < 10 ? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${getCurrentTime.getHours() < 10 ? `0${getCurrentTime.getHours()}` : getCurrentTime.getHours()}:${getCurrentTime.getMinutes() < 10 ? `0${getCurrentTime.getMinutes()}` : getCurrentTime.getMinutes()}`; //getCurrentTime = \"20200520%2018:24\";\n\n      const getStartTime = `${getCurrentTime.getFullYear()}${getCurrentTime.getMonth() + 1 < 10 ? `0${getCurrentTime.getMonth() + 1}` : getCurrentTime.getMonth() + 1}${getCurrentTime.getDate() < 10 ? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${getCurrentTime.getHours() < 10 ? `0${getCurrentTime.getHours()}` : getCurrentTime.getHours()}:00`;\n      getCurrentTime = `${getCurrentTime.getFullYear()}${getCurrentTime.getMonth() + 1 < 10 ? `0${getCurrentTime.getMonth() + 1}` : getCurrentTime.getMonth() + 1}${getCurrentTime.getDate() < 10 ? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${getCurrentTime.getHours() < 10 ? `0${getCurrentTime.getHours()}` : getCurrentTime.getHours()}:${getCurrentTime.getMinutes() < 10 ? `0${getCurrentTime.getMinutes()}` : getCurrentTime.getMinutes()}`;\n      console.log(`Tide   -      getCurrentTime: ${getCurrentTime} ===> 20200520%2018:24`);\n      const uriMLLW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getStartTime}&end_date=${getEndTime}&station=9410230&product=water_level&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n      const uriMHHW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MHHW&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n      const uriMHW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MHW&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n      const uriMTL = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MTL&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n      const uriMSL = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MSL&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n      const uriNAVD = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=NAVD&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n      const uriSTND = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=STND&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n      const uri = uriMLLW; //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n\n      fetch(uri).then(response => validate(response)).then(data => {\n        const waterLevel = Number(data.data[0].v).toFixed(1);\n        console.log(`tideData => ${JSON.stringify(data, null, 2)}`);\n        this.props.setTide(waterLevel);\n        this.setState({\n          station: data.metadata.name,\n          tide: \"HIGH\",\n          height: waterLevel\n        });\n      }).catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n    };\n\n    this.getInterval = () => this.state.height !== null ? 150000 : 30000;\n\n    this.getCurrentTide = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 28\n      }\n    }, this.state.height, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"greet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 53\n      }\n    }, \"feet\"));\n\n    this.percent = 'twentyfivePercent mt--70 mb--70';\n\n    this.loading = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: this.percent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      isMotionOn: this.props.isMotionOn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }));\n\n    this.state = {\n      tide: \"low\",\n      height: null\n    };\n  }\n\n  componentDidMount() {\n    this.getTideData();\n    this.timerID = setInterval(() => this.getTideData(), this.getInterval());\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }\n    }, this.getCurrentTide());\n  }\n\n}\n\nexport default Tide;\n/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/\n\n/* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/Tide.js"],"names":["React","Loader","Tide","Component","constructor","props","getTideData","console","log","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","getCurrentTime","Date","getEndTime","getFullYear","getMonth","getDate","getHours","getMinutes","getStartTime","uriMLLW","uriMHHW","uriMHW","uriMTL","uriMSL","uriNAVD","uriSTND","uri","fetch","then","waterLevel","Number","v","toFixed","JSON","stringify","setTide","setState","station","metadata","name","tide","height","catch","err","window","location","pathname","getInterval","state","getCurrentTide","percent","loading","isMotionOn","componentDidMount","timerID","setInterval","componentWillUnmount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB,C,CACA;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,WAPmB,GAOL,MAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAa,YAAb;AACA,UAAIC,IAAJ;;AACA,YAAMC,UAAU,GAAIC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAjC;;AACA,YAAMC,eAAe,GAAIF,QAAD,IAAcG,OAAO,CAACC,MAAR,CAAe;AAACC,QAAAA,MAAM,EAAEL,QAAQ,CAACK,MAAlB;AAA0BP,QAAAA;AAA1B,OAAf,CAAtC;;AACA,YAAMQ,QAAQ,GAAIN,QAAD,IAAeA,QAAQ,CAACO,EAAV,GAAgBR,UAAU,CAACC,QAAD,CAA1B,GAAuCE,eAAe,CAACF,QAAD,CAArF;;AACA,UAAIQ,cAAc,GAAG,IAAIC,IAAJ,EAArB;AACA,YAAMC,UAAU,GAAI,GAAGF,cAAc,CAACG,WAAf,EAA8B,GAAIH,cAAc,CAACI,QAAf,KAA0B,CAA3B,GAA8B,EAA/B,GAAsC,IAAIJ,cAAc,CAACI,QAAf,KAA0B,CAAG,EAAvE,GAA4EJ,cAAc,CAACI,QAAf,KAA0B,CAAG,GAAGJ,cAAc,CAACK,OAAf,KAAyB,EAA1B,GAAgC,IAAGL,cAAc,CAACK,OAAf,EAAyB,EAA5D,GAAgEL,cAAc,CAACK,OAAf,EAAyB,MAAOL,cAAc,CAACM,QAAf,EAAD,GAA4B,EAA7B,GAAoC,IAAIN,cAAc,CAACM,QAAf,EAA2B,EAAnE,GAAwEN,cAAc,CAACM,QAAf,EAA2B,IAAKN,cAAc,CAACO,UAAf,EAAD,GAA8B,EAA/B,GAAsC,IAAIP,cAAc,CAACO,UAAf,EAA6B,EAAvE,GAA4EP,cAAc,CAACO,UAAf,EAA6B,EAA/c,CAPgB,CAQhB;;AACA,YAAMC,YAAY,GAAI,GAAGR,cAAc,CAACG,WAAf,EAA8B,GAAIH,cAAc,CAACI,QAAf,KAA0B,CAA3B,GAA8B,EAA/B,GAAsC,IAAIJ,cAAc,CAACI,QAAf,KAA0B,CAAG,EAAvE,GAA4EJ,cAAc,CAACI,QAAf,KAA0B,CAAG,GAAGJ,cAAc,CAACK,OAAf,KAAyB,EAA1B,GAAgC,IAAGL,cAAc,CAACK,OAAf,EAAyB,EAA5D,GAAgEL,cAAc,CAACK,OAAf,EAAyB,MAAOL,cAAc,CAACM,QAAf,EAAD,GAA4B,EAA7B,GAAoC,IAAIN,cAAc,CAACM,QAAf,EAA2B,EAAnE,GAAwEN,cAAc,CAACM,QAAf,EAA2B,KAArW;AAEAN,MAAAA,cAAc,GAAI,GAAGA,cAAc,CAACG,WAAf,EAA8B,GAAIH,cAAc,CAACI,QAAf,KAA0B,CAA3B,GAA8B,EAA/B,GAAsC,IAAIJ,cAAc,CAACI,QAAf,KAA0B,CAAG,EAAvE,GAA4EJ,cAAc,CAACI,QAAf,KAA0B,CAAG,GAAGJ,cAAc,CAACK,OAAf,KAAyB,EAA1B,GAAgC,IAAGL,cAAc,CAACK,OAAf,EAAyB,EAA5D,GAAgEL,cAAc,CAACK,OAAf,EAAyB,MAAOL,cAAc,CAACM,QAAf,EAAD,GAA4B,EAA7B,GAAoC,IAAIN,cAAc,CAACM,QAAf,EAA2B,EAAnE,GAAwEN,cAAc,CAACM,QAAf,EAA2B,IAAKN,cAAc,CAACO,UAAf,EAAD,GAA8B,EAA/B,GAAsC,IAAIP,cAAc,CAACO,UAAf,EAA6B,EAAvE,GAA4EP,cAAc,CAACO,UAAf,EAA6B,EAA7c;AACCnB,MAAAA,OAAO,CAACC,GAAR,CAAa,iCAAgCW,cAAe,wBAA5D;AACD,YAAMS,OAAO,GAAI,+DAA8DD,YAAa,aAAYN,UAAW,sHAAnH;AACA,YAAMQ,OAAO,GAAI,+DAA8DV,cAAe,aAAYA,cAAe,sHAAzH;AACA,YAAMW,MAAM,GAAI,+DAA8DX,cAAe,aAAYA,cAAe,qHAAxH;AACA,YAAMY,MAAM,GAAI,+DAA8DZ,cAAe,aAAYA,cAAe,qHAAxH;AACA,YAAMa,MAAM,GAAI,+DAA8Db,cAAe,aAAYA,cAAe,qHAAxH;AACA,YAAMc,OAAO,GAAI,+DAA8Dd,cAAe,aAAYA,cAAe,sHAAzH;AACA,YAAMe,OAAO,GAAI,+DAA8Df,cAAe,aAAYA,cAAe,sHAAzH;AAEA,YAAMgB,GAAG,GAAGP,OAAZ,CArBgB,CAuBhB;;AACAQ,MAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACU1B,QAAQ,IAAIM,QAAQ,CAACN,QAAD,CAD9B,EAEK0B,IAFL,CAEU5B,IAAI,IAAI;AACV,cAAM6B,UAAU,GAAGC,MAAM,CAAC9B,IAAI,CAACA,IAAL,CAAU,CAAV,EAAa+B,CAAd,CAAN,CAAuBC,OAAvB,CAA+B,CAA/B,CAAnB;AACAlC,QAAAA,OAAO,CAACC,GAAR,CAAa,eAAckC,IAAI,CAACC,SAAL,CAAelC,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAA8B,EAAzD;AACA,aAAKJ,KAAL,CAAWuC,OAAX,CAAmBN,UAAnB;AACA,aAAKO,QAAL,CAAc;AACVC,UAAAA,OAAO,EAAErC,IAAI,CAACsC,QAAL,CAAcC,IADb;AAEVC,UAAAA,IAAI,EAAC,MAFK;AAGVC,UAAAA,MAAM,EAAEZ;AAHE,SAAd;AAKH,OAXL,EAYKa,KAZL,CAYWC,GAAG,IAAI7C,OAAO,CAACC,GAAR,CAAa,+BAA8B2B,GAAI,YAAWkB,MAAM,CAACC,QAAP,CAAgBC,QAAS,IAAnF,EAAwFH,GAAxF,CAZlB;AAcH,KA7CkB;;AAAA,SA8CnBI,WA9CmB,GA8CL,MAAO,KAAKC,KAAL,CAAWP,MAAX,KAAsB,IAAvB,GAA+B,MAA/B,GAAwC,KA9CzC;;AAAA,SAsDnBQ,cAtDmB,GAsDF,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,KAAL,CAAWP,MAAjB,oBAAyB;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzB,CAtDJ;;AAAA,SAuDnBS,OAvDmB,GAuDT,iCAvDS;;AAAA,SAwDnBC,OAxDmB,GAwDT,mBAAM;AAAK,MAAA,SAAS,EAAE,KAAKD,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAE,KAAKtD,KAAL,CAAWwD,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,CAxDG;;AAEf,SAAKJ,KAAL,GAAa;AACTR,MAAAA,IAAI,EAAE,KADG;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAIH;;AAyCDY,EAAAA,iBAAiB,GAAG;AAChB,SAAKxD,WAAL;AACA,SAAKyD,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAK1D,WAAL,EAAP,EAA2B,KAAKkD,WAAL,EAA3B,CAA1B;AACH;;AACDS,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKH,OAAN,CAAb;AACH;;AAMDI,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKT,cAAL,EAAN,CAAP;AACH;;AA9D8B;;AAiEnC,eAAexD,IAAf;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA","sourcesContent":["import React from 'react';\nimport Loader from '../utils/Loader.js';\n//import tide from '../../assets/images/tide.png'\n\nclass Tide extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tide: \"low\",\n            height: null\n        }\n    }\n    getTideData = () => {\n        console.log(`getTide ->`);\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        let getCurrentTime = new Date();\n        const getEndTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${((getCurrentTime.getHours())<10) ? `0${(getCurrentTime.getHours())}` : (getCurrentTime.getHours())}:${((getCurrentTime.getMinutes())<10) ? `0${(getCurrentTime.getMinutes())}` : (getCurrentTime.getMinutes())}`;\n        //getCurrentTime = \"20200520%2018:24\";\n        const getStartTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${((getCurrentTime.getHours())<10) ? `0${(getCurrentTime.getHours())}` : (getCurrentTime.getHours())}:00`;\n       \n        getCurrentTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${((getCurrentTime.getHours())<10) ? `0${(getCurrentTime.getHours())}` : (getCurrentTime.getHours())}:${((getCurrentTime.getMinutes())<10) ? `0${(getCurrentTime.getMinutes())}` : (getCurrentTime.getMinutes())}`\n         console.log(`Tide   -      getCurrentTime: ${getCurrentTime} ===> 20200520%2018:24`)\n        const uriMLLW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getStartTime}&end_date=${getEndTime}&station=9410230&product=water_level&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMHHW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MHHW&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMHW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MHW&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMTL = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MTL&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMSL = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MSL&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriNAVD = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=NAVD&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriSTND = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=STND&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n\n        const uri = uriMLLW;\n        \n        //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                const waterLevel = Number(data.data[0].v).toFixed(1);\n                console.log(`tideData => ${JSON.stringify(data, null, 2)}`)\n                this.props.setTide(waterLevel)\n                this.setState({\n                    station: data.metadata.name,\n                    tide:\"HIGH\",\n                    height: waterLevel\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n\n    }\n    getInterval = () => (this.state.height !== null) ? 150000 : 30000;\n    componentDidMount() {\n        this.getTideData();\n        this.timerID = setInterval(() => this.getTideData(), this.getInterval());\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    getCurrentTide = () => <div>{this.state.height} <span className=\"greet\">feet</span></div>;\n    percent = 'twentyfivePercent mt--70 mb--70';\n    loading = () => <div className={this.percent}>\n                <Loader isMotionOn={this.props.isMotionOn}/>\n            </div>;\n    render() {\n        return <div>{this.getCurrentTide()}</div>\n    };\n}\n\nexport default Tide;\n/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/\n\n/* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/"]},"metadata":{},"sourceType":"module"}