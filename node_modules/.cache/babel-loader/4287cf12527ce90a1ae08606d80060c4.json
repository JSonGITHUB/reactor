{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreKeeper = () => {\n  _s();\n  const surfScoring = ['', '', '', '', '', '', '', '', '', ''];\n  const initPlayers = [{\n    name: 'You',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: ['', '', '', '', '', '', '', '', '', ''],\n    surfJerseyColor: 0,\n    surfPriority: 0,\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }, {\n    name: 'Me',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: ['', '', '', '', '', '', '', '', '', ''],\n    surfJerseyColor: 0,\n    surfPriority: 0,\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }];\n  const initNewPlayer = name => {\n    const newPlayer = {\n      name: name,\n      score: 0,\n      dominoScore: 0,\n      golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      surfScores: ['', '', '', '', '', '', '', '', '', ''],\n      surfJerseyColor: 0,\n      surfPriority: 0,\n      cricketScores: [0, 0, 0, 0, 0, 0, 0]\n    };\n    return newPlayer;\n  };\n  const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n  const winners = [5, 10, 11, 15, 20, 21];\n  const dominoWinners = [50, 100, 150, 200];\n  const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n  const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n  const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n  const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n  const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n  const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n  const [heatLength, setHeatLength] = useState(60 * 60);\n  const [waveCount, setWaveCount] = useState(['', '', '', '', '', '', '', '', '', '']);\n  const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || []);\n  const darts = game !== 'darts' ? false : true;\n  const dominos = game !== 'dominos' ? false : true;\n  const surf = game !== 'surf' ? false : true;\n  const golf = game !== 'golf' ? false : true;\n  const cricketKey = (player, index) => `${player.player || player.name}Cricket${index}`;\n  const golfKey = (player, index) => `${player.player || player.name}Golf${index}`;\n  const surfKey = (player, index) => `${player.player || player.name}Surf${index}`;\n  const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n  const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n  const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n  const dominoScoring = [50, 100, 150, 200];\n  const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n  const [surferData, setSurferData] = useState([]);\n  const getScoreTotal = index => {\n    const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n    const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n    const score = highestScore + secondHighestScore;\n    console.log(`getScore => player: ${index} score: ${score}`);\n    return score;\n  };\n  const findTwoHighestIndices = scores => {\n    console.log(`findTwoHighestIndices0 => scores: ${scores}`);\n    const newScores = scores !== undefined ? scores : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    let highestIndex = -1;\n    let secondHighestIndex = -1;\n    let highestScore = -Infinity;\n    let secondHighestScore = -Infinity;\n    for (let i = 0; i < newScores.length; i++) {\n      if (newScores[i] > highestScore) {\n        secondHighestIndex = highestIndex;\n        secondHighestScore = highestScore;\n        highestIndex = i;\n        highestScore = newScores[i];\n        console.log(`findTwoHighestIndices1 => scores: ${newScores} scoreIndex: ${i} highestScore: ${highestScore}`);\n      } else if (newScores[i] > secondHighestScore) {\n        secondHighestIndex = i;\n        secondHighestScore = newScores[i];\n        console.log(`findTwoHighestIndices2 => scores: ${newScores} scoreIndex: ${i} secondHighestScore: ${secondHighestScore}`);\n      }\n    }\n    return [highestIndex, secondHighestIndex];\n  };\n  const getTwoHighestScores = playerIndex => {\n    const player = players[playerIndex];\n    const scores = player.surfScores;\n    const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n    console.log(`getTwoHighestScores => playerIndex: ${playerIndex} player: ${JSON.stringify(player, null, 2)} name: ${player.player || player.name}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n    return {\n      highScoreIndex: highestIndex,\n      secondHighScoreIndex: secondHighestIndex\n    };\n  };\n  const floatDecimalOneDigit = number => {\n    if (Number.isInteger(number) && number >= 10 && number <= 99) {\n      return `${number / 10}.00`;\n    } else {\n      return `${number}.00`;\n    }\n  };\n  const highestScore = (playerIndex, playersArray) => {\n    console.log(`highestScore = (playerIndex: ${playerIndex}, playersArray: ${JSON.stringify(playersArray, null, 2)})`);\n    return playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).highScoreIndex];\n  };\n  const secondHighestScore = (playerIndex, playersArray) => playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).secondHighScoreIndex];\n  const scoreTotal = (playerIndex, playersArray) => Number(highestScore(playerIndex, playersArray) + secondHighestScore(playerIndex, playersArray)).toFixed(2);\n  const getSurfScore = index => {\n    const newPlayers = [...players];\n    const surfScore = scoreTotal(index, newPlayers);\n    newPlayers[index].score = surfScore;\n    newPlayers[index].surfScore = surfScore;\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    return surfScore;\n  };\n  useEffect(() => {\n    if (JSON.stringify(players, null, 2) !== '[]') {\n      const surfersScores = [];\n      localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n      localStorage.setItem('players', JSON.stringify(players));\n    }\n  }, [players]);\n  useEffect(() => {\n    const surfersScores = [];\n    localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n    localStorage.setItem('players', JSON.stringify(players));\n  }, [players]);\n  useEffect(() => {\n    localStorage.setItem('golfPars', JSON.stringify(golfPars));\n  }, [golfPars]);\n  useEffect(() => {\n    if (!localStorage.getItem('players') || localStorage.getItem('players') === '[]') {\n      const playersValue = localStorage.getItem('players');\n      alert(`localStorage.players: ${playersValue}`);\n      alert('Length:', playersValue.length);\n    }\n    const newPlayers = [...players];\n    if (!players[0].cricketScores || !players[1].cricketScores) {\n      if (!players[0].cricketScores) {\n        newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n        newPlayers[0].dartsScore = 0;\n      }\n      if (!players[1].cricketScores) {\n        newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n        newPlayers[1].dartsScore = 0;\n      }\n    }\n    const initGolfStats = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n    if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n      newPlayers[0].golfPutts = golfScoring;\n      newPlayers[0].golfFW = initGolfStats;\n      newPlayers[0].golfGIR = initGolfStats;\n    }\n    if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n      newPlayers[1].golfPutts = golfScoring;\n      newPlayers[1].golfFW = initGolfStats;\n      newPlayers[1].golfGIR = initGolfStats;\n    }\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  }, []);\n  const setGameInProgress = playerIndex => {\n    if (playerIndex > 0) {\n      if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n        localStorage.setItem('gameStatus', 'inProgress');\n      }\n    }\n    localStorage.setItem(`player${playerIndex}`, 'loser');\n    return false;\n  };\n  const isWinner = playerIndex => getDartTotal(players[playerIndex]) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n  const playerScores = [{\n    name: 'Player 1',\n    scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88]\n  }, {\n    name: 'Player 2',\n    scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81]\n  }, {\n    name: 'Player 3',\n    scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89]\n  }];\n  const setGameOver = playerIndex => {\n    localStorage.setItem('gameStatus', 'gameOver');\n    localStorage.setItem(`player${playerIndex}`, 'winner');\n    return true;\n  };\n  const setTimer = (groupTitle, label, selected) => {\n    localStorage.setItem('timer', selected);\n    setTime(selected * 60);\n    setHeatLength(selected * 60);\n  };\n  if (darts && winner !== 21) {\n    localStorage.setItem('winner', 21);\n    setWinner(Number(localStorage.getItem('winner')));\n  }\n  const getDartTotal = player => {\n    const cricketScores = String(player.cricketScores).split(',');\n    let total = 0;\n    const addToTotal = value => total = total + value;\n    cricketScores.map((score, index) => addToTotal(Number(score)));\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const getGolfTotal = player => {\n    if (!golf) return;\n    let total = 0;\n    const newPlayers = JSON.parse(localStorage.getItem('players'));\n    const addToTotal = value => total = total + Number(value);\n    newPlayers.map(player => {\n      player.golfScores.map(score => addToTotal(score));\n      player.golfScore = total;\n    });\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    return total;\n  };\n  const getDominoTotal = index => {\n    const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n    const total = newScores[index];\n    console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`);\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const updateScores = () => {\n    const newPlayers = JSON.parse(localStorage.getItem('players'));\n    setPlayers(newPlayers);\n  };\n  const set21 = () => {\n    if (darts) {\n      localStorage.setItem('winner', 21);\n      setWinner(Number(localStorage.getItem('winner')));\n    }\n  };\n  const selectGame = (groupTitle, label, selected) => {\n    localStorage.setItem('game', selected);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setGame(localStorage.getItem('game'));\n    set21();\n  };\n  const selectWinner = (groupTitle, label, selected) => {\n    localStorage.setItem('winner', selected);\n    setWinner(Number(localStorage.getItem('winner')));\n  };\n  const clear = event => {\n    alert('Note was cleared: ' + event.value);\n    localStorage.setItem('players', JSON.stringify(initPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const getSurfTotal = (player, index) => {\n    let total = 0;\n    const score = index => player.surfScores[index];\n    const addToTotal = value => total = total + value;\n    surfScoring.map((target, index) => {\n      console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`);\n      addToTotal(Number(score(index)));\n    });\n    return total;\n  };\n  const reset = event => {\n    let newPlayers = JSON.parse(localStorage.getItem('players'));\n    const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n    const id = (player, index) => {\n      if (darts) {\n        return cricketKey(player, index);\n      } else if (dominos) {\n        return getDominoKey(player, index);\n      } else if (golf) {\n        return golfKey(player, index);\n      } else if (surf) {\n        return surfKey(player, index);\n      }\n      return player.player || player.name;\n    };\n    const initValue = 0;\n    if (darts) {\n      newPlayers.map(player => {\n        player.dartsScore = 0;\n        player.cricketScores = [0, 0, 0, 0, 0, 0, 0];\n      });\n    } else if (golf) {\n      newPlayers.map(player => {\n        player.golfScore = 0;\n        player.golfScores = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n        player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n        player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      });\n    } else if (dominos) {\n      newPlayers[0].dominoScore = 0;\n      newPlayers[1].dominoScore = 0;\n    } else if (surf) {\n      newPlayers.map((player, index) => {\n        player.surfScores = surfScoring;\n        player.surfScore = 0;\n        player.surfPriority = 0;\n      });\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n      newPlayers = [...sortedPlayers];\n    } else {\n      newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n    }\n    localStorage.setItem('gameStatus', 'inProgress');\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n    getScore();\n  };\n  const addPlayer = event => {\n    const newPlayer = prompt('Enter new name', '');\n    const initializedNewPlayer = initNewPlayer(newPlayer);\n    let newPlayers = [...players];\n    if (newPlayer !== null) {\n      newPlayers.push(initializedNewPlayer);\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n  };\n  const editPlayer = index => {\n    const newPlayer = prompt('Enter new name', players[index]);\n    if (newPlayer !== null) {\n      let newPlayers = [...players];\n      newPlayers[index] = newPlayer;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n      getScore();\n    }\n  };\n  const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n  const deletePlayer = index => {\n    console.log(`deletePlayer => ${index}`);\n    const newPlayers = [...players].slice();\n    newPlayers.splice(index, 1);\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const scorecards = () => {\n    const scorecard = (playerIndex, scoreIndex, score) => {\n      const player = players[playerIndex];\n      if (darts) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`);\n        return /*#__PURE__*/_jsxDEV(CricketScore, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateScores: updateScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 24\n        }, this);\n      }\n      if (dominos) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(Dominos, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          scoreTotal: player.dominoScore || 0,\n          treeTotal: score,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          getDominoTotal: getDominoTotal,\n          updateScores: updateScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 24\n        }, this);\n      }\n      if (golf) {\n        console.log(`${game} - scorecard => player:${player.player || player.name}`);\n        console.log(`scoreIndex: ${scoreIndex}`);\n        console.log(`score: ${player.golfScores[scoreIndex]}`);\n        console.log(`scorecards => par: ${score}`);\n        return /*#__PURE__*/_jsxDEV(ScoreCard, {\n          game: game,\n          players: players,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateScores: updateScores,\n          winner: golfPars[scoreIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 24\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(ScoreCard, {\n        game: game,\n        players: players,\n        playerIndex: playerIndex,\n        scoreIndex: scoreIndex,\n        editPlayer: editPlayer,\n        deletePlayer: deletePlayer,\n        updateScores: updateScores,\n        winner: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 20\n      }, this);\n    };\n    const rankStatus = (player, index, score) => {\n      const scoreDifference = Number(players[index === 0 ? 0 : index - 1].surfScore - players[index === 0 ? 1 : index].surfScore);\n      const difference = scoreDifference < 0 ? -1 * scoreDifference : scoreDifference;\n      const winningScore = Number(players[index === 0 ? 0 : index - 1].surfScore);\n      const highestScoresIndices = findTwoHighestIndices(players[index].surfScores);\n      const losersHeighestScore = players[index].surfScores[highestScoresIndices[0]];\n      const need = winningScore - losersHeighestScore + .01;\n      console.log(`rankStatus => winningScore: ${winningScore} - losersHeighestScore: ${losersHeighestScore} + .01 = need: ${need}`);\n      const winsBy = `Wins by ${difference.toFixed(2)}`;\n      const needs = `Needs ${need.toFixed(2)}`;\n      if (index === 0) {\n        return winsBy;\n      }\n      return needs;\n    };\n    const surfScoresDisplay = () => surfScoring.map((wave, index) => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer width-100-percent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3Column p-5\",\n          children: scorecard(players[0], 0, index, players[0].surfScores[index])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 r-5 font50 color-yellow m-auto\",\n          children: wave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3Column p-5\",\n          children: scorecard(players[1], 1, index, players[1].surfScores[index])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 17\n        }, this)]\n      }, getKey(`wave${wave}`), true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 13\n      }, this);\n    });\n    const setSurfScore = (playerId, index, score) => {\n      const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, score || '');\n      const newPlayers = [...players];\n      newPlayers[playerId].surfScores[index] = Number(newScore);\n      newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n      if (newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) {\n        newPlayers.map((player, index) => {\n          if (index === playerId) {\n            player.surfPriority = players.length;\n          } else if (player.surfPriority != 0) {\n            player.surfPriority = player.surfPriority - 1;\n          }\n        });\n      }\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n      console.log('setSurfScore => sortedPlayers: ', sortedPlayers);\n      localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n      setPlayers(sortedPlayers);\n    };\n    const getWave = (playerId, index, score) => {\n      const player = players[playerId];\n      const theScore = player.surfScores[index];\n      const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n      const highestId = highestScores[0];\n      const secondHighestId = highestScores[1];\n      const firstScore = index === highestId ? true : false;\n      const secondScore = index === secondHighestId ? true : false;\n      const getClasses = firstScore || secondScore ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n      const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        onClick: () => setSurfScore(playerId, index, score),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"size30 bold color-yellow bg-dkYellow w-100 p-10\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ht-40 ${getClasses}`,\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 17\n        }, this)]\n      }, getKey(`wave${playerId}${index}${score}`), true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 26\n      }, this);\n      return wave;\n    };\n    const get2ndHighestScore = playerId => {\n      const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n      const secondHighestId = highestScores[1];\n      return players[playerId].surfScores[secondHighestId];\n    };\n    const isTieScore = (playerIndex, score) => {\n      if (playerIndex !== 0) {\n        if (score === scoreTotal(playerIndex - 1, players)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const jerseyColors = ['white', 'yellow', 'neogreen', 'black', 'blue', 'orange', 'pink', 'red'];\n    const selectJersey = index => {\n      const newPlayers = [...players];\n      newPlayers[index].surfJerseyColor = Number(newPlayers[index].surfJerseyColor) + 1;\n      newPlayers[index].surfJerseyColor = newPlayers[index].surfJerseyColor > jerseyColors.length - 1 ? 0 : newPlayers[index].surfJerseyColor;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      setPlayers(newPlayers);\n    };\n    const surfingScores = (player, index, score) => {\n      if (surf) {\n        const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flexContainer pl-5 pr-5 pb-5 r-10 pt-15 ml-5 mr-5 mt--10 mb--10 color-dark text-outline-light`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `r-5-lft m-1 w-75 size40 p-25 bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`,\n              children: isTieScore(index, score) && index !== 0 ? index : index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex3Column contentLeft m-1 size40 p-25 contentCenter bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`,\n              onClick: () => selectJersey(index),\n              children: player.player || player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `r-5-rt flex3Column contentRight m-1 mr-10 pb-10 pl-10 pr-10 pt-15 bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"size40 bold\",\n                children: score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-10 bold\",\n                children: rankStatus(player, index, score)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 25\n            }, this)]\n          }, getKey(`${index}${player.player || player.name}`), true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-scroll color-white copyright m-10\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"container mt-10\",\n                  children: players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 21\n          }, this)]\n        }, getKey(`${score}${index}${player.player || player.name}`), true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 38\n        }, this);\n        return surferScores;\n      }\n      return;\n    };\n    const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n    const dartScores = () => dartScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(0, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(1, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 68\n    }, this));\n    const editGolfPar = hole => {\n      const newPars = [...golfPars];\n      const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n      newPars[hole] = newPar;\n      setGolfPars(newPars);\n    };\n    const golfScores = () => golfScoring.map((hole, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentCenter bg-dark r-10 m-5 mt-35\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"copyright greet color-yellow\",\n            children: \"Hole:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size40 bold pt-5 pl-15 pr-15 bg-dark r-10\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"copyright greet color-yellow\",\n            children: \"Par:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size20 bold color-lite mt--5\",\n            children: golfPars[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex2Column p-5\",\n            children: scorecard(0, index, golfPars[index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex2Column p-5\",\n            children: scorecard(1, index, golfPars[index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 13\n      }, this)\n    }, getKey(hole), false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 67\n    }, this));\n    const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n    const dominoScores = () => dominoScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent contentCenter p-5\",\n        children: scorecard(0, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"r-5 font50 color-yellow m-auto w-100\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent contentCenter p-5\",\n        children: scorecard(1, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 72\n    }, this));\n    const isDominoWinner = playerIndex => getDominoTotal(playerIndex) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const dartClass = playerIndex => 'color-yellow flex3Column p-20 size25 bold' + (isWinner(playerIndex) && (game != 'golf' || game != 'surf') ? ' size50 color-neogreen shakingShaka mt-20' : '');\n    const dominoClass = playerIndex => 'color-yellow flex3Column p-20 size25 bold' + (isDominoWinner(playerIndex) && (!golf || !surf) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dartScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDartTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDartTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 13\n      }, this), dartScores()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 38\n    }, this);\n    const golfScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy m-5 mb-20 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: players[0].golfScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10  size40 white\",\n            children: players[1].golfScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollHeight500\",\n        children: golfScores()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 38\n    }, this);\n    const dominoScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDominoTotal(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDominoTotal(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 13\n      }, this), dominoScores()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 40\n    }, this);\n    if (darts) return dartScoreboard();\n    if (dominos) return dominoScoreboard();\n    if (golf) return golfScoreboard();\n    //if (surf) return surfScoreboard\n    if (surf) return surfingScoreboard();else return renderedItems();\n  };\n  const updatePlayers = () => {\n    // Update the parent state to trigger a re-render\n    console.log();\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n    console.log(`updatePlayers=>`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fadeIn mt--30\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-20\",\n      children: [/*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"game\",\n        label: \"item.description\",\n        items: games,\n        selected: game,\n        onChange: selectGame,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: darts || dominos ? '98%' : '65%'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 17\n      }, this), darts || golf ? /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Selector, {\n        className: \"fl-left\",\n        groupTitle: \"winner\",\n        label: \"i.description\",\n        items: dominos ? dominoWinners : surf ? heatLengths : winners,\n        selected: surf ? time / 60 : winner,\n        onChange: surf ? setTimer : selectWinner,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: \"30%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 27\n      }, this), surf ? /*#__PURE__*/_jsxDEV(SurfScores, {\n        players: players,\n        time: time,\n        setTime: setTime,\n        heatLength: heatLength,\n        isWinner: isWinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: scorecards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow\",\n          onClick: () => addPlayer(),\n          children: \"add player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black\",\n          onClick: () => reset(),\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow\",\n          onClick: () => clear(),\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 687,\n    columnNumber: 9\n  }, this);\n};\n_s(ScoreKeeper, \"018u19vuQLHvwUSJhrDk2s9eFTI=\");\n_c = ScoreKeeper;\nexport default ScoreKeeper;\nvar _c;\n$RefreshReg$(_c, \"ScoreKeeper\");","map":{"version":3,"names":["React","useState","useEffect","ScoreCard","CricketScore","Dominos","SurfScores","Selector","getKey","jsxDEV","_jsxDEV","ScoreKeeper","_s","surfScoring","initPlayers","name","score","dominoScore","golfScores","golfGIR","golfFW","golfPutts","surfScores","surfJerseyColor","surfPriority","cricketScores","initNewPlayer","newPlayer","games","winners","dominoWinners","heatLengths","players","setPlayers","JSON","parse","localStorage","getItem","game","setGame","initScores","winner","setWinner","Number","time","setTime","heatLength","setHeatLength","waveCount","setWaveCount","surfersScores","setSurfersScores","darts","dominos","surf","golf","cricketKey","player","index","golfKey","surfKey","parsDefault","dartScoring","golfScoring","golfPars","setGolfPars","dominoScoring","gameStatus","setGameStatus","surferData","setSurferData","getScoreTotal","highestScore","getTwoHighestScores","highScoreIndex","secondHighestScore","secondHighScoreIndex","console","log","findTwoHighestIndices","scores","newScores","undefined","highestIndex","secondHighestIndex","Infinity","i","length","playerIndex","stringify","floatDecimalOneDigit","number","isInteger","playersArray","scoreTotal","toFixed","getSurfScore","newPlayers","surfScore","setItem","playersValue","alert","dartsScore","initGolfStats","setGameInProgress","isWinner","getDartTotal","setGameOver","playerScores","setTimer","groupTitle","label","selected","String","split","total","addToTotal","value","map","getGolfTotal","golfScore","getDominoTotal","updateScores","set21","selectGame","selectWinner","clear","event","getSurfTotal","target","reset","getDominoKey","id","initValue","sortedPlayers","sort","a","b","getScore","addPlayer","prompt","initializedNewPlayer","push","editPlayer","window","location","pathname","deletePlayer","slice","splice","scorecards","scorecard","scoreIndex","fileName","_jsxFileName","lineNumber","columnNumber","treeTotal","rankStatus","scoreDifference","difference","winningScore","highestScoresIndices","losersHeighestScore","need","winsBy","needs","surfScoresDisplay","wave","className","children","setSurfScore","playerId","newScore","getWave","theScore","highestScores","highestId","secondHighestId","firstScore","secondScore","getClasses","onClick","get2ndHighestScore","isTieScore","jerseyColors","selectJersey","surfingScores","surferScores","renderedItems","dartScores","editGolfPar","hole","newPars","newPar","surfingScoreboard","dominoScores","isDominoWinner","dartClass","dominoClass","dartScoreboard","Fragment","golfScoreboard","dominoScoreboard","updatePlayers","items","onChange","fontSize","padding","width","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\n\nconst ScoreKeeper = () => {\n\n    const surfScoring = ['', '', '', '', '', '', '', '', '', ''];\n    const initPlayers = [\n        {\n            name: 'You',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        },\n        {\n            name: 'Me',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n    ];\n    const initNewPlayer = (name) => {\n        const newPlayer = {\n            name: name,\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n        return newPlayer;\n    };\n    const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n    const winners = [5, 10, 11, 15, 20, 21];\n    const dominoWinners = [50, 100, 150, 200];\n    const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n    const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n    const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n    const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n    const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n    const [heatLength, setHeatLength] = useState(60 * 60);\n    const [waveCount, setWaveCount] = useState(['', '', '', '', '', '', '', '', '', '']);\n    const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n    const darts = (game !== 'darts') ? false : true;\n    const dominos = (game !== 'dominos') ? false : true;\n    const surf = (game !== 'surf') ? false : true;\n    const golf = (game !== 'golf') ? false : true;\n    const cricketKey = (player, index) => `${(player.player || player.name)}Cricket${index}`;\n    const golfKey = (player, index) => `${(player.player || player.name)}Golf${index}`;\n    const surfKey = (player, index) => `${(player.player || player.name)}Surf${index}`;\n    const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n    const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n    const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n    const dominoScoring = [50, 100, 150, 200];\n    const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n    const [surferData, setSurferData] = useState([]);\n\n    const getScoreTotal = (index) => {\n        const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n        const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n        const score = (highestScore + secondHighestScore);\n        console.log(`getScore => player: ${index} score: ${score}`);\n        return score;\n    }\n\n    const findTwoHighestIndices = (scores) => {\n        console.log(`findTwoHighestIndices0 => scores: ${scores}`);\n        const newScores = (scores !== undefined) ? scores : [0,0,0,0,0,0,0,0,0,0];\n        let highestIndex = -1;\n        let secondHighestIndex = -1;\n        let highestScore = -Infinity;\n        let secondHighestScore = -Infinity;\n        for (let i = 0; i < newScores.length; i++) {\n            if (newScores[i] > highestScore) {\n                secondHighestIndex = highestIndex;\n                secondHighestScore = highestScore;\n                highestIndex = i;\n                highestScore = newScores[i];\n                console.log(`findTwoHighestIndices1 => scores: ${newScores} scoreIndex: ${i} highestScore: ${highestScore}`);\n            } else if (newScores[i] > secondHighestScore) {\n                secondHighestIndex = i;\n                secondHighestScore = newScores[i];\n                console.log(`findTwoHighestIndices2 => scores: ${newScores} scoreIndex: ${i} secondHighestScore: ${secondHighestScore}`)\n            }\n        }\n        return [highestIndex, secondHighestIndex];\n    };\n\n    const getTwoHighestScores = (playerIndex) => {\n        const player = players[playerIndex];\n        const scores = player.surfScores;\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n        console.log(`getTwoHighestScores => playerIndex: ${playerIndex} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            highScoreIndex: highestIndex,\n            secondHighScoreIndex: secondHighestIndex\n        };\n    };\n\n\n    const floatDecimalOneDigit = (number) => {\n        if (Number.isInteger(number) && number >= 10 && number <= 99) {\n            return `${number / 10}.00`;\n        } else {\n            return `${number}.00`;\n        }\n    };\n    const highestScore = (playerIndex, playersArray) => {\n        console.log(`highestScore = (playerIndex: ${playerIndex}, playersArray: ${JSON.stringify(playersArray, null, 2)})`)\n        return playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).highScoreIndex];\n    }\n    const secondHighestScore = (playerIndex,playersArray) => playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).secondHighScoreIndex];\n    const scoreTotal = (playerIndex, playersArray) => Number(highestScore(playerIndex, playersArray) + secondHighestScore(playerIndex, playersArray)).toFixed(2);\n\n    const getSurfScore = (index) => {\n        const newPlayers = [...players];\n        const surfScore = scoreTotal(index, newPlayers);\n\n        newPlayers[index].score = surfScore;\n        newPlayers[index].surfScore = surfScore;\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        return surfScore;\n    };\n    useEffect(() => {\n        if (JSON.stringify(players, null, 2) !== '[]') {\n            const surfersScores = [];\n            localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n            localStorage.setItem('players', JSON.stringify(players));\n        }\n    }, [players]);\n\n\n    useEffect(() => {\n        const surfersScores = [];\n        localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n        localStorage.setItem('players', JSON.stringify(players));\n    }, [players]);\n    \n    useEffect(() => {\n        localStorage.setItem('golfPars', JSON.stringify(golfPars));\n    }, [golfPars]);\n\n    useEffect(() => {\n        if (!localStorage.getItem('players') || (localStorage.getItem('players') === '[]')) {\n            const playersValue = localStorage.getItem('players');\n            alert(`localStorage.players: ${playersValue}`)\n            alert('Length:', playersValue.length);\n        }\n        const newPlayers = [...players];\n        if (!players[0].cricketScores || !players[1].cricketScores) {\n            if (!players[0].cricketScores) {\n                newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[0].dartsScore = 0;\n            }\n            if (!players[1].cricketScores) {\n                newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[1].dartsScore = 0;\n            }\n        }\n        const initGolfStats = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]\n        if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n            newPlayers[0].golfPutts = golfScoring;\n            newPlayers[0].golfFW = initGolfStats;\n            newPlayers[0].golfGIR = initGolfStats;\n        }\n        if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n            newPlayers[1].golfPutts = golfScoring;\n            newPlayers[1].golfFW = initGolfStats;\n            newPlayers[1].golfGIR = initGolfStats;\n        }\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }, []);\n\n    const setGameInProgress = (playerIndex) => {\n        if (playerIndex > 0) {\n            if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n                localStorage.setItem('gameStatus', 'inProgress')\n            }\n        }\n        localStorage.setItem(`player${playerIndex}`, 'loser');\n        return false;\n    }\n    const isWinner = (playerIndex) => (getDartTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const playerScores = [\n        { name: 'Player 1', scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88] },\n        { name: 'Player 2', scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81] },\n        { name: 'Player 3', scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89] },\n    ];\n    const setGameOver = (playerIndex) => {\n        localStorage.setItem('gameStatus', 'gameOver');\n        localStorage.setItem(`player${playerIndex}`, 'winner');\n        return true;\n    }\n    const setTimer = (groupTitle, label, selected) => {\n        localStorage.setItem('timer', selected);\n        setTime(selected * 60);\n        setHeatLength(selected * 60);\n    }\n\n    if (darts && winner !== 21) {\n        localStorage.setItem('winner', 21);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const getDartTotal = (player) => {\n        const cricketScores = String(player.cricketScores).split(',');\n        let total = 0;\n        const addToTotal = (value) => total = total + value;\n        cricketScores.map((score, index) => addToTotal(Number(score)));\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const getGolfTotal = (player) => {\n        if (!golf) return;\n        let total = 0;\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        const addToTotal = (value) => total = total + Number(value);\n        newPlayers.map((player) => { \n            player.golfScores.map((score) => addToTotal(score))\n            player.golfScore = total;\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        return total;\n    }\n    const getDominoTotal = (index) => {\n        const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n        const total = newScores[index];\n        console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    \n    const updateScores = () => {\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        setPlayers(newPlayers);\n    }\n    const set21 = () => {\n        if (darts) {\n            localStorage.setItem('winner', 21);\n            setWinner(Number(localStorage.getItem('winner')));\n        }\n    }\n    const selectGame = (groupTitle, label, selected) => {\n        localStorage.setItem('game', selected)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setGame(localStorage.getItem('game'));\n        set21();\n    }\n    const selectWinner = (groupTitle, label, selected) => {\n        localStorage.setItem('winner', selected)\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const clear = (event) => {\n        alert('Note was cleared: ' + event.value);\n        localStorage.setItem('players', JSON.stringify(initPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n\n    const getSurfTotal = (player, index) => {\n        let total = 0;\n        const score = (index) => player.surfScores[index];\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n            console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        return total;\n    }\n\n    const reset = (event) => {\n        let newPlayers = JSON.parse(localStorage.getItem('players'));\n        const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n\n        const id = (player, index) => {\n            if (darts) {\n                return cricketKey(player, index);\n            } else if (dominos) {\n                return getDominoKey(player, index);\n            } else if (golf) {\n                return golfKey(player, index);\n            } else if (surf) {\n                return surfKey(player, index);\n            }\n            return (player.player || player.name);\n        }\n\n        const initValue = 0;\n        if (darts) {\n            newPlayers.map((player) => {\n                player.dartsScore = 0;\n                player.cricketScores = [0,0,0,0,0,0,0];\n            });\n        } else if (golf) {\n            newPlayers.map((player) => {\n                player.golfScore = 0;\n                player.golfScores = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n                player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            });\n        } else if (dominos) {\n            newPlayers[0].dominoScore = 0;\n            newPlayers[1].dominoScore = 0;\n        } else if (surf) {\n            newPlayers.map((player, index) => {\n                player.surfScores = surfScoring;\n                player.surfScore = 0;\n                player.surfPriority = 0;\n            });\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n            newPlayers = [...sortedPlayers];\n        } else {\n            newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n        }\n        localStorage.setItem('gameStatus', 'inProgress');\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        getScore();\n    }\n    const addPlayer = (event) => {\n        const newPlayer = prompt('Enter new name', '');\n        const initializedNewPlayer = initNewPlayer(newPlayer);\n        let newPlayers = [...players];\n        if (newPlayer !== null) {\n            newPlayers.push(initializedNewPlayer);\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n    }\n\n    const editPlayer = (index) => {\n        const newPlayer = prompt('Enter new name', players[index]);\n        if (newPlayer !== null) {\n            let newPlayers = [...players];\n            newPlayers[index] = newPlayer;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n            getScore();\n        }\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n\n    const deletePlayer = (index) => {\n        console.log(`deletePlayer => ${index}`)\n        const newPlayers = [...players].slice();\n        newPlayers.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    };\n\n    const scorecards = () => {\n        const scorecard = (playerIndex, scoreIndex, score) => {\n            const player = players[playerIndex];\n            if (darts) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`)\n                return <CricketScore\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (dominos) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`)\n                return <Dominos\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    scoreTotal={player.dominoScore || 0}\n                    treeTotal={score}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    getDominoTotal={getDominoTotal}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (golf) {\n                console.log(`${game} - scorecard => player:${player.player || player.name}`);\n                console.log(`scoreIndex: ${scoreIndex}`);\n                console.log(`score: ${player.golfScores[scoreIndex]}`);\n                console.log(`scorecards => par: ${score}`);\n                return <ScoreCard\n                    game={game}\n                    players={players}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={golfPars[scoreIndex]}\n                />\n            }\n            return <ScoreCard\n                game={game}\n                players={players}\n                playerIndex={playerIndex}\n                scoreIndex={scoreIndex}\n                editPlayer={editPlayer}\n                deletePlayer={deletePlayer}\n                updateScores={updateScores}\n                winner={winner}\n            />\n        }\n        const rankStatus = (player, index, score) => {\n            const scoreDifference = Number(players[(index === 0)?0:(index-1)].surfScore-players[(index === 0)?1:(index)].surfScore);\n            const difference = (scoreDifference<0) ? (-1*scoreDifference) : scoreDifference;\n            const winningScore = Number(players[(index === 0)?0:(index-1)].surfScore);\n            const highestScoresIndices = findTwoHighestIndices(players[index].surfScores);\n            const losersHeighestScore = players[index].surfScores[highestScoresIndices[0]];\n            const need = (winningScore - losersHeighestScore) + .01;\n            console.log(`rankStatus => winningScore: ${winningScore} - losersHeighestScore: ${losersHeighestScore} + .01 = need: ${need}`)\n            const winsBy = `Wins by ${difference.toFixed(2)}`;\n            const needs = `Needs ${need.toFixed(2)}`;\n            if (index === 0) {\n                return winsBy;\n            }\n            return needs;\n        }\n\n        const surfScoresDisplay = () => surfScoring.map((wave, index) => {\n            <div className='flexContainer width-100-percent' key={getKey(`wave${wave}`)}>\n                <div className='flex3Column p-5'>\n                    {scorecard(players[0], 0, index, players[0].surfScores[index])}\n                </div>\n                <div className='p-20 r-5 font50 color-yellow m-auto'>\n                    {wave}\n                </div>\n                <div className='flex3Column p-5'>\n                    {scorecard(players[1], 1, index, players[1].surfScores[index])}\n                </div>\n            </div>\n        });\n\n        const setSurfScore = (playerId, index, score) => {\n\n            const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, (score || ''));\n            const newPlayers = [...players];\n            newPlayers[playerId].surfScores[index] = Number(newScore);\n            newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n            if (newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) {\n                newPlayers.map((player, index)=>{\n                    if (index === playerId) {\n                        player.surfPriority = players.length;\n                    } else if (player.surfPriority != 0) {\n                        player.surfPriority = player.surfPriority-1;\n                    }\n                });\n            }\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n\n            console.log('setSurfScore => sortedPlayers: ', sortedPlayers)\n\n            localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n            setPlayers(sortedPlayers);\n        }\n\n        const getWave = (playerId, index, score) => {\n            const player = players[playerId];\n            const theScore = player.surfScores[index];\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const highestId = highestScores[0];\n            const secondHighestId = highestScores[1];\n            const firstScore = (index === highestId) ? true : false;\n            const secondScore = (index === secondHighestId) ? true : false;\n            const getClasses = (firstScore || secondScore) ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n            const wave = <div className=\"column\" onClick={() => setSurfScore(playerId, index, score)} key={getKey(`wave${playerId}${index}${score}`)}>\n                <div className='size30 bold color-yellow bg-dkYellow w-100 p-10'>{index + 1}</div>\n                <div className={`ht-40 ${getClasses}`}>{score}</div>\n            </div>\n            return wave\n        }\n\n        const get2ndHighestScore = (playerId) => {\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const secondHighestId = highestScores[1];\n            return players[playerId].surfScores[secondHighestId];\n        }\n\n        const isTieScore = (playerIndex, score) => {\n            if (playerIndex !== 0) {\n                if (score === scoreTotal(playerIndex - 1, players)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        const jerseyColors = ['white', 'yellow', 'neogreen', 'black', 'blue', 'orange', 'pink', 'red'];\n        const selectJersey = (index) => {\n            const newPlayers = [...players];\n            newPlayers[index].surfJerseyColor = Number(newPlayers[index].surfJerseyColor)+1;\n            newPlayers[index].surfJerseyColor = (newPlayers[index].surfJerseyColor > (jerseyColors.length-1)) ? 0 : newPlayers[index].surfJerseyColor;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            setPlayers(newPlayers);\n        }\n\n        const surfingScores = (player, index, score) => {\n            if (surf) {\n                const surferScores = <div key={getKey(`${score}${index}${(player.player || player.name)}`)}>\n                    <div className={`flexContainer pl-5 pr-5 pb-5 r-10 pt-15 ml-5 mr-5 mt--10 mb--10 color-dark text-outline-light`} key={getKey(`${index}${(player.player || player.name)}`)}>\n                        <div className={`r-5-lft m-1 w-75 size40 p-25 bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`}>{(isTieScore(index, score) && (index !== 0)) ? index : (index + 1)}</div>\n                        <div className={`flex3Column contentLeft m-1 size40 p-25 contentCenter bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`} onClick={() => selectJersey(index)}>{(player.player || player.name)}</div>\n                        <div className={`r-5-rt flex3Column contentRight m-1 mr-10 pb-10 pl-10 pr-10 pt-15 bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`}>\n                            <div className='size40 bold'>{score}</div>\n                            <div className='mt-10 bold'>{rankStatus(player, index, score)}</div>\n                        </div>\n                    </div>\n                    <div>\n                        <div>\n                            <div className='h-scroll color-white copyright m-10'>\n                                <div className=\"container mt-10\">\n                                    {players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                return surferScores\n            }\n            return\n        }\n        const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n\n        const dartScores = () => dartScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex3Column p-5'>\n                {scorecard(0, index, 0)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(1, index, 0)}\n            </div>\n        </div>);\n\n        const editGolfPar = (hole) => {\n            const newPars = [...golfPars];\n            const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n            newPars[hole] = newPar;\n            setGolfPars(newPars);\n        }\n\n        const golfScores = () => golfScoring.map((hole, index) => <div key={getKey(hole)}>\n            <div className='contentCenter bg-dark r-10 m-5 mt-35'>\n                <div>\n                    <span className='copyright greet color-yellow'>\n                        Hole:\n                    </span>\n                    <span className='size40 bold pt-5 pl-15 pr-15 bg-dark r-10'>\n                        {index+1}\n                    </span>\n                    <span className='copyright greet color-yellow'>\n                        Par:\n                    </span>\n                    <span className='size20 bold color-lite mt--5'>\n                        {golfPars[index]}\n                    </span>\n                </div>\n                <div className='flexContainer'>\n                    <div className='flex2Column p-5'>\n                        {scorecard(0, index, golfPars[index])}\n                    </div>\n                    <div className='flex2Column p-5'>\n                        {scorecard(1, index, golfPars[index])}\n                    </div>\n                </div>\n            </div>\n        </div>);\n\n        const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n\n        const dominoScores = () => dominoScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(0, index, score)}\n            </div>\n            <div className='r-5 font50 color-yellow m-auto w-100'>\n                {score}\n            </div>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(1, index, score)}\n            </div>\n        </div>);\n\n        const isDominoWinner = (playerIndex) => (getDominoTotal(playerIndex) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n\n        const dartClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isWinner(playerIndex) && (game != 'golf' || game != 'surf')) ? ' size50 color-neogreen shakingShaka mt-20' : '');\n        const dominoClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isDominoWinner(playerIndex) && (!golf || !surf)) ? ' color-neogreen shakingShaka mt-20' : '');\n\n        const dartScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>{players[0].player || players[0].name}:<div className='mt-10 size40 white'>{getDartTotal(players[0])}</div></div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>{players[1].player || players[1].name}:<div className='mt-10 size40 white'>{getDartTotal(players[1])}</div></div>\n            </div>\n            {dartScores()}\n        </React.Fragment>\n\n        const golfScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy m-5 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>\n                    {players[0].player || players[0].name}:<div className='mt-10 size40 white'>{players[0].golfScore}</div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>\n                    {players[1].player || players[1].name}:<div className='mt-10  size40 white'>{players[1].golfScore}</div>\n                </div>\n            </div>\n            <div className='scrollHeight500'>\n                {golfScores()}\n            </div>\n        </React.Fragment>\n\n        const dominoScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10'>\n                <div className={dominoClass(0)}>\n                    {players[0].player || players[0].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(0)}\n                    </div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dominoClass(1)}>\n                    {players[1].player || players[1].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(1)}\n                    </div>\n                </div>\n            </div>\n            {dominoScores()}\n        </React.Fragment>\n\n        if (darts) return dartScoreboard()\n        if (dominos) return dominoScoreboard()\n        if (golf) return golfScoreboard()\n        //if (surf) return surfScoreboard\n        if (surf) return surfingScoreboard()\n        else return renderedItems();\n    }\n    const updatePlayers = () => {\n        // Update the parent state to trigger a re-render\n        console.log()\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        console.log(`updatePlayers=>`)\n    };\n    \n    return (\n        <div className='fadeIn mt--30'>\n            <div className='mb-20'>\n                <Selector\n                    groupTitle='game'\n                    label='item.description'\n                    items={games}\n                    selected={game}\n                    onChange={selectGame}\n                    fontSize='25'\n                    padding='10px'\n                    width={(darts || dominos) ? '98%' : '65%'}\n                />\n                {\n                    (darts || golf)\n                        ? <React.Fragment></React.Fragment>\n                        : <Selector className='fl-left'\n                                groupTitle='winner'\n                                label='i.description'\n                                items={(dominos) ? dominoWinners : ((surf) ? heatLengths : winners)}\n                                selected={(surf) ? (time / 60) : winner}\n                                onChange={(surf) ? setTimer : selectWinner}\n                                fontSize='25'\n                                padding='10px'\n                                width='30%'\n                            />\n                }\n                {(surf) ?\n                    <SurfScores\n                        players={players}\n                        time={time}\n                        setTime={setTime}\n                        heatLength={heatLength}\n                        isWinner={isWinner}\n                    ></SurfScores>\n                    :\n                    <React.Fragment></React.Fragment>\n\n                }\n            </div>\n            <div>\n                {scorecards()}\n            </div>\n            <div className='flexContainer width-100-percent'>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow' onClick={() => addPlayer()}>add player</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black' onClick={() => reset()}>reset</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow' onClick={() => clear()}>clear</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScoreKeeper;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAMC,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAC5D,MAAMC,WAAW,GAAG,CAChB;IACIC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClEC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvIC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACtIC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjEC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACpDC,eAAe,EAAE,CAAC;IAClBC,YAAY,EAAE,CAAC;IACfC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EACvC,CAAC,EACD;IACIV,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClEC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvIC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACtIC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjEC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACpDC,eAAe,EAAE,CAAC;IAClBC,YAAY,EAAE,CAAC;IACfC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EACvC,CAAC,CACJ;EACD,MAAMC,aAAa,GAAIX,IAAI,IAAK;IAC5B,MAAMY,SAAS,GAAG;MACdZ,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAE,CAAC;MACRC,WAAW,EAAE,CAAC;MACdC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAClEC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACvIC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACtIC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACjEC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACpDC,eAAe,EAAE,CAAC;MAClBC,YAAY,EAAE,CAAC;MACfC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IACvC,CAAC;IACD,OAAOE,SAAS;EACpB,CAAC;EACD,MAAMC,KAAK,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC;EACvH,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACvC,MAAMC,aAAa,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACzC,MAAMC,WAAW,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAClD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAACiC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAIvB,WAAW,CAAC;EAClG,MAAM,CAACwB,IAAI,EAAEC,OAAO,CAAC,GAAGtC,QAAQ,CAACmC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC;EAC5E,MAAMG,UAAU,GAAG,CAACR,OAAO,CAAC,CAAC,CAAC,CAAE,GAAEM,IAAK,OAAM,CAAC,EAAEN,OAAO,CAAC,CAAC,CAAC,CAAE,GAAEM,IAAK,OAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACrF,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGzC,QAAQ,CAAC0C,MAAM,CAACP,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;EAClF,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAG5C,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC6C,UAAU,EAAEC,aAAa,CAAC,GAAG9C,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;EACrD,MAAM,CAAC+C,SAAS,EAAEC,YAAY,CAAC,GAAGhD,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpF,MAAM,CAACiD,aAAa,EAAEC,gBAAgB,CAAC,GAAGlD,QAAQ,CAACiC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,CAAC;EAC3G,MAAMe,KAAK,GAAId,IAAI,KAAK,OAAO,GAAI,KAAK,GAAG,IAAI;EAC/C,MAAMe,OAAO,GAAIf,IAAI,KAAK,SAAS,GAAI,KAAK,GAAG,IAAI;EACnD,MAAMgB,IAAI,GAAIhB,IAAI,KAAK,MAAM,GAAI,KAAK,GAAG,IAAI;EAC7C,MAAMiB,IAAI,GAAIjB,IAAI,KAAK,MAAM,GAAI,KAAK,GAAG,IAAI;EAC7C,MAAMkB,UAAU,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAM,GAAGD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC1C,IAAM,UAAS2C,KAAM,EAAC;EACxF,MAAMC,OAAO,GAAGA,CAACF,MAAM,EAAEC,KAAK,KAAM,GAAGD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC1C,IAAM,OAAM2C,KAAM,EAAC;EAClF,MAAME,OAAO,GAAGA,CAACH,MAAM,EAAEC,KAAK,KAAM,GAAGD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC1C,IAAM,OAAM2C,KAAM,EAAC;EAClF,MAAMG,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1E,MAAMC,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EACjD,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhE,QAAQ,CAACiC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAIwB,WAAW,CAAC;EACrG,MAAMK,aAAa,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnE,QAAQ,CAACmC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC;EAChG,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMsE,aAAa,GAAIb,KAAK,IAAK;IAC7B,MAAMc,YAAY,GAAGxC,OAAO,CAAC0B,KAAK,CAAC,CAACpC,UAAU,CAACmD,mBAAmB,CAACf,KAAK,CAAC,CAACgB,cAAc,CAAC;IACzF,MAAMC,kBAAkB,GAAG3C,OAAO,CAAC0B,KAAK,CAAC,CAACpC,UAAU,CAACmD,mBAAmB,CAACf,KAAK,CAAC,CAACkB,oBAAoB,CAAC;IACrG,MAAM5D,KAAK,GAAIwD,YAAY,GAAGG,kBAAmB;IACjDE,OAAO,CAACC,GAAG,CAAE,uBAAsBpB,KAAM,WAAU1C,KAAM,EAAC,CAAC;IAC3D,OAAOA,KAAK;EAChB,CAAC;EAED,MAAM+D,qBAAqB,GAAIC,MAAM,IAAK;IACtCH,OAAO,CAACC,GAAG,CAAE,qCAAoCE,MAAO,EAAC,CAAC;IAC1D,MAAMC,SAAS,GAAID,MAAM,KAAKE,SAAS,GAAIF,MAAM,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IACzE,IAAIG,YAAY,GAAG,CAAC,CAAC;IACrB,IAAIC,kBAAkB,GAAG,CAAC,CAAC;IAC3B,IAAIZ,YAAY,GAAG,CAACa,QAAQ;IAC5B,IAAIV,kBAAkB,GAAG,CAACU,QAAQ;IAClC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,SAAS,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;MACvC,IAAIL,SAAS,CAACK,CAAC,CAAC,GAAGd,YAAY,EAAE;QAC7BY,kBAAkB,GAAGD,YAAY;QACjCR,kBAAkB,GAAGH,YAAY;QACjCW,YAAY,GAAGG,CAAC;QAChBd,YAAY,GAAGS,SAAS,CAACK,CAAC,CAAC;QAC3BT,OAAO,CAACC,GAAG,CAAE,qCAAoCG,SAAU,gBAAeK,CAAE,kBAAiBd,YAAa,EAAC,CAAC;MAChH,CAAC,MAAM,IAAIS,SAAS,CAACK,CAAC,CAAC,GAAGX,kBAAkB,EAAE;QAC1CS,kBAAkB,GAAGE,CAAC;QACtBX,kBAAkB,GAAGM,SAAS,CAACK,CAAC,CAAC;QACjCT,OAAO,CAACC,GAAG,CAAE,qCAAoCG,SAAU,gBAAeK,CAAE,wBAAuBX,kBAAmB,EAAC,CAAC;MAC5H;IACJ;IACA,OAAO,CAACQ,YAAY,EAAEC,kBAAkB,CAAC;EAC7C,CAAC;EAED,MAAMX,mBAAmB,GAAIe,WAAW,IAAK;IACzC,MAAM/B,MAAM,GAAGzB,OAAO,CAACwD,WAAW,CAAC;IACnC,MAAMR,MAAM,GAAGvB,MAAM,CAACnC,UAAU;IAChC,MAAM,CAAC6D,YAAY,EAAEC,kBAAkB,CAAC,GAAGL,qBAAqB,CAACC,MAAM,CAAC;IACxEH,OAAO,CAACC,GAAG,CAAE,uCAAsCU,WAAY,YAAWtD,IAAI,CAACuD,SAAS,CAAChC,MAAM,EAAC,IAAI,EAAC,CAAC,CAAE,UAAUA,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC1C,IAAM,4BAA2BoE,YAAa,mCAAkCC,kBAAmB,EAAC,CAAC;IAC/O,OAAO;MACHV,cAAc,EAAES,YAAY;MAC5BP,oBAAoB,EAAEQ;IAC1B,CAAC;EACL,CAAC;EAGD,MAAMM,oBAAoB,GAAIC,MAAM,IAAK;IACrC,IAAIhD,MAAM,CAACiD,SAAS,CAACD,MAAM,CAAC,IAAIA,MAAM,IAAI,EAAE,IAAIA,MAAM,IAAI,EAAE,EAAE;MAC1D,OAAQ,GAAEA,MAAM,GAAG,EAAG,KAAI;IAC9B,CAAC,MAAM;MACH,OAAQ,GAAEA,MAAO,KAAI;IACzB;EACJ,CAAC;EACD,MAAMnB,YAAY,GAAGA,CAACgB,WAAW,EAAEK,YAAY,KAAK;IAChDhB,OAAO,CAACC,GAAG,CAAE,gCAA+BU,WAAY,mBAAkBtD,IAAI,CAACuD,SAAS,CAACI,YAAY,EAAE,IAAI,EAAE,CAAC,CAAE,GAAE,CAAC;IACnH,OAAOA,YAAY,CAACL,WAAW,CAAC,CAAClE,UAAU,CAACmD,mBAAmB,CAACe,WAAW,CAAC,CAACd,cAAc,CAAC;EAChG,CAAC;EACD,MAAMC,kBAAkB,GAAGA,CAACa,WAAW,EAACK,YAAY,KAAKA,YAAY,CAACL,WAAW,CAAC,CAAClE,UAAU,CAACmD,mBAAmB,CAACe,WAAW,CAAC,CAACZ,oBAAoB,CAAC;EACpJ,MAAMkB,UAAU,GAAGA,CAACN,WAAW,EAAEK,YAAY,KAAKlD,MAAM,CAAC6B,YAAY,CAACgB,WAAW,EAAEK,YAAY,CAAC,GAAGlB,kBAAkB,CAACa,WAAW,EAAEK,YAAY,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC;EAE5J,MAAMC,YAAY,GAAItC,KAAK,IAAK;IAC5B,MAAMuC,UAAU,GAAG,CAAC,GAAGjE,OAAO,CAAC;IAC/B,MAAMkE,SAAS,GAAGJ,UAAU,CAACpC,KAAK,EAAEuC,UAAU,CAAC;IAE/CA,UAAU,CAACvC,KAAK,CAAC,CAAC1C,KAAK,GAAGkF,SAAS;IACnCD,UAAU,CAACvC,KAAK,CAAC,CAACwC,SAAS,GAAGA,SAAS;IACvC9D,YAAY,CAAC+D,OAAO,CAAC,SAAS,EAAEjE,IAAI,CAACuD,SAAS,CAACQ,UAAU,CAAC,CAAC;IAC3D,OAAOC,SAAS;EACpB,CAAC;EACDhG,SAAS,CAAC,MAAM;IACZ,IAAIgC,IAAI,CAACuD,SAAS,CAACzD,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;MAC3C,MAAMkB,aAAa,GAAG,EAAE;MACxBd,YAAY,CAAC+D,OAAO,CAAC,eAAe,EAAEjE,IAAI,CAACuD,SAAS,CAACvC,aAAa,CAAC,CAAC;MACpEd,YAAY,CAAC+D,OAAO,CAAC,SAAS,EAAEjE,IAAI,CAACuD,SAAS,CAACzD,OAAO,CAAC,CAAC;IAC5D;EACJ,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAGb9B,SAAS,CAAC,MAAM;IACZ,MAAMgD,aAAa,GAAG,EAAE;IACxBd,YAAY,CAAC+D,OAAO,CAAC,eAAe,EAAEjE,IAAI,CAACuD,SAAS,CAACvC,aAAa,CAAC,CAAC;IACpEd,YAAY,CAAC+D,OAAO,CAAC,SAAS,EAAEjE,IAAI,CAACuD,SAAS,CAACzD,OAAO,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb9B,SAAS,CAAC,MAAM;IACZkC,YAAY,CAAC+D,OAAO,CAAC,UAAU,EAAEjE,IAAI,CAACuD,SAAS,CAACzB,QAAQ,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd9D,SAAS,CAAC,MAAM;IACZ,IAAI,CAACkC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAKD,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,KAAK,IAAK,EAAE;MAChF,MAAM+D,YAAY,GAAGhE,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;MACpDgE,KAAK,CAAE,yBAAwBD,YAAa,EAAC,CAAC;MAC9CC,KAAK,CAAC,SAAS,EAAED,YAAY,CAACb,MAAM,CAAC;IACzC;IACA,MAAMU,UAAU,GAAG,CAAC,GAAGjE,OAAO,CAAC;IAC/B,IAAI,CAACA,OAAO,CAAC,CAAC,CAAC,CAACP,aAAa,IAAI,CAACO,OAAO,CAAC,CAAC,CAAC,CAACP,aAAa,EAAE;MACxD,IAAI,CAACO,OAAO,CAAC,CAAC,CAAC,CAACP,aAAa,EAAE;QAC3BwE,UAAU,CAAC,CAAC,CAAC,CAACxE,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACnDwE,UAAU,CAAC,CAAC,CAAC,CAACK,UAAU,GAAG,CAAC;MAChC;MACA,IAAI,CAACtE,OAAO,CAAC,CAAC,CAAC,CAACP,aAAa,EAAE;QAC3BwE,UAAU,CAAC,CAAC,CAAC,CAACxE,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACnDwE,UAAU,CAAC,CAAC,CAAC,CAACK,UAAU,GAAG,CAAC;MAChC;IACJ;IACA,MAAMC,aAAa,GAAG,CAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAAC;IACnI,IAAI,CAACvE,OAAO,CAAC,CAAC,CAAC,CAACX,SAAS,IAAI,CAACW,OAAO,CAAC,CAAC,CAAC,CAACZ,MAAM,IAAI,CAACY,OAAO,CAAC,CAAC,CAAC,CAACb,OAAO,EAAE;MACpE8E,UAAU,CAAC,CAAC,CAAC,CAAC5E,SAAS,GAAG0C,WAAW;MACrCkC,UAAU,CAAC,CAAC,CAAC,CAAC7E,MAAM,GAAGmF,aAAa;MACpCN,UAAU,CAAC,CAAC,CAAC,CAAC9E,OAAO,GAAGoF,aAAa;IACzC;IACA,IAAI,CAACvE,OAAO,CAAC,CAAC,CAAC,CAACX,SAAS,IAAI,CAACW,OAAO,CAAC,CAAC,CAAC,CAACZ,MAAM,IAAI,CAACY,OAAO,CAAC,CAAC,CAAC,CAACb,OAAO,EAAE;MACpE8E,UAAU,CAAC,CAAC,CAAC,CAAC5E,SAAS,GAAG0C,WAAW;MACrCkC,UAAU,CAAC,CAAC,CAAC,CAAC7E,MAAM,GAAGmF,aAAa;MACpCN,UAAU,CAAC,CAAC,CAAC,CAAC9E,OAAO,GAAGoF,aAAa;IACzC;IACAnE,YAAY,CAAC+D,OAAO,CAAC,SAAS,EAAEjE,IAAI,CAACuD,SAAS,CAACQ,UAAU,CAAC,CAAC;IAC3DhE,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;EAC3D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmE,iBAAiB,GAAIhB,WAAW,IAAK;IACvC,IAAIA,WAAW,GAAG,CAAC,EAAE;MACjB,IAAIpD,YAAY,CAACC,OAAO,CAAE,SAAQmD,WAAW,GAAG,CAAE,EAAC,CAAC,KAAK,QAAQ,EAAE;QAC/DpD,YAAY,CAAC+D,OAAO,CAAC,YAAY,EAAE,YAAY,CAAC;MACpD;IACJ;IACA/D,YAAY,CAAC+D,OAAO,CAAE,SAAQX,WAAY,EAAC,EAAE,OAAO,CAAC;IACrD,OAAO,KAAK;EAChB,CAAC;EACD,MAAMiB,QAAQ,GAAIjB,WAAW,IAAMkB,YAAY,CAAC1E,OAAO,CAACwD,WAAW,CAAC,CAAC,IAAI/C,MAAM,GAAIkE,WAAW,CAACnB,WAAW,CAAC,GAAGgB,iBAAiB,CAAChB,WAAW,CAAC;EAC5I,MAAMoB,YAAY,GAAG,CACjB;IAAE7F,IAAI,EAAE,UAAU;IAAEiE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAAE,CAAC,EACtE;IAAEjE,IAAI,EAAE,UAAU;IAAEiE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAAE,CAAC,EACtE;IAAEjE,IAAI,EAAE,UAAU;IAAEiE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAAE,CAAC,CACzE;EACD,MAAM2B,WAAW,GAAInB,WAAW,IAAK;IACjCpD,YAAY,CAAC+D,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC;IAC9C/D,YAAY,CAAC+D,OAAO,CAAE,SAAQX,WAAY,EAAC,EAAE,QAAQ,CAAC;IACtD,OAAO,IAAI;EACf,CAAC;EACD,MAAMqB,QAAQ,GAAGA,CAACC,UAAU,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAC9C5E,YAAY,CAAC+D,OAAO,CAAC,OAAO,EAAEa,QAAQ,CAAC;IACvCnE,OAAO,CAACmE,QAAQ,GAAG,EAAE,CAAC;IACtBjE,aAAa,CAACiE,QAAQ,GAAG,EAAE,CAAC;EAChC,CAAC;EAED,IAAI5D,KAAK,IAAIX,MAAM,KAAK,EAAE,EAAE;IACxBL,YAAY,CAAC+D,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IAClCzD,SAAS,CAACC,MAAM,CAACP,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;EACrD;EACA,MAAMqE,YAAY,GAAIjD,MAAM,IAAK;IAC7B,MAAMhC,aAAa,GAAGwF,MAAM,CAACxD,MAAM,CAAChC,aAAa,CAAC,CAACyF,KAAK,CAAC,GAAG,CAAC;IAC7D,IAAIC,KAAK,GAAG,CAAC;IACb,MAAMC,UAAU,GAAIC,KAAK,IAAKF,KAAK,GAAGA,KAAK,GAAGE,KAAK;IACnD5F,aAAa,CAAC6F,GAAG,CAAC,CAACtG,KAAK,EAAE0C,KAAK,KAAK0D,UAAU,CAACzE,MAAM,CAAC3B,KAAK,CAAC,CAAC,CAAC;IAC9D,IAAImG,KAAK,KAAK1E,MAAM,EAAEL,YAAY,CAAC+D,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC;IACpE,OAAOgB,KAAK;EAChB,CAAC;EACD,MAAMI,YAAY,GAAI9D,MAAM,IAAK;IAC7B,IAAI,CAACF,IAAI,EAAE;IACX,IAAI4D,KAAK,GAAG,CAAC;IACb,MAAMlB,UAAU,GAAG/D,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC9D,MAAM+E,UAAU,GAAIC,KAAK,IAAKF,KAAK,GAAGA,KAAK,GAAGxE,MAAM,CAAC0E,KAAK,CAAC;IAC3DpB,UAAU,CAACqB,GAAG,CAAE7D,MAAM,IAAK;MACvBA,MAAM,CAACvC,UAAU,CAACoG,GAAG,CAAEtG,KAAK,IAAKoG,UAAU,CAACpG,KAAK,CAAC,CAAC;MACnDyC,MAAM,CAAC+D,SAAS,GAAGL,KAAK;IAC5B,CAAC,CAAC;IACF/E,YAAY,CAAC+D,OAAO,CAAC,SAAS,EAAEjE,IAAI,CAACuD,SAAS,CAACQ,UAAU,CAAC,CAAC;IAC3D,OAAOkB,KAAK;EAChB,CAAC;EACD,MAAMM,cAAc,GAAI/D,KAAK,IAAK;IAC9B,MAAMuB,SAAS,GAAG,CAACjD,OAAO,CAAC,CAAC,CAAC,CAACf,WAAW,EAAEe,OAAO,CAAC,CAAC,CAAC,CAACf,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5E,MAAMkG,KAAK,GAAGlC,SAAS,CAACvB,KAAK,CAAC;IAC9BmB,OAAO,CAACC,GAAG,CAAE,6BAA4B9C,OAAO,CAAC0B,KAAK,CAAC,CAAC3C,IAAK,KAAIoG,KAAM,cAAa1E,MAAO,EAAC,CAAC;IAC7F,IAAI0E,KAAK,KAAK1E,MAAM,EAAEL,YAAY,CAAC+D,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC;IACpE,OAAOgB,KAAK;EAChB,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMzB,UAAU,GAAG/D,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC9DJ,UAAU,CAACgE,UAAU,CAAC;EAC1B,CAAC;EACD,MAAM0B,KAAK,GAAGA,CAAA,KAAM;IAChB,IAAIvE,KAAK,EAAE;MACPhB,YAAY,CAAC+D,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;MAClCzD,SAAS,CAACC,MAAM,CAACP,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrD;EACJ,CAAC;EACD,MAAMuF,UAAU,GAAGA,CAACd,UAAU,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAChD5E,YAAY,CAAC+D,OAAO,CAAC,MAAM,EAAEa,QAAQ,CAAC;IACtC5E,YAAY,CAAC+D,OAAO,CAAC,YAAY,EAAE,YAAY,CAAC;IAChD5D,OAAO,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrCsF,KAAK,CAAC,CAAC;EACX,CAAC;EACD,MAAME,YAAY,GAAGA,CAACf,UAAU,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAClD5E,YAAY,CAAC+D,OAAO,CAAC,QAAQ,EAAEa,QAAQ,CAAC;IACxCtE,SAAS,CAACC,MAAM,CAACP,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;EACrD,CAAC;EACD,MAAMyF,KAAK,GAAIC,KAAK,IAAK;IACrB1B,KAAK,CAAC,oBAAoB,GAAG0B,KAAK,CAACV,KAAK,CAAC;IACzCjF,YAAY,CAAC+D,OAAO,CAAC,SAAS,EAAEjE,IAAI,CAACuD,SAAS,CAAC3E,WAAW,CAAC,CAAC;IAC5D+D,OAAO,CAACC,GAAG,CAAE,sCAAqC1C,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE,EAAC,CAAC;IACpFD,YAAY,CAAC+D,OAAO,CAAC,YAAY,EAAE,YAAY,CAAC;IAChDlE,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,MAAM2F,YAAY,GAAGA,CAACvE,MAAM,EAAEC,KAAK,KAAK;IACpC,IAAIyD,KAAK,GAAG,CAAC;IACb,MAAMnG,KAAK,GAAI0C,KAAK,IAAKD,MAAM,CAACnC,UAAU,CAACoC,KAAK,CAAC;IACjD,MAAM0D,UAAU,GAAIC,KAAK,IAAKF,KAAK,GAAGA,KAAK,GAAGE,KAAK;IACnDxG,WAAW,CAACyG,GAAG,CAAC,CAACW,MAAM,EAAEvE,KAAK,KAAK;MAC/BmB,OAAO,CAACC,GAAG,CAAE,2BAA0BrB,MAAM,CAAC1C,IAAK,WAAU2C,KAAM,WAAU1C,KAAK,CAAC0C,KAAK,CAAE,EAAC,CAAC;MAC5F0D,UAAU,CAACzE,MAAM,CAAC3B,KAAK,CAAC0C,KAAK,CAAC,CAAC,CAAC;IACpC,CACA,CAAC;IACD,OAAOyD,KAAK;EAChB,CAAC;EAED,MAAMe,KAAK,GAAIH,KAAK,IAAK;IACrB,IAAI9B,UAAU,GAAG/D,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC5D,MAAM8F,YAAY,GAAGA,CAAC1E,MAAM,EAAEC,KAAK,KAAM,GAAED,MAAM,CAAC1C,IAAK,SAAQ2C,KAAM,EAAC;IAEtE,MAAM0E,EAAE,GAAGA,CAAC3E,MAAM,EAAEC,KAAK,KAAK;MAC1B,IAAIN,KAAK,EAAE;QACP,OAAOI,UAAU,CAACC,MAAM,EAAEC,KAAK,CAAC;MACpC,CAAC,MAAM,IAAIL,OAAO,EAAE;QAChB,OAAO8E,YAAY,CAAC1E,MAAM,EAAEC,KAAK,CAAC;MACtC,CAAC,MAAM,IAAIH,IAAI,EAAE;QACb,OAAOI,OAAO,CAACF,MAAM,EAAEC,KAAK,CAAC;MACjC,CAAC,MAAM,IAAIJ,IAAI,EAAE;QACb,OAAOM,OAAO,CAACH,MAAM,EAAEC,KAAK,CAAC;MACjC;MACA,OAAQD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC1C,IAAI;IACxC,CAAC;IAED,MAAMsH,SAAS,GAAG,CAAC;IACnB,IAAIjF,KAAK,EAAE;MACP6C,UAAU,CAACqB,GAAG,CAAE7D,MAAM,IAAK;QACvBA,MAAM,CAAC6C,UAAU,GAAG,CAAC;QACrB7C,MAAM,CAAChC,aAAa,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;MAC1C,CAAC,CAAC;IACN,CAAC,MAAM,IAAI8B,IAAI,EAAE;MACb0C,UAAU,CAACqB,GAAG,CAAE7D,MAAM,IAAK;QACvBA,MAAM,CAAC+D,SAAS,GAAG,CAAC;QACpB/D,MAAM,CAACvC,UAAU,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;QACzDuC,MAAM,CAACtC,OAAO,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QAC/IsC,MAAM,CAACrC,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QAC9IqC,MAAM,CAACpC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC7E,CAAC,CAAC;IACN,CAAC,MAAM,IAAIgC,OAAO,EAAE;MAChB4C,UAAU,CAAC,CAAC,CAAC,CAAChF,WAAW,GAAG,CAAC;MAC7BgF,UAAU,CAAC,CAAC,CAAC,CAAChF,WAAW,GAAG,CAAC;IACjC,CAAC,MAAM,IAAIqC,IAAI,EAAE;MACb2C,UAAU,CAACqB,GAAG,CAAC,CAAC7D,MAAM,EAAEC,KAAK,KAAK;QAC9BD,MAAM,CAACnC,UAAU,GAAGT,WAAW;QAC/B4C,MAAM,CAACyC,SAAS,GAAG,CAAC;QACpBzC,MAAM,CAACjC,YAAY,GAAG,CAAC;MAC3B,CAAC,CAAC;MACF,MAAM8G,aAAa,GAAG,CAAC,GAAGrC,UAAU,CAAC;MACrCqC,aAAa,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKT,YAAY,CAACS,CAAC,EAAE,CAAC,CAAC,GAAGT,YAAY,CAACQ,CAAC,EAAE,CAAC,CAAC,CAAC;MACrEvC,UAAU,GAAG,CAAC,GAAGqC,aAAa,CAAC;IACnC,CAAC,MAAM;MACHrC,UAAU,CAACqB,GAAG,CAAC,CAAC7D,MAAM,EAAEC,KAAK,KAAKuC,UAAU,CAACvC,KAAK,CAAC,CAAE,GAAEpB,IAAK,OAAM,CAAC,GAAG+F,SAAS,CAAC;IACpF;IACAjG,YAAY,CAAC+D,OAAO,CAAC,YAAY,EAAE,YAAY,CAAC;IAChD/D,YAAY,CAAC+D,OAAO,CAAC,SAAS,EAAEjE,IAAI,CAACuD,SAAS,CAACQ,UAAU,CAAC,CAAC;IAC3DhE,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IACvDqG,QAAQ,CAAC,CAAC;EACd,CAAC;EACD,MAAMC,SAAS,GAAIZ,KAAK,IAAK;IACzB,MAAMpG,SAAS,GAAGiH,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC;IAC9C,MAAMC,oBAAoB,GAAGnH,aAAa,CAACC,SAAS,CAAC;IACrD,IAAIsE,UAAU,GAAG,CAAC,GAAGjE,OAAO,CAAC;IAC7B,IAAIL,SAAS,KAAK,IAAI,EAAE;MACpBsE,UAAU,CAAC6C,IAAI,CAACD,oBAAoB,CAAC;MACrCzG,YAAY,CAAC+D,OAAO,CAAC,SAAS,EAAEjE,IAAI,CAACuD,SAAS,CAACQ,UAAU,CAAC,CAAC;MAC3DpB,OAAO,CAACC,GAAG,CAAE,sCAAqC1C,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE,EAAC,CAAC;MACpFJ,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IAC3D;EACJ,CAAC;EAED,MAAM0G,UAAU,GAAIrF,KAAK,IAAK;IAC1B,MAAM/B,SAAS,GAAGiH,MAAM,CAAC,gBAAgB,EAAE5G,OAAO,CAAC0B,KAAK,CAAC,CAAC;IAC1D,IAAI/B,SAAS,KAAK,IAAI,EAAE;MACpB,IAAIsE,UAAU,GAAG,CAAC,GAAGjE,OAAO,CAAC;MAC7BiE,UAAU,CAACvC,KAAK,CAAC,GAAG/B,SAAS;MAC7BS,YAAY,CAAC+D,OAAO,CAAC,SAAS,EAAEjE,IAAI,CAACuD,SAAS,CAACQ,UAAU,CAAC,CAAC;MAC3DpB,OAAO,CAACC,GAAG,CAAE,sCAAqC1C,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE,EAAC,CAAC;MACpFJ,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;MACvDqG,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC;EACD,MAAMA,QAAQ,GAAGA,CAAA,KAAMM,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,sBAAsB;EAExE,MAAMC,YAAY,GAAIzF,KAAK,IAAK;IAC5BmB,OAAO,CAACC,GAAG,CAAE,mBAAkBpB,KAAM,EAAC,CAAC;IACvC,MAAMuC,UAAU,GAAG,CAAC,GAAGjE,OAAO,CAAC,CAACoH,KAAK,CAAC,CAAC;IACvCnD,UAAU,CAACoD,MAAM,CAAC3F,KAAK,EAAE,CAAC,CAAC;IAC3BtB,YAAY,CAAC+D,OAAO,CAAC,SAAS,EAAEjE,IAAI,CAACuD,SAAS,CAACQ,UAAU,CAAC,CAAC;IAC3DpB,OAAO,CAACC,GAAG,CAAE,sCAAqC1C,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE,EAAC,CAAC;IACpFJ,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMiH,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,SAAS,GAAGA,CAAC/D,WAAW,EAAEgE,UAAU,EAAExI,KAAK,KAAK;MAClD,MAAMyC,MAAM,GAAGzB,OAAO,CAACwD,WAAW,CAAC;MACnC,IAAIpC,KAAK,EAAE;QACPyB,OAAO,CAACC,GAAG,CAAE,GAAExC,IAAK,2BAA2BmB,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC1C,IAAM,gBAAeyI,UAAW,UAASA,UAAW,MAAK/F,MAAM,CAACzC,KAAM,EAAC,CAAC;QAC/I,oBAAON,OAAA,CAACN,YAAY;UAChBkC,IAAI,EAAEA,IAAK;UACXmB,MAAM,EAAEA,MAAO;UACf+B,WAAW,EAAEA,WAAY;UACzBgE,UAAU,EAAEA,UAAW;UACvBT,UAAU,EAAEA,UAAW;UACvBI,YAAY,EAAEA,YAAa;UAC3BzB,YAAY,EAAEA,YAAa;UAC3BjF,MAAM,EAAEA;QAAO,GACVjC,MAAM,CAAEiD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC1C,IAAK,CAAC;UAAA0I,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MACN;MACA,IAAIvG,OAAO,EAAE;QACTwB,OAAO,CAACC,GAAG,CAAE,GAAExC,IAAK,2BAA2BmB,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC1C,IAAM,iBAAgByE,WAAY,gBAAegE,UAAW,gBAAe/F,MAAM,CAACxC,WAAY,WAAUD,KAAM,EAAC,CAAC;QACvL,oBAAON,OAAA,CAACL,OAAO;UACXiC,IAAI,EAAEA,IAAK;UACXmB,MAAM,EAAEA,MAAO;UACf+B,WAAW,EAAEA,WAAY;UACzBgE,UAAU,EAAEA,UAAW;UACvB1D,UAAU,EAAErC,MAAM,CAACxC,WAAW,IAAI,CAAE;UACpC4I,SAAS,EAAE7I,KAAM;UACjB+H,UAAU,EAAEA,UAAW;UACvBI,YAAY,EAAEA,YAAa;UAC3B1B,cAAc,EAAEA,cAAe;UAC/BC,YAAY,EAAEA,YAAa;UAC3BjF,MAAM,EAAEA;QAAO,GACVjC,MAAM,CAAEiD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC1C,IAAK,CAAC;UAAA0I,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MACN;MACA,IAAIrG,IAAI,EAAE;QACNsB,OAAO,CAACC,GAAG,CAAE,GAAExC,IAAK,0BAAyBmB,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC1C,IAAK,EAAC,CAAC;QAC5E8D,OAAO,CAACC,GAAG,CAAE,eAAc0E,UAAW,EAAC,CAAC;QACxC3E,OAAO,CAACC,GAAG,CAAE,UAASrB,MAAM,CAACvC,UAAU,CAACsI,UAAU,CAAE,EAAC,CAAC;QACtD3E,OAAO,CAACC,GAAG,CAAE,sBAAqB9D,KAAM,EAAC,CAAC;QAC1C,oBAAON,OAAA,CAACP,SAAS;UACbmC,IAAI,EAAEA,IAAK;UACXN,OAAO,EAAEA,OAAQ;UACjBwD,WAAW,EAAEA,WAAY;UACzBgE,UAAU,EAAEA,UAAW;UACvBT,UAAU,EAAEA,UAAW;UACvBI,YAAY,EAAEA,YAAa;UAC3BzB,YAAY,EAAEA,YAAa;UAC3BjF,MAAM,EAAEuB,QAAQ,CAACwF,UAAU;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MACN;MACA,oBAAOlJ,OAAA,CAACP,SAAS;QACbmC,IAAI,EAAEA,IAAK;QACXN,OAAO,EAAEA,OAAQ;QACjBwD,WAAW,EAAEA,WAAY;QACzBgE,UAAU,EAAEA,UAAW;QACvBT,UAAU,EAAEA,UAAW;QACvBI,YAAY,EAAEA,YAAa;QAC3BzB,YAAY,EAAEA,YAAa;QAC3BjF,MAAM,EAAEA;MAAO;QAAAgH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IACN,CAAC;IACD,MAAME,UAAU,GAAGA,CAACrG,MAAM,EAAEC,KAAK,EAAE1C,KAAK,KAAK;MACzC,MAAM+I,eAAe,GAAGpH,MAAM,CAACX,OAAO,CAAE0B,KAAK,KAAK,CAAC,GAAE,CAAC,GAAEA,KAAK,GAAC,CAAE,CAAC,CAACwC,SAAS,GAAClE,OAAO,CAAE0B,KAAK,KAAK,CAAC,GAAE,CAAC,GAAEA,KAAM,CAAC,CAACwC,SAAS,CAAC;MACvH,MAAM8D,UAAU,GAAID,eAAe,GAAC,CAAC,GAAK,CAAC,CAAC,GAACA,eAAe,GAAIA,eAAe;MAC/E,MAAME,YAAY,GAAGtH,MAAM,CAACX,OAAO,CAAE0B,KAAK,KAAK,CAAC,GAAE,CAAC,GAAEA,KAAK,GAAC,CAAE,CAAC,CAACwC,SAAS,CAAC;MACzE,MAAMgE,oBAAoB,GAAGnF,qBAAqB,CAAC/C,OAAO,CAAC0B,KAAK,CAAC,CAACpC,UAAU,CAAC;MAC7E,MAAM6I,mBAAmB,GAAGnI,OAAO,CAAC0B,KAAK,CAAC,CAACpC,UAAU,CAAC4I,oBAAoB,CAAC,CAAC,CAAC,CAAC;MAC9E,MAAME,IAAI,GAAIH,YAAY,GAAGE,mBAAmB,GAAI,GAAG;MACvDtF,OAAO,CAACC,GAAG,CAAE,+BAA8BmF,YAAa,2BAA0BE,mBAAoB,kBAAiBC,IAAK,EAAC,CAAC;MAC9H,MAAMC,MAAM,GAAI,WAAUL,UAAU,CAACjE,OAAO,CAAC,CAAC,CAAE,EAAC;MACjD,MAAMuE,KAAK,GAAI,SAAQF,IAAI,CAACrE,OAAO,CAAC,CAAC,CAAE,EAAC;MACxC,IAAIrC,KAAK,KAAK,CAAC,EAAE;QACb,OAAO2G,MAAM;MACjB;MACA,OAAOC,KAAK;IAChB,CAAC;IAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM1J,WAAW,CAACyG,GAAG,CAAC,CAACkD,IAAI,EAAE9G,KAAK,KAAK;MAC7D,aAAAhD,OAAA;QAAK+J,SAAS,EAAC,iCAAiC;QAAAC,QAAA,gBAC5ChK,OAAA;UAAK+J,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC3BnB,SAAS,CAACvH,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE0B,KAAK,EAAE1B,OAAO,CAAC,CAAC,CAAC,CAACV,UAAU,CAACoC,KAAK,CAAC;QAAC;UAAA+F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC,eACNlJ,OAAA;UAAK+J,SAAS,EAAC,qCAAqC;UAAAC,QAAA,EAC/CF;QAAI;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNlJ,OAAA;UAAK+J,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC3BnB,SAAS,CAACvH,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE0B,KAAK,EAAE1B,OAAO,CAAC,CAAC,CAAC,CAACV,UAAU,CAACoC,KAAK,CAAC;QAAC;UAAA+F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA,GAT4CpJ,MAAM,CAAE,OAAMgK,IAAK,EAAC,CAAC;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUtE,CAAC;IACV,CAAC,CAAC;IAEF,MAAMe,YAAY,GAAGA,CAACC,QAAQ,EAAElH,KAAK,EAAE1C,KAAK,KAAK;MAE7C,MAAM6J,QAAQ,GAAGjC,MAAM,CAAE,SAAQ5G,OAAO,CAAC4I,QAAQ,CAAC,CAACnH,MAAM,IAAIzB,OAAO,CAAC4I,QAAQ,CAAC,CAAC7J,IAAK,qBAAoB2C,KAAK,GAAG,CAAE,IAAG,EAAG1C,KAAK,IAAI,EAAG,CAAC;MACrI,MAAMiF,UAAU,GAAG,CAAC,GAAGjE,OAAO,CAAC;MAC/BiE,UAAU,CAAC2E,QAAQ,CAAC,CAACtJ,UAAU,CAACoC,KAAK,CAAC,GAAGf,MAAM,CAACkI,QAAQ,CAAC;MACzD5E,UAAU,CAAC2E,QAAQ,CAAC,CAAC1E,SAAS,GAAGJ,UAAU,CAAC8E,QAAQ,EAAE3E,UAAU,CAAC;MACjE,IAAIA,UAAU,CAAC2E,QAAQ,CAAC,CAACpJ,YAAY,KAAK,CAAC,IAAIyE,UAAU,CAAC2E,QAAQ,CAAC,CAACpJ,YAAY,KAAK,CAAC,EAAE;QACpFyE,UAAU,CAACqB,GAAG,CAAC,CAAC7D,MAAM,EAAEC,KAAK,KAAG;UAC5B,IAAIA,KAAK,KAAKkH,QAAQ,EAAE;YACpBnH,MAAM,CAACjC,YAAY,GAAGQ,OAAO,CAACuD,MAAM;UACxC,CAAC,MAAM,IAAI9B,MAAM,CAACjC,YAAY,IAAI,CAAC,EAAE;YACjCiC,MAAM,CAACjC,YAAY,GAAGiC,MAAM,CAACjC,YAAY,GAAC,CAAC;UAC/C;QACJ,CAAC,CAAC;MACN;MACA,MAAM8G,aAAa,GAAG,CAAC,GAAGrC,UAAU,CAAC;MACrCqC,aAAa,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACvC,SAAS,GAAGsC,CAAC,CAACtC,SAAS,CAAC;MAEvDrB,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEwD,aAAa,CAAC;MAE7DlG,YAAY,CAAC+D,OAAO,CAAC,SAAS,EAAEjE,IAAI,CAACuD,SAAS,CAAC6C,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MACvErG,UAAU,CAACqG,aAAa,CAAC;IAC7B,CAAC;IAED,MAAMwC,OAAO,GAAGA,CAACF,QAAQ,EAAElH,KAAK,EAAE1C,KAAK,KAAK;MACxC,MAAMyC,MAAM,GAAGzB,OAAO,CAAC4I,QAAQ,CAAC;MAChC,MAAMG,QAAQ,GAAGtH,MAAM,CAACnC,UAAU,CAACoC,KAAK,CAAC;MACzC,MAAMsH,aAAa,GAAGjG,qBAAqB,CAAC/C,OAAO,CAAC4I,QAAQ,CAAC,CAACtJ,UAAU,CAAC;MACzE,MAAM2J,SAAS,GAAGD,aAAa,CAAC,CAAC,CAAC;MAClC,MAAME,eAAe,GAAGF,aAAa,CAAC,CAAC,CAAC;MACxC,MAAMG,UAAU,GAAIzH,KAAK,KAAKuH,SAAS,GAAI,IAAI,GAAG,KAAK;MACvD,MAAMG,WAAW,GAAI1H,KAAK,KAAKwH,eAAe,GAAI,IAAI,GAAG,KAAK;MAC9D,MAAMG,UAAU,GAAIF,UAAU,IAAIC,WAAW,GAAI,iCAAiC,GAAG,mBAAmB;MACxG,MAAMZ,IAAI,gBAAG9J,OAAA;QAAK+J,SAAS,EAAC,QAAQ;QAACa,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAACC,QAAQ,EAAElH,KAAK,EAAE1C,KAAK,CAAE;QAAA0J,QAAA,gBACrFhK,OAAA;UAAK+J,SAAS,EAAC,iDAAiD;UAAAC,QAAA,EAAEhH,KAAK,GAAG;QAAC;UAAA+F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAClFlJ,OAAA;UAAK+J,SAAS,EAAG,SAAQY,UAAW,EAAE;UAAAX,QAAA,EAAE1J;QAAK;UAAAyI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAFuCpJ,MAAM,CAAE,OAAMoK,QAAS,GAAElH,KAAM,GAAE1C,KAAM,EAAC,CAAC;QAAAyI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGnI,CAAC;MACN,OAAOY,IAAI;IACf,CAAC;IAED,MAAMe,kBAAkB,GAAIX,QAAQ,IAAK;MACrC,MAAMI,aAAa,GAAGjG,qBAAqB,CAAC/C,OAAO,CAAC4I,QAAQ,CAAC,CAACtJ,UAAU,CAAC;MACzE,MAAM4J,eAAe,GAAGF,aAAa,CAAC,CAAC,CAAC;MACxC,OAAOhJ,OAAO,CAAC4I,QAAQ,CAAC,CAACtJ,UAAU,CAAC4J,eAAe,CAAC;IACxD,CAAC;IAED,MAAMM,UAAU,GAAGA,CAAChG,WAAW,EAAExE,KAAK,KAAK;MACvC,IAAIwE,WAAW,KAAK,CAAC,EAAE;QACnB,IAAIxE,KAAK,KAAK8E,UAAU,CAACN,WAAW,GAAG,CAAC,EAAExD,OAAO,CAAC,EAAE;UAChD,OAAO,IAAI;QACf;MACJ;MACA,OAAO,KAAK;IAChB,CAAC;IACD,MAAMyJ,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC;IAC9F,MAAMC,YAAY,GAAIhI,KAAK,IAAK;MAC5B,MAAMuC,UAAU,GAAG,CAAC,GAAGjE,OAAO,CAAC;MAC/BiE,UAAU,CAACvC,KAAK,CAAC,CAACnC,eAAe,GAAGoB,MAAM,CAACsD,UAAU,CAACvC,KAAK,CAAC,CAACnC,eAAe,CAAC,GAAC,CAAC;MAC/E0E,UAAU,CAACvC,KAAK,CAAC,CAACnC,eAAe,GAAI0E,UAAU,CAACvC,KAAK,CAAC,CAACnC,eAAe,GAAIkK,YAAY,CAAClG,MAAM,GAAC,CAAE,GAAI,CAAC,GAAGU,UAAU,CAACvC,KAAK,CAAC,CAACnC,eAAe;MACzIa,YAAY,CAAC+D,OAAO,CAAC,SAAS,EAAEjE,IAAI,CAACuD,SAAS,CAACQ,UAAU,CAAC,CAAC;MAC3DhE,UAAU,CAACgE,UAAU,CAAC;IAC1B,CAAC;IAED,MAAM0F,aAAa,GAAGA,CAAClI,MAAM,EAAEC,KAAK,EAAE1C,KAAK,KAAK;MAC5C,IAAIsC,IAAI,EAAE;QACN,MAAMsI,YAAY,gBAAGlL,OAAA;UAAAgK,QAAA,gBACjBhK,OAAA;YAAK+J,SAAS,EAAG,+FAA+F;YAAAC,QAAA,gBAC5GhK,OAAA;cAAK+J,SAAS,EAAG,mCAAkCgB,YAAY,CAAC9I,MAAM,CAACX,OAAO,CAAC0B,KAAK,CAAC,CAACnC,eAAe,CAAC,CAAC,IAAIkK,YAAY,CAAC,CAAC,CAAE,EAAE;cAAAf,QAAA,EAAGc,UAAU,CAAC9H,KAAK,EAAE1C,KAAK,CAAC,IAAK0C,KAAK,KAAK,CAAE,GAAIA,KAAK,GAAIA,KAAK,GAAG;YAAE;cAAA+F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACvMlJ,OAAA;cAAK+J,SAAS,EAAG,4DAA2DgB,YAAY,CAAC9I,MAAM,CAACX,OAAO,CAAC0B,KAAK,CAAC,CAACnC,eAAe,CAAC,CAAC,IAAIkK,YAAY,CAAC,CAAC,CAAE,EAAE;cAACH,OAAO,EAAEA,CAAA,KAAMI,YAAY,CAAChI,KAAK,CAAE;cAAAgH,QAAA,EAAGjH,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC1C;YAAI;cAAA0I,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjOlJ,OAAA;cAAK+J,SAAS,EAAG,wEAAuEgB,YAAY,CAAC9I,MAAM,CAACX,OAAO,CAAC0B,KAAK,CAAC,CAACnC,eAAe,CAAC,CAAC,IAAIkK,YAAY,CAAC,CAAC,CAAE,EAAE;cAAAf,QAAA,gBAC9JhK,OAAA;gBAAK+J,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAE1J;cAAK;gBAAAyI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC1ClJ,OAAA;gBAAK+J,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAEZ,UAAU,CAACrG,MAAM,EAAEC,KAAK,EAAE1C,KAAK;cAAC;gBAAAyI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnE,CAAC;UAAA,GAN4GpJ,MAAM,CAAE,GAAEkD,KAAM,GAAGD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC1C,IAAM,EAAC,CAAC;YAAA0I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOpK,CAAC,eACNlJ,OAAA;YAAAgK,QAAA,eACIhK,OAAA;cAAAgK,QAAA,eACIhK,OAAA;gBAAK+J,SAAS,EAAC,qCAAqC;gBAAAC,QAAA,eAChDhK,OAAA;kBAAK+J,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,EAC3B1I,OAAO,CAAC0B,KAAK,CAAC,CAACpC,UAAU,CAACgG,GAAG,CAAC,CAACtG,KAAK,EAAEwJ,IAAI,KAAKM,OAAO,CAACpH,KAAK,EAAE8G,IAAI,EAAExI,OAAO,CAAC0B,KAAK,CAAC,CAACpC,UAAU,CAACkJ,IAAI,CAAC,CAAC;gBAAC;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrG;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA,GAjBqBpJ,MAAM,CAAE,GAAEQ,KAAM,GAAE0C,KAAM,GAAGD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAAC1C,IAAM,EAAC,CAAC;UAAA0I,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBrF,CAAC;QACN,OAAOgC,YAAY;MACvB;MACA;IACJ,CAAC;IACD,MAAMC,aAAa,GAAGA,CAAA,KAAM7J,OAAO,CAACsF,GAAG,CAAC,CAAC7D,MAAM,EAAEC,KAAK,KAAK6F,SAAS,CAAC7F,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAElF,MAAMoI,UAAU,GAAGA,CAAA,KAAMhI,WAAW,CAACwD,GAAG,CAAC,CAACtG,KAAK,EAAE0C,KAAK,kBAAKhD,OAAA;MAAK+J,SAAS,EAAC,iCAAiC;MAAAC,QAAA,gBACvGhK,OAAA;QAAK+J,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3BnB,SAAS,CAAC,CAAC,EAAE7F,KAAK,EAAE,CAAC;MAAC;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACNlJ,OAAA;QAAK+J,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAC/C1J;MAAK;QAAAyI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNlJ,OAAA;QAAK+J,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3BnB,SAAS,CAAC,CAAC,EAAE7F,KAAK,EAAE,CAAC;MAAC;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA,GATuGpJ,MAAM,CAACQ,KAAK,CAAC;MAAAyI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUzH,CAAC,CAAC;IAEP,MAAMmC,WAAW,GAAIC,IAAI,IAAK;MAC1B,MAAMC,OAAO,GAAG,CAAC,GAAGjI,QAAQ,CAAC;MAC7B,MAAMkI,MAAM,GAAGtD,MAAM,CAAE,sBAAqBoD,IAAK,GAAE,EAAEhI,QAAQ,CAACgI,IAAI,CAAC,CAAC;MACpEC,OAAO,CAACD,IAAI,CAAC,GAAGE,MAAM;MACtBjI,WAAW,CAACgI,OAAO,CAAC;IACxB,CAAC;IAED,MAAM/K,UAAU,GAAGA,CAAA,KAAM6C,WAAW,CAACuD,GAAG,CAAC,CAAC0E,IAAI,EAAEtI,KAAK,kBAAKhD,OAAA;MAAAgK,QAAA,eACtDhK,OAAA;QAAK+J,SAAS,EAAC,sCAAsC;QAAAC,QAAA,gBACjDhK,OAAA;UAAAgK,QAAA,gBACIhK,OAAA;YAAM+J,SAAS,EAAC,8BAA8B;YAAAC,QAAA,EAAC;UAE/C;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACPlJ,OAAA;YAAM+J,SAAS,EAAC,2CAA2C;YAAAC,QAAA,EACtDhH,KAAK,GAAC;UAAC;YAAA+F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACPlJ,OAAA;YAAM+J,SAAS,EAAC,8BAA8B;YAAAC,QAAA,EAAC;UAE/C;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACPlJ,OAAA;YAAM+J,SAAS,EAAC,8BAA8B;YAAAC,QAAA,EACzC1G,QAAQ,CAACN,KAAK;UAAC;YAAA+F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNlJ,OAAA;UAAK+J,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC1BhK,OAAA;YAAK+J,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC3BnB,SAAS,CAAC,CAAC,EAAE7F,KAAK,EAAEM,QAAQ,CAACN,KAAK,CAAC;UAAC;YAAA+F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eACNlJ,OAAA;YAAK+J,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC3BnB,SAAS,CAAC,CAAC,EAAE7F,KAAK,EAAEM,QAAQ,CAACN,KAAK,CAAC;UAAC;YAAA+F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC,GAxB0DpJ,MAAM,CAACwL,IAAI,CAAC;MAAAvC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAyB3E,CAAC,CAAC;IAEP,MAAMuC,iBAAiB,GAAGA,CAAA,KAAMnK,OAAO,CAACsF,GAAG,CAAC,CAAC7D,MAAM,EAAEC,KAAK,KAAKiI,aAAa,CAAClI,MAAM,EAAEC,KAAK,EAAEsC,YAAY,CAACtC,KAAK,CAAC,CAAC,CAAC;IAEjH,MAAM0I,YAAY,GAAGA,CAAA,KAAMlI,aAAa,CAACoD,GAAG,CAAC,CAACtG,KAAK,EAAE0C,KAAK,kBAAKhD,OAAA;MAAK+J,SAAS,EAAC,iCAAiC;MAAAC,QAAA,gBAC3GhK,OAAA;QAAK+J,SAAS,EAAC,wCAAwC;QAAAC,QAAA,EAClDnB,SAAS,CAAC,CAAC,EAAE7F,KAAK,EAAE1C,KAAK;MAAC;QAAAyI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACNlJ,OAAA;QAAK+J,SAAS,EAAC,sCAAsC;QAAAC,QAAA,EAChD1J;MAAK;QAAAyI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNlJ,OAAA;QAAK+J,SAAS,EAAC,wCAAwC;QAAAC,QAAA,EAClDnB,SAAS,CAAC,CAAC,EAAE7F,KAAK,EAAE1C,KAAK;MAAC;QAAAyI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA,GAT2GpJ,MAAM,CAACQ,KAAK,CAAC;MAAAyI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAU7H,CAAC,CAAC;IAEP,MAAMyC,cAAc,GAAI7G,WAAW,IAAMiC,cAAc,CAACjC,WAAW,CAAC,IAAI/C,MAAM,GAAIkE,WAAW,CAACnB,WAAW,CAAC,GAAGgB,iBAAiB,CAAChB,WAAW,CAAC;IAE3I,MAAM8G,SAAS,GAAI9G,WAAW,IAAK,2CAA2C,IAAKiB,QAAQ,CAACjB,WAAW,CAAC,KAAKlD,IAAI,IAAI,MAAM,IAAIA,IAAI,IAAI,MAAM,CAAC,GAAI,2CAA2C,GAAG,EAAE,CAAC;IACnM,MAAMiK,WAAW,GAAI/G,WAAW,IAAK,2CAA2C,IAAK6G,cAAc,CAAC7G,WAAW,CAAC,KAAK,CAACjC,IAAI,IAAI,CAACD,IAAI,CAAC,GAAI,oCAAoC,GAAG,EAAE,CAAC;IAElL,MAAMkJ,cAAc,GAAGA,CAAA,kBAAM9L,OAAA,CAACV,KAAK,CAACyM,QAAQ;MAAA/B,QAAA,gBACxChK,OAAA;QAAK+J,SAAS,EAAC,oEAAoE;QAAAC,QAAA,gBAC/EhK,OAAA;UAAK+J,SAAS,EAAE6B,SAAS,CAAC,CAAC,CAAE;UAAA5B,QAAA,GAAE1I,OAAO,CAAC,CAAC,CAAC,CAACyB,MAAM,IAAIzB,OAAO,CAAC,CAAC,CAAC,CAACjB,IAAI,EAAC,GAAC,eAAAL,OAAA;YAAK+J,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAEhE,YAAY,CAAC1E,OAAO,CAAC,CAAC,CAAC;UAAC;YAAAyH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/IlJ,OAAA;UAAK+J,SAAS,EAAC,+CAA+C;UAAAC,QAAA,EAAC;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvElJ,OAAA;UAAK+J,SAAS,EAAE6B,SAAS,CAAC,CAAC,CAAE;UAAA5B,QAAA,GAAE1I,OAAO,CAAC,CAAC,CAAC,CAACyB,MAAM,IAAIzB,OAAO,CAAC,CAAC,CAAC,CAACjB,IAAI,EAAC,GAAC,eAAAL,OAAA;YAAK+J,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAEhE,YAAY,CAAC1E,OAAO,CAAC,CAAC,CAAC;UAAC;YAAAyH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9I,CAAC,EACLkC,UAAU,CAAC,CAAC;IAAA;MAAArC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;IAEjB,MAAM8C,cAAc,GAAGA,CAAA,kBAAMhM,OAAA,CAACV,KAAK,CAACyM,QAAQ;MAAA/B,QAAA,gBACxChK,OAAA;QAAK+J,SAAS,EAAC,iDAAiD;QAAAC,QAAA,gBAC5DhK,OAAA;UAAK+J,SAAS,EAAE6B,SAAS,CAAC,CAAC,CAAE;UAAA5B,QAAA,GACxB1I,OAAO,CAAC,CAAC,CAAC,CAACyB,MAAM,IAAIzB,OAAO,CAAC,CAAC,CAAC,CAACjB,IAAI,EAAC,GAAC,eAAAL,OAAA;YAAK+J,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAE1I,OAAO,CAAC,CAAC,CAAC,CAACwF;UAAS;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtG,CAAC,eACNlJ,OAAA;UAAK+J,SAAS,EAAC,+CAA+C;UAAAC,QAAA,EAAC;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvElJ,OAAA;UAAK+J,SAAS,EAAE6B,SAAS,CAAC,CAAC,CAAE;UAAA5B,QAAA,GACxB1I,OAAO,CAAC,CAAC,CAAC,CAACyB,MAAM,IAAIzB,OAAO,CAAC,CAAC,CAAC,CAACjB,IAAI,EAAC,GAAC,eAAAL,OAAA;YAAK+J,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAE1I,OAAO,CAAC,CAAC,CAAC,CAACwF;UAAS;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNlJ,OAAA;QAAK+J,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3BxJ,UAAU,CAAC;MAAC;QAAAuI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;IAEjB,MAAM+C,gBAAgB,GAAGA,CAAA,kBAAMjM,OAAA,CAACV,KAAK,CAACyM,QAAQ;MAAA/B,QAAA,gBAC1ChK,OAAA;QAAK+J,SAAS,EAAC,uDAAuD;QAAAC,QAAA,gBAClEhK,OAAA;UAAK+J,SAAS,EAAE8B,WAAW,CAAC,CAAC,CAAE;UAAA7B,QAAA,GAC1B1I,OAAO,CAAC,CAAC,CAAC,CAACyB,MAAM,IAAIzB,OAAO,CAAC,CAAC,CAAC,CAACjB,IAAI,EAAC,GACtC,eAAAL,OAAA;YAAK+J,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAC9BjD,cAAc,CAAC,CAAC;UAAC;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNlJ,OAAA;UAAK+J,SAAS,EAAC,+CAA+C;UAAAC,QAAA,EAAC;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvElJ,OAAA;UAAK+J,SAAS,EAAE8B,WAAW,CAAC,CAAC,CAAE;UAAA7B,QAAA,GAC1B1I,OAAO,CAAC,CAAC,CAAC,CAACyB,MAAM,IAAIzB,OAAO,CAAC,CAAC,CAAC,CAACjB,IAAI,EAAC,GACtC,eAAAL,OAAA;YAAK+J,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAC9BjD,cAAc,CAAC,CAAC;UAAC;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EACLwC,YAAY,CAAC,CAAC;IAAA;MAAA3C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;IAEjB,IAAIxG,KAAK,EAAE,OAAOoJ,cAAc,CAAC,CAAC;IAClC,IAAInJ,OAAO,EAAE,OAAOsJ,gBAAgB,CAAC,CAAC;IACtC,IAAIpJ,IAAI,EAAE,OAAOmJ,cAAc,CAAC,CAAC;IACjC;IACA,IAAIpJ,IAAI,EAAE,OAAO6I,iBAAiB,CAAC,CAAC,MAC/B,OAAON,aAAa,CAAC,CAAC;EAC/B,CAAC;EACD,MAAMe,aAAa,GAAGA,CAAA,KAAM;IACxB;IACA/H,OAAO,CAACC,GAAG,CAAC,CAAC;IACb7C,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IACvDwC,OAAO,CAACC,GAAG,CAAE,iBAAgB,CAAC;EAClC,CAAC;EAED,oBACIpE,OAAA;IAAK+J,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BhK,OAAA;MAAK+J,SAAS,EAAC,OAAO;MAAAC,QAAA,gBAClBhK,OAAA,CAACH,QAAQ;QACLuG,UAAU,EAAC,MAAM;QACjBC,KAAK,EAAC,kBAAkB;QACxB8F,KAAK,EAAEjL,KAAM;QACboF,QAAQ,EAAE1E,IAAK;QACfwK,QAAQ,EAAElF,UAAW;QACrBmF,QAAQ,EAAC,IAAI;QACbC,OAAO,EAAC,MAAM;QACdC,KAAK,EAAG7J,KAAK,IAAIC,OAAO,GAAI,KAAK,GAAG;MAAM;QAAAoG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,EAEGxG,KAAK,IAAIG,IAAI,gBACR7C,OAAA,CAACV,KAAK,CAACyM,QAAQ;QAAAhD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,gBACjClJ,OAAA,CAACH,QAAQ;QAACkK,SAAS,EAAC,SAAS;QACvB3D,UAAU,EAAC,QAAQ;QACnBC,KAAK,EAAC,eAAe;QACrB8F,KAAK,EAAGxJ,OAAO,GAAIvB,aAAa,GAAKwB,IAAI,GAAIvB,WAAW,GAAGF,OAAS;QACpEmF,QAAQ,EAAG1D,IAAI,GAAKV,IAAI,GAAG,EAAE,GAAIH,MAAO;QACxCqK,QAAQ,EAAGxJ,IAAI,GAAIuD,QAAQ,GAAGgB,YAAa;QAC3CkF,QAAQ,EAAC,IAAI;QACbC,OAAO,EAAC,MAAM;QACdC,KAAK,EAAC;MAAK;QAAAxD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,EAEZtG,IAAI,gBACF5C,OAAA,CAACJ,UAAU;QACP0B,OAAO,EAAEA,OAAQ;QACjBY,IAAI,EAAEA,IAAK;QACXC,OAAO,EAAEA,OAAQ;QACjBC,UAAU,EAAEA,UAAW;QACvB2D,QAAQ,EAAEA;MAAS;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,gBAEdlJ,OAAA,CAACV,KAAK,CAACyM,QAAQ;QAAAhD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGpC,CAAC,eACNlJ,OAAA;MAAAgK,QAAA,EACKpB,UAAU,CAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACNlJ,OAAA;MAAK+J,SAAS,EAAC,iCAAiC;MAAAC,QAAA,gBAC5ChK,OAAA;QAAK+J,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5BhK,OAAA;UAAK2G,KAAK,EAAC,QAAQ;UAACoD,SAAS,EAAC,wFAAwF;UAACa,OAAO,EAAEA,CAAA,KAAM3C,SAAS,CAAC,CAAE;UAAA+B,QAAA,EAAC;QAAU;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClK,CAAC,eACNlJ,OAAA;QAAK+J,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5BhK,OAAA;UAAK2G,KAAK,EAAC,QAAQ;UAACoD,SAAS,EAAC,+FAA+F;UAACa,OAAO,EAAEA,CAAA,KAAMpD,KAAK,CAAC,CAAE;UAAAwC,QAAA,EAAC;QAAK;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChK,CAAC,eACNlJ,OAAA;QAAK+J,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5BhK,OAAA;UAAK2G,KAAK,EAAC,QAAQ;UAACoD,SAAS,EAAC,0FAA0F;UAACa,OAAO,EAAEA,CAAA,KAAMxD,KAAK,CAAC,CAAE;UAAA4C,QAAA,EAAC;QAAK;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3J,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAhJ,EAAA,CA7tBKD,WAAW;AAAAuM,EAAA,GAAXvM,WAAW;AA+tBjB,eAAeA,WAAW;AAAC,IAAAuM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}