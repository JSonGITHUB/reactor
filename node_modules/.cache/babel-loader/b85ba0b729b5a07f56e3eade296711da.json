{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/Geolocator.js\";\nimport React from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport Loader from '../utils/Loader.js';\n\nclass Geolocate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getLocation = () => `${this.state.latitude.toFixed(6)}, ${this.state.longitude.toFixed(6)} `;\n\n    this.percent = window.innerWidth < 700 ? 'twentyfivePercent mt--70 mb--70' : 'fiftyPercent mt--40 mb--40';\n\n    this.loading = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: this.percent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      isMotionOn: this.props.isMotionOn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n\n    this.latlon = () => this.state.latitude + \",\" + this.state.longitude;\n\n    this.getLongitude = () => this.state.longitude;\n\n    this.state = {\n      longitude: null,\n      latitude: null,\n      errorMessage: null,\n      returnCurrentPosition: props.returnCurrentPosition\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition( //position => console.log(position.coords.longitude),\n    position => {\n      this.setState({\n        longitude: position.coords.longitude,\n        latitude: position.coords.latitude\n      });\n    }, err => {\n      console.log(err);\n      this.setState({\n        errorMessage: err.message\n      });\n    });\n  }\n\n  render() {\n    const errorExists = this.state.errorMessage ? true : false;\n    const latExists = this.state.latitude ? true : false;\n    const errMessage = this.state.errorMessage;\n    let gelocationStatus = latExists ? this.getLocation() : this.loading();\n    gelocationStatus = errorExists ? `${errMessage}` : gelocationStatus;\n\n    if (latExists) {\n      this.props.returnCurrentPosition(this.state.longitude, this.state.latitude);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-yellow greet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, gelocationStatus));\n  }\n\n}\n\nexport default Geolocate;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/Geolocator.js"],"names":["React","Dialog","Loader","Geolocate","Component","constructor","props","getLocation","state","latitude","toFixed","longitude","percent","window","innerWidth","loading","isMotionOn","latlon","getLongitude","errorMessage","returnCurrentPosition","componentDidMount","navigator","geolocation","getCurrentPosition","position","setState","coords","err","console","log","message","render","errorExists","latExists","errMessage","gelocationStatus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2BnBC,WA3BmB,GA2BL,MAAO,GAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,KAAI,KAAKF,KAAL,CAAWG,SAAX,CAAqBD,OAArB,CAA6B,CAA7B,CAAgC,GA3BvE;;AAAA,SA4BnBE,OA5BmB,GA4BRC,MAAM,CAACC,UAAP,GAAoB,GAArB,GAA4B,iCAA5B,GAAgE,4BA5BvD;;AAAA,SA6BnBC,OA7BmB,GA6BT,mBAAM;AAAK,MAAA,SAAS,EAAE,KAAKH,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAE,KAAKN,KAAL,CAAWU,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,CA7BG;;AAAA,SAgCnBC,MAhCmB,GAgCV,MAAM,KAAKT,KAAL,CAAWC,QAAX,GAAsB,GAAtB,GAA4B,KAAKD,KAAL,CAAWG,SAhCnC;;AAAA,SAiCnBO,YAjCmB,GAiCJ,MAAM,KAAKV,KAAL,CAAWG,SAjCb;;AAEf,SAAKH,KAAL,GAAa;AACTG,MAAAA,SAAS,EAAE,IADF;AAETF,MAAAA,QAAQ,EAAE,IAFD;AAGTU,MAAAA,YAAY,EAAE,IAHL;AAITC,MAAAA,qBAAqB,EAAEd,KAAK,CAACc;AAJpB,KAAb;AAMH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBR,IAAAA,MAAM,CAACS,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,EACI;AACAC,IAAAA,QAAQ,IAAI;AACR,WAAKC,QAAL,CAAc;AACVf,QAAAA,SAAS,EAAEc,QAAQ,CAACE,MAAT,CAAgBhB,SADjB;AAEVF,QAAAA,QAAQ,EAAEgB,QAAQ,CAACE,MAAT,CAAgBlB;AAFhB,OAAd;AAIH,KAPL,EAQImB,GAAG,IAAI;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKF,QAAL,CAAc;AACVP,QAAAA,YAAY,EAAES,GAAG,CAACG;AADR,OAAd;AAIH,KAdL;AAgBH;;AAQDC,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAI,KAAKzB,KAAL,CAAWW,YAAZ,GAA4B,IAA5B,GAAmC,KAAvD;AACA,UAAMe,SAAS,GAAI,KAAK1B,KAAL,CAAWC,QAAZ,GAAwB,IAAxB,GAA+B,KAAjD;AACA,UAAM0B,UAAU,GAAG,KAAK3B,KAAL,CAAWW,YAA9B;AACA,QAAIiB,gBAAgB,GAAIF,SAAD,GAAc,KAAK3B,WAAL,EAAd,GAAmC,KAAKQ,OAAL,EAA1D;AACAqB,IAAAA,gBAAgB,GAAIH,WAAD,GAAiB,GAAEE,UAAW,EAA9B,GAAkCC,gBAArD;;AACA,QAAIF,SAAJ,EAAe;AACX,WAAK5B,KAAL,CAAWc,qBAAX,CAAiC,KAAKZ,KAAL,CAAWG,SAA5C,EAAuD,KAAKH,KAAL,CAAWC,QAAlE;AACH;;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqC2B,gBAArC,CADD,CAAP;AAGH;;AA/CmC;;AAkDxC,eAAejC,SAAf","sourcesContent":["import React from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport Loader from '../utils/Loader.js';\n\nclass Geolocate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            longitude: null,\n            latitude: null,\n            errorMessage: null,\n            returnCurrentPosition: props.returnCurrentPosition\n        }\n    }\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            //position => console.log(position.coords.longitude),\n            position => {\n                this.setState({\n                    longitude: position.coords.longitude,\n                    latitude: position.coords.latitude,\n                });\n            },\n            err => {\n                console.log(err)\n                this.setState({\n                    errorMessage: err.message\n                });\n\n            }\n        )\n    }\n    getLocation = () => `${this.state.latitude.toFixed(6)}, ${this.state.longitude.toFixed(6)} `;\n    percent = (window.innerWidth < 700) ? 'twentyfivePercent mt--70 mb--70' : 'fiftyPercent mt--40 mb--40';\n    loading = () => <div className={this.percent}>\n                <Loader isMotionOn={this.props.isMotionOn}/>\n            </div>;\n    latlon = () => this.state.latitude + \",\" + this.state.longitude;\n    getLongitude = () => this.state.longitude;\n    render() {\n        const errorExists = (this.state.errorMessage) ? true : false;\n        const latExists = (this.state.latitude) ? true : false;\n        const errMessage = this.state.errorMessage;\n        let gelocationStatus = (latExists) ? this.getLocation() : this.loading();\n        gelocationStatus = (errorExists) ? `${errMessage}` : gelocationStatus;\n        if (latExists) {\n            this.props.returnCurrentPosition(this.state.longitude, this.state.latitude);\n        }\n        return <div>\n                <div className=\"color-yellow greet\">{gelocationStatus}</div>\n            </div>\n    };\n}\n\nexport default Geolocate;"]},"metadata":{},"sourceType":"module"}