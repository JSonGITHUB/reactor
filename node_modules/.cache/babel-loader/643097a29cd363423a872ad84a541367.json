{"ast":null,"code":"import _toConsumableArray from\"/Users/js/Dev/my-first-reactor/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/js/Dev/my-first-reactor/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import ScoreCard from'./ScoreCard.js';import CricketScore from'./CricketScore.js';import Dominos from'./Dominos.js';import SurfScores from'./SurfScores.js';import Selector from'../forms/FunctionalSelector.js';import getKey from'../utils/KeyGenerator.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ScoreKeeper=function ScoreKeeper(){var surfScoring=[0,0,0,0,0,0,0,0,0,0];var initPlayers=[{name:'You',score:0,dominoScore:0,golfScores:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],golfGIR:[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],golfFW:[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],golfPutts:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],surfScores:[0,0,0,0,0,0,0,0,0,0],surfJerseyColor:0,surfPriority:0,cricketScores:[0,0,0,0,0,0,0]},{name:'Me',score:0,dominoScore:0,golfScores:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],golfGIR:[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],golfFW:[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],golfPutts:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],surfScores:[0,0,0,0,0,0,0,0,0,0],surfJerseyColor:0,surfPriority:0,cricketScores:[0,0,0,0,0,0,0]}];var initNewPlayer=[{name:'You',score:0,dominoScore:0,golfScores:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],golfGIR:[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],golfFW:[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],golfPutts:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],surfScores:[0,0,0,0,0,0,0,0,0,0],surfJerseyColor:0,surfPriority:0,cricketScores:[0,0,0,0,0,0,0]}];var games=['standard','ping pong','golf','cornhole','darts','dominos','horse','horseshoes','bocci','surf'];var winners=[5,10,11,15,20,21];var dominoWinners=[50,100,150,200];var heatLengths=[.5,1,3,15,20,30,45,60];var _useState=useState(JSON.parse(localStorage.getItem('players'))||initPlayers),_useState2=_slicedToArray(_useState,2),players=_useState2[0],setPlayers=_useState2[1];//const [ editStatus, setEdit ] = useState(false);\nvar _useState3=useState(localStorage.getItem('game')||'standard'),_useState4=_slicedToArray(_useState3,2),game=_useState4[0],setGame=_useState4[1];//const initScores = localStorage.getItem('twoPlayerScores').split(',') || [0,0];\nvar initScores=[players[0][\"\".concat(game,\"Score\")],players[1][\"\".concat(game,\"Score\")]]||[0,0];var _useState5=useState(Number(localStorage.getItem('winner'))||21),_useState6=_slicedToArray(_useState5,2),winner=_useState6[0],setWinner=_useState6[1];//const [twoPlayerScores, setTwoPlayerScores] = useState(initScores);\nvar _useState7=useState(60*60),_useState8=_slicedToArray(_useState7,2),time=_useState8[0],setTime=_useState8[1];// Initial time in seconds (e.g., 1 hour)\nvar _useState9=useState(60*60),_useState10=_slicedToArray(_useState9,2),heatLength=_useState10[0],setHeatLength=_useState10[1];var _useState11=useState([0,0,0,0,0,0,0,0,0,0]),_useState12=_slicedToArray(_useState11,2),waveCount=_useState12[0],setWaveCount=_useState12[1];var _useState13=useState(JSON.parse(localStorage.getItem('surfersScores'))||[]),_useState14=_slicedToArray(_useState13,2),surfersScores=_useState14[0],setSurfersScores=_useState14[1];var darts=game!=='darts'?false:true;var dominos=game!=='dominos'?false:true;var surf=game!=='surf'?false:true;var golf=game!=='golf'?false:true;var cricketKey=function cricketKey(player,index){return\"\".concat(player.player||player.name,\"Cricket\").concat(index);};var golfKey=function golfKey(player,index){return\"\".concat(player.player||player.name,\"Golf\").concat(index);};var surfKey=function surfKey(player,index){return\"\".concat(player.player||player.name,\"Surf\").concat(index);};/*\n    const dominoKey = (player, index) => {\n        if (index < 2) {\n            //console.log(`dominoKey => player: ${JSON.stringify(player, null, 2)} index: ${index}`);\n            return `${player.name}Domino${index}`\n        }\n        return\n    };\n    */var parsDefault=[4,3,3,5,4,4,3,3,5,5,4,5,4,5,4,4,4,5];var dartScoring=[20,19,18,17,16,15,'B'];var golfScoring=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];var _useState15=useState(JSON.parse(localStorage.getItem('golfPars'))||parsDefault),_useState16=_slicedToArray(_useState15,2),golfPars=_useState16[0],setGolfPars=_useState16[1];var dominoScoring=[50,100,150,200];var _useState17=useState(localStorage.getItem('gameStatus')||'inProgress'),_useState18=_slicedToArray(_useState17,2),gameStatus=_useState18[0],setGameStatus=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),surferData=_useState20[0],setSurferData=_useState20[1];var getScoreTotal=function getScoreTotal(index){var highestScore=players[index].surfScores[getTwoHighestScores(index).highScoreIndex];var secondHighestScore=players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];var score=highestScore+secondHighestScore;console.log(\"getScore => player: \".concat(index,\" score: \").concat(score));return score;};var findTwoHighestIndices=function findTwoHighestIndices(scores){var highestIndex=-1;var secondHighestIndex=-1;var highestScore=-Infinity;var secondHighestScore=-Infinity;for(var i=0;i<scores.length;i++){if(scores[i]>highestScore){secondHighestIndex=highestIndex;secondHighestScore=highestScore;highestIndex=i;highestScore=scores[i];}else if(scores[i]>secondHighestScore){secondHighestIndex=i;secondHighestScore=scores[i];}}return[highestIndex,secondHighestIndex];};var getTwoHighestScores=function getTwoHighestScores(playerIndex){var player=players[playerIndex];var scores=player.surfScores;var _findTwoHighestIndice=findTwoHighestIndices(scores),_findTwoHighestIndice2=_slicedToArray(_findTwoHighestIndice,2),highestIndex=_findTwoHighestIndice2[0],secondHighestIndex=_findTwoHighestIndice2[1];//console.log(`${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\nreturn{highScoreIndex:highestIndex,secondHighScoreIndex:secondHighestIndex};};var floatDecimalOneDigit=function floatDecimalOneDigit(number){if(Number.isInteger(number)&&number>=10&&number<=99){return\"\".concat(number/10,\".00\");}else{return\"\".concat(number,\".00\");}};var scoreTotal=function scoreTotal(playerIndex,playersArray){return Number(playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).highScoreIndex])+Number(playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).secondHighScoreIndex]);};var getSurfScore=function getSurfScore(index){if(surf){/*\n            const newPlayer = {\n                'name': players[index].player,\n                'score': 0,\n                'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n            }\n            if (playerScores.length < players.length) {\n                playerScores.push(newPlayer)\n            }\n            */ //console.log(`getSurfScore 1 => player ${index} scores: ${players[index].surfScores}`)\nvar surfScore=scoreTotal(index,players);var newPlayers=_toConsumableArray(players);if(players[index].surfScores===undefined){newPlayers[index].surfScores=players[index].surfScores;newPlayers[index].score=surfScore;newPlayers[index].surfScore=surfScore;localStorage.setItem('players',JSON.stringify(newPlayers));//setPlayers(newPlayers);\n}else if(players[index].surfScores===undefined){newPlayers[index].surfScore=surfScore;localStorage.setItem('players',JSON.stringify(newPlayers));//setPlayers(newPlayers);\n}//console.log(`getSurfScore 2 => scores: ${JSON.stringify(players[index], null,2)}`);\n//console.log(`getSurfScore 3 => playerScores: ${JSON.stringify(playerScores, null,2)}`);\nreturn surfScore;}return;};/*\n        useEffect(() => {\n    \n            const playerData = players.map((player, index) => ({ player, score: getScoreTotal(index) }));\n            console.log(`playerData1 => ${JSON.stringify(playerData,null,2)}`);\n            playerData.sort((a, b) => b.score - a.score);\n            console.log(`playerData2 => ${JSON.stringify(playerData,null,2)}`);\n            const sortedPlayers = playerData.map((data) => data.player);\n            const sortedScores = playerData.map((data) => data.score);\n    \n            setSurferData(playerData)\n            //setPlayers(playerData)\n            console.log(`sortedPlayers: ${JSON.stringify(sortedPlayers)}`)\n            setSortedPlayers(sortedPlayers);\n            setSortedScores(sortedScores);\n            \n            localStorage.setItem('surfersScores', JSON.stringify(playerData));\n            localStorage.setItem('players', JSON.stringify(players));\n            //setSurfersScores(JSON.stringify(playerData));\n            updatePlayers();\n    \n        }, [surfersScores]);\n    */useEffect(function(){if(JSON.stringify(players,null,2)!=='[]'){var _surfersScores=[];//console.log(`sortedPlayers 1 => ${JSON.stringify(sortedPlayers, null, 2)}`)\nlocalStorage.setItem('surfersScores',JSON.stringify(_surfersScores));//console.log(`sortedPlayers 2 => ${JSON.stringify(sortedPlayers, null, 2)}`)\nlocalStorage.setItem('players',JSON.stringify(players));//console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n//console.log(`players 4 => ${JSON.stringify(players, null,2)}`)\n}},[players]);useEffect(function(){var surfersScores=[];//console.log(`players 1 => ${JSON.stringify(players, null, 2)}`)\nlocalStorage.setItem('surfersScores',JSON.stringify(surfersScores));localStorage.setItem('players',JSON.stringify(players));},[players]);useEffect(function(){localStorage.setItem('golfPars',JSON.stringify(golfPars));},[golfPars]);useEffect(function(){if(!localStorage.getItem('players')||localStorage.getItem('players')==='[]'){var playersValue=localStorage.getItem('players');alert(\"localStorage.players: \".concat(playersValue));alert('Length:',playersValue.length);}var newPlayers=_toConsumableArray(players);if(!players[0].cricketScores||!players[1].cricketScores){if(!players[0].cricketScores){newPlayers[0].cricketScores=[0,0,0,0,0,0,0];newPlayers[0].dartsScore=0;}if(!players[1].cricketScores){newPlayers[1].cricketScores=[0,0,0,0,0,0,0];newPlayers[1].dartsScore=0;}}var initGolfStats=[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];if(!players[0].golfPutts||!players[0].golfFW||!players[0].golfGIR){newPlayers[0].golfPutts=golfScoring;newPlayers[0].golfFW=initGolfStats;newPlayers[0].golfGIR=initGolfStats;}if(!players[1].golfPutts||!players[1].golfFW||!players[1].golfGIR){newPlayers[1].golfPutts=golfScoring;newPlayers[1].golfFW=initGolfStats;newPlayers[1].golfGIR=initGolfStats;}localStorage.setItem('players',JSON.stringify(newPlayers));setPlayers(JSON.parse(localStorage.getItem('players')));},[]);var setGameInProgress=function setGameInProgress(playerIndex){if(playerIndex>0){if(localStorage.getItem(\"player\".concat(playerIndex-1))!=='winner'){localStorage.setItem('gameStatus','inProgress');}}localStorage.setItem(\"player\".concat(playerIndex),'loser');//setGameStatus('inProgress');\nreturn false;};var isWinner=function isWinner(playerIndex){return getDartTotal(players[playerIndex])>=winner?setGameOver(playerIndex):setGameInProgress(playerIndex);};var playerScores=[{name:'Player 1',scores:[90,85,92,78,95,87,84,89,91,88]},{name:'Player 2',scores:[75,82,80,79,88,84,76,85,90,81]},{name:'Player 3',scores:[86,82,90,88,91,79,85,87,83,89]}];var setGameOver=function setGameOver(playerIndex){localStorage.setItem('gameStatus','gameOver');localStorage.setItem(\"player\".concat(playerIndex),'winner');//setGameStatus('gameOver');\nreturn true;};var setTimer=function setTimer(groupTitle,label,selected){localStorage.setItem('timer',selected);setTime(selected*60);setHeatLength(selected*60);};if(darts&&winner!==21){localStorage.setItem('winner',21);setWinner(Number(localStorage.getItem('winner')));}var getDartTotal=function getDartTotal(player){//alert(`cricketScores!!${String(player.cricketScores).split(',')}`)\nvar cricketScores=String(player.cricketScores).split(',');var total=0;//const score = (index) => localStorage.getItem(cricketKey(player, index)) || 0;\nvar addToTotal=function addToTotal(value){return total=total+value;};cricketScores.map(function(score,index){return addToTotal(Number(score));});//console.log(`getDartTotalplayer=> ${(player.player || player.name)}: ${total}`)\nif(total===winner)localStorage.setItem('gameStatus','gameOver');return total;};var getGolfTotal=function getGolfTotal(player){if(!golf)return;var total=0;var newPlayers=JSON.parse(localStorage.getItem('players'));var addToTotal=function addToTotal(value){return total=total+Number(value);};newPlayers.map(function(player){player.golfScores.map(function(score){return addToTotal(score);});player.golfScore=total;});localStorage.setItem('players',JSON.stringify(newPlayers));//setPlayers(JSON.parse(localStorage.getItem('players')))\n//console.log(`getGolfTotalplayer=> ${player}: ${total}`)\nreturn total;};var getDominoTotal=function getDominoTotal(index){//let total = 0;\nvar newScores=[players[0].dominoScore,players[1].dominoScore]||[0,0];var total=newScores[index];//const score = (index) => localStorage.getItem(dominoKey(players[index], index)) || 0;\n//const addToTotal = (value) => total = total + value;\n//dominoScoring.map((target, index) => addToTotal(Number(score(index))));\nconsole.log(\"getDominoTotal => player: \".concat(players[index].name,\": \").concat(total,\" ? winner: \").concat(winner));if(total===winner)localStorage.setItem('gameStatus','gameOver');return total;};var updateScores=function updateScores(){//const newScores = localStorage.getItem('twoPlayerScores').split(',') || [0,0];\n//const newScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\nvar newPlayers=JSON.parse(localStorage.getItem('players'));//const newScores = [newPlayers[0][`${game}Score`], newPlayers[1][`${game}Score`]] || [0, 0];\nif(darts||dominos){//players.map((player, index) => newScores.push(getDartTotal(player)));\n//newPlayers[playerIndex][`${game}Score`] = getDartTotal(player);\n//} else if (dominos) {\n//players.map((player, index) => newScores.push(getDartTotal(player)));\n}else{//newPlayers[playerIndex][`${game}Score`] = score;\n}//console.log(`updateScores => updateScores=>\\nplayer: ${player.name}\\nindex: ${playerIndex}\\nscore: ${score}\\nnewScore: ${JSON.stringify(newScores)}`)\n//console.log(`${players[0].name}: ${players[0][`${game}Score`]}\\n${players[1].name}: ${players[1][`${game}Score`]}`)\n//const isWinner = (score) => (score >= winner) ? true : false;\n//players.map((player, index) => (isWinner(newScores[index])) ? setTwoPlayerWinner(index) : setTwoPlayerWinner(3));\n//newScores[playerIndex] = score;\n//localStorage.setItem('players', JSON.stringify(newPlayers));\nsetPlayers(newPlayers);//setTwoPlayerScores(newScores);\n};//console.log(`players: ${players}`)\nvar set21=function set21(){if(darts){localStorage.setItem('winner',21);setWinner(Number(localStorage.getItem('winner')));}};var selectGame=function selectGame(groupTitle,label,selected){localStorage.setItem('game',selected);localStorage.setItem('gameStatus','inProgress');setGame(localStorage.getItem('game'));set21();};var selectWinner=function selectWinner(groupTitle,label,selected){localStorage.setItem('winner',selected);//localStorage.setItem('gameStatus', 'gameOver');\nsetWinner(Number(localStorage.getItem('winner')));};var clear=function clear(event){alert('Note was cleared: '+event.value);localStorage.setItem('players',JSON.stringify(initPlayers));console.log(\"localStorage.getItem('players') => \".concat(localStorage.getItem('players')));localStorage.setItem('gameStatus','inProgress');setPlayers(JSON.parse(localStorage.getItem('players')));};var getSurfTotal=function getSurfTotal(player,index){var total=0;var score=function score(index){return player.surfScores[index];};var addToTotal=function addToTotal(value){return total=total+value;};surfScoring.map(function(target,index){//console.log(`getSurfTotal=> ${surfKey(player, index)} ${index}: ${total}`)\nconsole.log(\"getSurfTotal => player: \".concat(player.name,\" index: \").concat(index,\" score: \").concat(score(index)));addToTotal(Number(score(index)));});//console.log(`getsurfTotalplayer=> ${player}: ${total}`)\nreturn total;};var reset=function reset(event){//const newPlayers = [...players];\nvar newPlayers=JSON.parse(localStorage.getItem('players'));//alert('Note was cleared: ');\n//const cricketKey = (player,index) => `${player}Cricket${index}`;\n//const golfKey = (player,index) => `${player}Golf${index}`;\nvar getDominoKey=function getDominoKey(player,index){return\"\".concat(player.name,\"Domino\").concat(index);};var id=function id(player,index){if(darts){return cricketKey(player,index);}else if(dominos){return getDominoKey(player,index);}else if(golf){return golfKey(player,index);}else if(surf){return surfKey(player,index);}return player.player||player.name;};var initValue=0;if(darts){//newPlayers.map((player) => dartScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\nnewPlayers.map(function(player){player.dartsScore=0;player.cricketScores=[0,0,0,0,0,0,0];});}else if(golf){//newPlayers.map((player) => dartScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\nnewPlayers.map(function(player){player.golfScore=0;player.golfScores=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];player.golfGIR=[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];player.golfFW=[false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false];player.golfPutts=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];});}else if(dominos){//players.map((player) => dominoScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n/*\n            players.map((player) => dominoScoring.map((target, index) => {\n                console.log(`RESET => player: ${player.name} dominoScoring: ${dominoScoring.length} key: ${id(player, index)}: ${initValue}`)\n                localStorage.setItem(id(player, index), initValue);\n            }));\n            */ //localStorage.setItem('twoPlayerScores', '0,0');\n//const localPlayers = JSON.parse(localStorage.getItem('players'));\nnewPlayers[0].dominoScore=0;newPlayers[1].dominoScore=0;//localStorage.setItem('players', JSON.stringify(localPlayers));\n}else if(surf){newPlayers.map(function(player,index){player.surfScores=surfScoring;player.surfScore=0;player.surfPriority=0;});var sortedPlayers=_toConsumableArray(newPlayers);sortedPlayers.sort(function(a,b){return getSurfTotal(b,0)-getSurfTotal(a,0);});newPlayers=_toConsumableArray(sortedPlayers);//localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n}else{//players.map((player, index) => localStorage.setItem(id(player, index), initValue));\nnewPlayers.map(function(player,index){return newPlayers[index][\"\".concat(game,\"Score\")]=initValue;});}localStorage.setItem('gameStatus','inProgress');//localStorage.setItem('twoPlayerScores', '0,0');   \n//localStorage.setItem('players', JSON.stringify(players));\nlocalStorage.setItem('players',JSON.stringify(newPlayers));setPlayers(JSON.parse(localStorage.getItem('players')));getScore();};var addPlayer=function addPlayer(event){//alert('Note was cleared: ' + value);\nvar newPlayer=prompt('Enter new name','');var initializedNewPlayer=initNewPlayer;initializedNewPlayer.name=newPlayer;var newPlayers=_toConsumableArray(players);if(newPlayer!==null){newPlayers.push(initializedNewPlayer);localStorage.setItem('players',JSON.stringify(newPlayers));console.log(\"localStorage.getItem('players') => \".concat(localStorage.getItem('players')));setPlayers(JSON.parse(localStorage.getItem('players')));}//getScore();\n};var editPlayer=function editPlayer(index){//console.log(`edit: ${index}`);\nvar newPlayer=prompt('Enter new name',players[index]);if(newPlayer!==null){var newPlayers=_toConsumableArray(players);newPlayers[index]=newPlayer;localStorage.setItem('players',JSON.stringify(newPlayers));console.log(\"localStorage.getItem('players') => \".concat(localStorage.getItem('players')));setPlayers(JSON.parse(localStorage.getItem('players')));getScore();}};var getScore=function getScore(){return window.location.pathname='/reactor/ScoreKeeper';};var deletePlayer=function deletePlayer(index){console.log(\"deletePlayer => \".concat(index));var newPlayers=_toConsumableArray(players).slice();newPlayers.splice(index,1);//playerScores.splice(index, 1);\n//surfersScores.splice(index, 1);\nlocalStorage.setItem('players',JSON.stringify(newPlayers));console.log(\"localStorage.getItem('players') => \".concat(localStorage.getItem('players')));setPlayers(JSON.parse(localStorage.getItem('players')));};var scorecards=function scorecards(){//console.log(`build Scorecards`)\nvar scorecard=function scorecard(playerIndex,scoreIndex,score){var player=players[playerIndex];if(darts){console.log(\"\".concat(game,\" - scorecard => player: \").concat(player.player||player.name,\" scoreIndex: \").concat(scoreIndex,\" score(\").concat(scoreIndex,\"): \").concat(player.score));return/*#__PURE__*/_jsx(CricketScore,{game:game,player:player,playerIndex:playerIndex,scoreIndex:scoreIndex,editPlayer:editPlayer,deletePlayer:deletePlayer,updateScores:updateScores,winner:winner},getKey(player.player||player.name));}if(dominos){console.log(\"\".concat(game,\" - scorecard => player: \").concat(player.player||player.name,\" playerIndex: \").concat(playerIndex,\" scoreIndex: \").concat(scoreIndex,\" scoreIndex: \").concat(player.dominoScore,\" score: \").concat(score));return/*#__PURE__*/_jsx(Dominos,{game:game,player:player,playerIndex:playerIndex,scoreIndex:scoreIndex,scoreTotal:player.dominoScore||0,treeTotal:score,editPlayer:editPlayer,deletePlayer:deletePlayer,getDominoTotal:getDominoTotal,updateScores:updateScores,winner:winner},getKey(player.player||player.name));}if(golf){//console.log(`player: ${JSON.stringify(player, null, 2)}`);\nconsole.log(\"\".concat(game,\" - scorecard => player:\").concat(player.player||player.name));console.log(\"scoreIndex: \".concat(scoreIndex));console.log(\"score: \".concat(player.golfScores[scoreIndex]));//console.log(`FW: ${player.golfFW[scoreIndex]}`);\n//console.log(`score: ${player.golfGIR[scoreIndex]}`);\n//console.log(`score: ${player.golfPutts[scoreIndex]}`);\nconsole.log(\"scorecards => par: \".concat(score));return/*#__PURE__*/_jsx(ScoreCard,{game:game,players:players,playerIndex:playerIndex,scoreIndex:scoreIndex,editPlayer:editPlayer,deletePlayer:deletePlayer,updateScores:updateScores,winner:golfPars[scoreIndex]});}//console.log(`${game} - scorecard => player: ${(player.player || player.name)} scoreIndex: ${scoreIndex} score: ${player.score}`)\nreturn/*#__PURE__*/_jsx(ScoreCard,{game:game,players:players,playerIndex:playerIndex,scoreIndex:scoreIndex,editPlayer:editPlayer,deletePlayer:deletePlayer,updateScores:updateScores,winner:winner});};var rankStatus=function rankStatus(player,index,score){//console.log(`ranksStatus => surfersScores player: ${(player.player || player.name)} index: ${index} score: ${player.score}`)\nvar isPlayer1Winner=players[0].surfScore>players[1].surfScore?true:false;var scoreDifference=isPlayer1Winner?players[0].surfScore-players[1].surfScore:players[1].surfScore-players[0].surfScore;var need=isPlayer1Winner?get2ndHighestScore(1)+(scoreDifference+.1):get2ndHighestScore(0)+(scoreDifference+.1);var winsBy=\"Wins by \".concat(scoreDifference);var needs=\"Needs \".concat(need);if(index===0){return winsBy;}return needs;};var surfScoresDisplay=function surfScoresDisplay(){return surfScoring.map(function(wave,index){/*#__PURE__*/_jsxs(\"div\",{className:\"flexContainer width-100-percent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex3Column p-5\",children:scorecard(players[0],0,index,players[0].surfScores[index])}),/*#__PURE__*/_jsx(\"div\",{className:\"p-20 r-5 font50 color-yellow m-auto\",children:wave}),/*#__PURE__*/_jsx(\"div\",{className:\"flex3Column p-5\",children:scorecard(players[1],1,index,players[1].surfScores[index])})]},getKey(\"wave\".concat(wave)));});};var setSurfScore=function setSurfScore(playerId,index,score){var newScore=prompt(\"Enter \".concat(players[playerId].player||players[playerId].name,\"'s score for wave \").concat(index+1,\": \"),score||0);var newPlayers=_toConsumableArray(players);newPlayers[playerId].surfScores[index]=Number(newScore);newPlayers[playerId].surfScore=scoreTotal(playerId,newPlayers);if(newPlayers[playerId].surfPriority===1||newPlayers[playerId].surfPriority===0){newPlayers.map(function(player,index){if(index===playerId){player.surfPriority=players.length;}else if(player.surfPriority!=0){player.surfPriority=player.surfPriority-1;}});}var sortedPlayers=_toConsumableArray(newPlayers);sortedPlayers.sort(function(a,b){return getSurfTotal(b,0)-getSurfTotal(a,0);});console.log('setSurfScore => sortedPlayers: ',sortedPlayers);localStorage.setItem('players',JSON.stringify(sortedPlayers,null,2));setPlayers(sortedPlayers);};var getWave=function getWave(playerId,index,score){var player=players[playerId];var theScore=player.surfScores[index];//console.log(`getWave => playerId: ${playerId} player: ${(player.player || player.name)} index: ${index} score: ${player.surfScores[index]}`);\nvar highestScores=findTwoHighestIndices(players[playerId].surfScores);var highestId=highestScores[0];var secondHighestId=highestScores[1];var firstScore=index===highestId?true:false;var secondScore=index===secondHighestId?true:false;var getClasses=firstScore||secondScore?'size30 bold color-neogreen p-10':'size30 white p-10';var wave=/*#__PURE__*/_jsxs(\"div\",{className:\"column\",onClick:function onClick(){return setSurfScore(playerId,index,score);},children:[/*#__PURE__*/_jsx(\"div\",{className:\"size30 bold color-yellow bg-dkYellow w-100 p-10\",children:index+1}),/*#__PURE__*/_jsx(\"div\",{className:getClasses,children:score})]},getKey(\"wave\".concat(playerId).concat(index).concat(score)));return wave;};var get2ndHighestScore=function get2ndHighestScore(playerId){var highestScores=findTwoHighestIndices(players[playerId].surfScores);var secondHighestId=highestScores[1];return players[playerId].surfScores[secondHighestId];};var isTieScore=function isTieScore(playerIndex,score){if(playerIndex!==0){//console.log(`isTieScore => playerIndex: ${playerIndex} score: ${score} previous playerIndex: ${playerIndex - 1} previous players score: ${scoreTotal(playerIndex - 1)}`)\nif(score===scoreTotal(playerIndex-1,players)){//console.log(`isTieScore => playerIndex: ${playerIndex} score: ${score} previous playerIndex: ${playerIndex - 1} previous players score: ${scoreTotal(playerIndex - 1)}`)\nreturn true;}}return false;};var jerseyColors=['white','yellow','neogreen','black','blue','orange','pink','red'];var selectJersey=function selectJersey(index){var newPlayers=_toConsumableArray(players);newPlayers[index].surfJerseyColor=Number(newPlayers[index].surfJerseyColor)+1;newPlayers[index].surfJerseyColor=newPlayers[index].surfJerseyColor>jerseyColors.length-1?0:newPlayers[index].surfJerseyColor;localStorage.setItem('players',JSON.stringify(newPlayers));setPlayers(newPlayers);};var surfingScores=function surfingScores(player,index,score){if(surf){//console.log(`surfingScores => player: ${(player.player || player.name)} index: ${index} score:${players[index].surfScores[0]}`);\nvar surferScores=/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flexContainer pl-5 pr-5 pb-5 r-10 pt-15 ml-5 mr-5 mt--10 mb--10 color-dark text-outline-light\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"r-5-lft m-1 w-75 size40 p-25 bg-\".concat(jerseyColors[Number(players[index].surfJerseyColor)]||jerseyColors[0]),children:isTieScore(index,score)&&index!==0?index:index+1}),/*#__PURE__*/_jsx(\"div\",{className:\"flex3Column contentLeft m-1 size40 p-25 contentCenter bg-\".concat(jerseyColors[Number(players[index].surfJerseyColor)]||jerseyColors[0]),onClick:function onClick(){return selectJersey(index);},children:player.player||player.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"r-5-rt flex3Column contentRight m-1 mr-10 pb-10 pl-10 pr-10 pt-15 bg-\".concat(jerseyColors[Number(players[index].surfJerseyColor)]||jerseyColors[0]),children:[/*#__PURE__*/_jsx(\"div\",{className:\"size40 bold\",children:score}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-10 bold\",children:rankStatus(player,index,score)})]})]},getKey(\"\".concat(index).concat(player.player||player.name))),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"h-scroll color-white copyright m-10\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container mt-10\",children:players[index].surfScores.map(function(score,wave){return getWave(index,wave,players[index].surfScores[wave]);})})})})})]},getKey(\"\".concat(score).concat(index).concat(player.player||player.name)));return surferScores;}return;};var renderedItems=function renderedItems(){return players.map(function(player,index){return scorecard(index,0,0);});};var dartScores=function dartScores(){return dartScoring.map(function(score,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"flexContainer width-100-percent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex3Column p-5\",children:scorecard(0,index,0)}),/*#__PURE__*/_jsx(\"div\",{className:\"p-20 r-5 font50 color-yellow m-auto\",children:score}),/*#__PURE__*/_jsx(\"div\",{className:\"flex3Column p-5\",children:scorecard(1,index,0)})]},getKey(score));});};var editGolfPar=function editGolfPar(hole){var newPars=_toConsumableArray(golfPars);var newPar=prompt(\"Enter par for hole \".concat(hole,\":\"),golfPars[hole]);newPars[hole]=newPar;setGolfPars(newPars);};var golfScores=function golfScores(){return golfScoring.map(function(hole,index){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"contentCenter bg-dark r-10 m-5 mt-35\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"copyright greet color-yellow\",children:\"Hole:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"size40 bold pt-5 pl-15 pr-15 bg-dark r-10\",children:index+1}),/*#__PURE__*/_jsx(\"span\",{className:\"copyright greet color-yellow\",children:\"Par:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"size20 bold color-lite mt--5\",children:golfPars[index]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flexContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex2Column p-5\",children:scorecard(0,index,golfPars[index])}),/*#__PURE__*/_jsx(\"div\",{className:\"flex2Column p-5\",children:scorecard(1,index,golfPars[index])})]})]})},getKey(hole));});};//const surfingRankboard = players.map((player, index) => surfingRanks(player, index))};\nvar surfingScoreboard=function surfingScoreboard(){return players.map(function(player,index){return surfingScores(player,index,getSurfScore(index));});};var dominoScores=function dominoScores(){return dominoScoring.map(function(score,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"flexContainer width-100-percent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex2Column10Percent contentCenter p-5\",children:scorecard(0,index,score)}),/*#__PURE__*/_jsx(\"div\",{className:\"r-5 font50 color-yellow m-auto w-100\",children:score}),/*#__PURE__*/_jsx(\"div\",{className:\"flex2Column10Percent contentCenter p-5\",children:scorecard(1,index,score)})]},getKey(score));});};var isDominoWinner=function isDominoWinner(playerIndex){return getDominoTotal(playerIndex)>=winner?setGameOver(playerIndex):setGameInProgress(playerIndex);};var dartClass=function dartClass(playerIndex){return'color-yellow flex3Column p-20 size25 bold'+(isWinner(playerIndex)?' color-neogreen shakingShaka mt-20':'');};var dominoClass=function dominoClass(playerIndex){return'color-yellow flex3Column p-20 size25 bold'+(isDominoWinner(playerIndex)?' color-neogreen shakingShaka mt-20':'');};var dartScoreboard=function dartScoreboard(){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10\",children:[/*#__PURE__*/_jsxs(\"div\",{className:dartClass(0),children:[players[0].player||players[0].name,\":\",/*#__PURE__*/_jsx(\"div\",{className:\"mt-10 size40 white\",children:getDartTotal(players[0])})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-20 bg-tinted navBranding w-200 color-yellow\",children:\"vs\"}),/*#__PURE__*/_jsxs(\"div\",{className:dartClass(1),children:[players[1].player||players[1].name,\":\",/*#__PURE__*/_jsx(\"div\",{className:\"mt-10 size40 white\",children:getDartTotal(players[1])})]})]}),dartScores()]});};var golfScoreboard=function golfScoreboard(){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flexContainer glassy m-5 mb-20 bg-veryLite r-10\",children:[/*#__PURE__*/_jsxs(\"div\",{className:dartClass(0),children:[players[0].player||players[0].name,\":\",/*#__PURE__*/_jsx(\"div\",{className:\"mt-10 size40 white\",children:players[0].golfScore})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-20 bg-tinted navBranding w-200 color-yellow\",children:\"vs\"}),/*#__PURE__*/_jsxs(\"div\",{className:dartClass(1),children:[players[1].player||players[1].name,\":\",/*#__PURE__*/_jsx(\"div\",{className:\"mt-10  size40 white\",children:players[1].golfScore})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"scrollHeight500\",children:golfScores()})]});};//players.map((player, index) => scorecard(index, 0, 0));\nvar dominoScoreboard=function dominoScoreboard(){return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10\",children:[/*#__PURE__*/_jsxs(\"div\",{className:dominoClass(0),children:[players[0].player||players[0].name,\":\",/*#__PURE__*/_jsx(\"div\",{className:\"mt-10 size40 white\",children:getDominoTotal(0)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-20 bg-tinted navBranding w-200 color-yellow\",children:\"vs\"}),/*#__PURE__*/_jsxs(\"div\",{className:dominoClass(1),children:[players[1].player||players[1].name,\":\",/*#__PURE__*/_jsx(\"div\",{className:\"mt-10 size40 white\",children:getDominoTotal(1)})]})]}),dominoScores()]});};if(darts)return dartScoreboard();if(dominos)return dominoScoreboard();if(golf)return golfScoreboard();//if (surf) return surfScoreboard\nif(surf)return surfingScoreboard();else return renderedItems();};var updatePlayers=function updatePlayers(){// Update the parent state to trigger a re-render\nconsole.log();setPlayers(JSON.parse(localStorage.getItem('players')));console.log(\"updatePlayers=>\");};//console.log(`localStorage => game: ${localStorage.getItem('game')}`)\n//console.log(`localStorage => gameStatus: ${localStorage.getItem('gameStatus')}`)\n//console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n//console.log(`localStorage => winner: ${localStorage.getItem('winner')}`)\n//console.log(`localStorage => twoPlayerScores: ${localStorage.getItem('twoPlayerScores')}`)\n//console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n//console.log(`localStorage => player1: ${localStorage.getItem('players1')}`)\n//console.log(`localStorage => player2: ${localStorage.getItem('players2')}`)\n//console.log(`time: ${time}`)\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"fadeIn mt--30\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-20\",children:[/*#__PURE__*/_jsx(Selector,{groupTitle:\"game\",label:\"item.description\",items:games,selected:game,onChange:selectGame,fontSize:\"25\",padding:\"10px\",width:darts||dominos?'98%':'65%'}),darts||golf?/*#__PURE__*/_jsx(React.Fragment,{}):/*#__PURE__*/_jsx(Selector,{className:\"fl-left\",groupTitle:\"winner\",label:\"i.description\",items:dominos?dominoWinners:surf?heatLengths:winners,selected:surf?time/60:winner,onChange:surf?setTimer:selectWinner,fontSize:\"25\",padding:\"10px\",width:\"30%\"}),surf?/*#__PURE__*/_jsx(SurfScores,{players:players,time:time,setTime:setTime,heatLength:heatLength,isWinner:isWinner}):/*#__PURE__*/_jsx(React.Fragment,{})]}),/*#__PURE__*/_jsx(\"div\",{children:scorecards()}),/*#__PURE__*/_jsxs(\"div\",{className:\"flexContainer width-100-percent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex3Column m-1\",children:/*#__PURE__*/_jsx(\"div\",{value:\"Submit\",className:\"glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow\",onClick:function onClick(){return addPlayer();},children:\"add player\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex3Column m-1\",children:/*#__PURE__*/_jsx(\"div\",{value:\"Submit\",className:\"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black\",onClick:function onClick(){return reset();},children:\"reset\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex3Column m-1\",children:/*#__PURE__*/_jsx(\"div\",{value:\"Submit\",className:\"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow\",onClick:function onClick(){return clear();},children:\"clear\"})})]})]});};export default ScoreKeeper;","map":{"version":3,"names":["React","useState","useEffect","ScoreCard","CricketScore","Dominos","SurfScores","Selector","getKey","jsx","_jsx","jsxs","_jsxs","ScoreKeeper","surfScoring","initPlayers","name","score","dominoScore","golfScores","golfGIR","golfFW","golfPutts","surfScores","surfJerseyColor","surfPriority","cricketScores","initNewPlayer","games","winners","dominoWinners","heatLengths","_useState","JSON","parse","localStorage","getItem","_useState2","_slicedToArray","players","setPlayers","_useState3","_useState4","game","setGame","initScores","concat","_useState5","Number","_useState6","winner","setWinner","_useState7","_useState8","time","setTime","_useState9","_useState10","heatLength","setHeatLength","_useState11","_useState12","waveCount","setWaveCount","_useState13","_useState14","surfersScores","setSurfersScores","darts","dominos","surf","golf","cricketKey","player","index","golfKey","surfKey","parsDefault","dartScoring","golfScoring","_useState15","_useState16","golfPars","setGolfPars","dominoScoring","_useState17","_useState18","gameStatus","setGameStatus","_useState19","_useState20","surferData","setSurferData","getScoreTotal","highestScore","getTwoHighestScores","highScoreIndex","secondHighestScore","secondHighScoreIndex","console","log","findTwoHighestIndices","scores","highestIndex","secondHighestIndex","Infinity","i","length","playerIndex","_findTwoHighestIndice","_findTwoHighestIndice2","floatDecimalOneDigit","number","isInteger","scoreTotal","playersArray","getSurfScore","surfScore","newPlayers","_toConsumableArray","undefined","setItem","stringify","playersValue","alert","dartsScore","initGolfStats","setGameInProgress","isWinner","getDartTotal","setGameOver","playerScores","setTimer","groupTitle","label","selected","String","split","total","addToTotal","value","map","getGolfTotal","golfScore","getDominoTotal","newScores","updateScores","set21","selectGame","selectWinner","clear","event","getSurfTotal","target","reset","getDominoKey","id","initValue","sortedPlayers","sort","a","b","getScore","addPlayer","newPlayer","prompt","initializedNewPlayer","push","editPlayer","window","location","pathname","deletePlayer","slice","splice","scorecards","scorecard","scoreIndex","treeTotal","rankStatus","isPlayer1Winner","scoreDifference","need","get2ndHighestScore","winsBy","needs","surfScoresDisplay","wave","className","children","setSurfScore","playerId","newScore","getWave","theScore","highestScores","highestId","secondHighestId","firstScore","secondScore","getClasses","onClick","isTieScore","jerseyColors","selectJersey","surfingScores","surferScores","renderedItems","dartScores","editGolfPar","hole","newPars","newPar","surfingScoreboard","dominoScores","isDominoWinner","dartClass","dominoClass","dartScoreboard","Fragment","golfScoreboard","dominoScoreboard","updatePlayers","items","onChange","fontSize","padding","width"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\n\nconst ScoreKeeper = () => {\n\n    const surfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const initPlayers = [\n        {\n            name: 'You',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        },\n        {\n            name: 'Me',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n    ];\n    const initNewPlayer = [\n        {\n            name: 'You',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n    ];\n    const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n    const winners = [5, 10, 11, 15, 20, 21];\n    const dominoWinners = [50, 100, 150, 200];\n    const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n    //const [ editStatus, setEdit ] = useState(false);\n    const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n    //const initScores = localStorage.getItem('twoPlayerScores').split(',') || [0,0];\n    const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n    const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n    //const [twoPlayerScores, setTwoPlayerScores] = useState(initScores);\n    const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n    const [heatLength, setHeatLength] = useState(60 * 60);\n    const [waveCount, setWaveCount] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n    const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n    const darts = (game !== 'darts') ? false : true;\n    const dominos = (game !== 'dominos') ? false : true;\n    const surf = (game !== 'surf') ? false : true;\n    const golf = (game !== 'golf') ? false : true;\n    const cricketKey = (player, index) => `${(player.player || player.name)}Cricket${index}`;\n    const golfKey = (player, index) => `${(player.player || player.name)}Golf${index}`;\n    const surfKey = (player, index) => `${(player.player || player.name)}Surf${index}`;\n    /*\n    const dominoKey = (player, index) => {\n        if (index < 2) {\n            //console.log(`dominoKey => player: ${JSON.stringify(player, null, 2)} index: ${index}`);\n            return `${player.name}Domino${index}`\n        }\n        return\n    };\n    */\n    const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n    const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n    const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n    const dominoScoring = [50, 100, 150, 200];\n    const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n    const [surferData, setSurferData] = useState([]);\n\n    const getScoreTotal = (index) => {\n        const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n        const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n        const score = (highestScore + secondHighestScore);\n        console.log(`getScore => player: ${index} score: ${score}`);\n        return score;\n    }\n\n    const findTwoHighestIndices = (scores) => {\n        let highestIndex = -1;\n        let secondHighestIndex = -1;\n        let highestScore = -Infinity;\n        let secondHighestScore = -Infinity;\n\n        for (let i = 0; i < scores.length; i++) {\n            if (scores[i] > highestScore) {\n                secondHighestIndex = highestIndex;\n                secondHighestScore = highestScore;\n                highestIndex = i;\n                highestScore = scores[i];\n            } else if (scores[i] > secondHighestScore) {\n                secondHighestIndex = i;\n                secondHighestScore = scores[i];\n            }\n        }\n\n        return [highestIndex, secondHighestIndex];\n    };\n\n    const getTwoHighestScores = (playerIndex) => {\n        const player = players[playerIndex];\n        const scores = player.surfScores;\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n        //console.log(`${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            highScoreIndex: highestIndex,\n            secondHighScoreIndex: secondHighestIndex\n        };\n    };\n\n\n    const floatDecimalOneDigit = (number) => {\n        if (Number.isInteger(number) && number >= 10 && number <= 99) {\n            return `${number / 10}.00`;\n        } else {\n            return `${number}.00`;\n        }\n    };\n\n    const scoreTotal = (playerIndex, playersArray) => Number(playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).highScoreIndex]) + Number(playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).secondHighScoreIndex]);\n\n    const getSurfScore = (index) => {\n        if (surf) {\n            /*\n            const newPlayer = {\n                'name': players[index].player,\n                'score': 0,\n                'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n            }\n            if (playerScores.length < players.length) {\n                playerScores.push(newPlayer)\n            }\n            */\n            //console.log(`getSurfScore 1 => player ${index} scores: ${players[index].surfScores}`)\n            const surfScore = scoreTotal(index, players);\n            const newPlayers = [...players];\n\n            if (players[index].surfScores === undefined) {\n                newPlayers[index].surfScores = players[index].surfScores;\n                newPlayers[index].score = surfScore;\n                newPlayers[index].surfScore = surfScore;\n                localStorage.setItem('players', JSON.stringify(newPlayers));\n                //setPlayers(newPlayers);\n            } else if (players[index].surfScores === undefined) {\n                newPlayers[index].surfScore = surfScore;\n                localStorage.setItem('players', JSON.stringify(newPlayers));\n                //setPlayers(newPlayers);\n            }\n            //console.log(`getSurfScore 2 => scores: ${JSON.stringify(players[index], null,2)}`);\n            //console.log(`getSurfScore 3 => playerScores: ${JSON.stringify(playerScores, null,2)}`);\n            return surfScore;\n        }\n        return\n    };\n    /*\n        useEffect(() => {\n    \n            const playerData = players.map((player, index) => ({ player, score: getScoreTotal(index) }));\n            console.log(`playerData1 => ${JSON.stringify(playerData,null,2)}`);\n            playerData.sort((a, b) => b.score - a.score);\n            console.log(`playerData2 => ${JSON.stringify(playerData,null,2)}`);\n            const sortedPlayers = playerData.map((data) => data.player);\n            const sortedScores = playerData.map((data) => data.score);\n    \n            setSurferData(playerData)\n            //setPlayers(playerData)\n            console.log(`sortedPlayers: ${JSON.stringify(sortedPlayers)}`)\n            setSortedPlayers(sortedPlayers);\n            setSortedScores(sortedScores);\n            \n            localStorage.setItem('surfersScores', JSON.stringify(playerData));\n            localStorage.setItem('players', JSON.stringify(players));\n            //setSurfersScores(JSON.stringify(playerData));\n            updatePlayers();\n    \n        }, [surfersScores]);\n    */\n    useEffect(() => {\n        if (JSON.stringify(players, null, 2) !== '[]') {\n            const surfersScores = [];\n            //console.log(`sortedPlayers 1 => ${JSON.stringify(sortedPlayers, null, 2)}`)\n            localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n            //console.log(`sortedPlayers 2 => ${JSON.stringify(sortedPlayers, null, 2)}`)\n            localStorage.setItem('players', JSON.stringify(players));\n            //console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            //console.log(`players 4 => ${JSON.stringify(players, null,2)}`)\n        }\n    }, [players]);\n\n\n    useEffect(() => {\n        const surfersScores = [];\n        //console.log(`players 1 => ${JSON.stringify(players, null, 2)}`)\n        localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n        localStorage.setItem('players', JSON.stringify(players));\n    }, [players]);\n    \n    useEffect(() => {\n        localStorage.setItem('golfPars', JSON.stringify(golfPars));\n    }, [golfPars]);\n\n    useEffect(() => {\n        if (!localStorage.getItem('players') || (localStorage.getItem('players') === '[]')) {\n            const playersValue = localStorage.getItem('players');\n            alert(`localStorage.players: ${playersValue}`)\n            alert('Length:', playersValue.length);\n        }\n        const newPlayers = [...players];\n        if (!players[0].cricketScores || !players[1].cricketScores) {\n            if (!players[0].cricketScores) {\n                newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[0].dartsScore = 0;\n            }\n            if (!players[1].cricketScores) {\n                newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[1].dartsScore = 0;\n            }\n        }\n        const initGolfStats = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]\n        if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n            newPlayers[0].golfPutts = golfScoring;\n            newPlayers[0].golfFW = initGolfStats;\n            newPlayers[0].golfGIR = initGolfStats;\n        }\n        if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n            newPlayers[1].golfPutts = golfScoring;\n            newPlayers[1].golfFW = initGolfStats;\n            newPlayers[1].golfGIR = initGolfStats;\n        }\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }, []);\n\n    const setGameInProgress = (playerIndex) => {\n        if (playerIndex > 0) {\n            if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n                localStorage.setItem('gameStatus', 'inProgress')\n            }\n        }\n        localStorage.setItem(`player${playerIndex}`, 'loser');\n        //setGameStatus('inProgress');\n        return false;\n    }\n    const isWinner = (playerIndex) => (getDartTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const playerScores = [\n        { name: 'Player 1', scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88] },\n        { name: 'Player 2', scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81] },\n        { name: 'Player 3', scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89] },\n    ];\n    const setGameOver = (playerIndex) => {\n        localStorage.setItem('gameStatus', 'gameOver');\n        localStorage.setItem(`player${playerIndex}`, 'winner');\n        //setGameStatus('gameOver');\n        return true;\n    }\n    const setTimer = (groupTitle, label, selected) => {\n        localStorage.setItem('timer', selected);\n        setTime(selected * 60);\n        setHeatLength(selected * 60);\n    }\n\n    if (darts && winner !== 21) {\n        localStorage.setItem('winner', 21);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const getDartTotal = (player) => {\n        //alert(`cricketScores!!${String(player.cricketScores).split(',')}`)\n        const cricketScores = String(player.cricketScores).split(',');\n        let total = 0;\n        //const score = (index) => localStorage.getItem(cricketKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        cricketScores.map((score, index) => addToTotal(Number(score)));\n        //console.log(`getDartTotalplayer=> ${(player.player || player.name)}: ${total}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const getGolfTotal = (player) => {\n        if (!golf) return;\n        let total = 0;\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        const addToTotal = (value) => total = total + Number(value);\n        newPlayers.map((player) => { \n            player.golfScores.map((score) => addToTotal(score))\n            player.golfScore = total;\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        //setPlayers(JSON.parse(localStorage.getItem('players')))\n        //console.log(`getGolfTotalplayer=> ${player}: ${total}`)\n        return total;\n    }\n    const getDominoTotal = (index) => {\n        //let total = 0;\n        const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n        const total = newScores[index];\n        //const score = (index) => localStorage.getItem(dominoKey(players[index], index)) || 0;\n        //const addToTotal = (value) => total = total + value;\n        //dominoScoring.map((target, index) => addToTotal(Number(score(index))));\n        console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    \n    const updateScores = () => {\n        //const newScores = localStorage.getItem('twoPlayerScores').split(',') || [0,0];\n        //const newScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        //const newScores = [newPlayers[0][`${game}Score`], newPlayers[1][`${game}Score`]] || [0, 0];\n        if (darts || dominos) {\n            //players.map((player, index) => newScores.push(getDartTotal(player)));\n            //newPlayers[playerIndex][`${game}Score`] = getDartTotal(player);\n            //} else if (dominos) {\n            //players.map((player, index) => newScores.push(getDartTotal(player)));\n        } else {\n            //newPlayers[playerIndex][`${game}Score`] = score;\n        }\n        //console.log(`updateScores => updateScores=>\\nplayer: ${player.name}\\nindex: ${playerIndex}\\nscore: ${score}\\nnewScore: ${JSON.stringify(newScores)}`)\n        //console.log(`${players[0].name}: ${players[0][`${game}Score`]}\\n${players[1].name}: ${players[1][`${game}Score`]}`)\n        //const isWinner = (score) => (score >= winner) ? true : false;\n        //players.map((player, index) => (isWinner(newScores[index])) ? setTwoPlayerWinner(index) : setTwoPlayerWinner(3));\n        //newScores[playerIndex] = score;\n        //localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(newPlayers);\n        //setTwoPlayerScores(newScores);\n    }\n    //console.log(`players: ${players}`)\n    const set21 = () => {\n        if (darts) {\n            localStorage.setItem('winner', 21);\n            setWinner(Number(localStorage.getItem('winner')));\n        }\n    }\n    const selectGame = (groupTitle, label, selected) => {\n        localStorage.setItem('game', selected)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setGame(localStorage.getItem('game'));\n        set21();\n    }\n    const selectWinner = (groupTitle, label, selected) => {\n        localStorage.setItem('winner', selected)\n        //localStorage.setItem('gameStatus', 'gameOver');\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const clear = (event) => {\n        alert('Note was cleared: ' + event.value);\n        localStorage.setItem('players', JSON.stringify(initPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n\n    const getSurfTotal = (player, index) => {\n        let total = 0;\n        const score = (index) => player.surfScores[index];\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n            //console.log(`getSurfTotal=> ${surfKey(player, index)} ${index}: ${total}`)\n            console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        //console.log(`getsurfTotalplayer=> ${player}: ${total}`)\n        return total;\n    }\n\n    const reset = (event) => {\n\n        //const newPlayers = [...players];\n        let newPlayers = JSON.parse(localStorage.getItem('players'));\n        //alert('Note was cleared: ');\n        //const cricketKey = (player,index) => `${player}Cricket${index}`;\n        //const golfKey = (player,index) => `${player}Golf${index}`;\n        const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n\n        const id = (player, index) => {\n            if (darts) {\n                return cricketKey(player, index);\n            } else if (dominos) {\n                return getDominoKey(player, index);\n            } else if (golf) {\n                return golfKey(player, index);\n            } else if (surf) {\n                return surfKey(player, index);\n            }\n            return (player.player || player.name);\n        }\n\n        const initValue = 0;\n        if (darts) {\n            //newPlayers.map((player) => dartScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n            newPlayers.map((player) => {\n                player.dartsScore = 0;\n                player.cricketScores = [0,0,0,0,0,0,0];\n            });\n        } else if (golf) {\n            //newPlayers.map((player) => dartScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n            newPlayers.map((player) => {\n                player.golfScore = 0;\n                player.golfScores = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n                player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            });\n        } else if (dominos) {\n            //players.map((player) => dominoScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n            /*\n            players.map((player) => dominoScoring.map((target, index) => {\n                console.log(`RESET => player: ${player.name} dominoScoring: ${dominoScoring.length} key: ${id(player, index)}: ${initValue}`)\n                localStorage.setItem(id(player, index), initValue);\n            }));\n            */\n            //localStorage.setItem('twoPlayerScores', '0,0');\n            //const localPlayers = JSON.parse(localStorage.getItem('players'));\n            newPlayers[0].dominoScore = 0;\n            newPlayers[1].dominoScore = 0;\n            //localStorage.setItem('players', JSON.stringify(localPlayers));\n        } else if (surf) {\n            newPlayers.map((player, index) => {\n                player.surfScores = surfScoring;\n                player.surfScore = 0;\n                player.surfPriority = 0;\n            });\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n            newPlayers = [...sortedPlayers];\n            //localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n        } else {\n            //players.map((player, index) => localStorage.setItem(id(player, index), initValue));\n            newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n        }\n        localStorage.setItem('gameStatus', 'inProgress');\n        //localStorage.setItem('twoPlayerScores', '0,0');   \n        //localStorage.setItem('players', JSON.stringify(players));\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        getScore();\n    }\n    const addPlayer = (event) => {\n        //alert('Note was cleared: ' + value);\n        const newPlayer = prompt('Enter new name', '');\n        const initializedNewPlayer = initNewPlayer;\n        initializedNewPlayer.name = newPlayer;\n        let newPlayers = [...players];\n        if (newPlayer !== null) {\n            newPlayers.push(initializedNewPlayer);\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n        //getScore();\n    }\n\n    const editPlayer = (index) => {\n        //console.log(`edit: ${index}`);\n        const newPlayer = prompt('Enter new name', players[index]);\n        if (newPlayer !== null) {\n            let newPlayers = [...players];\n            newPlayers[index] = newPlayer;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n            getScore();\n        }\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n\n    const deletePlayer = (index) => {\n        console.log(`deletePlayer => ${index}`)\n        const newPlayers = [...players].slice();\n        newPlayers.splice(index, 1);\n        //playerScores.splice(index, 1);\n        //surfersScores.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    };\n\n    const scorecards = () => {\n        //console.log(`build Scorecards`)\n        const scorecard = (playerIndex, scoreIndex, score) => {\n            const player = players[playerIndex];\n            if (darts) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`)\n                return <CricketScore\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (dominos) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`)\n                return <Dominos\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    scoreTotal={player.dominoScore || 0}\n                    treeTotal={score}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    getDominoTotal={getDominoTotal}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (golf) {\n                //console.log(`player: ${JSON.stringify(player, null, 2)}`);\n                console.log(`${game} - scorecard => player:${player.player || player.name}`);\n                console.log(`scoreIndex: ${scoreIndex}`);\n                console.log(`score: ${player.golfScores[scoreIndex]}`);\n                //console.log(`FW: ${player.golfFW[scoreIndex]}`);\n                //console.log(`score: ${player.golfGIR[scoreIndex]}`);\n                //console.log(`score: ${player.golfPutts[scoreIndex]}`);\n                console.log(`scorecards => par: ${score}`);\n                return <ScoreCard\n                    game={game}\n                    players={players}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={golfPars[scoreIndex]}\n                />\n            }\n            //console.log(`${game} - scorecard => player: ${(player.player || player.name)} scoreIndex: ${scoreIndex} score: ${player.score}`)\n            return <ScoreCard\n                game={game}\n                players={players}\n                playerIndex={playerIndex}\n                scoreIndex={scoreIndex}\n                editPlayer={editPlayer}\n                deletePlayer={deletePlayer}\n                updateScores={updateScores}\n                winner={winner}\n            />\n        }\n        const rankStatus = (player, index, score) => {\n            //console.log(`ranksStatus => surfersScores player: ${(player.player || player.name)} index: ${index} score: ${player.score}`)\n            const isPlayer1Winner = (players[0].surfScore > players[1].surfScore) ? true : false;\n            const scoreDifference = (isPlayer1Winner) ? (players[0].surfScore-players[1].surfScore) : (players[1].surfScore-players[0].surfScore);\n            const need = (isPlayer1Winner) ? (get2ndHighestScore(1) + (scoreDifference + .1)) : (get2ndHighestScore(0) + (scoreDifference + .1));\n            const winsBy = `Wins by ${scoreDifference}`;\n            const needs = `Needs ${need}`;\n            if (index === 0) {\n                return winsBy\n            }\n            return needs\n        }\n\n        const surfScoresDisplay = () => surfScoring.map((wave, index) => {\n            <div className='flexContainer width-100-percent' key={getKey(`wave${wave}`)}>\n                <div className='flex3Column p-5'>\n                    {scorecard(players[0], 0, index, players[0].surfScores[index])}\n                </div>\n                <div className='p-20 r-5 font50 color-yellow m-auto'>\n                    {wave}\n                </div>\n                <div className='flex3Column p-5'>\n                    {scorecard(players[1], 1, index, players[1].surfScores[index])}\n                </div>\n            </div>\n        });\n\n        const setSurfScore = (playerId, index, score) => {\n\n            const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, (score || 0));\n            const newPlayers = [...players];\n            newPlayers[playerId].surfScores[index] = Number(newScore);\n            newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n            if (newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) {\n                newPlayers.map((player, index)=>{\n                    if (index === playerId) {\n                        player.surfPriority = players.length;\n                    } else if (player.surfPriority != 0) {\n                        player.surfPriority = player.surfPriority-1;\n                    }\n                });\n            }\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n\n            console.log('setSurfScore => sortedPlayers: ', sortedPlayers)\n\n            localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n            setPlayers(sortedPlayers);\n        }\n\n        const getWave = (playerId, index, score) => {\n            const player = players[playerId];\n            const theScore = player.surfScores[index];\n            //console.log(`getWave => playerId: ${playerId} player: ${(player.player || player.name)} index: ${index} score: ${player.surfScores[index]}`);\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const highestId = highestScores[0];\n            const secondHighestId = highestScores[1];\n            const firstScore = (index === highestId) ? true : false;\n            const secondScore = (index === secondHighestId) ? true : false;\n            const getClasses = (firstScore || secondScore) ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n            const wave = <div className=\"column\" onClick={() => setSurfScore(playerId, index, score)} key={getKey(`wave${playerId}${index}${score}`)}>\n                <div className='size30 bold color-yellow bg-dkYellow w-100 p-10'>{index + 1}</div>\n                <div className={getClasses}>{score}</div>\n            </div>\n            return wave\n        }\n\n        const get2ndHighestScore = (playerId) => {\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const secondHighestId = highestScores[1];\n            return players[playerId].surfScores[secondHighestId];\n        }\n\n        const isTieScore = (playerIndex, score) => {\n            if (playerIndex !== 0) {\n                //console.log(`isTieScore => playerIndex: ${playerIndex} score: ${score} previous playerIndex: ${playerIndex - 1} previous players score: ${scoreTotal(playerIndex - 1)}`)\n                if (score === scoreTotal(playerIndex - 1, players)) {\n                    //console.log(`isTieScore => playerIndex: ${playerIndex} score: ${score} previous playerIndex: ${playerIndex - 1} previous players score: ${scoreTotal(playerIndex - 1)}`)\n                    return true;\n                }\n            }\n            return false;\n        }\n        const jerseyColors = ['white', 'yellow', 'neogreen', 'black', 'blue', 'orange', 'pink', 'red'];\n        const selectJersey = (index) => {\n            const newPlayers = [...players];\n            newPlayers[index].surfJerseyColor = Number(newPlayers[index].surfJerseyColor)+1;\n            newPlayers[index].surfJerseyColor = (newPlayers[index].surfJerseyColor > (jerseyColors.length-1)) ? 0 : newPlayers[index].surfJerseyColor;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            setPlayers(newPlayers);\n        }\n\n        const surfingScores = (player, index, score) => {\n            if (surf) {\n                //console.log(`surfingScores => player: ${(player.player || player.name)} index: ${index} score:${players[index].surfScores[0]}`);\n                const surferScores = <div key={getKey(`${score}${index}${(player.player || player.name)}`)}>\n                    <div className={`flexContainer pl-5 pr-5 pb-5 r-10 pt-15 ml-5 mr-5 mt--10 mb--10 color-dark text-outline-light`} key={getKey(`${index}${(player.player || player.name)}`)}>\n                        <div className={`r-5-lft m-1 w-75 size40 p-25 bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`}>{(isTieScore(index, score) && (index !== 0)) ? index : (index + 1)}</div>\n                        <div className={`flex3Column contentLeft m-1 size40 p-25 contentCenter bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`} onClick={() => selectJersey(index)}>{(player.player || player.name)}</div>\n                        <div className={`r-5-rt flex3Column contentRight m-1 mr-10 pb-10 pl-10 pr-10 pt-15 bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`}>\n                            <div className='size40 bold'>{score}</div>\n                            <div className='mt-10 bold'>{rankStatus(player, index, score)}</div>\n                        </div>\n                    </div>\n                    <div>\n                        <div>\n                            <div className='h-scroll color-white copyright m-10'>\n                                <div className=\"container mt-10\">\n                                    {players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                return surferScores\n            }\n            return\n        }\n        const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n\n        const dartScores = () => dartScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex3Column p-5'>\n                {scorecard(0, index, 0)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(1, index, 0)}\n            </div>\n        </div>);\n\n        const editGolfPar = (hole) => {\n            const newPars = [...golfPars];\n            const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n            newPars[hole] = newPar;\n            setGolfPars(newPars);\n        }\n\n        const golfScores = () => golfScoring.map((hole, index) => <div key={getKey(hole)}>\n            <div className='contentCenter bg-dark r-10 m-5 mt-35'>\n                <div>\n                    <span className='copyright greet color-yellow'>\n                        Hole:\n                    </span>\n                    <span className='size40 bold pt-5 pl-15 pr-15 bg-dark r-10'>\n                        {index+1}\n                    </span>\n                    <span className='copyright greet color-yellow'>\n                        Par:\n                    </span>\n                    <span className='size20 bold color-lite mt--5'>\n                        {golfPars[index]}\n                    </span>\n                </div>\n                <div className='flexContainer'>\n                    <div className='flex2Column p-5'>\n                        {scorecard(0, index, golfPars[index])}\n                    </div>\n                    <div className='flex2Column p-5'>\n                        {scorecard(1, index, golfPars[index])}\n                    </div>\n                </div>\n            </div>\n        </div>);\n\n        //const surfingRankboard = players.map((player, index) => surfingRanks(player, index))};\n        const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n\n        const dominoScores = () => dominoScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(0, index, score)}\n            </div>\n            <div className='r-5 font50 color-yellow m-auto w-100'>\n                {score}\n            </div>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(1, index, score)}\n            </div>\n        </div>);\n\n        const isDominoWinner = (playerIndex) => (getDominoTotal(playerIndex) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n\n        const dartClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        const dominoClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isDominoWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n\n        const dartScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>{players[0].player || players[0].name}:<div className='mt-10 size40 white'>{getDartTotal(players[0])}</div></div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>{players[1].player || players[1].name}:<div className='mt-10 size40 white'>{getDartTotal(players[1])}</div></div>\n            </div>\n            {dartScores()}\n        </React.Fragment>\n\n        const golfScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy m-5 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>\n                    {players[0].player || players[0].name}:<div className='mt-10 size40 white'>{players[0].golfScore}</div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>\n                    {players[1].player || players[1].name}:<div className='mt-10  size40 white'>{players[1].golfScore}</div>\n                </div>\n            </div>\n            <div className='scrollHeight500'>\n                {golfScores()}\n            </div>\n        </React.Fragment>\n\n        //players.map((player, index) => scorecard(index, 0, 0));\n\n        const dominoScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10'>\n                <div className={dominoClass(0)}>\n                    {players[0].player || players[0].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(0)}\n                    </div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dominoClass(1)}>\n                    {players[1].player || players[1].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(1)}\n                    </div>\n                </div>\n            </div>\n            {dominoScores()}\n        </React.Fragment>\n\n        if (darts) return dartScoreboard()\n        if (dominos) return dominoScoreboard()\n        if (golf) return golfScoreboard()\n        //if (surf) return surfScoreboard\n        if (surf) return surfingScoreboard()\n        else return renderedItems();\n    }\n    const updatePlayers = () => {\n        // Update the parent state to trigger a re-render\n        console.log()\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        console.log(`updatePlayers=>`)\n    };\n    //console.log(`localStorage => game: ${localStorage.getItem('game')}`)\n    //console.log(`localStorage => gameStatus: ${localStorage.getItem('gameStatus')}`)\n    //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n    //console.log(`localStorage => winner: ${localStorage.getItem('winner')}`)\n    //console.log(`localStorage => twoPlayerScores: ${localStorage.getItem('twoPlayerScores')}`)\n    //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n    //console.log(`localStorage => player1: ${localStorage.getItem('players1')}`)\n    //console.log(`localStorage => player2: ${localStorage.getItem('players2')}`)\n    //console.log(`time: ${time}`)\n\n    return (\n        <div className='fadeIn mt--30'>\n            <div className='mb-20'>\n                <Selector\n                    groupTitle='game'\n                    label='item.description'\n                    items={games}\n                    selected={game}\n                    onChange={selectGame}\n                    fontSize='25'\n                    padding='10px'\n                    width={(darts || dominos) ? '98%' : '65%'}\n                />\n                {\n                    (darts || golf)\n                        ? <React.Fragment></React.Fragment>\n                        : <Selector className='fl-left'\n                                groupTitle='winner'\n                                label='i.description'\n                                items={(dominos) ? dominoWinners : ((surf) ? heatLengths : winners)}\n                                selected={(surf) ? (time / 60) : winner}\n                                onChange={(surf) ? setTimer : selectWinner}\n                                fontSize='25'\n                                padding='10px'\n                                width='30%'\n                            />\n                }\n                {(surf) ?\n                    <SurfScores\n                        players={players}\n                        time={time}\n                        setTime={setTime}\n                        heatLength={heatLength}\n                        isWinner={isWinner}\n                    ></SurfScores>\n                    :\n                    <React.Fragment></React.Fragment>\n\n                }\n            </div>\n            <div>\n                {scorecards()}\n            </div>\n            <div className='flexContainer width-100-percent'>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow' onClick={() => addPlayer()}>add player</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black' onClick={() => reset()}>reset</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow' onClick={() => clear()}>clear</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScoreKeeper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}