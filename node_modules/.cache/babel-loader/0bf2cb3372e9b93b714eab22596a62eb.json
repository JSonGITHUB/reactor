{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/Timer.js\";\nimport React from 'react'; //import ReactDOM from 'react-dom';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timeItIs = [\"shaka time!!!\", \"get a wave brah!\", \"keep froth alive...\"];\n    this.logos = [1, 2, 3];\n    this.x = 0;\n    this.interval = 0;\n    this.timeItIsNow = this.timeItIs[this.x];\n    this.stackIndex = 0;\n\n    this.logoStacker = (value, index, array) => {\n      //console.log(`index: ${index} array: ${array} value: ${value}`);\n      let newId = value + this.stackIndex;\n      newId = newId > array.length ? 1 : newId; //console.log(`logo${value} => z${newId}`)\n\n      document.getElementById('logo' + value).className = \"logo\" + value + \" z\" + newId + \" absolute logo height200 ml--100\";\n    };\n\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    this.interval = this.interval === 3 ? 0 : this.interval + 1;\n    this.x = this.x === this.timeItIs.length - 1 && this.interval === 0 ? 0 : this.interval === 0 ? this.x + 1 : this.x;\n    this.timeItIsNow = this.timeItIs[this.x];\n    /*\n    if (this.interval === 3) {\n        this.stackIndex = (this.stackIndex === 2) ? 0 : (this.stackIndex+1);\n        this.logos.forEach(this.logoStacker);\n    }\n    */\n\n    const date = this.state.date.toLocaleTimeString();\n    const time = date.replace(\" \", \"\").toLocaleLowerCase();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time p-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"do you know what time it is?\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, time), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, this.timeItIsNow)));\n  }\n\n}\n\nexport default Timer;\n/*\nReactDOM.render(\n    <Timer />,\n    document.getElementById('time')\n);\n\n\nlet initTimer = () => {\n    ReactDOM.render(\n        <Timer date={ new Date() } />,\n        document.getElementById('time')\n    )\n}\nsetTimeout(initTimer, 1000);\n*/","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/Timer.js"],"names":["React","Timer","Component","constructor","props","timeItIs","logos","x","interval","timeItIsNow","stackIndex","logoStacker","value","index","array","newId","length","document","getElementById","className","state","date","Date","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","render","toLocaleTimeString","time","replace","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import React from 'react';\n//import ReactDOM from 'react-dom';\n   \nclass Timer extends React.Component {\n    \n    timeItIs = [\n        \"shaka time!!!\",\n        \"get a wave brah!\",\n        \"keep froth alive...\",\n    ];\n    logos = [1,2,3];\n    x = 0;\n    interval = 0;\n    timeItIsNow = this.timeItIs[this.x];\n    stackIndex = 0;\n    logoStacker = (value, index, array) => {\n        //console.log(`index: ${index} array: ${array} value: ${value}`);\n        let newId = value+this.stackIndex;\n        newId = (newId > array.length) ? 1 : newId;\n        //console.log(`logo${value} => z${newId}`)\n        document.getElementById('logo'+value).className = \"logo\"+value+\" z\"+newId+\" absolute logo height200 ml--100\";\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {date: new Date()};\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n  \n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    tick() {\n        this.setState({\n            date: new Date()\n        });\n    }\n    render() {\n        this.interval = (this.interval === 3) ? 0 : (this.interval+1);\n        this.x = (this.x === (this.timeItIs.length-1) && (this.interval === 0)) ? 0 : ((this.interval === 0) ? (this.x+1) : this.x);\n        this.timeItIsNow = this.timeItIs[this.x];\n        /*\n        if (this.interval === 3) {\n            this.stackIndex = (this.stackIndex === 2) ? 0 : (this.stackIndex+1);\n            this.logos.forEach(this.logoStacker);\n        }\n        */\n        const date = this.state.date.toLocaleTimeString();\n        const time = date.replace(\" \",\"\").toLocaleLowerCase();\n        return (\n            <div className=\"time p-20\">\n                <div className='color-red'>\n                    do you know what time it is?\n                </div>\n                <br/>\n                <b>\n                    {time}\n                </b>\n                <br/>\n                <br/>\n                <div className='color-green'>\n                    <b>{ this.timeItIsNow }</b>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Timer;\n/*\nReactDOM.render(\n    <Timer />,\n    document.getElementById('time')\n);\n\n\nlet initTimer = () => {\n    ReactDOM.render(\n        <Timer date={ new Date() } />,\n        document.getElementById('time')\n    )\n}\nsetTimeout(initTimer, 1000);\n*/"]},"metadata":{},"sourceType":"module"}