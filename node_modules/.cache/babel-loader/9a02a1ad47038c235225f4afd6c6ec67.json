{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/hooks/Adder.js\";\nimport React, { useState } from 'react';\nexport default function Adder(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n  const [unit, setUnit] = useState(props.unit);\n  const [label, setLabel] = useState(props.label);\n  const units = [``, `km`, `mph`, `pts`, `kts`, `miles`, `ft`, `inche`, `'`, `\"`];\n  const getUnitIndex = console.log(`UNITS: ${units.find(unitId => unitId === unit)}`);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, label ? label : \"How many?\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, count, unit ? unit : \"\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(prevCount => prevCount - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(prevCount => prevCount + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setUnit(prevUnit => prevUnit == \"mph\" ? \"km\" : \"mph\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"unit\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => getUnitIndex(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"unit?\"));\n}","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/hooks/Adder.js"],"names":["React","useState","Adder","props","count","setCount","unit","setUnit","label","setLabel","units","getUnitIndex","console","log","find","unitId","prevCount","prevUnit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC;AACE,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;AACH,QAAM,CAAEK,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAACE,KAAK,CAACG,IAAP,CAAlC;AACG,QAAM,CAAEE,KAAF,EAASC,QAAT,IAAsBR,QAAQ,CAACE,KAAK,CAACK,KAAP,CAApC;AACA,QAAME,KAAK,GAAG,CAAE,EAAF,EAAM,IAAN,EAAY,KAAZ,EAAmB,KAAnB,EAA0B,KAA1B,EAAiC,OAAjC,EAA0C,IAA1C,EAAgD,OAAhD,EAAyD,GAAzD,EAA8D,GAA9D,CAAd;AACA,QAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAa,UAASH,KAAK,CAACI,IAAN,CAAWC,MAAM,IAAIA,MAAM,KAAKT,IAAhC,CAAsC,EAA5D,CAArB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,KAAK,GAAGA,KAAH,GAAW,WADrB,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KADL,EACYE,IAAI,GAAGA,IAAH,GAAU,EAD1B,CAJJ,eAOI;AAAQ,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACW,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAPJ,eAQI;AAAQ,IAAA,OAAO,EAAE,MAAMX,QAAQ,CAACW,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARJ,eASI;AAAQ,IAAA,OAAO,EAAE,MAAMT,OAAO,CAACU,QAAQ,IAAKA,QAAQ,IAAI,KAAb,GAAsB,IAAtB,GAA6B,KAA1C,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAQ,IAAA,OAAO,EAAE,MAAMN,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVJ,CADJ;AAcH","sourcesContent":["import React, { useState } from 'react';\n\nexport default function Adder(props) {\n  // Declare a new state variable, which we'll call \"count\"\n    const [ count, setCount ] = useState(0);\n\tconst [ unit, setUnit ] = useState(props.unit);\n    const [ label, setLabel ] = useState(props.label);\n    const units = [``, `km`, `mph`, `pts`, `kts`, `miles`, `ft`, `inche`, `'`, `\"`];\n    const getUnitIndex = console.log(`UNITS: ${units.find(unitId => unitId === unit)}`);\n    \n    return (\n        <div className=\"color-yellow\">\n            <p>\n                {label ? label : \"How many?\"}\n            </p>\n            <p>\n                {count}{unit ? unit : \"\"}\n            </p>\n            <button onClick={() => setCount(prevCount => prevCount - 1)}>-</button>\n            <button onClick={() => setCount(prevCount => prevCount + 1)}>+</button>\n            <button onClick={() => setUnit(prevUnit => (prevUnit == \"mph\") ? \"km\" : \"mph\")}>unit</button>\n            <button onClick={() => getUnitIndex()}>unit?</button>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}