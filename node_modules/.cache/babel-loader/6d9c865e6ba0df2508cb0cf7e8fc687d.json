{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/BoilingVerdict.js\";\nimport React from 'react';\n\nclass BoilingVerdict extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.celsius = props.celsius;\n    alert(this.celsius);\n    this.state = {\n      temperature: ''\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      temperature: e.target.value\n    }); //      this.props.onTemperatureChange(e.target.value);\n  }\n\n  tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n\n    if (Number.isNaN(input)) {\n      return '';\n    }\n\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n  }\n\n  toCelsius(fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n  }\n\n  toFahrenheit(celsius) {\n    return celsius * 9 / 5 + 32;\n  }\n\n  render() {\n    if (this.celsius >= 100) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }\n      }, \"The water would boil.\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    }, \"The water would not boil.\");\n  }\n\n}\n\nexport default BoilingVerdict;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/BoilingVerdict.js"],"names":["React","BoilingVerdict","Component","constructor","props","handleChange","bind","celsius","alert","state","temperature","e","setState","target","value","tryConvert","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","toCelsius","fahrenheit","toFahrenheit","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,OAAL,GAAeH,KAAK,CAACG,OAArB;AACAC,IAAAA,KAAK,CAAC,KAAKD,OAAN,CAAL;AACA,SAAKE,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAb;AACH;;AAEDL,EAAAA,YAAY,CAACM,CAAD,EAAI;AACZ,SAAKC,QAAL,CAAc;AAACF,MAAAA,WAAW,EAAEC,CAAC,CAACE,MAAF,CAASC;AAAvB,KAAd,EADY,CAEpB;AACK;;AAEDC,EAAAA,UAAU,CAACL,WAAD,EAAcM,OAAd,EAAuB;AAC7B,UAAMC,KAAK,GAAGC,UAAU,CAACR,WAAD,CAAxB;;AACA,QAAIS,MAAM,CAACC,KAAP,CAAaH,KAAb,CAAJ,EAAyB;AACrB,aAAO,EAAP;AACH;;AACD,UAAMI,MAAM,GAAGL,OAAO,CAACC,KAAD,CAAtB;AACA,UAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,IAApB,IAA4B,IAA5C;AACA,WAAOC,OAAO,CAACG,QAAR,EAAP;AACH;;AAEDC,EAAAA,SAAS,CAACC,UAAD,EAAa;AAClB,WAAO,CAACA,UAAU,GAAG,EAAd,IAAoB,CAApB,GAAwB,CAA/B;AACH;;AAEDC,EAAAA,YAAY,CAACrB,OAAD,EAAU;AAClB,WAAQA,OAAO,GAAG,CAAV,GAAc,CAAf,GAAoB,EAA3B;AACH;;AAEDsB,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKtB,OAAL,IAAgB,GAApB,EAAyB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACH;;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;AACH;;AAtCwC;;AAyC7C,eAAeN,cAAf","sourcesContent":["import React from 'react';\n\nclass BoilingVerdict extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.celsius = props.celsius;\n        alert(this.celsius)\n        this.state = {temperature: ''};\n    }\n\n    handleChange(e) {\n        this.setState({temperature: e.target.value});\n//      this.props.onTemperatureChange(e.target.value);\n    }\n\n    tryConvert(temperature, convert) {\n        const input = parseFloat(temperature);\n        if (Number.isNaN(input)) {\n            return '';\n        }\n        const output = convert(input);\n        const rounded = Math.round(output * 1000) / 1000;\n        return rounded.toString();\n    }\n    \n    toCelsius(fahrenheit) {\n        return (fahrenheit - 32) * 5 / 9;\n    }\n    \n    toFahrenheit(celsius) {\n        return (celsius * 9 / 5) + 32;\n    }\n\n    render() {\n        if (this.celsius >= 100) {\n            return <p>The water would boil.</p>;\n        }\n        return <p>The water would not boil.</p>;\n    }\n}\n\nexport default BoilingVerdict;"]},"metadata":{},"sourceType":"module"}