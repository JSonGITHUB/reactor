{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/Reducer.js\";\nimport React from \"react\";\nconst initialTodos = [{\n  id: \"t1\",\n  task: \"Code\",\n  complete: false\n}, {\n  id: \"t2\",\n  task: \"Cook\",\n  complete: false\n}];\n\nconst todoReducer = (state, action) => {\n  console.log(`todoReducer => `);\n\n  switch (action.type) {\n    case \"ADD_TODO\":\n      console.log(`ADD_TODO:${JSON.stringify(state, 2, null)}`);\n      return initialTodos.map(todo => {\n        if (todo.id === action.id) {\n          console.log(`1a\\ntodo.id: ${todo.id}\\naction.id: ${action.id}\\ntodo: ${JSON.stringify(todo, 2, null)}\\ncomplete: ${todo.complete}`);\n          return { ...todo,\n            todo\n          };\n        } else {\n          console.log(`1b\\ntodo: ${JSON.stringify(todo, 2, null)}`);\n          return todo;\n        }\n      });\n\n    case \"COMPLETE_TODO\":\n      console.log(`COMPLETE_TODO:`);\n      return initialTodos.map(todo => {\n        if (todo.id === action.id) {\n          console.log(`1a\\ntodo.id: ${todo.id}\\naction.id: ${action.id}\\ntodo: ${JSON.stringify(todo, 2, null)}\\ncomplete: ${!todo.complete}`);\n          return { ...todo,\n            complete: true\n          };\n        } else {\n          console.log(`1b\\ntodo: ${JSON.stringify(todo, 2, null)}`);\n          return todo;\n        }\n      });\n\n    case \"INCOMPLETE_TODO\":\n      console.log(`INCOMPLETE_TODO:`);\n      return initialTodos.map(todo => {\n        if (todo.id === action.id) {\n          console.log(`2a\\ntodo.id: ${todo.id}\\naction.id: ${action.id}\\ntodo: ${JSON.stringify(todo, 2, null)}\\ncomplete: ${!todo.complete}`);\n          return { ...todo,\n            complete: false\n          };\n        } else {\n          console.log(`2b\\ntodo: ${JSON.stringify(todo, 2, null)}`);\n          return todo;\n        }\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  let [todos, dispatch] = React.useReducer(todoReducer, initialTodos);\n\n  const handleChange = todo => {\n    dispatch({\n      type: todo.complete ? \"INCOMPLETE_TODO\" : \"COMPLETE_TODO\",\n      id: todo.id\n    });\n  };\n\n  const taskInterface = todo => {\n    let taskClass = 'ml-5';\n\n    if (todo.complete) {\n      taskClass = taskClass + \" color-green\";\n    } else {\n      taskClass = taskClass + \" color-yellow\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: taskClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }\n    }, todo.task);\n  };\n\n  const addTask = () => {\n    let newTask = prompt(\"New task: \", '');\n    const id = 't' + String(initialTodos.length + 1);\n    console.log(`addTask: id => ${id}`);\n    const newTaskObject = {\n      id: id,\n      task: newTask,\n      complete: false\n    };\n    initialTodos.push(newTaskObject);\n    dispatch({\n      type: \"ADD_TODO\",\n      id: `t${id}`\n    });\n    console.log(`addTask: initialTodos => ${JSON.stringify(initialTodos, 2, null)}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, initialTodos.map(todo => /*#__PURE__*/React.createElement(\"li\", {\n    key: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"white b p-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todo.complete,\n    onChange: () => handleChange(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }), taskInterface(todo)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button bg-dkGreen r-5 color-neogreen b p-10 m-10\",\n    onClick: () => addTask(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Add\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/Reducer.js"],"names":["React","initialTodos","id","task","complete","todoReducer","state","action","console","log","type","JSON","stringify","map","todo","App","todos","dispatch","useReducer","handleChange","taskInterface","taskClass","addTask","newTask","prompt","String","length","newTaskObject","push"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst initialTodos = [\n  {\n    id: \"t1\",\n    task: \"Code\",\n    complete: false\n  },\n  {\n    id: \"t2\",\n    task: \"Cook\",\n    complete: false\n  }\n];\nconst todoReducer = (state, action) => {\n    console.log(`todoReducer => `)\n  switch (action.type) {\n    case \"ADD_TODO\":\n        console.log(`ADD_TODO:${JSON.stringify(state,2, null)}`);\n      return initialTodos.map(todo => {\n        if (todo.id === action.id) {\n            console.log(`1a\\ntodo.id: ${todo.id}\\naction.id: ${action.id}\\ntodo: ${JSON.stringify(todo, 2, null)}\\ncomplete: ${todo.complete}`)\n            return { ...todo, todo};\n        } else {\n            console.log(`1b\\ntodo: ${JSON.stringify(todo, 2, null)}`)\n            return todo;\n        }\n      });\n    case \"COMPLETE_TODO\":\n        console.log(`COMPLETE_TODO:`)\n      return initialTodos.map(todo => {\n        if (todo.id === action.id) {\n            console.log(`1a\\ntodo.id: ${todo.id}\\naction.id: ${action.id}\\ntodo: ${JSON.stringify(todo, 2, null)}\\ncomplete: ${!todo.complete}`)\n          return { ...todo, complete: true };\n        } else {\n            console.log(`1b\\ntodo: ${JSON.stringify(todo, 2, null)}`)\n          return todo;\n        }\n      });\n    case \"INCOMPLETE_TODO\":\n        console.log(`INCOMPLETE_TODO:`)\n      return initialTodos.map(todo => {\n        if (todo.id === action.id) {\n            console.log(`2a\\ntodo.id: ${todo.id}\\naction.id: ${action.id}\\ntodo: ${JSON.stringify(todo, 2, null)}\\ncomplete: ${!todo.complete}`)\n          return { ...todo, complete: false };\n        } else {\n            console.log(`2b\\ntodo: ${JSON.stringify(todo, 2, null)}`)\n          return todo;\n        }\n      });\n    default:\n      return state;\n  }\n};\nconst App = () => {\n\n  let [todos, dispatch] = React.useReducer(todoReducer, initialTodos);\n  const handleChange = todo => {\n    dispatch({\n      type: todo.complete ? \"INCOMPLETE_TODO\" : \"COMPLETE_TODO\",\n      id: todo.id\n    });\n  };\n  const taskInterface = (todo) => {\n    let taskClass = 'ml-5';\n    if (todo.complete) {\n        taskClass = taskClass + \" color-green\";\n    } else {\n        taskClass = taskClass + \" color-yellow\";\n    }\n    return <span className={taskClass}>\n            {todo.task}\n        </span>\n  }\n  const addTask = () => {\n    let newTask = prompt(\"New task: \", '');\n    const id = 't'+ String(initialTodos.length+1);\n    console.log(`addTask: id => ${id}`)\n    const newTaskObject = {\n        id: id,\n        task: newTask,\n        complete: false\n    }\n    initialTodos.push(newTaskObject);\n    \n    dispatch({\n        type: \"ADD_TODO\",\n        id: `t${id}`\n    });\n    console.log(`addTask: initialTodos => ${JSON.stringify(initialTodos, 2, null)}`)\n  }\n  \n  return (\n    <div>\n        <ul>\n        {initialTodos.map(todo => (\n            <li key={todo.id} >\n                <label>\n                    <div className='white b p-10'>\n                        <input\n                        type=\"checkbox\"\n                        checked={todo.complete}\n                        onChange={() => handleChange(todo)}\n                        />\n                        {taskInterface(todo)}\n                    </div>\n                </label>\n            </li>\n        ))}\n        </ul>\n        <div className=\"button bg-dkGreen r-5 color-neogreen b p-10 m-10\" \n        onClick={() => addTask()}>Add</div>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}