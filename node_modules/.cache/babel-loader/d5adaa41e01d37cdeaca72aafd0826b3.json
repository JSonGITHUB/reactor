{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/TextColorizer.js\";\nimport React from 'react';\n\nclass TextColorizer extends React.Component {\n  constructor(text) {\n    super();\n    this.colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n    this.colorIndex = -1;\n\n    this.getNextColor = () => {\n      this.colorIndex = this.colorIndex === this.colors.length - 1 ? 0 : this.colorIndex + 1;\n      return this.colors[this.colorIndex];\n    };\n\n    this.colorize = (value, index, array) => {\n      //console.log(\"index: \" + index); \n      //console.log(\"array: \" + array); \n      //console.log(\"value: \" + value);\n      const character = value;\n      const colorizedCharacter = `<span className=\"${this.getNextColor()}\">${character}</span>`;\n      return colorizedCharacter;\n    };\n\n    this.text = text.text; //console.log(`text: ${text.text}`);\n  }\n\n  render() {\n    const arr = [10, 20, 30, 40, 50, 60];\n\n    const total = (text, num) => text + num;\n\n    console.log(\"total: \" + arr.reduce(total));\n    const span = /*#__PURE__*/React.createElement(CharacterElement, {\n      className: this.getNextColor(),\n      text: \"TEST\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 22\n      }\n    });\n\n    const spans = (text, character) => text + character;\n\n    const letters = this.text.split('');\n    letters.reduce(spans);\n    console.log(`letters: ${letters}`); //return <div className=\"bigHeader\">{this.text.split('').reduce(spans)}</div>;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bigHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    }, span);\n  }\n\n}\n\nexport default TextColorizer;\n\nfunction CharacterElement(props) {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, props.text);\n}","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/TextColorizer.js"],"names":["React","TextColorizer","Component","constructor","text","colors","colorIndex","getNextColor","length","colorize","value","index","array","character","colorizedCharacter","render","arr","total","num","console","log","reduce","span","spans","letters","split","CharacterElement","props","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd;AADc,SAKlBC,MALkB,GAKT,CAAC,aAAD,EAAgB,cAAhB,EAAgC,WAAhC,CALS;AAAA,SAMlBC,UANkB,GAML,CAAC,CANI;;AAAA,SAOlBC,YAPkB,GAOH,MAAM;AACjB,WAAKD,UAAL,GAAoB,KAAKA,UAAN,KAAuB,KAAKD,MAAL,CAAYG,MAAZ,GAAmB,CAA3C,GAAiD,CAAjD,GAAsD,KAAKF,UAAL,GAAkB,CAA1F;AACA,aAAO,KAAKD,MAAL,CAAY,KAAKC,UAAjB,CAAP;AACH,KAViB;;AAAA,SAclBG,QAdkB,GAcP,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyB;AAChC;AACA;AACA;AACA,YAAMC,SAAS,GAAGH,KAAlB;AACA,YAAMI,kBAAkB,GAAI,oBAAmB,KAAKP,YAAL,EAAoB,KAAIM,SAAU,SAAjF;AACA,aAAOC,kBAAP;AACH,KArBiB;;AAEd,SAAKV,IAAL,GAAYA,IAAI,CAACA,IAAjB,CAFc,CAGd;AACH;;AAkBDW,EAAAA,MAAM,GAAG;AACL,UAAMC,GAAG,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAAZ;;AACA,UAAMC,KAAK,GAAG,CAACb,IAAD,EAAOc,GAAP,KAAed,IAAI,GAAGc,GAApC;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYJ,GAAG,CAACK,MAAJ,CAAWJ,KAAX,CAAxB;AAEA,UAAMK,IAAI,gBAAG,oBAAC,gBAAD;AAAkB,MAAA,SAAS,EAAE,KAAKf,YAAL,EAA7B;AAAkD,MAAA,IAAI,EAAE,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;;AACA,UAAMgB,KAAK,GAAG,CAACnB,IAAD,EAAOS,SAAP,KAAqBT,IAAI,GAAGS,SAA1C;;AACA,UAAMW,OAAO,GAAG,KAAKpB,IAAL,CAAUqB,KAAV,CAAgB,EAAhB,CAAhB;AACAD,IAAAA,OAAO,CAACH,MAAR,CAAeE,KAAf;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAWI,OAAQ,EAAhC,EATK,CAUL;;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BF,IAA5B,CAAP;AACH;;AApCuC;;AAuC5C,eAAerB,aAAf;;AAEA,SAASyB,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,sBACI;AAAM,IAAA,SAAS,EAAEA,KAAK,CAACC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACvB,IADX,CADJ;AAKH","sourcesContent":["import React from 'react';\nclass TextColorizer extends React.Component {\n    text;\n    constructor(text) {\n        super();\n        this.text = text.text;\n        //console.log(`text: ${text.text}`);\n    }\n    colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n    colorIndex = -1;\n    getNextColor = () => { \n        this.colorIndex = ((this.colorIndex) === (this.colors.length-1)) ? 0 : (this.colorIndex + 1);\n        return this.colors[this.colorIndex];\n    };\n//    total = (text, character) => text + `<span className=\"${this.getNextColor}\">${character}</span>`;\n//    total = (text, character) => text + `<span className=\"${this.getNextColor()}\">${character}</span>`;\n    \n    colorize = (value, index, array) => {\n        //console.log(\"index: \" + index); \n        //console.log(\"array: \" + array); \n        //console.log(\"value: \" + value);\n        const character = value;\n        const colorizedCharacter = `<span className=\"${this.getNextColor()}\">${character}</span>`;\n        return colorizedCharacter;\n    }\n    render() {\n        const arr = [10, 20, 30, 40, 50, 60]; \n        const total = (text, num) => text + num;\n        console.log(\"total: \" + arr.reduce(total)); \n\n        const span = <CharacterElement className={this.getNextColor()} text={\"TEST\"} />;\n        const spans = (text, character) => text + character;\n        const letters = this.text.split('');\n        letters.reduce(spans);\n        console.log(`letters: ${letters}`);\n        //return <div className=\"bigHeader\">{this.text.split('').reduce(spans)}</div>;\n        return <div className=\"bigHeader\">{span}</div>;\n    }\n}\n\nexport default TextColorizer;\n\nfunction CharacterElement(props) {\n    return (\n        <span className={props.className}>\n            {props.text}\n        </span>\n    );\n}\n  "]},"metadata":{},"sourceType":"module"}