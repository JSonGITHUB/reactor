{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/site/CountrySelector.js\";\nimport React from 'react';\nimport CountryContext from '../context/CountryContext.js';\nimport countries from './Countries.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CountrySelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getSelectedClass = initials => {\n      return initials === this.context ? 'completedSelector bg-neogreen' : '';\n    };\n    this.sayHello = () => this.countries.map(country => {\n      const {\n        initials,\n        greeting\n      } = country;\n      if (this.context === initials) {\n        return greeting;\n      }\n      return '';\n    });\n    this.countryClasses = initials => {\n      return `flag fl-center button ${initials} ${this.getSelectedClass(initials)}`;\n    };\n    this.countrySelector = () => this.countries.map(country => {\n      const {\n        initials\n      } = country;\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        className: this.countryClasses(initials),\n        onClick: () => this.props.setCountry(initials)\n      }, getKey(\"country\"), false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this);\n    });\n    this.countries = countries;\n  }\n  render() {\n    console.log(`context: ${this.context}`);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-10 pb-10 pl-10\",\n      children: [\"Select a language:\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"width-50-percent m-auto\",\n        children: this.countrySelector()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), this.sayHello()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n}\nCountrySelector.contextType = CountryContext;\nexport default CountrySelector;","map":{"version":3,"names":["React","CountryContext","countries","getKey","jsxDEV","_jsxDEV","CountrySelector","Component","constructor","props","getSelectedClass","initials","context","sayHello","map","country","greeting","countryClasses","countrySelector","className","onClick","setCountry","fileName","_jsxFileName","lineNumber","columnNumber","render","console","log","children","contextType"],"sources":["/Users/js/Dev/my-first-reactor/src/components/site/CountrySelector.js"],"sourcesContent":["import React from 'react';\nimport CountryContext from '../context/CountryContext.js';\nimport countries from './Countries.js';\nimport getKey from '../utils/KeyGenerator.js';\n\nclass CountrySelector extends React.Component {\n  \n    constructor(props) {\n        super(props);\n        this.countries = countries;\n    }\n\n    static contextType = CountryContext;\n\n    getSelectedClass = (initials) => {\n        return (initials === this.context) \n            ? 'completedSelector bg-neogreen' \n            : '';\n    }\n    sayHello = () => this.countries.map((country) => {\n        const { initials, greeting } = country;\n        if (this.context === initials) {\n            return greeting\n        }\n        return ''\n    });\n    countryClasses = (initials) => {\n        return (\n            `flag fl-center button ${initials} ${this.getSelectedClass(initials)}`\n        )\n    }\n    countrySelector = () => this.countries.map((country) => {\n        const { initials } = country;\n        return (\n            <i \n                key={getKey(\"country\")} \n                className={this.countryClasses(initials)} \n                onClick={() => this.props.setCountry(initials)}\n            />\n        )\n    });\n    render() {\n        console.log(`context: ${this.context}`)\n        return (\n            <div className='pt-10 pb-10 pl-10'>\n                Select a language:\n                <div className='width-50-percent m-auto'>\n                    {this.countrySelector()}\n                </div>\n                {this.sayHello()}\n            </div>\n        )\n    }\n}\nexport default CountrySelector;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,eAAe,SAASN,KAAK,CAACO,SAAS,CAAC;EAE1CC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAMjBC,gBAAgB,GAAIC,QAAQ,IAAK;MAC7B,OAAQA,QAAQ,KAAK,IAAI,CAACC,OAAO,GAC3B,+BAA+B,GAC/B,EAAE;IACZ,CAAC;IAAA,KACDC,QAAQ,GAAG,MAAM,IAAI,CAACX,SAAS,CAACY,GAAG,CAAEC,OAAO,IAAK;MAC7C,MAAM;QAAEJ,QAAQ;QAAEK;MAAS,CAAC,GAAGD,OAAO;MACtC,IAAI,IAAI,CAACH,OAAO,KAAKD,QAAQ,EAAE;QAC3B,OAAOK,QAAQ;MACnB;MACA,OAAO,EAAE;IACb,CAAC,CAAC;IAAA,KACFC,cAAc,GAAIN,QAAQ,IAAK;MAC3B,OACK,yBAAwBA,QAAS,IAAG,IAAI,CAACD,gBAAgB,CAACC,QAAQ,CAAE,EAAC;IAE9E,CAAC;IAAA,KACDO,eAAe,GAAG,MAAM,IAAI,CAAChB,SAAS,CAACY,GAAG,CAAEC,OAAO,IAAK;MACpD,MAAM;QAAEJ;MAAS,CAAC,GAAGI,OAAO;MAC5B,oBACIV,OAAA;QAEIc,SAAS,EAAE,IAAI,CAACF,cAAc,CAACN,QAAQ,CAAE;QACzCS,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACX,KAAK,CAACY,UAAU,CAACV,QAAQ;MAAE,GAF1CR,MAAM,CAAC,SAAS,CAAC;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGzB,CAAC;IAEV,CAAC,CAAC;IA/BE,IAAI,CAACvB,SAAS,GAAGA,SAAS;EAC9B;EA+BAwB,MAAMA,CAAA,EAAG;IACLC,OAAO,CAACC,GAAG,CAAE,YAAW,IAAI,CAAChB,OAAQ,EAAC,CAAC;IACvC,oBACIP,OAAA;MAAKc,SAAS,EAAC,mBAAmB;MAAAU,QAAA,GAAC,oBAE/B,eAAAxB,OAAA;QAAKc,SAAS,EAAC,yBAAyB;QAAAU,QAAA,EACnC,IAAI,CAACX,eAAe,CAAC;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,EACL,IAAI,CAACZ,QAAQ,CAAC,CAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAEd;AACJ;AAhDMnB,eAAe,CAOVwB,WAAW,GAAG7B,cAAc;AA0CvC,eAAeK,eAAe"},"metadata":{},"sourceType":"module"}