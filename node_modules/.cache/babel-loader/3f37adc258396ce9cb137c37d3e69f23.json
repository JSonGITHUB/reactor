{"ast":null,"code":"'use strict'; // We define these manually to ensure they're always copied\n// even if they would move up the prototype chain\n// https://nodejs.org/api/http.html#http_class_http_incomingmessage\n\nconst knownProperties = ['aborted', 'complete', 'destroy', 'headers', 'httpVersion', 'httpVersionMinor', 'httpVersionMajor', 'method', 'rawHeaders', 'rawTrailers', 'setTimeout', 'socket', 'statusCode', 'statusMessage', 'trailers', 'url'];\n\nmodule.exports = (fromStream, toStream) => {\n  const fromProperties = new Set(Object.keys(fromStream).concat(knownProperties));\n\n  for (const property of fromProperties) {\n    // Don't overwrite existing properties.\n    if (property in toStream) {\n      continue;\n    }\n\n    toStream[property] = typeof fromStream[property] === 'function' ? fromStream[property].bind(fromStream) : fromStream[property];\n  }\n\n  return toStream;\n};","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/node_modules/mimic-response/index.js"],"names":["knownProperties","module","exports","fromStream","toStream","fromProperties","Set","Object","keys","concat","property","bind"],"mappings":"AAAA,a,CAEA;AACA;AACA;;AACA,MAAMA,eAAe,GAAG,CACvB,SADuB,EAEvB,UAFuB,EAGvB,SAHuB,EAIvB,SAJuB,EAKvB,aALuB,EAMvB,kBANuB,EAOvB,kBAPuB,EAQvB,QARuB,EASvB,YATuB,EAUvB,aAVuB,EAWvB,YAXuB,EAYvB,QAZuB,EAavB,YAbuB,EAcvB,eAduB,EAevB,UAfuB,EAgBvB,KAhBuB,CAAxB;;AAmBAC,MAAM,CAACC,OAAP,GAAiB,CAACC,UAAD,EAAaC,QAAb,KAA0B;AAC1C,QAAMC,cAAc,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,IAAP,CAAYL,UAAZ,EAAwBM,MAAxB,CAA+BT,eAA/B,CAAR,CAAvB;;AAEA,OAAK,MAAMU,QAAX,IAAuBL,cAAvB,EAAuC;AACtC;AACA,QAAIK,QAAQ,IAAIN,QAAhB,EAA0B;AACzB;AACA;;AAEDA,IAAAA,QAAQ,CAACM,QAAD,CAAR,GAAqB,OAAOP,UAAU,CAACO,QAAD,CAAjB,KAAgC,UAAhC,GAA6CP,UAAU,CAACO,QAAD,CAAV,CAAqBC,IAArB,CAA0BR,UAA1B,CAA7C,GAAqFA,UAAU,CAACO,QAAD,CAApH;AACA;;AAED,SAAON,QAAP;AACA,CAbD","sourcesContent":["'use strict';\n\n// We define these manually to ensure they're always copied\n// even if they would move up the prototype chain\n// https://nodejs.org/api/http.html#http_class_http_incomingmessage\nconst knownProperties = [\n\t'aborted',\n\t'complete',\n\t'destroy',\n\t'headers',\n\t'httpVersion',\n\t'httpVersionMinor',\n\t'httpVersionMajor',\n\t'method',\n\t'rawHeaders',\n\t'rawTrailers',\n\t'setTimeout',\n\t'socket',\n\t'statusCode',\n\t'statusMessage',\n\t'trailers',\n\t'url'\n];\n\nmodule.exports = (fromStream, toStream) => {\n\tconst fromProperties = new Set(Object.keys(fromStream).concat(knownProperties));\n\n\tfor (const property of fromProperties) {\n\t\t// Don't overwrite existing properties.\n\t\tif (property in toStream) {\n\t\t\tcontinue;\n\t\t}\n\n\t\ttoStream[property] = typeof fromStream[property] === 'function' ? fromStream[property].bind(fromStream) : fromStream[property];\n\t}\n\n\treturn toStream;\n};\n"]},"metadata":{},"sourceType":"script"}