{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/Logger.js\";\nimport React from 'react';\nimport LogEntry from './LogEntry.js';\n\nclass Logger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.templateData = {\n      Day: {},\n      Location: {},\n      Swell: {},\n      Wind: {},\n      Tide: {},\n      Conditions: {},\n      Comments: {}\n    };\n\n    this.getStateLog = () => this.state.log;\n\n    this.loader = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"shaka\",\n      src: shakaBlack,\n      className: \"shaka shakingShaka mt-88 absolute\",\n      alt: \"js\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column height200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column height200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"logo1\",\n      src: logoRed,\n      className: \"z1 logo1 absolute logo height200 ml-100\",\n      alt: \"logoRed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      id: \"logo2\",\n      src: logoYellow,\n      className: \"z2 logo2 absolute logo height200 ml-100\",\n      alt: \"logoYellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      id: \"logo3\",\n      src: logoGreen,\n      className: \"z3 logo3 absolute logo height200 ml-100\",\n      alt: \"logoGreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column height200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    })));\n\n    this.log = this.templateData;\n    this.state = {\n      date: new Date(),\n      log: {},\n      items: [],\n      isLoaded: false\n    };\n    this.updateLog = this.updateLog.bind(this);\n    this.getStateLog = this.getStateLog.bind(this);\n  }\n\n  componentDidMount() {\n    let data;\n\n    const returnJSON = response => response.json();\n\n    const returnRejection = response => Promise.reject({\n      status: response.status,\n      data\n    });\n\n    const validate = response => response.ok ? returnJSON(response) : returnRejection(response);\n\n    const requestInit = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      cache: 'default'\n    }; //const uri = new Request('https://jsongithub.github.io/portfolio/assets/data/appData.json', requestInit);\n\n    const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json'; //const uri = 'localhost:8080/writeSurfLog.json';\n\n    fetch(uri).then(response => validate(response)).then(data => {\n      this.setState({\n        isLoaded: true,\n        items: data\n      });\n    }).catch(err => console.log(\"Something went wrong!\\n\", err));\n  }\n\n  updateLog(groupTitle, label, selected, set) {\n    this.log[groupTitle][label] = selected;\n\n    if (groupTitle !== undefined && groupTitle !== 1 && selected !== undefined && set) {\n      this.setState({\n        log: this.log\n      });\n    }\n  }\n\n  render() {\n    let {\n      isLoaded,\n      items\n    } = this.state; //console.log(`Logger => ${JSON.stringify(this.state, null, 2)}`);\n\n    let appInterface = this.loader;\n\n    if (!isLoaded) {\n      appInterface = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex3Column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex3Column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LogEntry, {\n        onChange: this.updateLog,\n        getStateLog: this.getStateLog,\n        title: \"Session Log\",\n        message: \"Add your session data\",\n        buttonLabel: \"Submit\",\n        items: items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex3Column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }));\n    }\n\n    return appInterface;\n  }\n\n}\n\nexport default Logger;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/Logger.js"],"names":["React","LogEntry","Logger","Component","constructor","props","templateData","Day","Location","Swell","Wind","Tide","Conditions","Comments","getStateLog","state","log","loader","shakaBlack","logoRed","logoYellow","logoGreen","date","Date","items","isLoaded","updateLog","bind","componentDidMount","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","requestInit","method","headers","mode","cache","uri","fetch","then","setState","catch","err","console","groupTitle","label","selected","set","undefined","render","appInterface"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LogEntry from './LogEntry.js';\n   \nclass Logger extends React.Component {\n\n    templateData = {\n        Day: {},\n        Location: {},\n        Swell: {},\n        Wind: {},\n        Tide: {},\n        Conditions: {},\n        Comments: {}\n    };\n\n    constructor(props) {\n        super(props);\n        this.log = this.templateData;\n        this.state = {\n            date: new Date(),\n            log: {},\n            items: [],\n            isLoaded: false\n        };\n        this.updateLog = this.updateLog.bind(this);\n        this.getStateLog = this.getStateLog.bind(this);\n    }\n    componentDidMount() {\n        let data\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        const requestInit = {\n            method:'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            cache: 'default'\n        };\n        //const uri = new Request('https://jsongithub.github.io/portfolio/assets/data/appData.json', requestInit);\n        const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n        //const uri = 'localhost:8080/writeSurfLog.json';\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                this.setState({\n                    isLoaded: true,\n                    items: data\n                })\n            })\n            .catch(err => console.log(\"Something went wrong!\\n\", err));\n\n    }\n\n    updateLog(groupTitle, label, selected, set) {\n        this.log[groupTitle][label] = selected;\n        if (groupTitle !== undefined && groupTitle !== 1 && selected !== undefined && set) {\n            this.setState({log: this.log});\n        }\n    }\n    getStateLog = () => this.state.log;\n    loader = () =>  <div>\n                        <img id=\"shaka\" src={shakaBlack} className=\"shaka shakingShaka mt-88 absolute\" alt=\"js\" />\n                        <div className=\"flexContainer\">\n                        <div className=\"flex3Column height200\" />\n                        <div className=\"flex3Column height200\">\n                            <img id=\"logo1\" src={logoRed} className=\"z1 logo1 absolute logo height200 ml-100\" alt=\"logoRed\" />\n                            <img id=\"logo2\" src={logoYellow} className=\"z2 logo2 absolute logo height200 ml-100\" alt=\"logoYellow\" />\n                            <img id=\"logo3\" src={logoGreen} className=\"z3 logo3 absolute logo height200 ml-100\" alt=\"logoGreen\" />\n                        </div>\n                        <div className=\"flex3Column height200\" /></div>\n                    </div>;\n    \n    render() {      \n        let {isLoaded, items} = this.state;           \n        //console.log(`Logger => ${JSON.stringify(this.state, null, 2)}`);\n        let appInterface = this.loader;\n        if (!isLoaded) {\n            appInterface = <div className=\"App-content\">\n                <div className=\"flex3Column\"></div>\n                <div className=\"flex3Column\">\n                    <LogEntry\n                        onChange={this.updateLog} \n                        getStateLog={this.getStateLog} \n                        title=\"Session Log\" \n                        message=\"Add your session data\"  \n                        buttonLabel=\"Submit\" \n                        items={items}\n                    />\n                </div>\n                <div className=\"flex3Column\"></div>\n            </div>\n            \n        }\n        return (\n            appInterface            \n        )\n    }\n    \n}\nexport default Logger;"]},"metadata":{},"sourceType":"module"}