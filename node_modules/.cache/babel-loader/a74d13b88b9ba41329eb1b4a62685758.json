{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js\";\nimport React from 'react';\nimport PostDirectory from './PostDirectory.js';\nimport logTemplateData from './LogTemplateData.js';\n\nconst LogId = ({\n  logId\n}) => {\n  const postDirectory = new PostDirectory();\n  const logID = logId === null || logId === undefined ? postDirectory.getLastId() : logId;\n  const log = JSON.parse(localStorage.getItem(logID)) === null ? logTemplateData : JSON.parse(localStorage.getItem(logID));\n  console.log(`LastLogId => render: this.state.logID: ${logID} - this.state.log: ${log}`);\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }\n  }, \"Count: \", postDirectory.length);\n};\n\nexport default LogId;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js"],"names":["React","PostDirectory","logTemplateData","LogId","logId","postDirectory","logID","undefined","getLastId","log","JSON","parse","localStorage","getItem","console","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAEzB,QAAMC,aAAa,GAAG,IAAIJ,aAAJ,EAAtB;AACA,QAAMK,KAAK,GAAIF,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKG,SAA7B,GAA0CF,aAAa,CAACG,SAAd,EAA1C,GAAsEJ,KAApF;AACA,QAAMK,GAAG,GAAIC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBP,KAArB,CAAX,MAA4C,IAA7C,GAAqDJ,eAArD,GAAuEQ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBP,KAArB,CAAX,CAAnF;AAEAQ,EAAAA,OAAO,CAACL,GAAR,CAAa,0CAAyCH,KAAM,sBAAqBG,GAAI,EAArF;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWJ,aAAa,CAACU,MAAzB,CAAP;AAEH,CATD;;AAUA,eAAeZ,KAAf","sourcesContent":["import React from 'react';\nimport PostDirectory from './PostDirectory.js';\nimport logTemplateData from './LogTemplateData.js'\n\nconst LogId = ({ logId }) => {\n    \n    const postDirectory = new PostDirectory();\n    const logID = (logId === null || logId === undefined) ? postDirectory.getLastId() : logId;\n    const log = (JSON.parse(localStorage.getItem(logID)) === null) ? logTemplateData : JSON.parse(localStorage.getItem(logID));\n     \n    console.log(`LastLogId => render: this.state.logID: ${logID} - this.state.log: ${log}`);\n    return <p>Count: {postDirectory.length}</p> \n    \n}\nexport default LogId;"]},"metadata":{},"sourceType":"module"}