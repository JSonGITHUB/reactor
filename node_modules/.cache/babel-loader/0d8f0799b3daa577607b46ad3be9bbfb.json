{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/WindDirection.js\";\nimport React, { useState, useEffect } from 'react';\nimport N from '../../assets/images/windN.png';\nimport NE from '../../assets/images/windNE.png';\nimport E from '../../assets/images/windE.png';\nimport SE from '../../assets/images/windSE.png';\nimport S from '../../assets/images/windS.png';\nimport SW from '../../assets/images/windSW.png';\nimport W from '../../assets/images/windW.png';\nimport NW from '../../assets/images/windNW.png';\n\nconst WindDirection = ({\n  columns,\n  setWind\n}) => {\n  const [status, setStatus] = useState({\n    columns: columns,\n    station: null,\n    speed: null,\n    angle: null,\n    direction: null,\n    gusts: null\n  });\n\n  const getWindData = () => {\n    console.log(`getWind ->`);\n    let data;\n\n    const returnJSON = response => response.json();\n\n    const returnRejection = response => Promise.reject({\n      status: response.status,\n      data\n    });\n\n    const validate = response => response.ok ? returnJSON(response) : returnRejection(response);\n\n    let getCurrentTime = new Date();\n    const year = getCurrentTime.getFullYear();\n    const currentMonth = getCurrentTime.getMonth() + 1;\n    const month = currentMonth < 10 ? `0${currentMonth}` : currentMonth;\n    const currentDate = getCurrentTime.getDate();\n    const date = currentDate < 10 ? `0${currentDate}` : currentDate;\n    const currentHour = getCurrentTime.getHours();\n    const hours = currentHour < 10 ? `0${currentHour}` : currentHour;\n    const startHour = currentHour - 1 < 10 ? `0${currentHour - 1}` : currentHour - 1;\n    const currentMinutes = getCurrentTime.getMinutes();\n    const minutes = currentMinutes < 10 ? `0${currentMinutes}` : currentMinutes;\n    const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n    const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n    getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n    console.log(`Wind   - getStartTime: ${getStartTime} => getEndTime: ${getEndTime}`);\n    const uriWind = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getStartTime}&end_date=${getEndTime}&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n    const uriWindTest = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2020:00&end_date=20200520%2020:00&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n    const tri = 'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?date=latest&station=9410230&product=wind&time_zone=lst&units=english&format=json';\n    const uri = tri;\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\"; //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n\n    fetch(proxyurl + uri).then(response => validate(response)).then(data => {\n      console.log(`WindDirection => direction: ${JSON.stringify(data.data[data.data.length - 1], null, 2)}`);\n      setWind(data.data[data.data.length - 1].dr, data.data[data.data.length - 1].d, data.data[data.data.length - 1].s, data.data[data.data.length - 1].g);\n      setStatus(prevState => ({ ...prevState,\n        station: data.metadata.name,\n        speed: data.data[data.data.length - 1].s,\n        angle: data.data[data.data.length - 1].d,\n        direction: data.data[data.data.length - 1].dr,\n        gusts: data.data[data.data.length - 1].g\n      }));\n    }).catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n  };\n  /*\n  {\n      \"metadata\":{\n          \"id\":\"9410230\",\n          \"name\":\"La Jolla\",\n          \"lat\":\"32.8669\",\n          \"lon\":\"-117.2571\"\n      }, \n      \"data\": [\n          {\n              \"t\":\"2020-05-20 20:00\", \n              \"s\":\"5.25\", \n              \"d\":\"313.00\",\n               \"dr\":\"NW\", \n               \"g\":\"7.39\", \n               \"f\":\"0,0\"\n          }\n      ]\n  }\n  */\n\n\n  useEffect(() => {\n    getWindData();\n    const timerID = setInterval(() => getWindData(), 300000);\n    return function cleanUp() {\n      clearInterval(timerID);\n    };\n  }, []);\n  /*\n  Water Level: 2.01 ft Above MLLW\n  Next Tide at 3:09 PM: Low 1.70 ft\n  Gusting to: 12.3 kts from WSW\n  */\n\n  const getWindIcon = () => {\n    const windDirection = status.direction;\n    const classes = \"shaka r-20 p-2 bg-white\";\n\n    if (windDirection === \"N\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: N,\n        className: classes,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"NE\" || windDirection === \"NNE\" || windDirection === \"ENE\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: NE,\n        className: classes,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"E\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: E,\n        className: classes,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"SE\" || windDirection === \"SSE\" || windDirection === \"ESE\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: SE,\n        className: classes,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"S\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: S,\n        className: classes,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"SW\" || windDirection === \"SSW\" || windDirection === \"WSW\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: SW,\n        className: classes,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"W\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: W,\n        className: classes,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 20\n        }\n      });\n    } else if (windDirection === \"NW\" || windDirection === \"NNW\" || windDirection === \"WNW\") {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: NW,\n        className: classes,\n        alt: windDirection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  const getCurrentWind = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"r-10 m-5 p-10 bg-lite white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, getWindIcon()), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, `${status.direction} ${Number(status.angle).toFixed(0)}Â°`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, `${Number(status.speed).toFixed(0)}-${Number(status.gusts).toFixed(0)}`, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"greet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 96\n      }\n    }, \"knots\")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 12\n    }\n  }, getCurrentWind());\n};\n\nexport default WindDirection;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/WindDirection.js"],"names":["React","useState","useEffect","N","NE","E","SE","S","SW","W","NW","WindDirection","columns","setWind","status","setStatus","station","speed","angle","direction","gusts","getWindData","console","log","data","returnJSON","response","json","returnRejection","Promise","reject","validate","ok","getCurrentTime","Date","year","getFullYear","currentMonth","getMonth","month","currentDate","getDate","date","currentHour","getHours","hours","startHour","currentMinutes","getMinutes","minutes","getEndTime","getStartTime","uriWind","uriWindTest","tri","uri","proxyurl","fetch","then","JSON","stringify","length","dr","d","s","g","prevState","metadata","name","catch","err","window","location","pathname","timerID","setInterval","cleanUp","clearInterval","getWindIcon","windDirection","classes","getCurrentWind","Number","toFixed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport N from '../../assets/images/windN.png';\nimport NE from '../../assets/images/windNE.png';\nimport E from '../../assets/images/windE.png';\nimport SE from '../../assets/images/windSE.png';\nimport S from '../../assets/images/windS.png';\nimport SW from '../../assets/images/windSW.png';\nimport W from '../../assets/images/windW.png';\nimport NW from '../../assets/images/windNW.png';\n\nconst WindDirection = ({columns, setWind}) => {\n    \n    const [status, setStatus] = useState({\n        columns: columns,\n        station: null,\n        speed: null,\n        angle: null,\n        direction: null,\n        gusts: null\n    });\n            \n    const getWindData = () => {\n        console.log(`getWind ->`);\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        let getCurrentTime = new Date();\n        const year = getCurrentTime.getFullYear();\n        const currentMonth = getCurrentTime.getMonth()+1;\n        const month = ((currentMonth)<10) ? `0${(currentMonth)}` : currentMonth;\n        const currentDate = getCurrentTime.getDate();\n        const date = (currentDate<10) ? `0${currentDate}` : currentDate;\n        const currentHour = getCurrentTime.getHours();\n        const hours = (currentHour<10) ? `0${currentHour}` : currentHour;\n        const startHour = ((currentHour-1)<10) ? `0${(currentHour-1)}` : (currentHour-1);\n        const currentMinutes = getCurrentTime.getMinutes();\n        const minutes = (currentMinutes<10) ? `0${currentMinutes}` : currentMinutes;\n        const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n        getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        console.log(`Wind   - getStartTime: ${getStartTime} => getEndTime: ${getEndTime}`)\n        const uriWind = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getStartTime}&end_date=${getEndTime}&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriWindTest = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2020:00&end_date=20200520%2020:00&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const tri = 'https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?date=latest&station=9410230&product=wind&time_zone=lst&units=english&format=json'\n        const uri = tri;\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n        //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        fetch(proxyurl + uri)\n            .then(response => validate(response))\n            .then(data => {\n                console.log(`WindDirection => direction: ${JSON.stringify(data.data[data.data.length - 1],null,2)}`)\n                setWind(data.data[data.data.length - 1].dr, data.data[data.data.length - 1].d, data.data[data.data.length - 1].s, data.data[data.data.length - 1].g)\n                setStatus(prevState => ({\n                    ...prevState,\n                    station: data.metadata.name,\n                    speed: data.data[data.data.length - 1].s,\n                    angle: data.data[data.data.length - 1].d,\n                    direction: data.data[data.data.length - 1].dr,\n                    gusts: data.data[data.data.length - 1].g\n                }))\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n\n    }\n    /*\n    {\n        \"metadata\":{\n            \"id\":\"9410230\",\n            \"name\":\"La Jolla\",\n            \"lat\":\"32.8669\",\n            \"lon\":\"-117.2571\"\n        }, \n        \"data\": [\n            {\n                \"t\":\"2020-05-20 20:00\", \n                \"s\":\"5.25\", \n                \"d\":\"313.00\",\n                 \"dr\":\"NW\", \n                 \"g\":\"7.39\", \n                 \"f\":\"0,0\"\n            }\n        ]\n    }\n    */\n\n    useEffect(() => {   \n        getWindData();  \t\t\n        const timerID = setInterval(\n            () => getWindData(),\n            300000\n        );\n        return function cleanUp () {\n            clearInterval(timerID);\n        }\n    },[]);\n\n    /*\n    Water Level: 2.01 ft Above MLLW\n    Next Tide at 3:09 PM: Low 1.70 ft\n    Gusting to: 12.3 kts from WSW\n    */\n    const getWindIcon = () => {\n        const windDirection = status.direction;\n        const classes = \"shaka r-20 p-2 bg-white\";\n        if (windDirection === \"N\") {\n            return <img src={N} className={classes} alt={windDirection} />;\n        } else if ((windDirection === \"NE\") || (windDirection === \"NNE\") || (windDirection === \"ENE\")) {\n            return <img src={NE} className={classes} alt={windDirection} />;\n        } else if (windDirection === \"E\") {\n            return <img src={E} className={classes} alt={windDirection} />;\n        } else if ((windDirection === \"SE\") || (windDirection === \"SSE\") || (windDirection === \"ESE\")) {\n            return <img src={SE} className={classes} alt={windDirection} />;\n        } else if (windDirection === \"S\") {\n            return <img src={S} className={classes} alt={windDirection} />;\n        } else if ((windDirection === \"SW\") || (windDirection === \"SSW\") || (windDirection === \"WSW\")) {\n            return <img src={SW} className={classes} alt={windDirection} />;\n        } else if (windDirection === \"W\") {\n            return <img src={W} className={classes} alt={windDirection} />;\n        } else if ((windDirection === \"NW\") || (windDirection === \"NNW\") || (windDirection === \"WNW\")) {\n            return <img src={NW} className={classes} alt={windDirection} />;\n        }\n    }\n    const getCurrentWind = () => {\n        return (\n            <div className=\"r-10 m-5 p-10 bg-lite white\">\n                <div>{getWindIcon()}</div>\n                <div>{`${status.direction} ${Number(status.angle).toFixed(0)}Â°`}</div>\n                <div>{`${Number(status.speed).toFixed(0)}-${Number(status.gusts).toFixed(0)}`} <span className=\"greet\">knots</span></div>\n            </div>\n        )\n    }\n    return <div>{getCurrentWind()}</div>\n}\n\nexport default WindDirection;"]},"metadata":{},"sourceType":"module"}