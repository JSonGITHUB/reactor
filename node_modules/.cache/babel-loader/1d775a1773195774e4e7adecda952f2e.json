{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js\";\nimport React, { useState } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport { openweatherAPI_KEY, openweatherAPI_BASE_URL } from '../../apis/config';\nimport getDirectionIcon from './GetDirectionIcon.js';\nimport getDirection from './GetDirection.js';\nimport weekday from './Weekday.js';\n\nconst CitySelector = () => {\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n  //Metric\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n  //Image Source\n  //http://openweathermap.org/img/wn/10d@2x.png\n  const key = openweatherAPI_KEY;\n  const baseUrl = openweatherAPI_BASE_URL;\n  const [city, setCity] = useState('Carlsbad, CA');\n  const [results, setResults] = useState('');\n  const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n\n  const displayResults = results => {\n    const list = results.list.map(item => {\n      const main = item.main;\n\n      const fahrenheit = k => (k - 273.15) * (9 / 5) + 32;\n\n      const temp = fahrenheit(main.temp).toFixed(1);\n      const temp_min = fahrenheit(main.temp_min).toFixed(1);\n      const temp_max = fahrenheit(main.temp_max).toFixed(1);\n      const feels_like = `feels like: ${fahrenheit(main.feels_like).toFixed(1)}Â°`;\n      const temperature = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow bold mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }\n      }, \"temperature: \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 p-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }\n      }, temp, \"\\xB0\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"copyright\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }\n      }, temp_min, \"\\xB0\")));\n      const humidity = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 30\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow bold mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }\n      }, \"humidity: \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 p-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }\n      }, main.humidity, \"%\"));\n      const weather = item.weather[0];\n      const mainDescription = weather.main;\n      const description = weather.description;\n      const icon = weather.icon;\n      const wind = item.wind;\n\n      const windSpeed = () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 37\n        }\n      }, wind.speed.toFixed(0), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"copyright\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 41\n        }\n      }, \" mph\"));\n\n      const windDirection = () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }\n      }, wind.deg, \"\\xB0\");\n\n      const windDisplay = () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow bold mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 45\n        }\n      }, \"wind: \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 p-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 m-5 pt-5 pb-5 bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 49\n        }\n      }, getDirectionIcon(getDirection(wind.deg))), getDirection(wind.deg), windDirection(), windSpeed()));\n\n      const visibility = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow bold mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 37\n        }\n      }, \"visibility: \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 p-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 37\n        }\n      }, item.visibility, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"copyright\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 41\n        }\n      }, \" ft\")));\n\n      const period = () => item.dt_txt;\n\n      console.log(`period: ${period()}`);\n\n      const momentArray = () => period().split(' ');\n\n      console.log(`momentArray: ${momentArray()[0]}`);\n      const date = momentArray()[0];\n      console.log(`date: ${date}`);\n      const dateArray = date.split('-');\n      console.log(`Day: ${dateArray[2]}`);\n      const someDate = new Date(date);\n      console.log(`someDate: ${someDate}`); //new Date('2011-04-11T10:20:30Z').\n      //.toUTCString(),\n\n      const year = dateArray[0];\n      const month = dateArray[1];\n      const day = dateArray[2];\n      const timeArray = momentArray()[1].split(':');\n      const hour = timeArray[0];\n      const getHour = hour > 12 ? hour - 12 : hour;\n      const timeOfDay = hour > 12 ? 'pm' : 'am';\n      const minutes = timeArray[1];\n      const getTime = `${getHour}:${minutes}`;\n      const time = getTime;\n      const displayDate = `${month} ${day} ${year}`;\n      const cards = [temperature, windDisplay(), humidity, visibility];\n\n      const card = matchKind => /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey('card'),\n        className: \"flex4Column bg-lite mr-5 ml-5 p-10 r-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }\n      }, matchKind));\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"width100Percant p-10 m-20 r-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow p-10 navBranding\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, weekday(day)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greet color-neogreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, displayDate), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greet color-neogreen mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, time, \" \", timeOfDay), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bg-green r-10 p-10 ml-5 mr-5 mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow navBranding p-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, mainDescription), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greet color-neogreen shadow p-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }\n      }, description)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"width100Percent flexContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, cards.map(item => card(item))));\n    });\n    console.log(`display: ${JSON.stringify(results, null, 2)}`);\n    setResults(list);\n  };\n\n  const onSearch = () => {\n    fetch(`${baseUrl}${urlEnd}${key}`).then(response => response.json()) //        .then((result) => console.log(`${JSON.stringify(result,null, 2)}`))\n    .then(results => displayResults(results));\n  };\n\n  const onKeyDown = event => {\n    if (event.keyCode === 13) {\n      onSearch();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"navBranding color-yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Search your city\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyDown: onKeyDown,\n    value: city,\n    placeholder: \"Enter city\",\n    onChange: event => setCity(event.target.value),\n    className: \"greet p-20 r-10 w-200 brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSearch,\n    className: \"ml-5 greet p-20 r-10 w-200 bg-green brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Check Weather\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"white shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, results));\n};\n\nexport default CitySelector;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js"],"names":["React","useState","getKey","openweatherAPI_KEY","openweatherAPI_BASE_URL","getDirectionIcon","getDirection","weekday","CitySelector","key","baseUrl","city","setCity","results","setResults","urlEnd","displayResults","list","map","item","main","fahrenheit","k","temp","toFixed","temp_min","temp_max","feels_like","temperature","humidity","weather","mainDescription","description","icon","wind","windSpeed","speed","windDirection","deg","windDisplay","visibility","period","dt_txt","console","log","momentArray","split","date","dateArray","someDate","Date","year","month","day","timeArray","hour","getHour","timeOfDay","minutes","getTime","time","displayDate","cards","card","matchKind","JSON","stringify","onSearch","fetch","then","response","json","onKeyDown","event","keyCode","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport { openweatherAPI_KEY, openweatherAPI_BASE_URL } from '../../apis/config';\nimport getDirectionIcon from './GetDirectionIcon.js';\nimport getDirection from './GetDirection.js';\nimport weekday from './Weekday.js';\n\nconst CitySelector = () => {\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n    //Metric\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n    //Image Source\n    //http://openweathermap.org/img/wn/10d@2x.png\n    const key = openweatherAPI_KEY;\n    const baseUrl = openweatherAPI_BASE_URL;\n\n    const [city, setCity] = useState('Carlsbad, CA');\n    const [results, setResults] = useState('');\n    const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n\n    const displayResults = (results) => {\n\n        const list = results.list.map((item) => {\n            const main = item.main;\n            const fahrenheit = (k) => ((k - 273.15) * (9/5) + 32);\n            const temp = fahrenheit(main.temp).toFixed(1);\n            const temp_min = fahrenheit(main.temp_min).toFixed(1);\n            const temp_max = fahrenheit(main.temp_max).toFixed(1);\n            const feels_like = `feels like: ${fahrenheit(main.feels_like).toFixed(1)}Â°`;\n            const temperature = <div>\n                            <div className='color-yellow bold mb-10'>temperature: </div>\n                            <div className='r-5 p-10 bg-dkGreen'>\n                                {temp}Â°<br/>\n                                <span className='copyright'>{temp_min}Â°</span>\n                            </div>\n                        </div>;\n            \n            const humidity = <div>\n                                <div className='color-yellow bold mb-10'>humidity: </div>\n                                <div className='r-5 p-10 bg-dkGreen'>\n                                    {main.humidity}%\n                                </div>\n                            </div>\n            const weather = item.weather[0];\n            const mainDescription = weather.main;\n            const description = weather.description;\n            const icon = weather.icon;\n            const wind = item.wind;\n            const windSpeed = () => <div>\n                                        {wind.speed.toFixed(0)}\n                                        <span className='copyright'> mph</span>\n                                    </div>;\n            \n            const windDirection = () => <div>{wind.deg}Â°</div>;\n            const windDisplay = () => <div>\n                                            <div className='color-yellow bold mb-10'>wind: </div>\n                                            <div className='r-5 p-10 bg-dkGreen'>\n                                                <div className=\"r-5 m-5 pt-5 pb-5 bg-white\">\n                                                    {getDirectionIcon(getDirection(wind.deg))}\n                                                </div>\n                                                {getDirection(wind.deg)}\n                                                {windDirection()}\n                                                {windSpeed()}\n                                            </div>\n                                        </div>\n            const visibility = <div>\n                                    <div className='color-yellow bold mb-10'>visibility: </div>\n                                    <div className='r-5 p-10 bg-dkGreen'>\n                                        {item.visibility}\n                                        <span className='copyright'> ft</span>\n                                    </div>\n                            </div>;\n            const period = () => item.dt_txt;\n            console.log(`period: ${period()}`)\n            const momentArray = () => period().split(' ');\n            console.log(`momentArray: ${momentArray()[0]}`)\n            const date = momentArray()[0];\n            console.log(`date: ${date}`)\n            const dateArray = date.split('-');\n            console.log(`Day: ${dateArray[2]}`);\n            const someDate = new Date(date);\n            console.log(`someDate: ${someDate}`);\n            //new Date('2011-04-11T10:20:30Z').\n            //.toUTCString(),\n            const year = dateArray[0];\n            const month = dateArray[1];\n            const day = dateArray[2];\n            const timeArray = momentArray()[1].split(':');\n            const hour = timeArray[0];\n            const getHour = (hour>12) ? (hour-12) : hour;\n            const timeOfDay = (hour>12) ? 'pm' : 'am';\n            const minutes = timeArray[1];\n            const getTime = `${getHour}:${minutes}`;\n            const time = getTime;\n            const displayDate = `${month} ${day} ${year}`\n            const cards = [temperature, windDisplay(), humidity, visibility]\n\n            const card = (matchKind) => <div key={getKey('card')} className='flex4Column bg-lite mr-5 ml-5 p-10 r-10'>\n                            {/*this.getMatchIcon(matchKind)*/}\n                            <div className='greet'>{matchKind}</div>\n                        </div>;\n            return (\n                <div className='width100Percant p-10 m-20 r-10 bg-dkGreen'>\n                    <div className='color-yellow p-10 navBranding'>{weekday(day)}</div>\n                    <div className='greet color-neogreen'>{displayDate}</div>\n                    <div className='greet color-neogreen mb-20'>{time} {timeOfDay}</div>\n                    <div className='bg-green r-10 p-10 ml-5 mr-5 mb-10'>\n                        <div className='color-yellow navBranding p-5'>{mainDescription}</div>\n                        <div className='greet color-neogreen shadow p-5'>{description}</div>\n                    </div>\n                    <div className='width100Percent flexContainer'>\n                        {cards.map((item) => card(item))}\n                    </div>\n                </div>\n            )\n        })\n        console.log(`display: ${JSON.stringify(results, null, 2)}`)\n        setResults(list)\n    }\n\n    const onSearch = () => {\n        fetch(`${baseUrl}${urlEnd}${key}`)\n        .then((response) => response.json())\n//        .then((result) => console.log(`${JSON.stringify(result,null, 2)}`))\n        .then((results) => displayResults(results));\n    };\n    const onKeyDown = (event) => {\n        if (event.keyCode === 13) {\n            onSearch();\n        }\n    };\n    return (\n        <div>\n            <h1 className='navBranding color-yellow'>Search your city</h1>\n            <input onKeyDown={onKeyDown} value={city} placeholder='Enter city'\n                    onChange={(event) => setCity(event.target.value)} className='greet p-20 r-10 w-200 brdr-green'/>\n            <button onClick={onSearch} className='ml-5 greet p-20 r-10 w-200 bg-green brdr-green'>\n                Check Weather\n            </button>\n            <div className='white shadow'>{results}</div>\n        </div>\n    );\n};\n\nexport default CitySelector;"]},"metadata":{},"sourceType":"module"}