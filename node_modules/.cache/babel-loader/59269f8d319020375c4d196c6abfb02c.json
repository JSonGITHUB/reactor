{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/AirTemp.js\";\nimport React from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport Loader from '../utils/Loader.js';\n\nclass AirTemp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAirTempData = () => {\n      let data;\n\n      const returnJSON = response => response.json();\n\n      const returnRejection = response => Promise.reject({\n        status: response.status,\n        data\n      });\n\n      const validate = response => response.ok ? returnJSON(response) : returnRejection(response);\n\n      let getCurrentTime = new Date(); //20200520%2018:24\n      //getCurrentTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${(getCurrentTime.getHours())}:${getCurrentTime.getMinutes()}`\n\n      getCurrentTime = `${getCurrentTime.getFullYear()}${getCurrentTime.getMonth() + 1 < 10 ? `0${getCurrentTime.getMonth() + 1}` : getCurrentTime.getMonth() + 1}${getCurrentTime.getDate() < 10 ? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${getCurrentTime.getHours()}:00`; //getCurrentTime = \"20200520%2018:24\";\n\n      console.log(`getCurrentTime: ${getCurrentTime} ===> 20200520%2018:24`);\n      const airTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=air_temperature&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`; //`https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2018:24&end_date=20200520%2018:24&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`\n\n      fetch(airTempuri).then(response => validate(response)).then(data => {\n        this.setState({\n          temp: data.data[0].v\n        });\n      }).catch(err => console.log(`Something went wrong!\\nuri: ${airTempuri} \\npath: ${window.location.pathname}\\n`, err));\n    };\n\n    this.getCurrentTemp = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-white mt-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 28\n      }\n    }, \"Air Temp: \", this.state.temp);\n\n    this.percent = 'twentyfivePercent mt--70 mb--70';\n\n    this.loading = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: this.percent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      isMotionOn: this.props.isMotionOn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }));\n\n    this.state = {\n      temp: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getAirTempData();\n    this.timerID = setInterval(() => this.tick(), 10000);\n  }\n\n  tick() {\n    console.log(`getAirTemp ->`);\n    this.getAirTempData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-yellow greet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    }, this.getCurrentTemp());\n  }\n\n}\n\nexport default AirTemp;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/AirTemp.js"],"names":["React","Dialog","Loader","AirTemp","Component","constructor","props","getAirTempData","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","getCurrentTime","Date","getFullYear","getMonth","getDate","getHours","console","log","airTempuri","fetch","then","setState","temp","v","catch","err","window","location","pathname","getCurrentTemp","state","percent","loading","isMotionOn","componentDidMount","timerID","setInterval","tick","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMnBC,cANmB,GAMF,MAAM;AACnB,UAAIC,IAAJ;;AACA,YAAMC,UAAU,GAAIC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAjC;;AACA,YAAMC,eAAe,GAAIF,QAAD,IAAcG,OAAO,CAACC,MAAR,CAAe;AAACC,QAAAA,MAAM,EAAEL,QAAQ,CAACK,MAAlB;AAA0BP,QAAAA;AAA1B,OAAf,CAAtC;;AACA,YAAMQ,QAAQ,GAAIN,QAAD,IAAeA,QAAQ,CAACO,EAAV,GAAgBR,UAAU,CAACC,QAAD,CAA1B,GAAuCE,eAAe,CAACF,QAAD,CAArF;;AACA,UAAIQ,cAAc,GAAG,IAAIC,IAAJ,EAArB,CALmB,CAKa;AAChC;;AACAD,MAAAA,cAAc,GAAI,GAAGA,cAAc,CAACE,WAAf,EAA8B,GAAIF,cAAc,CAACG,QAAf,KAA0B,CAA3B,GAA8B,EAA/B,GAAsC,IAAIH,cAAc,CAACG,QAAf,KAA0B,CAAG,EAAvE,GAA4EH,cAAc,CAACG,QAAf,KAA0B,CAAG,GAAGH,cAAc,CAACI,OAAf,KAAyB,EAA1B,GAAgC,IAAGJ,cAAc,CAACI,OAAf,EAAyB,EAA5D,GAAgEJ,cAAc,CAACI,OAAf,EAAyB,MAAMJ,cAAc,CAACK,QAAf,EAA2B,KAA1R,CAPmB,CAQnB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBP,cAAe,wBAA9C;AACA,YAAMQ,UAAU,GAAI,+DAA8DR,cAAe,aAAYA,cAAe,0HAA5H,CAVmB,CAWnB;;AACAS,MAAAA,KAAK,CAACD,UAAD,CAAL,CACKE,IADL,CACUlB,QAAQ,IAAIM,QAAQ,CAACN,QAAD,CAD9B,EAEKkB,IAFL,CAEUpB,IAAI,IAAI;AACV,aAAKqB,QAAL,CAAc;AACVC,UAAAA,IAAI,EAAEtB,IAAI,CAACA,IAAL,CAAU,CAAV,EAAauB;AADT,SAAd;AAGH,OANL,EAOKC,KAPL,CAOWC,GAAG,IAAIT,OAAO,CAACC,GAAR,CAAa,+BAA8BC,UAAW,YAAWQ,MAAM,CAACC,QAAP,CAAgBC,QAAS,IAA1F,EAA+FH,GAA/F,CAPlB;AAQH,KA1BkB;;AAAA,SAsCnBI,cAtCmB,GAsCF,mBAAM;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA8C,KAAKC,KAAL,CAAWR,IAAzD,CAtCJ;;AAAA,SAuCnBS,OAvCmB,GAuCT,iCAvCS;;AAAA,SAwCnBC,OAxCmB,GAwCT,mBAAM;AAAK,MAAA,SAAS,EAAE,KAAKD,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAE,KAAKjC,KAAL,CAAWmC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,CAxCG;;AAEf,SAAKH,KAAL,GAAa;AACTR,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAsBDY,EAAAA,iBAAiB,GAAG;AAChB,SAAKnC,cAAL;AACA,SAAKoC,OAAL,GAAeC,WAAW,CACtB,MAAM,KAAKC,IAAL,EADgB,EAEtB,KAFsB,CAA1B;AAIH;;AACDA,EAAAA,IAAI,GAAG;AACHrB,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAb;AACA,SAAKlB,cAAL;AACH;;AAMDuC,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKT,cAAL,EADF,CAAP;AAGH;;AAhDiC;;AAmDtC,eAAelC,OAAf","sourcesContent":["import React from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport Loader from '../utils/Loader.js';\n\nclass AirTemp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            temp: 0,\n        }\n    }\n    getAirTempData = () => {\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        let getCurrentTime = new Date();//20200520%2018:24\n        //getCurrentTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${(getCurrentTime.getHours())}:${getCurrentTime.getMinutes()}`\n        getCurrentTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${(getCurrentTime.getHours())}:00`\n        //getCurrentTime = \"20200520%2018:24\";\n        console.log(`getCurrentTime: ${getCurrentTime} ===> 20200520%2018:24`)\n        const airTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=air_temperature&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        //`https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2018:24&end_date=20200520%2018:24&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`\n        fetch(airTempuri)\n            .then(response => validate(response))\n            .then(data => {\n                this.setState({\n                    temp: data.data[0].v\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${airTempuri} \\npath: ${window.location.pathname}\\n`, err));\n    }\n    componentDidMount() {\n        this.getAirTempData();\n        this.timerID = setInterval(\n            () => this.tick(),\n            10000\n        );\n    }\n    tick() {\n        console.log(`getAirTemp ->`);\n        this.getAirTempData();\n    }\n    getCurrentTemp = () => <div className=\"color-white mt-20\">Air Temp: {this.state.temp}</div>;\n    percent = 'twentyfivePercent mt--70 mb--70';\n    loading = () => <div className={this.percent}>\n                <Loader isMotionOn={this.props.isMotionOn}/>\n            </div>;\n    render() {\n        return <div className=\"color-yellow greet\">\n                {this.getCurrentTemp()}\n            </div>\n    };\n}\n\nexport default AirTemp;"]},"metadata":{},"sourceType":"module"}