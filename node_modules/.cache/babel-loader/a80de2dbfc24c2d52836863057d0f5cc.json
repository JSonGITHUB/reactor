{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/LogEntry.js\";\nimport React from 'react';\nimport Dialog from './functional/Dialog.js';\nimport shakaBlack from './assets/images/shakaBlack.png';\nimport thumbsUp from './assets/images/ThumbsUp.png';\nimport thumbsDown from './assets/images/ThumbsDown.png';\nimport Selector from './Forms/FunctionalSelector.js';\nimport RadioSelector from './Forms/FormRadio.js';\nimport DateTimePicker from 'react-datetime-picker';\nimport DatePicker from 'react-date-picker';\n\nclass LogEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.items = () => this.state.items;\n\n    this.defaultSelection = item => Math.round(item.selections.length / 2);\n\n    this.radioItems = (item, groupTitle) => /*#__PURE__*/React.createElement(RadioSelector, {\n      header: groupTitle,\n      groupTitle: groupTitle,\n      selected: Math.floor(item.selections.length / 2),\n      label: item.description,\n      items: item.selections,\n      onChange: this.handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 40\n      }\n    });\n\n    this.selector = (item, groupTitle) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radius-10 p-20 bg-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(Selector, {\n      groupTitle: groupTitle,\n      selected: this.defaultSelection(item),\n      label: item.description,\n      items: item.selections,\n      onChange: this.handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }));\n\n    this.radio = (item, groupTitle) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radius-10 bg-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 35\n      }\n    }, this.radioItems(item, groupTitle));\n\n    this.group = item => item.group;\n\n    this.selectionInterface = (item, groupTitle) => item.type === \"radio\" ? this.radio(item, groupTitle) : this.selector(item, groupTitle);\n\n    this.groups = () => this.items().map(item => {\n      const getKey = () => item.description.toString().toUpperCase() + Math.round(Math.random() * 100);\n\n      const headerClasses = 'subHeader color-yellow';\n      const selectorClasses = \"greet p-20 bg-vdk-green flex3Column\";\n      const groupClasses = \"flexContainer radius-10\";\n      const description = item.description;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(),\n        className: headerClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, item.description), /*#__PURE__*/React.createElement(\"div\", {\n        className: groupClasses,\n        key: getKey(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, this.group(item).map(group => /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(),\n        className: selectorClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }\n      }, this.selectionInterface(group, description)))));\n    });\n\n    this.categories = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 24\n      }\n    }, this.groups());\n\n    this.dateEntry = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5 subHeader color-yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexContainer bg-vdk-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      onChange: this.onDateChange,\n      value: this.state.date,\n      className: \"p-10 bg-green flex3Column radius-10 m-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 31\n      }\n    })));\n\n    this.handleSelection = this.handleSelection.bind(this);\n    this.updateNotes = this.updateNotes.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onDateChange = this.onDateChange.bind(this);\n    this.state = {\n      date: new Date(),\n      title: props.title,\n      message: props.message,\n      items: props.items,\n      buttonLabel: props.buttonLabel\n    };\n  }\n\n  handleSelection(groupTitle, label, selected) {\n    console.log(`${groupTitle} => ${label} -> ${selected}`);\n    let subStateObject = {};\n    subStateObject[label] = selected;\n    let stateObject = {};\n    stateObject[groupTitle] = subStateObject;\n    console.log(JSON.stringify(stateObject));\n\n    if (this.init) {\n      this.setState(stateObject);\n    }\n  }\n\n  updateNotes(event) {\n    this.setState({\n      notes: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert(`Your Welcome! Check console...`);\n    console.log(JSON.stringify(this.state));\n    event.preventDefault();\n  }\n\n  onDateChange(date) {\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thurdsday\", \"Friday\", \"Saturday\"];\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    const hours = hours => hours > 12 ? hours - 12 : hours;\n\n    const timeOfDay = hours => hours > 12 ? \"PM\" : \"AM\";\n\n    const month = date !== null ? date.getMonth() + 1 : false;\n    const day = date !== null ? date.getDate() : false;\n    const year = date !== null ? date.getFullYear() : false;\n\n    const minutes = minutesIn => minutesIn < 10 ? 0 + String(minutesIn) : minutesIn;\n\n    const time = date !== null ? `${hours(date.getHours())}:${minutes(date.getMinutes())}${timeOfDay(date.getHours())}` : false; //this.setState({ date: date });\n    //console.log(`${JSON.stringify(date)}`)\n    //console.log(`${days[date.getDay()]}`)\n    //console.log(`${months[date.getMonth()]}`)\n    //console.log(`${date.getDate()}`)\n    //console.log(`${date.getFullYear()}`)\n    //console.log(`${hours(date.getHours())}:${date.getMinutes()}${timeOfDay(date.getHours())}`)\n    //console.log(`${date.getMonth()+1}/${date.getDate()}/${date.getFullYear()}`)\n\n    this.setState({\n      month: month,\n      day: day,\n      year: year //time: time\n\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Dialog, {\n      title: this.state.title,\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, this.dateEntry(), this.categories(), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      value: this.state.entry,\n      onChange: this.updateNotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 86\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 91\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, this.state.buttonLabel)));\n  }\n\n}\n\nexport default LogEntry;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/LogEntry.js"],"names":["React","Dialog","shakaBlack","thumbsUp","thumbsDown","Selector","RadioSelector","DateTimePicker","DatePicker","LogEntry","Component","constructor","props","items","state","defaultSelection","item","Math","round","selections","length","radioItems","groupTitle","floor","description","handleSelection","selector","radio","group","selectionInterface","type","groups","map","getKey","toString","toUpperCase","random","headerClasses","selectorClasses","groupClasses","categories","dateEntry","onDateChange","date","bind","updateNotes","handleSubmit","Date","title","message","buttonLabel","label","selected","console","log","subStateObject","stateObject","JSON","stringify","init","setState","event","notes","target","value","alert","preventDefault","days","months","hours","timeOfDay","month","getMonth","day","getDate","year","getFullYear","minutes","minutesIn","String","time","getHours","getMinutes","render","entry"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dialog from './functional/Dialog.js';\nimport shakaBlack from './assets/images/shakaBlack.png';\nimport thumbsUp from './assets/images/ThumbsUp.png';\nimport thumbsDown from './assets/images/ThumbsDown.png';\nimport Selector from './Forms/FunctionalSelector.js';\nimport RadioSelector from './Forms/FormRadio.js';\nimport DateTimePicker from 'react-datetime-picker';\nimport DatePicker from 'react-date-picker';\n\nclass LogEntry extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.updateNotes = this.updateNotes.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n        this.state = {\n            date: new Date(),\n            title: props.title,\n            message: props.message,\n            items: props.items,\n            buttonLabel: props.buttonLabel\n        };\n    }\n\n    handleSelection(groupTitle, label, selected) {\n        console.log(`${groupTitle} => ${label} -> ${selected}`);\n        let subStateObject = {};\n        subStateObject[label] = selected;\n        let stateObject = {};\n        stateObject[groupTitle] = subStateObject;\n        console.log(JSON.stringify(stateObject))\n        if (this.init) {\n            this.setState(\n                stateObject\n            );\n        }\n    }\n    updateNotes(event) {\n        this.setState({notes: event.target.value});\n    }\n    handleSubmit(event) {\n        alert(`Your Welcome! Check console...`);\n        console.log(JSON.stringify(this.state));\n        event.preventDefault();\n    }\n    onDateChange(date) {\n        const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thurdsday\", \"Friday\", \"Saturday\"]\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n        const hours = (hours) => (hours>12) ? (hours-12) : hours;\n        const timeOfDay = (hours) => (hours>12) ? \"PM\" : \"AM\";\n        const month = (date !== null) ? date.getMonth()+1 : false;\n        const day = (date !== null) ? date.getDate() : false;\n        const year = (date !== null) ? date.getFullYear() : false;\n        const minutes = (minutesIn) => (minutesIn<10) ? (0+String(minutesIn)) : minutesIn;\n        const time = (date !== null) ? `${hours(date.getHours())}:${minutes(date.getMinutes())}${timeOfDay(date.getHours())}` : false;\n        //this.setState({ date: date });\n        //console.log(`${JSON.stringify(date)}`)\n        //console.log(`${days[date.getDay()]}`)\n        //console.log(`${months[date.getMonth()]}`)\n        //console.log(`${date.getDate()}`)\n        //console.log(`${date.getFullYear()}`)\n        //console.log(`${hours(date.getHours())}:${date.getMinutes()}${timeOfDay(date.getHours())}`)\n        //console.log(`${date.getMonth()+1}/${date.getDate()}/${date.getFullYear()}`)\n        this.setState({\n            month: month,\n            day: day,\n            year: year,\n            //time: time\n        })\n    }\n    items = () => this.state.items;\n    defaultSelection = (item) => Math.round(item.selections.length/2); \n    radioItems = (item, groupTitle) => <RadioSelector\n                    header={groupTitle}\n                    groupTitle={groupTitle} \n                    selected={Math.floor(item.selections.length/2)} \n                    label={item.description} \n                    items={item.selections} \n                    onChange={this.handleSelection}\n                />;\n    selector = (item, groupTitle) => <div className=\"radius-10 p-20 bg-green\">\n                <Selector \n                    groupTitle={groupTitle} \n                    selected={this.defaultSelection(item)} \n                    label={item.description} \n                    items={item.selections}\n                    onChange={this.handleSelection}\n                />\n            </div>;\n\n    radio = (item, groupTitle) => <div className=\"radius-10 bg-green\">\n                {this.radioItems(item, groupTitle)}\n            </div>;\n    group = (item) => item.group;\n    selectionInterface = (item, groupTitle) => (item.type === \"radio\") ? this.radio(item, groupTitle) : this.selector(item, groupTitle);\n    groups = () => this.items().map((item) => {\n        const getKey = () => item.description.toString().toUpperCase()+(Math.round(Math.random()*100));\n        const headerClasses = 'subHeader color-yellow';\n        const selectorClasses = \"greet p-20 bg-vdk-green flex3Column\";\n        const groupClasses = \"flexContainer radius-10\";\n        const description = item.description;\n        return <div key={getKey()}>\n                    <div key={getKey()} className={headerClasses}>\n                        {item.description}\n                    </div>\n                    <div className={groupClasses} key={getKey()}>\n                        {this.group(item).map((group) => \n                            <div key={getKey()} className={selectorClasses}>\n                                {this.selectionInterface(group, description)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n    })\n    categories = () => <div className='description'>{this.groups()}</div>;\n    dateEntry = () => <div>\n                        <div className='mb-5 subHeader color-yellow'>Date</div>\n                        <div className='flexContainer bg-vdk-green'>\n                            <DatePicker\n                                onChange={this.onDateChange}\n                                value={this.state.date} \n                                className='p-10 bg-green flex3Column radius-10 m-20'\n                            /><br/>\n                        </div>\n                    </div>\n    \n    render() {\n        return (\n            <Dialog title={this.state.title} message={this.state.message}>\n                <form onSubmit={this.handleSubmit}>\n                    {this.dateEntry()}\n                    {this.categories()}\n                    <br/>\n                    <textarea value={this.state.entry} onChange={this.updateNotes} /><br/><br/>\n                    <button onClick={this.handleSubmit}>\n                        {this.state.buttonLabel}\n                    </button>\n                </form>\n            </Dialog>\n        );\n    };\n}\n\nexport default LogEntry;"]},"metadata":{},"sourceType":"module"}