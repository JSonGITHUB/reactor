{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst url_1 = require(\"url\");\n\nconst is_1 = require(\"@sindresorhus/is\");\n\nfunction merge(target, ...sources) {\n  for (const source of sources) {\n    for (const [key, sourceValue] of Object.entries(source)) {\n      const targetValue = target[key];\n\n      if (is_1.default.urlInstance(targetValue) && is_1.default.string(sourceValue)) {\n        // @ts-ignore TS doesn't recognise Target accepts string keys\n        target[key] = new url_1.URL(sourceValue, targetValue);\n      } else if (is_1.default.plainObject(sourceValue)) {\n        if (is_1.default.plainObject(targetValue)) {\n          // @ts-ignore TS doesn't recognise Target accepts string keys\n          target[key] = merge({}, targetValue, sourceValue);\n        } else {\n          // @ts-ignore TS doesn't recognise Target accepts string keys\n          target[key] = merge({}, sourceValue);\n        }\n      } else if (is_1.default.array(sourceValue)) {\n        // @ts-ignore TS doesn't recognise Target accepts string keys\n        target[key] = sourceValue.slice();\n      } else {\n        // @ts-ignore TS doesn't recognise Target accepts string keys\n        target[key] = sourceValue;\n      }\n    }\n  }\n\n  return target;\n}\n\nexports.default = merge;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/node_modules/got/dist/source/utils/merge.js"],"names":["Object","defineProperty","exports","value","url_1","require","is_1","merge","target","sources","source","key","sourceValue","entries","targetValue","default","urlInstance","string","URL","plainObject","array","slice"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,KAAD,CAArB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,kBAAD,CAApB;;AACA,SAASE,KAAT,CAAeC,MAAf,EAAuB,GAAGC,OAA1B,EAAmC;AAC/B,OAAK,MAAMC,MAAX,IAAqBD,OAArB,EAA8B;AAC1B,SAAK,MAAM,CAACE,GAAD,EAAMC,WAAN,CAAX,IAAiCZ,MAAM,CAACa,OAAP,CAAeH,MAAf,CAAjC,EAAyD;AACrD,YAAMI,WAAW,GAAGN,MAAM,CAACG,GAAD,CAA1B;;AACA,UAAIL,IAAI,CAACS,OAAL,CAAaC,WAAb,CAAyBF,WAAzB,KAAyCR,IAAI,CAACS,OAAL,CAAaE,MAAb,CAAoBL,WAApB,CAA7C,EAA+E;AAC3E;AACAJ,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAc,IAAIP,KAAK,CAACc,GAAV,CAAcN,WAAd,EAA2BE,WAA3B,CAAd;AACH,OAHD,MAIK,IAAIR,IAAI,CAACS,OAAL,CAAaI,WAAb,CAAyBP,WAAzB,CAAJ,EAA2C;AAC5C,YAAIN,IAAI,CAACS,OAAL,CAAaI,WAAb,CAAyBL,WAAzB,CAAJ,EAA2C;AACvC;AACAN,UAAAA,MAAM,CAACG,GAAD,CAAN,GAAcJ,KAAK,CAAC,EAAD,EAAKO,WAAL,EAAkBF,WAAlB,CAAnB;AACH,SAHD,MAIK;AACD;AACAJ,UAAAA,MAAM,CAACG,GAAD,CAAN,GAAcJ,KAAK,CAAC,EAAD,EAAKK,WAAL,CAAnB;AACH;AACJ,OATI,MAUA,IAAIN,IAAI,CAACS,OAAL,CAAaK,KAAb,CAAmBR,WAAnB,CAAJ,EAAqC;AACtC;AACAJ,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcC,WAAW,CAACS,KAAZ,EAAd;AACH,OAHI,MAIA;AACD;AACAb,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcC,WAAd;AACH;AACJ;AACJ;;AACD,SAAOJ,MAAP;AACH;;AACDN,OAAO,CAACa,OAAR,GAAkBR,KAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\nconst is_1 = require(\"@sindresorhus/is\");\nfunction merge(target, ...sources) {\n    for (const source of sources) {\n        for (const [key, sourceValue] of Object.entries(source)) {\n            const targetValue = target[key];\n            if (is_1.default.urlInstance(targetValue) && is_1.default.string(sourceValue)) {\n                // @ts-ignore TS doesn't recognise Target accepts string keys\n                target[key] = new url_1.URL(sourceValue, targetValue);\n            }\n            else if (is_1.default.plainObject(sourceValue)) {\n                if (is_1.default.plainObject(targetValue)) {\n                    // @ts-ignore TS doesn't recognise Target accepts string keys\n                    target[key] = merge({}, targetValue, sourceValue);\n                }\n                else {\n                    // @ts-ignore TS doesn't recognise Target accepts string keys\n                    target[key] = merge({}, sourceValue);\n                }\n            }\n            else if (is_1.default.array(sourceValue)) {\n                // @ts-ignore TS doesn't recognise Target accepts string keys\n                target[key] = sourceValue.slice();\n            }\n            else {\n                // @ts-ignore TS doesn't recognise Target accepts string keys\n                target[key] = sourceValue;\n            }\n        }\n    }\n    return target;\n}\nexports.default = merge;\n"]},"metadata":{},"sourceType":"script"}