{"ast":null,"code":"import getWaveHeight from './GetWaveHeight.js';\nimport getWindOrientation from './GetWindOrientation.js';\nimport getWindMPH from './GetWindMPH.js';\nimport getSurface from './GetSurface.js';\nconst getNotes = status => {\n  console.log(`getNotes => status: ${JSON.stringify(status, null, 2)}`);\n  const {\n    height,\n    tide,\n    windDirection,\n    windGusts,\n    swell1Height,\n    swell1Angle,\n    swell1Direction,\n    swell1Interval\n  } = status;\n  let notes = `${swell1Height}(${getWaveHeight(swell1Height)})`;\n  notes = `${notes} out of the ${swell1Direction}`;\n  notes = `${notes}(${swell1Angle})`;\n  notes = `${notes} at ${swell1Interval}.`;\n  notes = `${notes} It was a ${tide} tide`;\n  notes = `${notes}(${Number(height).toFixed(0)}ft).`;\n  notes = `${notes} the wind was ${getWindOrientation(windDirection)} out of the ${windDirection} at ${getWindMPH(windGusts)}.`;\n  notes = `${notes} The conditions were ${getSurface(windGusts)}.`;\n  return notes;\n};\nexport default getNotes;","map":{"version":3,"names":["getWaveHeight","getWindOrientation","getWindMPH","getSurface","getNotes","status","console","log","JSON","stringify","height","tide","windDirection","windGusts","swell1Height","swell1Angle","swell1Direction","swell1Interval","notes","Number","toFixed"],"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/GetNotes.js"],"sourcesContent":["import getWaveHeight from './GetWaveHeight.js';\nimport getWindOrientation from './GetWindOrientation.js';\nimport getWindMPH from './GetWindMPH.js';\nimport getSurface from './GetSurface.js';\nconst getNotes = (status) => {\n    console.log(`getNotes => status: ${JSON.stringify(status, null, 2)}`)\n    const { height, tide, windDirection, windGusts, swell1Height, swell1Angle, swell1Direction, swell1Interval } = status;\n    let notes = `${swell1Height}(${getWaveHeight(swell1Height)})`;\n    notes = `${notes} out of the ${swell1Direction}`;\n    notes = `${notes}(${swell1Angle})`;\n    notes = `${notes} at ${swell1Interval}.`;\n    notes = `${notes} It was a ${tide} tide`;\n    notes = `${notes}(${Number(height).toFixed(0)}ft).`;\n    notes = `${notes} the wind was ${getWindOrientation(windDirection)} out of the ${windDirection} at ${getWindMPH(windGusts)}.`;\n    notes = `${notes} The conditions were ${getSurface(windGusts)}.`;\n    return notes;\n}\nexport default getNotes;"],"mappings":"AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,kBAAkB,MAAM,yBAAyB;AACxD,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,MAAMC,QAAQ,GAAIC,MAAM,IAAK;EACzBC,OAAO,CAACC,GAAG,CAAE,uBAAsBC,IAAI,CAACC,SAAS,CAACJ,MAAM,EAAE,IAAI,EAAE,CAAC,CAAE,EAAC,CAAC;EACrE,MAAM;IAAEK,MAAM;IAAEC,IAAI;IAAEC,aAAa;IAAEC,SAAS;IAAEC,YAAY;IAAEC,WAAW;IAAEC,eAAe;IAAEC;EAAe,CAAC,GAAGZ,MAAM;EACrH,IAAIa,KAAK,GAAI,GAAEJ,YAAa,IAAGd,aAAa,CAACc,YAAY,CAAE,GAAE;EAC7DI,KAAK,GAAI,GAAEA,KAAM,eAAcF,eAAgB,EAAC;EAChDE,KAAK,GAAI,GAAEA,KAAM,IAAGH,WAAY,GAAE;EAClCG,KAAK,GAAI,GAAEA,KAAM,OAAMD,cAAe,GAAE;EACxCC,KAAK,GAAI,GAAEA,KAAM,aAAYP,IAAK,OAAM;EACxCO,KAAK,GAAI,GAAEA,KAAM,IAAGC,MAAM,CAACT,MAAM,CAAC,CAACU,OAAO,CAAC,CAAC,CAAE,MAAK;EACnDF,KAAK,GAAI,GAAEA,KAAM,iBAAgBjB,kBAAkB,CAACW,aAAa,CAAE,eAAcA,aAAc,OAAMV,UAAU,CAACW,SAAS,CAAE,GAAE;EAC7HK,KAAK,GAAI,GAAEA,KAAM,wBAAuBf,UAAU,CAACU,SAAS,CAAE,GAAE;EAChE,OAAOK,KAAK;AAChB,CAAC;AACD,eAAed,QAAQ"},"metadata":{},"sourceType":"module"}