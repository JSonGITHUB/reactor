{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/Forms/FormRadio.js\";\nimport React from 'react';\nimport shakaBlack from '../assets/images/shakaBlack.png';\nimport thumbsUp from '../assets/images/ThumbsUp.png';\nimport thumbsDown from '../assets/images/ThumbsDown.png';\n/*\n<FormRadio \n          selected={\"Ahi\"} \n          header = {\"Poki Bowl\"} \n          items = {[\"one\", \"two\", \"three\"]}\n        />\n*/\n\nclass FormRadio extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      console.log(`${this.state.label} => ${event.target.value}`);\n      this.setState({\n        selected: event.target.id,\n        value: event.target.value\n      });\n      this.props.onChange(event.target.value, this.state.groupTitle);\n    };\n\n    this.items = props.items;\n    this.state = {\n      value: props.selected,\n      selected: props.selected,\n      select: props.selected,\n      header: props.header,\n      label: props.label,\n      groupTitle: props.groupTitle,\n      items: props.items\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  selectItems() {\n    const reportAwesome = () => this.setState({\n      selected: 0,\n      value: 'Awesome'\n    });\n\n    const reportGood = () => this.setState({\n      selected: 1,\n      value: 'Good'\n    });\n\n    const reportBad = () => this.setState({\n      selected: 2,\n      value: 'Bad'\n    });\n\n    const getIcon = (item, index, select) => {\n      const value = item.toString();\n      const displayClass = select === true ? \"shakingShaka shaka\" : \"shaka\";\n      let displayColor = value === \"Firing\" ? \"bg-neogreen\" : \"bg-yellow\";\n      displayColor = value === \"Bad\" ? \"bg-red\" : displayColor;\n      const buttonClass = displayColor + \" pt-10 pb-5 radius-10 m-5 button\";\n      let click = value === \"Firing\" ? reportAwesome : reportGood;\n      click = value === \"Bad\" ? reportBad : click;\n      let icon = value === \"Firing\" ? shakaBlack : thumbsUp;\n      icon = value === \"Bad\" ? thumbsDown : icon;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: buttonClass,\n        onClick: click,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        id: value,\n        src: icon,\n        alt: value,\n        className: displayClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 83\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: index,\n        key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n        type: \"radio\",\n        value: item.toString(),\n        onChange: this.handleChange,\n        checked: Number(this.state.selected) === Number(index) ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"description color-black ml-5\",\n        key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, item.toString())));\n    };\n\n    const icon = (item, index, select) => {\n      let iconOut = \"\";\n      iconOut = getIcon(item, index, select);\n      return iconOut;\n    };\n\n    return this.state.items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, icon(item, index, Number(this.state.selected) === Number(index) ? true : false)));\n  }\n\n  render() {\n    //console.log(`${this.state.label} => ${this.state.value}`)\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-5 p-20 m-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, this.selectItems());\n  }\n\n}\n\nexport default FormRadio;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/Forms/FormRadio.js"],"names":["React","shakaBlack","thumbsUp","thumbsDown","FormRadio","Component","constructor","props","handleChange","event","console","log","state","label","target","value","setState","selected","id","onChange","groupTitle","items","select","header","bind","selectItems","reportAwesome","reportGood","reportBad","getIcon","item","index","toString","displayClass","displayColor","buttonClass","click","icon","toLowerCase","Math","round","random","Number","iconOut","map","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport shakaBlack from '../assets/images/shakaBlack.png';\nimport thumbsUp from '../assets/images/ThumbsUp.png';\nimport thumbsDown from '../assets/images/ThumbsDown.png';\n/*\n<FormRadio \n          selected={\"Ahi\"} \n          header = {\"Poki Bowl\"} \n          items = {[\"one\", \"two\", \"three\"]}\n        />\n*/\nclass FormRadio extends React.Component {\n\n    constructor(props) {\n        super(props); \n        this.items = props.items;\n        this.state = { \n            value: props.selected,\n            selected: props.selected,\n            select: props.selected,\n            header: props.header,\n            label: props.label,\n            groupTitle: props.groupTitle,\n            items: props.items\n        }\n        this.handleChange = this.handleChange.bind(this);\n    };\n\n    handleChange = (event) => {\n        console.log(`${this.state.label} => ${event.target.value}`)\n        this.setState({\n            selected: event.target.id,\n            value: event.target.value\n        });\n        this.props.onChange(event.target.value, this.state.groupTitle);\n    }\n    selectItems() {\n        const reportAwesome = () => this.setState({\n            selected: 0,\n            value: 'Awesome'\n        });\n        const reportGood = () => this.setState({\n            selected: 1,\n            value: 'Good'\n        });\n        const reportBad = () => this.setState({\n            selected: 2,\n            value: 'Bad'\n        });\n        \n        const getIcon =(item, index, select) => {\n            const value = item.toString();\n            const displayClass = (select === true) ? \"shakingShaka shaka\" : \"shaka\";\n            \n            let displayColor = (value === \"Firing\") ? \"bg-neogreen\" : \"bg-yellow\";\n            displayColor = (value === \"Bad\") ? \"bg-red\" : displayColor;\n            \n            const buttonClass = displayColor + \" pt-10 pb-5 radius-10 m-5 button\";\n            let click = (value === \"Firing\") ? reportAwesome : reportGood;\n            click = (value === \"Bad\") ? reportBad : click;\n            \n            let icon = (value === \"Firing\") ? shakaBlack : thumbsUp;\n            icon = (value === \"Bad\") ? thumbsDown : icon;\n            \n            return <div className={buttonClass} onClick={click}>\n                <img id={value} src={icon} alt={value} className={displayClass} /><br/>\n                <div className=\"p-10\">\n                    <input id={index} key={item.toString().toLowerCase()+(Math.round(Math.random()*100))} type=\"radio\" value={item.toString()} onChange={this.handleChange} checked={Number(this.state.selected) === Number(index) ? true : false}/>\n                    <span className=\"description color-black ml-5\" key={item.toString().toLowerCase()+(Math.round(Math.random()*100))}>{item.toString()}</span>\n                </div>\n            </div>;\n        }\n\n        const icon = (item, index, select) => {\n            let iconOut = \"\";\n            iconOut = getIcon(item, index, select);\n            return iconOut;\n        } \n        \n        \n        return this.state.items.map((item, index) =>\n            <div className=\"flex3Column\" key={item.toString().toLowerCase()+(Math.round(Math.random()*100))} >\n                {icon(item, index, (Number(this.state.selected) === Number(index)) ? true : false)}\n            </div>\n        )\n\n    }\n\n    render() {\n        //console.log(`${this.state.label} => ${this.state.value}`)\n        return (\n            <div className=\"m-5 p-20 m-5\">    \n                {this.selectItems()}\n            </div>\n        );\n    };\n}\nexport default FormRadio;"]},"metadata":{},"sourceType":"module"}