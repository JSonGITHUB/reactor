{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js\";\nimport React, { useState } from 'react';\nimport { openweatherAPI_KEY, openweatherAPI_BASE_URL } from '../../apis/config';\n\nconst CitySelector = () => {\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n  //Metric\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n  //Image Source\n  //http://openweathermap.org/img/wn/10d@2x.png\n  const key = openweatherAPI_KEY;\n  const baseUrl = openweatherAPI_BASE_URL;\n  const [city, setCity] = useState('London');\n  const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n\n  const onSearch = () => {\n    fetch(`${baseUrl}${urlEnd}${key}`).then(response => response.json()).then(result => console.log(`${JSON.stringify(result, 2, null)}`));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Search your city\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: city,\n    placeholder: \"Enter city\",\n    onChange: event => setCity(event.target.value),\n    className: \"greet p-20 r-10 w-200 brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSearch,\n    className: \"ml-5 greet p-20 r-10 w-200 bg-green brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Check Weather\"));\n};\n\nexport default CitySelector;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js"],"names":["React","useState","openweatherAPI_KEY","openweatherAPI_BASE_URL","CitySelector","key","baseUrl","city","setCity","urlEnd","onSearch","fetch","then","response","json","result","console","log","JSON","stringify","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,kBAAT,EAA6BC,uBAA7B,QAA4D,mBAA5D;;AAGA,MAAMC,YAAY,GAAG,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA,QAAMC,GAAG,GAAGH,kBAAZ;AACA,QAAMI,OAAO,GAAGH,uBAAhB;AAEA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,QAAD,CAAhC;AACA,QAAMQ,MAAM,GAAI,wBAAuBF,IAAK,YAA5C;;AAEA,QAAMG,QAAQ,GAAG,MAAM;AACnBC,IAAAA,KAAK,CAAE,GAAEL,OAAQ,GAAEG,MAAO,GAAEJ,GAAI,EAA3B,CAAL,CACCO,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,MAAD,IAAYC,OAAO,CAACC,GAAR,CAAa,GAAEC,IAAI,CAACC,SAAL,CAAeJ,MAAf,EAAsB,CAAtB,EAAyB,IAAzB,CAA+B,EAA9C,CAFlB;AAGH,GAJD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,IAAA,KAAK,EAAER,IAAd;AAAoB,IAAA,WAAW,EAAC,YAAhC;AACQ,IAAA,QAAQ,EAAGa,KAAD,IAAWZ,OAAO,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CADpC;AAC0D,IAAA,SAAS,EAAC,kCADpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAII;AAAQ,IAAA,OAAO,EAAEZ,QAAjB;AAA2B,IAAA,SAAS,EAAC,gDAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,CADJ;AAUH,CA3BD;;AA6BA,eAAeN,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport { openweatherAPI_KEY, openweatherAPI_BASE_URL } from '../../apis/config';\n\n\nconst CitySelector = () => {\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n    //Metric\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n    //Image Source\n    //http://openweathermap.org/img/wn/10d@2x.png\n    const key = openweatherAPI_KEY;\n    const baseUrl = openweatherAPI_BASE_URL;\n\n    const [city, setCity] = useState('London');\n    const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n\n    const onSearch = () => {\n        fetch(`${baseUrl}${urlEnd}${key}`)\n        .then((response) => response.json())\n        .then((result) => console.log(`${JSON.stringify(result,2, null)}`))\n    };\n    return (\n        <div>\n            <h1>Search your city</h1>\n            <input value={city} placeholder=\"Enter city\"\n                    onChange={(event) => setCity(event.target.value)} className=\"greet p-20 r-10 w-200 brdr-green\"/>\n            <button onClick={onSearch} className=\"ml-5 greet p-20 r-10 w-200 bg-green brdr-green\">\n                Check Weather\n            </button>\n        </div>\n    );\n};\n\nexport default CitySelector;"]},"metadata":{},"sourceType":"module"}