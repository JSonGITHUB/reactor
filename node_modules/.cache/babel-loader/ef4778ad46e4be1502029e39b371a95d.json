{"ast":null,"code":"const generateKey = label => {\n  let generate = () => `${label}${Math.round(Math.random() * 100)}`;\n\n  let key = generate();\n  key = this.keyArray.includes(key) ? generate() : key;\n  this.keyArray.push(key);\n  return key;\n};\n\nexport default generateKey;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/KeyGenerator.js"],"names":["generateKey","label","generate","Math","round","random","key","keyArray","includes","push"],"mappings":"AAAA,MAAMA,WAAW,GAAIC,KAAD,IAAW;AAC3B,MAAIC,QAAQ,GAAG,MAAO,GAAED,KAAM,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,CAA+B,EAAhE;;AACA,MAAIC,GAAG,GAAGJ,QAAQ,EAAlB;AACAI,EAAAA,GAAG,GAAI,KAAKC,QAAL,CAAcC,QAAd,CAAuBF,GAAvB,CAAD,GAAgCJ,QAAQ,EAAxC,GAA6CI,GAAnD;AACA,OAAKC,QAAL,CAAcE,IAAd,CAAmBH,GAAnB;AACA,SAAOA,GAAP;AACH,CAND;;AAQA,eAAeN,WAAf","sourcesContent":["const generateKey = (label) => {\n    let generate = () => `${label}${(Math.round(Math.random()*100))}`;\n    let key = generate();\n    key = (this.keyArray.includes(key)) ? generate() : key;\n    this.keyArray.push(key);\n    return key\n}\n\nexport default generateKey;"]},"metadata":{},"sourceType":"module"}