{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/LogId.js\";\nimport React from 'react';\nimport PostDirectory from './PostDirectory.js';\n\nclass LastLogId extends React.Component {\n  constructor(props) {\n    super(props);\n    this.postDirectory = new PostDirectory();\n\n    this.generateNewLogId = () => {\n      const date = new Date();\n      const st = date.toDateString().replace(/ /g, \"\");\n      const nd = date.toLocaleTimeString().replace(/ /g, \"\");\n      localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n      const newId = `${st}${nd}`;\n      console.log(`LogId: generateNewLogId => this.state.logId: ${newId}`);\n      this.setState({\n        logId: newId\n      });\n      return newId;\n    };\n\n    this.getCurrentLogId = () => this.state.logId;\n\n    this.init = () => {\n      const logId = this.generateNewLogId();\n      console.log(`LastLogId => init: this.state.logId: ${logId}`);\n      this.setState({\n        logId: logId\n      });\n    };\n\n    this.getLocalLastRecordId = () => localStorage.getItem(\"lastPostId\");\n\n    this.lastRecordIdExists = () => this.getLocalLastRecordId() === null ? false : true;\n\n    this.lastRecordExists = () => this.lastRecordIdExists() === true && localStorage.getItem(this.getLocalLastRecordId()) !== null ? true : false;\n\n    this.getLastRecordId = () => localStorage.getItem(\"lastPostId\") === null ? this.generateNewLogId() : localStorage.getItem(\"lastPostId\");\n\n    this.getLogId = () => this.props.location.state === undefined || this.props.location.state === \"\" ? this.getLastRecordId() : this.props.location.state.logId.item;\n\n    this.templateData = {\n      Day: {\n        Date: \"2020-01-17T08:00:00.000Z\",\n        Day: 17,\n        Month: 1,\n        Year: 2020\n      },\n      Location: {\n        Break: \"Notch\"\n      },\n      Swell: {\n        Direction: \"NW\",\n        Height: \"head high\",\n        Report: \"4ft\"\n      },\n      Tide: {\n        Phase: \"High => Low\",\n        Height: \"2ft\"\n      },\n      Wind: {\n        Direction: \"NW\",\n        Orientation: \"Offshore\",\n        MPH: \"5mph\",\n        Surface: \"Glassy\"\n      },\n      Conditions: {\n        Conditions: \"Firing\"\n      },\n      Comments: {\n        \"notes\": \"Biggest crowd but plenty of sick ones...\"\n      }\n    };\n\n    this.getDate = () => this.state.log.Day.Date;\n\n    console.log(`LogId !!!!! props.logId: ${props.logId}`);\n    console.log(`LogId !!!!! postDirectory: ${JSON.stringify(this.postDirectory.getDirectory(), null, 2)}`);\n    this.state = {\n      logId: props.logId === null ? this.generateNewLogId() : props.logId,\n      log: JSON.parse(localStorage.getItem(props.logId)) === null ? this.getLogTemplate : JSON.parse(localStorage.getItem(props.logId))\n    };\n  }\n\n  render() {\n    console.log(`LastLogId => render: this.state.logId: ${this.state.logId} - this.state.log: ${this.state.log}`);\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }\n    }, \"Count: \", this.state.postDirectory.length);\n  }\n\n}\n\nexport default LastLogId;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/LogId.js"],"names":["React","PostDirectory","LastLogId","Component","constructor","props","postDirectory","generateNewLogId","date","Date","st","toDateString","replace","nd","toLocaleTimeString","localStorage","setItem","newId","console","log","setState","logId","getCurrentLogId","state","init","getLocalLastRecordId","getItem","lastRecordIdExists","lastRecordExists","getLastRecordId","getLogId","location","undefined","item","templateData","Day","Month","Year","Location","Break","Swell","Direction","Height","Report","Tide","Phase","Wind","Orientation","MPH","Surface","Conditions","Comments","getDate","JSON","stringify","getDirectory","parse","getLogTemplate","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PostDirectory from './PostDirectory.js';\nclass LastLogId extends React.Component {\n    \n    postDirectory = new PostDirectory();\n\n    generateNewLogId = () => {\n        const date = new Date()\n        const st = date.toDateString().replace(/ /g,\"\");\n        const nd = date.toLocaleTimeString().replace(/ /g,\"\");\n        localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n        const newId = `${st}${nd}`;\n        console.log(`LogId: generateNewLogId => this.state.logId: ${newId}`);\n        this.setState({\n            logId: newId\n        });\n        return newId;\n    }\n    \n    getCurrentLogId = () => this.state.logId;\n    init = () => {\n        const logId = this.generateNewLogId();\n        console.log(`LastLogId => init: this.state.logId: ${logId}`);\n        this.setState({\n            logId: logId\n        });\n    }\n\n    getLocalLastRecordId = () => localStorage.getItem(\"lastPostId\");\n    lastRecordIdExists = () => (this.getLocalLastRecordId() === null) ? false : true; \n    lastRecordExists = () => (this.lastRecordIdExists() === true && localStorage.getItem(this.getLocalLastRecordId()) !== null) ? true : false\n    getLastRecordId = () => (localStorage.getItem(\"lastPostId\") === null) ? this.generateNewLogId() : localStorage.getItem(\"lastPostId\");\n    getLogId = () => (this.props.location.state === undefined || this.props.location.state === \"\") ? this.getLastRecordId() : this.props.location.state.logId.item;\n\n    templateData = {\n        Day: {\n            Date: \"2020-01-17T08:00:00.000Z\",\n            Day: 17,\n            Month: 1,\n            Year: 2020\n        },\n        Location: {\n            Break: \"Notch\"\n        },\n        Swell: {\n            Direction: \"NW\",\n            Height: \"head high\",\n            Report: \"4ft\"\n        },\n        Tide: {\n            Phase: \"High => Low\",\n            Height: \"2ft\"\n        },\n        Wind: {\n            Direction: \"NW\",\n            Orientation: \"Offshore\",\n            MPH: \"5mph\",\n            Surface: \"Glassy\"\n        },\n        Conditions: {\n            Conditions: \"Firing\"\n        },\n        Comments: {\n            \"notes\": \"Biggest crowd but plenty of sick ones...\"\n        }\n    };\n    \n    constructor(props) {\n        super(props);\n        console.log(`LogId !!!!! props.logId: ${props.logId}`)\n        console.log(`LogId !!!!! postDirectory: ${JSON.stringify(this.postDirectory.getDirectory(),null, 2)}`)\n        this.state = {\n            logId: (props.logId === null) ? this.generateNewLogId() : props.logId,\n            log: (JSON.parse(localStorage.getItem(props.logId)) === null) ? this.getLogTemplate : JSON.parse(localStorage.getItem(props.logId))\n        }\n    }\n    getDate = () => this.state.log.Day.Date;\n    \n    render() {      \n        console.log(`LastLogId => render: this.state.logId: ${this.state.logId} - this.state.log: ${this.state.log}`);\n        return <p>Count: {this.state.postDirectory.length}</p> \n    }\n    \n}\nexport default LastLogId;"]},"metadata":{},"sourceType":"module"}