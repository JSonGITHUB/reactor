{"ast":null,"code":"import getWaveHeight from'./GetWaveHeight.js';import getWindOrientation from'./GetWindOrientation.js';import getWindMPH from'./GetWindMPH.js';import getSurface from'./GetSurface.js';var getNotes=function getNotes(status){console.log(\"getNotes => status: \".concat(JSON.stringify(status,null,2)));var height=status.height,tide=status.tide,windDirection=status.windDirection,windGusts=status.windGusts,swell1Height=status.swell1Height,swell1Angle=status.swell1Angle,swell1Direction=status.swell1Direction,swell1Interval=status.swell1Interval;var notes=\"\".concat(swell1Height,\"(\").concat(getWaveHeight(swell1Height),\")\");notes=\"\".concat(notes,\" out of the \").concat(swell1Direction);notes=\"\".concat(notes,\"(\").concat(swell1Angle,\")\");notes=\"\".concat(notes,\" at \").concat(swell1Interval,\".\");notes=\"\".concat(notes,\" It was a \").concat(tide,\" tide\");notes=\"\".concat(notes,\"(\").concat(Number(height).toFixed(0),\"ft).\");notes=\"\".concat(notes,\" the wind was \").concat(getWindOrientation(windDirection),\" out of the \").concat(windDirection,\" at \").concat(getWindMPH(windGusts),\".\");notes=\"\".concat(notes,\" The conditions were \").concat(getSurface(windGusts),\".\");return notes;};export default getNotes;","map":{"version":3,"names":["getWaveHeight","getWindOrientation","getWindMPH","getSurface","getNotes","status","console","log","concat","JSON","stringify","height","tide","windDirection","windGusts","swell1Height","swell1Angle","swell1Direction","swell1Interval","notes","Number","toFixed"],"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/GetNotes.js"],"sourcesContent":["import getWaveHeight from './GetWaveHeight.js';\nimport getWindOrientation from './GetWindOrientation.js';\nimport getWindMPH from './GetWindMPH.js';\nimport getSurface from './GetSurface.js';\nconst getNotes = (status) => {\n    console.log(`getNotes => status: ${JSON.stringify(status, null, 2)}`)\n    const { height, tide, windDirection, windGusts, swell1Height, swell1Angle, swell1Direction, swell1Interval } = status;\n    let notes = `${swell1Height}(${getWaveHeight(swell1Height)})`;\n    notes = `${notes} out of the ${swell1Direction}`;\n    notes = `${notes}(${swell1Angle})`;\n    notes = `${notes} at ${swell1Interval}.`;\n    notes = `${notes} It was a ${tide} tide`;\n    notes = `${notes}(${Number(height).toFixed(0)}ft).`;\n    notes = `${notes} the wind was ${getWindOrientation(windDirection)} out of the ${windDirection} at ${getWindMPH(windGusts)}.`;\n    notes = `${notes} The conditions were ${getSurface(windGusts)}.`;\n    return notes;\n}\nexport default getNotes;"],"mappings":"AAAA,MAAO,CAAAA,aAAa,KAAM,oBAAoB,CAC9C,MAAO,CAAAC,kBAAkB,KAAM,yBAAyB,CACxD,MAAO,CAAAC,UAAU,KAAM,iBAAiB,CACxC,MAAO,CAAAC,UAAU,KAAM,iBAAiB,CACxC,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,MAAM,CAAK,CACzBC,OAAO,CAACC,GAAG,wBAAAC,MAAA,CAAwBC,IAAI,CAACC,SAAS,CAACL,MAAM,CAAE,IAAI,CAAE,CAAC,CAAC,CAAE,CAAC,CACrE,GAAQ,CAAAM,MAAM,CAAiGN,MAAM,CAA7GM,MAAM,CAAEC,IAAI,CAA2FP,MAAM,CAArGO,IAAI,CAAEC,aAAa,CAA4ER,MAAM,CAA/FQ,aAAa,CAAEC,SAAS,CAAiET,MAAM,CAAhFS,SAAS,CAAEC,YAAY,CAAmDV,MAAM,CAArEU,YAAY,CAAEC,WAAW,CAAsCX,MAAM,CAAvDW,WAAW,CAAEC,eAAe,CAAqBZ,MAAM,CAA1CY,eAAe,CAAEC,cAAc,CAAKb,MAAM,CAAzBa,cAAc,CAC1G,GAAI,CAAAC,KAAK,IAAAX,MAAA,CAAMO,YAAY,MAAAP,MAAA,CAAIR,aAAa,CAACe,YAAY,CAAC,KAAG,CAC7DI,KAAK,IAAAX,MAAA,CAAMW,KAAK,iBAAAX,MAAA,CAAeS,eAAe,CAAE,CAChDE,KAAK,IAAAX,MAAA,CAAMW,KAAK,MAAAX,MAAA,CAAIQ,WAAW,KAAG,CAClCG,KAAK,IAAAX,MAAA,CAAMW,KAAK,SAAAX,MAAA,CAAOU,cAAc,KAAG,CACxCC,KAAK,IAAAX,MAAA,CAAMW,KAAK,eAAAX,MAAA,CAAaI,IAAI,SAAO,CACxCO,KAAK,IAAAX,MAAA,CAAMW,KAAK,MAAAX,MAAA,CAAIY,MAAM,CAACT,MAAM,CAAC,CAACU,OAAO,CAAC,CAAC,CAAC,QAAM,CACnDF,KAAK,IAAAX,MAAA,CAAMW,KAAK,mBAAAX,MAAA,CAAiBP,kBAAkB,CAACY,aAAa,CAAC,iBAAAL,MAAA,CAAeK,aAAa,SAAAL,MAAA,CAAON,UAAU,CAACY,SAAS,CAAC,KAAG,CAC7HK,KAAK,IAAAX,MAAA,CAAMW,KAAK,0BAAAX,MAAA,CAAwBL,UAAU,CAACW,SAAS,CAAC,KAAG,CAChE,MAAO,CAAAK,KAAK,CAChB,CAAC,CACD,cAAe,CAAAf,QAAQ"},"metadata":{},"sourceType":"module"}