{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/TextColorizer.js\";\nimport React from 'react';\n\nclass TextColorizer extends React.Component {\n  constructor(text) {\n    super();\n    this.colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n    this.colorIndex = -1;\n\n    this.getNextColor = () => {\n      this.colorIndex = this.colorIndex + 1; //console.log(`colorIndex: ${this.colorIndex} colors.length: ${this.colors.length}`)\n\n      return this.colors[this.colorIndex];\n    };\n\n    this.colorize = (value, index, array) => {\n      //console.log(\"index: \" + index); \n      //console.log(\"array: \" + array); \n      //console.log(\"value: \" + value);\n      const character = value;\n      const colorizedCharacter = `<span className=\"${this.getNextColor(this.colorIndex)}\">${character}</span>`;\n      return colorizedCharacter;\n    };\n\n    this.text = text.text; //console.log(`text: ${text.text}`);\n  } //    total = (text, character) => text + `<span className=\"${this.getNextColor(this.colorIndex)}\">${character}</span>`;\n\n\n  render() {\n    const span = /*#__PURE__*/React.createElement(CharacterElement, {\n      class: this.getNextColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }\n    });\n    const letters = this.text.split('');\n\n    const spans = (text, character) => text + {\n      span\n    };\n\n    console.log(\"total: \" + letters.reduce(spans)); //console.log(`letters: ${letters}`);\n    //return <div className=\"bigHeader\">{this.text.split('').reduce(spans)}</div>;\n    //return <div className=\"bigHeader\">{letters.reduce(spans)}</div>;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bigHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }\n    }, span);\n    /*\n            let button = <LogoutButton onClick={this.handleLogoutClick} />;\n        \n            return (\n              <div>\n                <Greeting isLoggedIn={isLoggedIn} />\n                {button}\n              </div>\n            );\n    */\n  }\n\n}\n\nexport default TextColorizer;\n\nfunction CharacterElement(props) {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: props.class,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/TextColorizer.js"],"names":["React","TextColorizer","Component","constructor","text","colors","colorIndex","getNextColor","colorize","value","index","array","character","colorizedCharacter","render","span","letters","split","spans","console","log","reduce","CharacterElement","props","class"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AASxCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd;AADc,SAPlBC,MAOkB,GAPT,CAAC,aAAD,EAAgB,cAAhB,EAAgC,WAAhC,CAOS;AAAA,SANlBC,UAMkB,GANL,CAAC,CAMI;;AAAA,SALlBC,YAKkB,GALH,MAAM;AACjB,WAAKD,UAAL,GAAkB,KAAKA,UAAL,GAAkB,CAApC,CADiB,CAEjB;;AACA,aAAO,KAAKD,MAAL,CAAY,KAAKC,UAAjB,CAAP;AACH,KACiB;;AAAA,SAQlBE,QARkB,GAQP,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyB;AAChC;AACA;AACA;AACA,YAAMC,SAAS,GAAGH,KAAlB;AACA,YAAMI,kBAAkB,GAAI,oBAAmB,KAAKN,YAAL,CAAkB,KAAKD,UAAvB,CAAmC,KAAIM,SAAU,SAAhG;AACA,aAAOC,kBAAP;AACH,KAfiB;;AAEd,SAAKT,IAAL,GAAYA,IAAI,CAACA,IAAjB,CAFc,CAGd;AACH,GAbuC,CAe5C;;;AAUIU,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,gBAAG,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE,KAAKR,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AACA,UAAMS,OAAO,GAAG,KAAKZ,IAAL,CAAUa,KAAV,CAAgB,EAAhB,CAAhB;;AACA,UAAMC,KAAK,GAAG,CAACd,IAAD,EAAOQ,SAAP,KAAqBR,IAAI,GAAG;AAACW,MAAAA;AAAD,KAA1C;;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYJ,OAAO,CAACK,MAAR,CAAeH,KAAf,CAAxB,EAJK,CAKL;AACA;AACA;;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BH,IAA5B,CAAP;AAGR;;;;;;;;;;AAWK;;AA/CuC;;AAkD5C,eAAed,aAAf;;AAEA,SAASqB,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,sBACI;AAAM,IAAA,SAAS,EAAEA,KAAK,CAACC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAIH","sourcesContent":["import React from 'react';\nclass TextColorizer extends React.Component {\n    text;\n    colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n    colorIndex = -1;\n    getNextColor = () => { \n        this.colorIndex = this.colorIndex + 1;\n        //console.log(`colorIndex: ${this.colorIndex} colors.length: ${this.colors.length}`)\n        return this.colors[this.colorIndex];\n    };\n    constructor(text) {\n        super();\n        this.text = text.text;\n        //console.log(`text: ${text.text}`);\n    }\n    \n//    total = (text, character) => text + `<span className=\"${this.getNextColor(this.colorIndex)}\">${character}</span>`;\n    \n    colorize = (value, index, array) => {\n        //console.log(\"index: \" + index); \n        //console.log(\"array: \" + array); \n        //console.log(\"value: \" + value);\n        const character = value;\n        const colorizedCharacter = `<span className=\"${this.getNextColor(this.colorIndex)}\">${character}</span>`;\n        return colorizedCharacter;\n    }\n    render() {\n        const span = <CharacterElement class={this.getNextColor}/>;\n        const letters = this.text.split('');\n        const spans = (text, character) => text + {span};\n        console.log(\"total: \" + letters.reduce(spans));\n        //console.log(`letters: ${letters}`);\n        //return <div className=\"bigHeader\">{this.text.split('').reduce(spans)}</div>;\n        //return <div className=\"bigHeader\">{letters.reduce(spans)}</div>;\n        return <div className=\"bigHeader\">{span}</div>;\n\n\n/*\n        let button = <LogoutButton onClick={this.handleLogoutClick} />;\n    \n        return (\n          <div>\n            <Greeting isLoggedIn={isLoggedIn} />\n            {button}\n          </div>\n        );\n*/\n\n    }\n}\n\nexport default TextColorizer;\n\nfunction CharacterElement(props) {\n    return (\n        <span className={props.class}>\n        </span>\n    );\n}\n  "]},"metadata":{},"sourceType":"module"}