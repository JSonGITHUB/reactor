{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/TextColorizer.js\";\nimport React from 'react';\n\nclass TextColorizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.class = this.props.class;\n    this.text = this.props.text;\n  }\n\n  render() {\n    let yourClassName = \"\";\n    const colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n\n    const getKey = () => {\n      const timeKey = Number(String(Date.now()).substring(7, 13));\n      const firstRandomKey = Math.random() * 10;\n      const secondRandomKey = Math.random() * 10;\n      const key = (timeKey + firstRandomKey + secondRandomKey).toFixed(3);\n      console.log(`key: ${key}`);\n      return key;\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.class,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, this.text.split('').map(function (listValue, index) {\n      yourClassName = colors[index];\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: getKey(),\n        className: yourClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 28\n        }\n      }, listValue);\n    }));\n  }\n\n}\n\nexport default TextColorizer;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/TextColorizer.js"],"names":["React","TextColorizer","Component","constructor","props","class","text","render","yourClassName","colors","getKey","timeKey","Number","String","Date","now","substring","firstRandomKey","Math","random","secondRandomKey","key","toFixed","console","log","split","map","listValue","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,KAAKD,KAAL,CAAWC,KAAxB;AACA,SAAKC,IAAL,GAAY,KAAKF,KAAL,CAAWE,IAAvB;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAIC,aAAa,GAAG,EAApB;AACA,UAAMC,MAAM,GAAG,CAAC,aAAD,EAAgB,cAAhB,EAAgC,WAAhC,CAAf;;AACA,UAAMC,MAAM,GAAG,MAAM;AACjB,YAAMC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,GAAL,EAAD,CAAN,CAAmBC,SAAnB,CAA6B,CAA7B,EAA+B,EAA/B,CAAD,CAAtB;AACA,YAAMC,cAAc,GAAGC,IAAI,CAACC,MAAL,KAAc,EAArC;AACA,YAAMC,eAAe,GAAGF,IAAI,CAACC,MAAL,KAAc,EAAtC;AACA,YAAME,GAAG,GAAG,CAACV,OAAO,GAAGM,cAAV,GAA2BG,eAA5B,EAA6CE,OAA7C,CAAqD,CAArD,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,QAAOH,GAAI,EAAxB;AACA,aAAOA,GAAP;AACH,KAPD;;AAQA,wBACI;AAAK,MAAA,SAAS,EAAE,KAAKhB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,IAAL,CAAUmB,KAAV,CAAgB,EAAhB,EAAoBC,GAApB,CAAwB,UAASC,SAAT,EAAoBC,KAApB,EAA0B;AAC/CpB,MAAAA,aAAa,GAAGC,MAAM,CAACmB,KAAD,CAAtB;AACA,0BAAO;AAAM,QAAA,GAAG,EAAElB,MAAM,EAAjB;AAAqB,QAAA,SAAS,EAAEF,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDmB,SAAhD,CAAP;AACH,KAHA,CADL,CADJ;AAQH;;AA1BuC;;AA6B5C,eAAe1B,aAAf","sourcesContent":["import React from 'react';\n\nclass TextColorizer extends React.Component {\n    text;\n    constructor(props) {\n        super(props);\n        this.class = this.props.class;\n        this.text = this.props.text;\n    }\n    render() {\n        let yourClassName = \"\";\n        const colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n        const getKey = () => {\n            const timeKey = Number(String(Date.now()).substring(7,13));\n            const firstRandomKey = Math.random()*10;\n            const secondRandomKey = Math.random()*10;\n            const key = (timeKey + firstRandomKey + secondRandomKey).toFixed(3);\n            console.log(`key: ${key}`);\n            return key            \n        }\n        return (\n            <div className={this.class}>\n                {this.text.split('').map(function(listValue, index){\n                    yourClassName = colors[index];\n                    return <span key={getKey()} className={yourClassName}>{listValue}</span>;\n                })}\n            </div>\n        );\n    }\n}\n\nexport default TextColorizer;  "]},"metadata":{},"sourceType":"module"}