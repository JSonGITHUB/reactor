{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/converter/BoilingVerdict.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst toCelsius = fahrenheit => (fahrenheit - 32) * 5 / 9;\nconst tryConvert = (temperature, convert) => {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n};\nconst toFahrenheit = celsius => celsius * 9 / 5 + 32;\nconst BoilingVerdict = props => {\n  const {\n    celsius\n  } = props;\n  if (celsius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"color-red\",\n      children: \"water is boiling...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 34\n    }, this);\n  }\n  if (celsius <= 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"color-blue\",\n      children: \"water is freezing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 32\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"color-yellow\",\n    children: \"water is not boiling or freezing...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n_c = BoilingVerdict;\nexport default BoilingVerdict;\nexport { toCelsius, tryConvert, toFahrenheit };\nvar _c;\n$RefreshReg$(_c, \"BoilingVerdict\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","toCelsius","fahrenheit","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","toFahrenheit","celsius","BoilingVerdict","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/converter/BoilingVerdict.js"],"sourcesContent":["import React from 'react';\n\nconst toCelsius = (fahrenheit) => (fahrenheit - 32) * 5 / 9;\nconst tryConvert = (temperature, convert) => {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n        return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n};\nconst toFahrenheit = (celsius) => (celsius * 9 / 5) + 32;\nconst BoilingVerdict = props => {\n    const { celsius } = props;\n    if (celsius >= 100) { return <p className='color-red'>water is boiling...</p> }\n    if (celsius <= 0) { return <p className='color-blue'>water is freezing...</p> }\n    return <p className='color-yellow'>water is not boiling or freezing...</p>;\n}\n\nexport default BoilingVerdict;\nexport {\n    toCelsius,\n    tryConvert,\n    toFahrenheit\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAIC,UAAU,IAAK,CAACA,UAAU,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC;AAC3D,MAAMC,UAAU,GAAGA,CAACC,WAAW,EAAEC,OAAO,KAAK;EACzC,MAAMC,KAAK,GAAGC,UAAU,CAACH,WAAW,CAAC;EACrC,IAAII,MAAM,CAACC,KAAK,CAACH,KAAK,CAAC,EAAE;IACrB,OAAO,EAAE;EACb;EACA,MAAMI,MAAM,GAAGL,OAAO,CAACC,KAAK,CAAC;EAC7B,MAAMK,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,GAAG,IAAI,CAAC,GAAG,IAAI;EAChD,OAAOC,OAAO,CAACG,QAAQ,CAAC,CAAC;AAC7B,CAAC;AACD,MAAMC,YAAY,GAAIC,OAAO,IAAMA,OAAO,GAAG,CAAC,GAAG,CAAC,GAAI,EAAE;AACxD,MAAMC,cAAc,GAAGC,KAAK,IAAI;EAC5B,MAAM;IAAEF;EAAQ,CAAC,GAAGE,KAAK;EACzB,IAAIF,OAAO,IAAI,GAAG,EAAE;IAAE,oBAAOhB,OAAA;MAAGmB,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAC;EAC9E,IAAIR,OAAO,IAAI,CAAC,EAAE;IAAE,oBAAOhB,OAAA;MAAGmB,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAC;EAC9E,oBAAOxB,OAAA;IAAGmB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAAC;EAAmC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAC9E,CAAC;AAAAC,EAAA,GALKR,cAAc;AAOpB,eAAeA,cAAc;AAC7B,SACIhB,SAAS,EACTE,UAAU,EACVY,YAAY;AACf,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}