{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js\";\nimport React from './node_modules/react';\nimport PostDirectory from './PostDirectory.js.js';\n\nclass LogId extends React.Component {\n  constructor(props) {\n    super(props); //console.log(`LogId !!!!! props.logId: ${props.logId}`)\n    //console.log(`LogId !!!!! postDirectory: ${JSON.stringify(this.postDirectory.getDirectory(),null, 2)}`)\n\n    this.postDirectory = new PostDirectory();\n\n    this.getDate = () => this.state.log.Day.Date;\n\n    this.generateNewLogId = () => {\n      const date = new Date();\n      const st = date.toDateString().replace(/ /g, \"\");\n      const nd = date.toLocaleTimeString().replace(/ /g, \"\");\n      localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n      const newId = `${st}${nd}`;\n      console.log(`LogId: generateNewLogId => this.state.logId: ${newId}`);\n      /*\n      this.setState({\n          logId: newId\n      });\n      */\n\n      return newId;\n    };\n\n    this.setLogId = (logId, log) => this.setState({\n      logId: logId,\n      log: log\n    });\n\n    this.getLogId = () => this.state.logId;\n\n    this.templateData = {\n      Day: {\n        Date: \"2020-01-17T08:00:00.000Z\",\n        Day: 17,\n        Month: 1,\n        Year: 2020\n      },\n      Location: {\n        Break: \"Notch\"\n      },\n      Surf: {\n        Height: \"head high\",\n        Report: \"4ft\",\n        Shape: \"Close-outs\"\n      },\n      Swell1: {\n        Height: \"4ft\",\n        Direction: \"NW\",\n        Angle: 280,\n        Interval: 18\n      },\n      Swell2: {\n        Height: \"2ft\",\n        Direction: \"NW\",\n        Angle: 270,\n        Interval: 8\n      },\n      Swell3: {\n        Height: \"1ft\",\n        Direction: \"NW\",\n        Angle: 180,\n        Interval: 6\n      },\n      Tide: {\n        Phase: \"High => Low\",\n        Height: \"2ft\"\n      },\n      Wind: {\n        Direction: \"NW\",\n        Orientation: \"Offshore\",\n        MPH: \"5mph\",\n        Surface: \"Glassy\"\n      },\n      Conditions: {\n        Conditions: \"Firing\"\n      },\n      Comments: {\n        \"notes\": \"Biggest crowd but plenty of sick ones...\"\n      }\n    };\n    this.state = {\n      logId: props.logId === null || props.logId === undefined ? this.postDirectory.getLastId() : props.logId,\n      log: JSON.parse(localStorage.getItem(props.logId)) === null ? this.getLogTemplate : JSON.parse(localStorage.getItem(props.logId))\n    };\n  }\n\n  render() {\n    console.log(`LastLogId => render: this.state.logId: ${this.state.logId} - this.state.log: ${this.state.log}`);\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 16\n      }\n    }, \"Count: \", this.state.postDirectory.length);\n  }\n\n}\n\nexport default LogId;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js"],"names":["React","PostDirectory","LogId","Component","constructor","props","postDirectory","getDate","state","log","Day","Date","generateNewLogId","date","st","toDateString","replace","nd","toLocaleTimeString","localStorage","setItem","newId","console","setLogId","logId","setState","getLogId","templateData","Month","Year","Location","Break","Surf","Height","Report","Shape","Swell1","Direction","Angle","Interval","Swell2","Swell3","Tide","Phase","Wind","Orientation","MPH","Surface","Conditions","Comments","undefined","getLastId","JSON","parse","getItem","getLogTemplate","render","length"],"mappings":"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","sourcesContent":["import React from './node_modules/react';\nimport PostDirectory from './PostDirectory.js.js';\nclass LogId extends React.Component {\n    \n    postDirectory = new PostDirectory();\n    \n    constructor(props) {\n        super(props);\n        //console.log(`LogId !!!!! props.logId: ${props.logId}`)\n        //console.log(`LogId !!!!! postDirectory: ${JSON.stringify(this.postDirectory.getDirectory(),null, 2)}`)\n        this.state = {\n            logId: (props.logId === null || props.logId === undefined) ? this.postDirectory.getLastId() : props.logId,\n            log: (JSON.parse(localStorage.getItem(props.logId)) === null) ? this.getLogTemplate : JSON.parse(localStorage.getItem(props.logId))\n        }\n    }\n    getDate = () => this.state.log.Day.Date;\n    generateNewLogId = () => {\n        const date = new Date()\n        const st = date.toDateString().replace(/ /g,\"\");\n        const nd = date.toLocaleTimeString().replace(/ /g,\"\");\n        localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n        const newId = `${st}${nd}`;\n        console.log(`LogId: generateNewLogId => this.state.logId: ${newId}`);\n        /*\n        this.setState({\n            logId: newId\n        });\n        */\n        return newId;\n    }\n    setLogId = (logId, log) => this.setState({\n        logId: logId,\n        log: log\n    });\n    //getLocalLastRecordId = () => localStorage.getItem(\"lastPostId\");\n    //lastRecordIdExists = () => (this.getLocalLastRecordId() === null) ? false : true; \n    //lastRecordExists = () => (this.lastRecordIdExists() === true && localStorage.getItem(this.getLocalLastRecordId()) !== null) ? true : false\n    //getLastRecordId = () => (localStorage.getItem(\"lastPostId\") === null) ? this.generateNewLogId() : localStorage.getItem(\"lastPostId\");\n    getLogId = () => this.state.logId;\n\n    templateData = {\n        Day: {\n            Date: \"2020-01-17T08:00:00.000Z\",\n            Day: 17,\n            Month: 1,\n            Year: 2020\n        },\n        Location: {\n            Break: \"Notch\"\n        },\n        Surf: {\n            Height: \"head high\",\n            Report: \"4ft\",\n            Shape: \"Close-outs\"\n        },\n        Swell1: {\n            Height: \"4ft\",\n            Direction: \"NW\",\n            Angle: 280,\n            Interval: 18,\n        },\n        Swell2: {\n            Height: \"2ft\",\n            Direction: \"NW\",\n            Angle: 270,\n            Interval: 8,\n        },\n        Swell3: {\n            Height: \"1ft\",\n            Direction: \"NW\",\n            Angle: 180,\n            Interval: 6,\n        },\n        Tide: {\n            Phase: \"High => Low\",\n            Height: \"2ft\"\n        },\n        Wind: {\n            Direction: \"NW\",\n            Orientation: \"Offshore\",\n            MPH: \"5mph\",\n            Surface: \"Glassy\"\n        },\n        Conditions: {\n            Conditions: \"Firing\"\n        },\n        Comments: {\n            \"notes\": \"Biggest crowd but plenty of sick ones...\"\n        }\n    };\n    \n    render() {      \n        console.log(`LastLogId => render: this.state.logId: ${this.state.logId} - this.state.log: ${this.state.log}`);\n        return <p>Count: {this.state.postDirectory.length}</p> \n    }\n    \n}\nexport default LogId;"]},"metadata":{},"sourceType":"module"}