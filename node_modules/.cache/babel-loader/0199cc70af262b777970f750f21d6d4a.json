{"ast":null,"code":"import { SIGN_IN, SIGN_OUT } from '../../actions/types';\nconst INTIAL_STATE = {\n  isSignedIn: null,\n  userId: null\n};\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INTIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SIGN_IN:\n      return {\n        ...state,\n        isSignedIn: true,\n        userId: action.payload\n      };\n    case SIGN_OUT:\n      return {\n        ...state,\n        isSignedIn: false,\n        userId: null\n      };\n    default:\n      return state;\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["SIGN_IN","SIGN_OUT","INTIAL_STATE","isSignedIn","userId","authReducer","state","arguments","length","undefined","action","type","payload"],"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/WavesReducer.js"],"sourcesContent":["import { SIGN_IN, SIGN_OUT } from '../../actions/types';\n\nconst INTIAL_STATE = {\n  isSignedIn: null,\n  userId: null\n};\n\nconst authReducer = (state = INTIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      return { ...state, isSignedIn: true, userId: action.payload };\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: null };\n    default:\n      return state;\n  }\n};\nexport default authReducer;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,QAAQ,QAAQ,qBAAqB;AAEvD,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,IAAI;EAChBC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKX,OAAO;MACV,OAAO;QAAE,GAAGM,KAAK;QAAEH,UAAU,EAAE,IAAI;QAAEC,MAAM,EAAEM,MAAM,CAACE;MAAQ,CAAC;IAC/D,KAAKX,QAAQ;MACX,OAAO;QAAE,GAAGK,KAAK;QAAEH,UAAU,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAK,CAAC;IACtD;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AACD,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}