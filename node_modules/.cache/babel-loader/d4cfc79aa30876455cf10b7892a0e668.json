{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/WindDirection.js\";\nimport React from 'react';\nimport Loader from '../utils/Loader.js';\n\nclass WindDirection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWindData = () => {\n      console.log(`getWind ->`);\n      let data;\n\n      const returnJSON = response => response.json();\n\n      const returnRejection = response => Promise.reject({\n        status: response.status,\n        data\n      });\n\n      const validate = response => response.ok ? returnJSON(response) : returnRejection(response);\n\n      let getCurrentTime = new Date();\n      const getEndTime = `${getCurrentTime.getFullYear()}${getCurrentTime.getMonth() + 1 < 10 ? `0${getCurrentTime.getMonth() + 1}` : getCurrentTime.getMonth() + 1}${getCurrentTime.getDate() < 10 ? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${getCurrentTime.getHours() < 10 ? `0${getCurrentTime.getHours()}` : getCurrentTime.getHours()}:${getCurrentTime.getMinutes() < 10 ? `0${getCurrentTime.getMinutes()}` : getCurrentTime.getMinutes()}`; //getCurrentTime = \"20200520%2018:24\";\n\n      const getStartTime = `${getCurrentTime.getFullYear()}${getCurrentTime.getMonth() + 1 < 10 ? `0${getCurrentTime.getMonth() + 1}` : getCurrentTime.getMonth() + 1}${getCurrentTime.getDate() < 10 ? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${getCurrentTime.getHours() < 10 ? `0${getCurrentTime.getHours()}` : getCurrentTime.getHours()}:00`;\n      getCurrentTime = `${getCurrentTime.getFullYear()}${getCurrentTime.getMonth() + 1 < 10 ? `0${getCurrentTime.getMonth() + 1}` : getCurrentTime.getMonth() + 1}${getCurrentTime.getDate() < 10 ? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${getCurrentTime.getHours() < 10 ? `0${getCurrentTime.getHours()}` : getCurrentTime.getHours()}:${getCurrentTime.getMinutes() < 10 ? `00` : getCurrentTime.getMinutes()}`;\n      console.log(`Wind   - getStartTime: ${getStartTime} => getEndTime: ${getEndTime}`);\n      const uriWind = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getStartTime}&end_date=${getEndTime}&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n      const uriWindTest = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2020:00&end_date=20200520%2020:00&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n      const uri = uriWind; //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n\n      fetch(uri).then(response => validate(response)).then(data => {\n        console.log(`WindDirection => direction: ${JSON.stringify(data.data[data.data.length - 1], null, 2)}`);\n        this.props.setWind(data.data[data.data.length - 1].dr, data.data[data.data.length - 1].d, data.data[data.data.length - 1].s, data.data[data.data.length - 1].g);\n        this.setState({\n          station: data.metadata.name,\n          speed: data.data[data.data.length - 1].s,\n          angle: data.data[data.data.length - 1].d,\n          direction: data.data[data.data.length - 1].dr,\n          gusts: data.data[data.data.length - 1].g\n        });\n      }).catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n    };\n\n    this.getInterval = () => this.state.direction !== null ? 150000 : 32000;\n\n    this.getCurrentWind = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.columns > 1 ? \"flexContainer\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.columns > 1 ? \"flex3Column\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, `${this.state.direction} ${Number(this.state.angle).toFixed(0)}Â°`), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.columns > 1 ? \"flex3Column\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, `${Number(this.state.speed).toFixed(0)}-${Number(this.state.gusts).toFixed(0)}`, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"greet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 173\n      }\n    }, \"knots\")));\n\n    this.state = {\n      direction: null,\n      columns: props.columns,\n      station: null,\n      speed: null,\n      angle: null,\n      gusts: null\n    };\n  }\n\n  componentDidMount() {\n    this.getWindData();\n    this.timerID = setInterval(() => this.getWindData(), this.getInterval());\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  /*\n  Water Level: 2.01 ft Above MLLW\n  Next Tide at 3:09 PM: Low 1.70 ft\n  Gusting to: 12.3 kts from WSW\n  */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 16\n      }\n    }, this.getCurrentWind());\n  }\n\n}\n\nexport default WindDirection;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/WindDirection.js"],"names":["React","Loader","WindDirection","Component","constructor","props","getWindData","console","log","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","getCurrentTime","Date","getEndTime","getFullYear","getMonth","getDate","getHours","getMinutes","getStartTime","uriWind","uriWindTest","uri","fetch","then","JSON","stringify","length","setWind","dr","d","s","g","setState","station","metadata","name","speed","angle","direction","gusts","catch","err","window","location","pathname","getInterval","state","getCurrentWind","columns","Number","toFixed","componentDidMount","timerID","setInterval","componentWillUnmount","clearInterval","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Loader from '../utils/Loader.js';\n\nclass WindDirection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            direction: null,\n            columns: props.columns,\n            station: null,\n            speed: null,\n            angle: null,\n            gusts: null\n        }\n    }\n    getWindData = () => {\n        console.log(`getWind ->`);\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        let getCurrentTime = new Date();\n        const getEndTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${((getCurrentTime.getHours())<10) ? `0${(getCurrentTime.getHours())}` : (getCurrentTime.getHours())}:${((getCurrentTime.getMinutes())<10) ? `0${(getCurrentTime.getMinutes())}` : (getCurrentTime.getMinutes())}`;\n        //getCurrentTime = \"20200520%2018:24\";\n        const getStartTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${((getCurrentTime.getHours())<10) ? `0${(getCurrentTime.getHours())}` : (getCurrentTime.getHours())}:00`;\n        getCurrentTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${((getCurrentTime.getHours())<10) ? `0${(getCurrentTime.getHours())}` : (getCurrentTime.getHours())}:${((getCurrentTime.getMinutes())<10) ? `00` : (getCurrentTime.getMinutes())}`\n        console.log(`Wind   - getStartTime: ${getStartTime} => getEndTime: ${getEndTime}`)\n        const uriWind = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getStartTime}&end_date=${getEndTime}&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriWindTest = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2020:00&end_date=20200520%2020:00&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uri = uriWind;\n        \n        //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                console.log(`WindDirection => direction: ${JSON.stringify(data.data[data.data.length - 1],null,2)}`)\n                this.props.setWind(data.data[data.data.length - 1].dr, data.data[data.data.length - 1].d, data.data[data.data.length - 1].s, data.data[data.data.length - 1].g)\n                this.setState({\n                    station: data.metadata.name,\n                    speed: data.data[data.data.length - 1].s,\n                    angle: data.data[data.data.length - 1].d,\n                    direction: data.data[data.data.length - 1].dr,\n                    gusts: data.data[data.data.length - 1].g\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n\n    }\n    /*\n    {\n        \"metadata\":{\n            \"id\":\"9410230\",\n            \"name\":\"La Jolla\",\n            \"lat\":\"32.8669\",\n            \"lon\":\"-117.2571\"\n        }, \n        \"data\": [\n            {\n                \"t\":\"2020-05-20 20:00\", \n                \"s\":\"5.25\", \n                \"d\":\"313.00\",\n                 \"dr\":\"NW\", \n                 \"g\":\"7.39\", \n                 \"f\":\"0,0\"\n            }\n        ]\n    }\n    */\n    getInterval = () => (this.state.direction !== null) ? 150000 : 32000;\n    componentDidMount() {\n        this.getWindData()\n        this.timerID = setInterval(() => this.getWindData(), this.getInterval());\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    /*\n    Water Level: 2.01 ft Above MLLW\n    Next Tide at 3:09 PM: Low 1.70 ft\n    Gusting to: 12.3 kts from WSW\n    */\n    getCurrentWind = () => <div className={(this.props.columns > 1) ? \"flexContainer\": \"\"}>\n                            <div className={(this.props.columns > 1) ? \"flex3Column\": \"\"}>{`${this.state.direction} ${Number(this.state.angle).toFixed(0)}Â°`}</div>\n                            <div className={(this.props.columns > 1) ? \"flex3Column\": \"\"}>{`${Number(this.state.speed).toFixed(0)}-${Number(this.state.gusts).toFixed(0)}`} <span className=\"greet\">knots</span></div>\n                        </div>\n    render() {\n        return <div>{this.getCurrentWind()}</div>\n    };\n}\n\nexport default WindDirection;"]},"metadata":{},"sourceType":"module"}