{"ast":null,"code":"\"use strict\";\n\nvar _wrapRegExp = require(\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapRegExp\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst url_1 = require(\"url\");\n\nconst util_1 = require(\"util\");\n\nconst CacheableRequest = require(\"cacheable-request\");\n\nconst http = require(\"http\");\n\nconst https = require(\"https\");\n\nconst lowercaseKeys = require(\"lowercase-keys\");\n\nconst toReadableStream = require(\"to-readable-stream\");\n\nconst is_1 = require(\"@sindresorhus/is\");\n\nconst cacheable_lookup_1 = require(\"cacheable-lookup\");\n\nconst errors_1 = require(\"./errors\");\n\nconst known_hook_events_1 = require(\"./known-hook-events\");\n\nconst dynamic_require_1 = require(\"./utils/dynamic-require\");\n\nconst get_body_size_1 = require(\"./utils/get-body-size\");\n\nconst is_form_data_1 = require(\"./utils/is-form-data\");\n\nconst merge_1 = require(\"./utils/merge\");\n\nconst options_to_url_1 = require(\"./utils/options-to-url\");\n\nconst supports_brotli_1 = require(\"./utils/supports-brotli\");\n\nconst types_1 = require(\"./types\");\n\nconst nonEnumerableProperties = ['context', 'body', 'json', 'form'];\n\nconst isAgentByProtocol = agent => is_1.default.object(agent); // TODO: `preNormalizeArguments` should merge `options` & `defaults`\n\n\nexports.preNormalizeArguments = (options, defaults) => {\n  var _a, _b, _c, _d, _e, _f; // `options.headers`\n\n\n  if (is_1.default.undefined(options.headers)) {\n    options.headers = {};\n  } else {\n    options.headers = lowercaseKeys(options.headers);\n  }\n\n  for (const [key, value] of Object.entries(options.headers)) {\n    if (is_1.default.null_(value)) {\n      throw new TypeError(`Use \\`undefined\\` instead of \\`null\\` to delete the \\`${key}\\` header`);\n    }\n  } // `options.prefixUrl`\n\n\n  if (is_1.default.urlInstance(options.prefixUrl) || is_1.default.string(options.prefixUrl)) {\n    options.prefixUrl = options.prefixUrl.toString();\n\n    if (options.prefixUrl.length !== 0 && !options.prefixUrl.endsWith('/')) {\n      options.prefixUrl += '/';\n    }\n  } else {\n    options.prefixUrl = defaults ? defaults.prefixUrl : '';\n  } // `options.hooks`\n\n\n  if (is_1.default.undefined(options.hooks)) {\n    options.hooks = {};\n  }\n\n  if (is_1.default.object(options.hooks)) {\n    for (const event of known_hook_events_1.default) {\n      if (Reflect.has(options.hooks, event)) {\n        if (!is_1.default.array(options.hooks[event])) {\n          throw new TypeError(`Parameter \\`${event}\\` must be an Array, not ${is_1.default(options.hooks[event])}`);\n        }\n      } else {\n        options.hooks[event] = [];\n      }\n    }\n  } else {\n    throw new TypeError(`Parameter \\`hooks\\` must be an Object, not ${is_1.default(options.hooks)}`);\n  }\n\n  if (defaults) {\n    for (const event of known_hook_events_1.default) {\n      if (!(Reflect.has(options.hooks, event) && is_1.default.undefined(options.hooks[event]))) {\n        // @ts-ignore Union type array is not assignable to union array type\n        options.hooks[event] = [...defaults.hooks[event], ...options.hooks[event]];\n      }\n    }\n  } // `options.timeout`\n\n\n  if (is_1.default.number(options.timeout)) {\n    options.timeout = {\n      request: options.timeout\n    };\n  } else if (!is_1.default.object(options.timeout)) {\n    options.timeout = {};\n  } // `options.retry`\n\n\n  const {\n    retry\n  } = options;\n\n  if (defaults) {\n    options.retry = { ...defaults.retry\n    };\n  } else {\n    options.retry = {\n      calculateDelay: retryObject => retryObject.computedValue,\n      limit: 0,\n      methods: [],\n      statusCodes: [],\n      errorCodes: [],\n      maxRetryAfter: undefined\n    };\n  }\n\n  if (is_1.default.object(retry)) {\n    options.retry = { ...options.retry,\n      ...retry\n    };\n  } else if (is_1.default.number(retry)) {\n    options.retry.limit = retry;\n  }\n\n  if (options.retry.maxRetryAfter === undefined) {\n    options.retry.maxRetryAfter = Math.min(...[options.timeout.request, options.timeout.connect].filter(n => !is_1.default.nullOrUndefined(n)));\n  }\n\n  options.retry.methods = [...new Set(options.retry.methods.map(method => method.toUpperCase()))];\n  options.retry.statusCodes = [...new Set(options.retry.statusCodes)];\n  options.retry.errorCodes = [...new Set(options.retry.errorCodes)]; // `options.dnsCache`\n\n  if (options.dnsCache && !(options.dnsCache instanceof cacheable_lookup_1.default)) {\n    options.dnsCache = new cacheable_lookup_1.default({\n      cacheAdapter: options.dnsCache\n    });\n  } // `options.method`\n\n\n  if (is_1.default.string(options.method)) {\n    options.method = options.method.toUpperCase();\n  } else {\n    options.method = (_b = (_a = defaults) === null || _a === void 0 ? void 0 : _a.method, _b !== null && _b !== void 0 ? _b : 'GET');\n  } // Better memory management, so we don't have to generate a new object every time\n\n\n  if (options.cache) {\n    options.cacheableRequest = new CacheableRequest( // @ts-ignore Cannot properly type a function with multiple definitions yet\n    (requestOptions, handler) => requestOptions[types_1.requestSymbol](requestOptions, handler), options.cache);\n  } // `options.cookieJar`\n\n\n  if (is_1.default.object(options.cookieJar)) {\n    let {\n      setCookie,\n      getCookieString\n    } = options.cookieJar; // Horrible `tough-cookie` check\n\n    if (setCookie.length === 4 && getCookieString.length === 0) {\n      if (!Reflect.has(setCookie, util_1.promisify.custom)) {\n        // @ts-ignore TS is dumb.\n        setCookie = util_1.promisify(setCookie.bind(options.cookieJar));\n        getCookieString = util_1.promisify(getCookieString.bind(options.cookieJar));\n      }\n    } else if (setCookie.length !== 2) {\n      throw new TypeError('`options.cookieJar.setCookie` needs to be an async function with 2 arguments');\n    } else if (getCookieString.length !== 1) {\n      throw new TypeError('`options.cookieJar.getCookieString` needs to be an async function with 1 argument');\n    }\n\n    options.cookieJar = {\n      setCookie,\n      getCookieString\n    };\n  } // `options.encoding`\n\n\n  if (is_1.default.null_(options.encoding)) {\n    throw new TypeError('To get a Buffer, set `options.responseType` to `buffer` instead');\n  } // `options.maxRedirects`\n\n\n  if (!Reflect.has(options, 'maxRedirects') && !(defaults && Reflect.has(defaults, 'maxRedirects'))) {\n    options.maxRedirects = 0;\n  } // Merge defaults\n\n\n  if (defaults) {\n    options = merge_1.default({}, defaults, options);\n  } // Other values\n\n\n  options.decompress = Boolean(options.decompress);\n  options.isStream = Boolean(options.isStream);\n  options.throwHttpErrors = Boolean(options.throwHttpErrors);\n  options.ignoreInvalidCookies = Boolean(options.ignoreInvalidCookies);\n  options.cache = (_c = options.cache, _c !== null && _c !== void 0 ? _c : false);\n  options.responseType = (_d = options.responseType, _d !== null && _d !== void 0 ? _d : 'text');\n  options.resolveBodyOnly = Boolean(options.resolveBodyOnly);\n  options.followRedirect = Boolean(options.followRedirect);\n  options.dnsCache = (_e = options.dnsCache, _e !== null && _e !== void 0 ? _e : false);\n  options.useElectronNet = Boolean(options.useElectronNet);\n  options.methodRewriting = Boolean(options.methodRewriting);\n  options.context = (_f = options.context, _f !== null && _f !== void 0 ? _f : {});\n  return options;\n};\n\nexports.mergeOptions = (...sources) => {\n  let mergedOptions = exports.preNormalizeArguments({}); // Non enumerable properties shall not be merged\n\n  const properties = {};\n\n  for (const source of sources) {\n    mergedOptions = exports.preNormalizeArguments(merge_1.default({}, source), mergedOptions);\n\n    for (const name of nonEnumerableProperties) {\n      if (!Reflect.has(source, name)) {\n        continue;\n      }\n\n      properties[name] = {\n        writable: true,\n        configurable: true,\n        enumerable: false,\n        value: source[name]\n      };\n    }\n  }\n\n  Object.defineProperties(mergedOptions, properties);\n  return mergedOptions;\n};\n\nexports.normalizeArguments = (url, options, defaults) => {\n  var _a, _b, _c, _d; // Merge options\n\n\n  if (typeof url === 'undefined') {\n    throw new TypeError('Missing `url` argument');\n  }\n\n  if (typeof options === 'undefined') {\n    options = {};\n  }\n\n  if (is_1.default.urlInstance(url) || is_1.default.string(url)) {\n    if (Reflect.has(options, 'url')) {\n      throw new TypeError('The `url` option cannot be used if the input is a valid URL.');\n    } // @ts-ignore URL is not URL\n\n\n    options.url = url;\n    options = exports.mergeOptions((_b = (_a = defaults) === null || _a === void 0 ? void 0 : _a.options, _b !== null && _b !== void 0 ? _b : {}), options);\n  } else {\n    if (Reflect.has(url, 'resolve')) {\n      throw new Error('The legacy `url.Url` is deprecated. Use `URL` instead.');\n    }\n\n    options = exports.mergeOptions((_d = (_c = defaults) === null || _c === void 0 ? void 0 : _c.options, _d !== null && _d !== void 0 ? _d : {}), url, options);\n  } // Normalize URL\n  // TODO: drop `optionsToUrl` in Got 12\n\n\n  if (is_1.default.string(options.url)) {\n    options.url = options.prefixUrl + options.url;\n    options.url = options.url.replace(/^unix:/, 'http://$&');\n\n    if (options.searchParams || options.search) {\n      options.url = options.url.split('?')[0];\n    } // @ts-ignore URL is not URL\n\n\n    options.url = options_to_url_1.default({\n      origin: options.url,\n      ...options\n    });\n  } else if (!is_1.default.urlInstance(options.url)) {\n    // @ts-ignore URL is not URL\n    options.url = options_to_url_1.default({\n      origin: options.prefixUrl,\n      ...options\n    });\n  }\n\n  const normalizedOptions = options; // Make it possible to change `options.prefixUrl`\n\n  let prefixUrl = options.prefixUrl;\n  Object.defineProperty(normalizedOptions, 'prefixUrl', {\n    set: value => {\n      if (!normalizedOptions.url.href.startsWith(value)) {\n        throw new Error(`Cannot change \\`prefixUrl\\` from ${prefixUrl} to ${value}: ${normalizedOptions.url.href}`);\n      }\n\n      normalizedOptions.url = new url_1.URL(value + normalizedOptions.url.href.slice(prefixUrl.length));\n      prefixUrl = value;\n    },\n    get: () => prefixUrl\n  }); // Make it possible to remove default headers\n\n  for (const [key, value] of Object.entries(normalizedOptions.headers)) {\n    if (is_1.default.undefined(value)) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete normalizedOptions.headers[key];\n    }\n  }\n\n  for (const hook of normalizedOptions.hooks.init) {\n    const result = hook(normalizedOptions);\n\n    if (is_1.default.promise(result)) {\n      throw new TypeError('The `init` hook must be a synchronous function');\n    }\n  }\n\n  return normalizedOptions;\n};\n\nconst withoutBody = new Set(['GET', 'HEAD']);\n\nexports.normalizeRequestArguments = async options => {\n  var _a, _b, _c;\n\n  options = exports.mergeOptions(options); // Serialize body\n\n  const {\n    headers\n  } = options;\n  const hasNoContentType = is_1.default.undefined(headers['content-type']);\n  {\n    // TODO: these checks should be moved to `preNormalizeArguments`\n    const isForm = !is_1.default.undefined(options.form);\n    const isJson = !is_1.default.undefined(options.json);\n    const isBody = !is_1.default.undefined(options.body);\n\n    if ((isBody || isForm || isJson) && withoutBody.has(options.method)) {\n      throw new TypeError(`The \\`${options.method}\\` method cannot be used with a body`);\n    }\n\n    if ([isBody, isForm, isJson].filter(isTrue => isTrue).length > 1) {\n      throw new TypeError('The `body`, `json` and `form` options are mutually exclusive');\n    }\n\n    if (isBody && !is_1.default.nodeStream(options.body) && !is_1.default.string(options.body) && !is_1.default.buffer(options.body) && !(is_1.default.object(options.body) && is_form_data_1.default(options.body))) {\n      throw new TypeError('The `body` option must be a stream.Readable, string or Buffer');\n    }\n\n    if (isForm && !is_1.default.object(options.form)) {\n      throw new TypeError('The `form` option must be an Object');\n    }\n  }\n\n  if (options.body) {\n    // Special case for https://github.com/form-data/form-data\n    if (is_1.default.object(options.body) && is_form_data_1.default(options.body) && hasNoContentType) {\n      headers['content-type'] = `multipart/form-data; boundary=${options.body.getBoundary()}`;\n    }\n  } else if (options.form) {\n    if (hasNoContentType) {\n      headers['content-type'] = 'application/x-www-form-urlencoded';\n    }\n\n    options.body = new url_1.URLSearchParams(options.form).toString();\n  } else if (options.json) {\n    if (hasNoContentType) {\n      headers['content-type'] = 'application/json';\n    }\n\n    options.body = JSON.stringify(options.json);\n  }\n\n  const uploadBodySize = await get_body_size_1.default(options);\n\n  if (!is_1.default.nodeStream(options.body)) {\n    options.body = toReadableStream(options.body);\n  } // See https://tools.ietf.org/html/rfc7230#section-3.3.2\n  // A user agent SHOULD send a Content-Length in a request message when\n  // no Transfer-Encoding is sent and the request method defines a meaning\n  // for an enclosed payload body.  For example, a Content-Length header\n  // field is normally sent in a POST request even when the value is 0\n  // (indicating an empty payload body).  A user agent SHOULD NOT send a\n  // Content-Length header field when the request message does not contain\n  // a payload body and the method semantics do not anticipate such a\n  // body.\n\n\n  if (is_1.default.undefined(headers['content-length']) && is_1.default.undefined(headers['transfer-encoding'])) {\n    if ((options.method === 'POST' || options.method === 'PUT' || options.method === 'PATCH' || options.method === 'DELETE') && !is_1.default.undefined(uploadBodySize)) {\n      // @ts-ignore We assign if it is undefined, so this IS correct\n      headers['content-length'] = String(uploadBodySize);\n    }\n  }\n\n  if (!options.isStream && options.responseType === 'json' && is_1.default.undefined(headers.accept)) {\n    headers.accept = 'application/json';\n  }\n\n  if (options.decompress && is_1.default.undefined(headers['accept-encoding'])) {\n    headers['accept-encoding'] = supports_brotli_1.default ? 'gzip, deflate, br' : 'gzip, deflate';\n  } // Validate URL\n\n\n  if (options.url.protocol !== 'http:' && options.url.protocol !== 'https:') {\n    throw new errors_1.UnsupportedProtocolError(options);\n  }\n\n  decodeURI(options.url.toString()); // Normalize request function\n\n  if (is_1.default.function_(options.request)) {\n    options[types_1.requestSymbol] = options.request;\n    delete options.request;\n  } else {\n    options[types_1.requestSymbol] = options.url.protocol === 'https:' ? https.request : http.request;\n  } // UNIX sockets\n\n\n  if (options.url.hostname === 'unix') {\n    const matches = /*#__PURE__*/_wrapRegExp(/(.+?):(.+)/, {\n      socketPath: 1,\n      path: 2\n    }).exec(options.url.pathname);\n\n    if ((_a = matches) === null || _a === void 0 ? void 0 : _a.groups) {\n      const {\n        socketPath,\n        path\n      } = matches.groups;\n      options = { ...options,\n        socketPath,\n        path,\n        host: ''\n      };\n    }\n  }\n\n  if (isAgentByProtocol(options.agent)) {\n    options.agent = (_b = options.agent[options.url.protocol.slice(0, -1)], _b !== null && _b !== void 0 ? _b : options.agent);\n  }\n\n  if (options.dnsCache) {\n    options.lookup = options.dnsCache.lookup;\n  }\n  /* istanbul ignore next: electron.net is broken */\n  // No point in typing process.versions correctly, as\n  // `process.version.electron` is used only once, right here.\n\n\n  if (options.useElectronNet && process.versions.electron) {\n    const electron = dynamic_require_1.default(module, 'electron'); // Trick webpack\n\n    options.request = util_1.deprecate((_c = electron.net.request, _c !== null && _c !== void 0 ? _c : electron.remote.net.request), 'Electron support has been deprecated and will be removed in Got 11.\\n' + 'See https://github.com/sindresorhus/got/issues/899 for further information.', 'GOT_ELECTRON');\n  } // Got's `timeout` is an object, http's `timeout` is a number, so they're not compatible.\n\n\n  delete options.timeout; // Set cookies\n\n  if (options.cookieJar) {\n    const cookieString = await options.cookieJar.getCookieString(options.url.toString());\n\n    if (is_1.default.nonEmptyString(cookieString)) {\n      options.headers.cookie = cookieString;\n    } else {\n      delete options.headers.cookie;\n    }\n  } // `http-cache-semantics` checks this\n\n\n  delete options.url;\n  return options;\n};","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/node_modules/got/dist/source/normalize-arguments.js"],"names":["Object","defineProperty","exports","value","url_1","require","util_1","CacheableRequest","http","https","lowercaseKeys","toReadableStream","is_1","cacheable_lookup_1","errors_1","known_hook_events_1","dynamic_require_1","get_body_size_1","is_form_data_1","merge_1","options_to_url_1","supports_brotli_1","types_1","nonEnumerableProperties","isAgentByProtocol","agent","default","object","preNormalizeArguments","options","defaults","_a","_b","_c","_d","_e","_f","undefined","headers","key","entries","null_","TypeError","urlInstance","prefixUrl","string","toString","length","endsWith","hooks","event","Reflect","has","array","number","timeout","request","retry","calculateDelay","retryObject","computedValue","limit","methods","statusCodes","errorCodes","maxRetryAfter","Math","min","connect","filter","n","nullOrUndefined","Set","map","method","toUpperCase","dnsCache","cacheAdapter","cache","cacheableRequest","requestOptions","handler","requestSymbol","cookieJar","setCookie","getCookieString","promisify","custom","bind","encoding","maxRedirects","decompress","Boolean","isStream","throwHttpErrors","ignoreInvalidCookies","responseType","resolveBodyOnly","followRedirect","useElectronNet","methodRewriting","context","mergeOptions","sources","mergedOptions","properties","source","name","writable","configurable","enumerable","defineProperties","normalizeArguments","url","Error","replace","searchParams","search","split","origin","normalizedOptions","set","href","startsWith","URL","slice","get","hook","init","result","promise","withoutBody","normalizeRequestArguments","hasNoContentType","isForm","form","isJson","json","isBody","body","isTrue","nodeStream","buffer","getBoundary","URLSearchParams","JSON","stringify","uploadBodySize","String","accept","protocol","UnsupportedProtocolError","decodeURI","function_","hostname","matches","exec","pathname","groups","socketPath","path","host","lookup","process","versions","electron","module","deprecate","net","remote","cookieString","nonEmptyString","cookie"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\nconst util_1 = require(\"util\");\nconst CacheableRequest = require(\"cacheable-request\");\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst lowercaseKeys = require(\"lowercase-keys\");\nconst toReadableStream = require(\"to-readable-stream\");\nconst is_1 = require(\"@sindresorhus/is\");\nconst cacheable_lookup_1 = require(\"cacheable-lookup\");\nconst errors_1 = require(\"./errors\");\nconst known_hook_events_1 = require(\"./known-hook-events\");\nconst dynamic_require_1 = require(\"./utils/dynamic-require\");\nconst get_body_size_1 = require(\"./utils/get-body-size\");\nconst is_form_data_1 = require(\"./utils/is-form-data\");\nconst merge_1 = require(\"./utils/merge\");\nconst options_to_url_1 = require(\"./utils/options-to-url\");\nconst supports_brotli_1 = require(\"./utils/supports-brotli\");\nconst types_1 = require(\"./types\");\nconst nonEnumerableProperties = [\n    'context',\n    'body',\n    'json',\n    'form'\n];\nconst isAgentByProtocol = (agent) => is_1.default.object(agent);\n// TODO: `preNormalizeArguments` should merge `options` & `defaults`\nexports.preNormalizeArguments = (options, defaults) => {\n    var _a, _b, _c, _d, _e, _f;\n    // `options.headers`\n    if (is_1.default.undefined(options.headers)) {\n        options.headers = {};\n    }\n    else {\n        options.headers = lowercaseKeys(options.headers);\n    }\n    for (const [key, value] of Object.entries(options.headers)) {\n        if (is_1.default.null_(value)) {\n            throw new TypeError(`Use \\`undefined\\` instead of \\`null\\` to delete the \\`${key}\\` header`);\n        }\n    }\n    // `options.prefixUrl`\n    if (is_1.default.urlInstance(options.prefixUrl) || is_1.default.string(options.prefixUrl)) {\n        options.prefixUrl = options.prefixUrl.toString();\n        if (options.prefixUrl.length !== 0 && !options.prefixUrl.endsWith('/')) {\n            options.prefixUrl += '/';\n        }\n    }\n    else {\n        options.prefixUrl = defaults ? defaults.prefixUrl : '';\n    }\n    // `options.hooks`\n    if (is_1.default.undefined(options.hooks)) {\n        options.hooks = {};\n    }\n    if (is_1.default.object(options.hooks)) {\n        for (const event of known_hook_events_1.default) {\n            if (Reflect.has(options.hooks, event)) {\n                if (!is_1.default.array(options.hooks[event])) {\n                    throw new TypeError(`Parameter \\`${event}\\` must be an Array, not ${is_1.default(options.hooks[event])}`);\n                }\n            }\n            else {\n                options.hooks[event] = [];\n            }\n        }\n    }\n    else {\n        throw new TypeError(`Parameter \\`hooks\\` must be an Object, not ${is_1.default(options.hooks)}`);\n    }\n    if (defaults) {\n        for (const event of known_hook_events_1.default) {\n            if (!(Reflect.has(options.hooks, event) && is_1.default.undefined(options.hooks[event]))) {\n                // @ts-ignore Union type array is not assignable to union array type\n                options.hooks[event] = [\n                    ...defaults.hooks[event],\n                    ...options.hooks[event]\n                ];\n            }\n        }\n    }\n    // `options.timeout`\n    if (is_1.default.number(options.timeout)) {\n        options.timeout = { request: options.timeout };\n    }\n    else if (!is_1.default.object(options.timeout)) {\n        options.timeout = {};\n    }\n    // `options.retry`\n    const { retry } = options;\n    if (defaults) {\n        options.retry = { ...defaults.retry };\n    }\n    else {\n        options.retry = {\n            calculateDelay: retryObject => retryObject.computedValue,\n            limit: 0,\n            methods: [],\n            statusCodes: [],\n            errorCodes: [],\n            maxRetryAfter: undefined\n        };\n    }\n    if (is_1.default.object(retry)) {\n        options.retry = {\n            ...options.retry,\n            ...retry\n        };\n    }\n    else if (is_1.default.number(retry)) {\n        options.retry.limit = retry;\n    }\n    if (options.retry.maxRetryAfter === undefined) {\n        options.retry.maxRetryAfter = Math.min(...[options.timeout.request, options.timeout.connect].filter((n) => !is_1.default.nullOrUndefined(n)));\n    }\n    options.retry.methods = [...new Set(options.retry.methods.map(method => method.toUpperCase()))];\n    options.retry.statusCodes = [...new Set(options.retry.statusCodes)];\n    options.retry.errorCodes = [...new Set(options.retry.errorCodes)];\n    // `options.dnsCache`\n    if (options.dnsCache && !(options.dnsCache instanceof cacheable_lookup_1.default)) {\n        options.dnsCache = new cacheable_lookup_1.default({ cacheAdapter: options.dnsCache });\n    }\n    // `options.method`\n    if (is_1.default.string(options.method)) {\n        options.method = options.method.toUpperCase();\n    }\n    else {\n        options.method = (_b = (_a = defaults) === null || _a === void 0 ? void 0 : _a.method, (_b !== null && _b !== void 0 ? _b : 'GET'));\n    }\n    // Better memory management, so we don't have to generate a new object every time\n    if (options.cache) {\n        options.cacheableRequest = new CacheableRequest(\n        // @ts-ignore Cannot properly type a function with multiple definitions yet\n        (requestOptions, handler) => requestOptions[types_1.requestSymbol](requestOptions, handler), options.cache);\n    }\n    // `options.cookieJar`\n    if (is_1.default.object(options.cookieJar)) {\n        let { setCookie, getCookieString } = options.cookieJar;\n        // Horrible `tough-cookie` check\n        if (setCookie.length === 4 && getCookieString.length === 0) {\n            if (!Reflect.has(setCookie, util_1.promisify.custom)) {\n                // @ts-ignore TS is dumb.\n                setCookie = util_1.promisify(setCookie.bind(options.cookieJar));\n                getCookieString = util_1.promisify(getCookieString.bind(options.cookieJar));\n            }\n        }\n        else if (setCookie.length !== 2) {\n            throw new TypeError('`options.cookieJar.setCookie` needs to be an async function with 2 arguments');\n        }\n        else if (getCookieString.length !== 1) {\n            throw new TypeError('`options.cookieJar.getCookieString` needs to be an async function with 1 argument');\n        }\n        options.cookieJar = { setCookie, getCookieString };\n    }\n    // `options.encoding`\n    if (is_1.default.null_(options.encoding)) {\n        throw new TypeError('To get a Buffer, set `options.responseType` to `buffer` instead');\n    }\n    // `options.maxRedirects`\n    if (!Reflect.has(options, 'maxRedirects') && !(defaults && Reflect.has(defaults, 'maxRedirects'))) {\n        options.maxRedirects = 0;\n    }\n    // Merge defaults\n    if (defaults) {\n        options = merge_1.default({}, defaults, options);\n    }\n    // Other values\n    options.decompress = Boolean(options.decompress);\n    options.isStream = Boolean(options.isStream);\n    options.throwHttpErrors = Boolean(options.throwHttpErrors);\n    options.ignoreInvalidCookies = Boolean(options.ignoreInvalidCookies);\n    options.cache = (_c = options.cache, (_c !== null && _c !== void 0 ? _c : false));\n    options.responseType = (_d = options.responseType, (_d !== null && _d !== void 0 ? _d : 'text'));\n    options.resolveBodyOnly = Boolean(options.resolveBodyOnly);\n    options.followRedirect = Boolean(options.followRedirect);\n    options.dnsCache = (_e = options.dnsCache, (_e !== null && _e !== void 0 ? _e : false));\n    options.useElectronNet = Boolean(options.useElectronNet);\n    options.methodRewriting = Boolean(options.methodRewriting);\n    options.context = (_f = options.context, (_f !== null && _f !== void 0 ? _f : {}));\n    return options;\n};\nexports.mergeOptions = (...sources) => {\n    let mergedOptions = exports.preNormalizeArguments({});\n    // Non enumerable properties shall not be merged\n    const properties = {};\n    for (const source of sources) {\n        mergedOptions = exports.preNormalizeArguments(merge_1.default({}, source), mergedOptions);\n        for (const name of nonEnumerableProperties) {\n            if (!Reflect.has(source, name)) {\n                continue;\n            }\n            properties[name] = {\n                writable: true,\n                configurable: true,\n                enumerable: false,\n                value: source[name]\n            };\n        }\n    }\n    Object.defineProperties(mergedOptions, properties);\n    return mergedOptions;\n};\nexports.normalizeArguments = (url, options, defaults) => {\n    var _a, _b, _c, _d;\n    // Merge options\n    if (typeof url === 'undefined') {\n        throw new TypeError('Missing `url` argument');\n    }\n    if (typeof options === 'undefined') {\n        options = {};\n    }\n    if (is_1.default.urlInstance(url) || is_1.default.string(url)) {\n        if (Reflect.has(options, 'url')) {\n            throw new TypeError('The `url` option cannot be used if the input is a valid URL.');\n        }\n        // @ts-ignore URL is not URL\n        options.url = url;\n        options = exports.mergeOptions((_b = (_a = defaults) === null || _a === void 0 ? void 0 : _a.options, (_b !== null && _b !== void 0 ? _b : {})), options);\n    }\n    else {\n        if (Reflect.has(url, 'resolve')) {\n            throw new Error('The legacy `url.Url` is deprecated. Use `URL` instead.');\n        }\n        options = exports.mergeOptions((_d = (_c = defaults) === null || _c === void 0 ? void 0 : _c.options, (_d !== null && _d !== void 0 ? _d : {})), url, options);\n    }\n    // Normalize URL\n    // TODO: drop `optionsToUrl` in Got 12\n    if (is_1.default.string(options.url)) {\n        options.url = options.prefixUrl + options.url;\n        options.url = options.url.replace(/^unix:/, 'http://$&');\n        if (options.searchParams || options.search) {\n            options.url = options.url.split('?')[0];\n        }\n        // @ts-ignore URL is not URL\n        options.url = options_to_url_1.default({\n            origin: options.url,\n            ...options\n        });\n    }\n    else if (!is_1.default.urlInstance(options.url)) {\n        // @ts-ignore URL is not URL\n        options.url = options_to_url_1.default({ origin: options.prefixUrl, ...options });\n    }\n    const normalizedOptions = options;\n    // Make it possible to change `options.prefixUrl`\n    let prefixUrl = options.prefixUrl;\n    Object.defineProperty(normalizedOptions, 'prefixUrl', {\n        set: (value) => {\n            if (!normalizedOptions.url.href.startsWith(value)) {\n                throw new Error(`Cannot change \\`prefixUrl\\` from ${prefixUrl} to ${value}: ${normalizedOptions.url.href}`);\n            }\n            normalizedOptions.url = new url_1.URL(value + normalizedOptions.url.href.slice(prefixUrl.length));\n            prefixUrl = value;\n        },\n        get: () => prefixUrl\n    });\n    // Make it possible to remove default headers\n    for (const [key, value] of Object.entries(normalizedOptions.headers)) {\n        if (is_1.default.undefined(value)) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete normalizedOptions.headers[key];\n        }\n    }\n    for (const hook of normalizedOptions.hooks.init) {\n        const result = hook(normalizedOptions);\n        if (is_1.default.promise(result)) {\n            throw new TypeError('The `init` hook must be a synchronous function');\n        }\n    }\n    return normalizedOptions;\n};\nconst withoutBody = new Set(['GET', 'HEAD']);\nexports.normalizeRequestArguments = async (options) => {\n    var _a, _b, _c;\n    options = exports.mergeOptions(options);\n    // Serialize body\n    const { headers } = options;\n    const hasNoContentType = is_1.default.undefined(headers['content-type']);\n    {\n        // TODO: these checks should be moved to `preNormalizeArguments`\n        const isForm = !is_1.default.undefined(options.form);\n        const isJson = !is_1.default.undefined(options.json);\n        const isBody = !is_1.default.undefined(options.body);\n        if ((isBody || isForm || isJson) && withoutBody.has(options.method)) {\n            throw new TypeError(`The \\`${options.method}\\` method cannot be used with a body`);\n        }\n        if ([isBody, isForm, isJson].filter(isTrue => isTrue).length > 1) {\n            throw new TypeError('The `body`, `json` and `form` options are mutually exclusive');\n        }\n        if (isBody &&\n            !is_1.default.nodeStream(options.body) &&\n            !is_1.default.string(options.body) &&\n            !is_1.default.buffer(options.body) &&\n            !(is_1.default.object(options.body) && is_form_data_1.default(options.body))) {\n            throw new TypeError('The `body` option must be a stream.Readable, string or Buffer');\n        }\n        if (isForm && !is_1.default.object(options.form)) {\n            throw new TypeError('The `form` option must be an Object');\n        }\n    }\n    if (options.body) {\n        // Special case for https://github.com/form-data/form-data\n        if (is_1.default.object(options.body) && is_form_data_1.default(options.body) && hasNoContentType) {\n            headers['content-type'] = `multipart/form-data; boundary=${options.body.getBoundary()}`;\n        }\n    }\n    else if (options.form) {\n        if (hasNoContentType) {\n            headers['content-type'] = 'application/x-www-form-urlencoded';\n        }\n        options.body = (new url_1.URLSearchParams(options.form)).toString();\n    }\n    else if (options.json) {\n        if (hasNoContentType) {\n            headers['content-type'] = 'application/json';\n        }\n        options.body = JSON.stringify(options.json);\n    }\n    const uploadBodySize = await get_body_size_1.default(options);\n    if (!is_1.default.nodeStream(options.body)) {\n        options.body = toReadableStream(options.body);\n    }\n    // See https://tools.ietf.org/html/rfc7230#section-3.3.2\n    // A user agent SHOULD send a Content-Length in a request message when\n    // no Transfer-Encoding is sent and the request method defines a meaning\n    // for an enclosed payload body.  For example, a Content-Length header\n    // field is normally sent in a POST request even when the value is 0\n    // (indicating an empty payload body).  A user agent SHOULD NOT send a\n    // Content-Length header field when the request message does not contain\n    // a payload body and the method semantics do not anticipate such a\n    // body.\n    if (is_1.default.undefined(headers['content-length']) && is_1.default.undefined(headers['transfer-encoding'])) {\n        if ((options.method === 'POST' || options.method === 'PUT' || options.method === 'PATCH' || options.method === 'DELETE') &&\n            !is_1.default.undefined(uploadBodySize)) {\n            // @ts-ignore We assign if it is undefined, so this IS correct\n            headers['content-length'] = String(uploadBodySize);\n        }\n    }\n    if (!options.isStream && options.responseType === 'json' && is_1.default.undefined(headers.accept)) {\n        headers.accept = 'application/json';\n    }\n    if (options.decompress && is_1.default.undefined(headers['accept-encoding'])) {\n        headers['accept-encoding'] = supports_brotli_1.default ? 'gzip, deflate, br' : 'gzip, deflate';\n    }\n    // Validate URL\n    if (options.url.protocol !== 'http:' && options.url.protocol !== 'https:') {\n        throw new errors_1.UnsupportedProtocolError(options);\n    }\n    decodeURI(options.url.toString());\n    // Normalize request function\n    if (is_1.default.function_(options.request)) {\n        options[types_1.requestSymbol] = options.request;\n        delete options.request;\n    }\n    else {\n        options[types_1.requestSymbol] = options.url.protocol === 'https:' ? https.request : http.request;\n    }\n    // UNIX sockets\n    if (options.url.hostname === 'unix') {\n        const matches = /(?<socketPath>.+?):(?<path>.+)/.exec(options.url.pathname);\n        if ((_a = matches) === null || _a === void 0 ? void 0 : _a.groups) {\n            const { socketPath, path } = matches.groups;\n            options = {\n                ...options,\n                socketPath,\n                path,\n                host: ''\n            };\n        }\n    }\n    if (isAgentByProtocol(options.agent)) {\n        options.agent = (_b = options.agent[options.url.protocol.slice(0, -1)], (_b !== null && _b !== void 0 ? _b : options.agent));\n    }\n    if (options.dnsCache) {\n        options.lookup = options.dnsCache.lookup;\n    }\n    /* istanbul ignore next: electron.net is broken */\n    // No point in typing process.versions correctly, as\n    // `process.version.electron` is used only once, right here.\n    if (options.useElectronNet && process.versions.electron) {\n        const electron = dynamic_require_1.default(module, 'electron'); // Trick webpack\n        options.request = util_1.deprecate((_c = electron.net.request, (_c !== null && _c !== void 0 ? _c : electron.remote.net.request)), 'Electron support has been deprecated and will be removed in Got 11.\\n' +\n            'See https://github.com/sindresorhus/got/issues/899 for further information.', 'GOT_ELECTRON');\n    }\n    // Got's `timeout` is an object, http's `timeout` is a number, so they're not compatible.\n    delete options.timeout;\n    // Set cookies\n    if (options.cookieJar) {\n        const cookieString = await options.cookieJar.getCookieString(options.url.toString());\n        if (is_1.default.nonEmptyString(cookieString)) {\n            options.headers.cookie = cookieString;\n        }\n        else {\n            delete options.headers.cookie;\n        }\n    }\n    // `http-cache-semantics` checks this\n    delete options.url;\n    return options;\n};\n"]},"metadata":{},"sourceType":"script"}