{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/Toggle.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n\n    if (this.state.isToggleOn) {\n      document.getElementById('shaka').classList.remove('shakingShaka');\n    } else {\n      document.getElementById('shaka').classList.add('shakingShaka');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-100-percent mt-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"greet color-neogreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, \"Shaka Shaker\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 67\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 72\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, this.state.isToggleOn ? 'ON' : 'OFF'));\n  }\n\n}\n\nexport default Toggle;\n/*\nReactDOM.render(\n  <Toggle />,\n  document.getElementById('time')\n);\n\nlet initToggle = () => {\n    ReactDOM.render(\n        <Toggle />,\n        document.getElementById('toggle')\n    )\n}\nsetTimeout(initToggle, 1000);\n*/","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/Toggle.js"],"names":["React","ReactDOM","Toggle","Component","constructor","props","state","isToggleOn","handleClick","bind","setState","document","getElementById","classList","remove","add","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb,CAFiB,CAGjB;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKE,QAAL,CAAcJ,KAAK,KAAK;AACtBC,MAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AADG,KAAL,CAAnB;;AAGA,QAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AACvBI,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,CAA2CC,MAA3C,CAAkD,cAAlD;AACH,KAFD,MAEO;AACHH,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,CAA2CE,GAA3C,CAA+C,cAA/C;AACH;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAC4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD5D,eACiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjE,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAKR,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KADlC,CAFF,CADF;AAQD;;AA5BkC;;AA8BrC,eAAeL,MAAf;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Toggle extends React.Component {\n    \n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n    if (this.state.isToggleOn) {\n        document.getElementById('shaka').classList.remove('shakingShaka');\n    } else {\n        document.getElementById('shaka').classList.add('shakingShaka');\n    }\n  }\n  render() {\n    return (\n      <div className='width-100-percent mt-20'>\n        <span className=\"greet color-neogreen\">Shaka Shaker</span><br/><br/>\n        <button onClick={this.handleClick}>\n          {this.state.isToggleOn ? 'ON' : 'OFF'}\n        </button>\n      </div>\n    );\n  }\n}\nexport default Toggle;\n/*\nReactDOM.render(\n  <Toggle />,\n  document.getElementById('time')\n);\n\nlet initToggle = () => {\n    ReactDOM.render(\n        <Toggle />,\n        document.getElementById('toggle')\n    )\n}\nsetTimeout(initToggle, 1000);\n*/"]},"metadata":{},"sourceType":"module"}