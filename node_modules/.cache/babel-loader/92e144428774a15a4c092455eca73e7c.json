{"ast":null,"code":"import _classCallCheck from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Loader from'../utils/Loader.js';//import tide from '../../assets/images/tide.png'\nvar Tide=/*#__PURE__*/function(_React$Component){_inherits(Tide,_React$Component);var _super=_createSuper(Tide);function Tide(props){var _this;_classCallCheck(this,Tide);_this=_super.call(this,props);_this.getTideData=function(){console.log(\"getTide ->\");var data;var returnJSON=function returnJSON(response){return response.json();};var returnRejection=function returnRejection(response){return Promise.reject({status:response.status,data:data});};var validate=function validate(response){return response.ok?returnJSON(response):returnRejection(response);};var getCurrentTime=new Date();var getEndTime=\"\".concat(getCurrentTime.getFullYear()).concat(getCurrentTime.getMonth()+1<10?\"0\".concat(getCurrentTime.getMonth()+1):getCurrentTime.getMonth()+1).concat(getCurrentTime.getDate()<10?\"0\".concat(getCurrentTime.getDate()):getCurrentTime.getDate(),\"%20\").concat(getCurrentTime.getHours()<10?\"0\".concat(getCurrentTime.getHours()):getCurrentTime.getHours(),\":\").concat(getCurrentTime.getMinutes()<10?\"0\".concat(getCurrentTime.getMinutes()):getCurrentTime.getMinutes());//getCurrentTime = \"20200520%2018:24\";\nvar getStartTime=\"\".concat(getCurrentTime.getFullYear()).concat(getCurrentTime.getMonth()+1<10?\"0\".concat(getCurrentTime.getMonth()+1):getCurrentTime.getMonth()+1).concat(getCurrentTime.getDate()<10?\"0\".concat(getCurrentTime.getDate()):getCurrentTime.getDate(),\"%20\").concat(getCurrentTime.getHours()<10?\"0\".concat(getCurrentTime.getHours()):getCurrentTime.getHours(),\":00\");getCurrentTime=\"\".concat(getCurrentTime.getFullYear()).concat(getCurrentTime.getMonth()+1<10?\"0\".concat(getCurrentTime.getMonth()+1):getCurrentTime.getMonth()+1).concat(getCurrentTime.getDate()<10?\"0\".concat(getCurrentTime.getDate()):getCurrentTime.getDate(),\"%20\").concat(getCurrentTime.getHours()<10?\"0\".concat(getCurrentTime.getHours()):getCurrentTime.getHours(),\":\").concat(getCurrentTime.getMinutes()<10?\"0\".concat(getCurrentTime.getMinutes()):getCurrentTime.getMinutes());console.log(\"Tide   -      getCurrentTime: \".concat(getCurrentTime,\" ===> 20200520%2018:24\"));var uriMLLW=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getStartTime,\"&end_date=\").concat(getEndTime,\"&station=9410230&product=water_level&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriMHHW=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime,\"&end_date=\").concat(getCurrentTime,\"&station=9410230&product=water_level&datum=MHHW&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriMHW=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime,\"&end_date=\").concat(getCurrentTime,\"&station=9410230&product=water_level&datum=MHW&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriMTL=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime,\"&end_date=\").concat(getCurrentTime,\"&station=9410230&product=water_level&datum=MTL&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriMSL=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime,\"&end_date=\").concat(getCurrentTime,\"&station=9410230&product=water_level&datum=MSL&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriNAVD=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime,\"&end_date=\").concat(getCurrentTime,\"&station=9410230&product=water_level&datum=NAVD&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriSTND=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getCurrentTime,\"&end_date=\").concat(getCurrentTime,\"&station=9410230&product=water_level&datum=STND&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uri=uriMLLW;//const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\nfetch(uri).then(function(response){return validate(response);}).then(function(data){var waterLevel=Number(data.data[data.data.length-1].v).toFixed(1);console.log(\"tideData => \".concat(JSON.stringify(data,null,2)));_this.props.setTide(waterLevel);_this.setState({station:data.metadata.name,tide:waterLevel>3?\"high\":waterLevel<2?\"low\":\"med\",height:waterLevel});}).catch(function(err){return console.log(\"Something went wrong!\\nuri: \".concat(uri,\" \\npath: \").concat(window.location.pathname,\"\\n\"),err);});};_this.getInterval=function(){return _this.state.height!==null?150000:30000;};_this.getCurrentTide=function(){return/*#__PURE__*/React.createElement(\"div\",null,_this.state.height,\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"greet\"},\"feet\"));};_this.percent='twentyfivePercent mt--70 mb--70';_this.loading=function(){return/*#__PURE__*/React.createElement(\"div\",{className:_this.percent},/*#__PURE__*/React.createElement(Loader,{isMotionOn:_this.props.isMotionOn}));};_this.state={tide:null,height:null};return _this;}_createClass(Tide,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.getTideData();this.timerID=setInterval(function(){return _this2.getTideData();},this.getInterval());}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.timerID);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,this.getCurrentTide());}}]);return Tide;}(React.Component);export default Tide;/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/ /* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/Tide.js"],"names":["React","Loader","Tide","props","getTideData","console","log","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","getCurrentTime","Date","getEndTime","getFullYear","getMonth","getDate","getHours","getMinutes","getStartTime","uriMLLW","uriMHHW","uriMHW","uriMTL","uriMSL","uriNAVD","uriSTND","uri","fetch","then","waterLevel","Number","length","v","toFixed","JSON","stringify","setTide","setState","station","metadata","name","tide","height","catch","err","window","location","pathname","getInterval","state","getCurrentTide","percent","loading","isMotionOn","timerID","setInterval","clearInterval","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Loader from '../utils/Loader.js';\n//import tide from '../../assets/images/tide.png'\n\nclass Tide extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tide: null,\n            height: null\n        }\n    }\n    getTideData = () => {\n        console.log(`getTide ->`);\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        let getCurrentTime = new Date();\n        const getEndTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${((getCurrentTime.getHours())<10) ? `0${(getCurrentTime.getHours())}` : (getCurrentTime.getHours())}:${((getCurrentTime.getMinutes())<10) ? `0${(getCurrentTime.getMinutes())}` : (getCurrentTime.getMinutes())}`;\n        //getCurrentTime = \"20200520%2018:24\";\n        const getStartTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${((getCurrentTime.getHours())<10) ? `0${(getCurrentTime.getHours())}` : (getCurrentTime.getHours())}:00`;\n        getCurrentTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${((getCurrentTime.getHours())<10) ? `0${(getCurrentTime.getHours())}` : (getCurrentTime.getHours())}:${((getCurrentTime.getMinutes())<10) ? `0${(getCurrentTime.getMinutes())}` : (getCurrentTime.getMinutes())}`\n        console.log(`Tide   -      getCurrentTime: ${getCurrentTime} ===> 20200520%2018:24`)\n        const uriMLLW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getStartTime}&end_date=${getEndTime}&station=9410230&product=water_level&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMHHW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MHHW&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMHW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MHW&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMTL = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MTL&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriMSL = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MSL&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriNAVD = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=NAVD&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriSTND = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=STND&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n\n        const uri = uriMLLW;\n        \n        //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                const waterLevel = Number(data.data[data.data.length - 1].v).toFixed(1);\n                console.log(`tideData => ${JSON.stringify(data, null, 2)}`)\n                this.props.setTide(waterLevel)\n                this.setState({\n                    station: data.metadata.name,\n                    tide:(waterLevel > 3) ? \"high\" : (waterLevel < 2) ? \"low\" : \"med\",\n                    height: waterLevel\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n\n    }\n    getInterval = () => (this.state.height !== null) ? 150000 : 30000;\n    componentDidMount() {\n        this.getTideData();\n        this.timerID = setInterval(() => this.getTideData(), this.getInterval());\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    getCurrentTide = () => <div>{this.state.height} <span className=\"greet\">feet</span></div>;\n    percent = 'twentyfivePercent mt--70 mb--70';\n    loading = () => <div className={this.percent}>\n                <Loader isMotionOn={this.props.isMotionOn}/>\n            </div>;\n    render() {\n        return <div>{this.getCurrentTide()}</div>\n    };\n}\n\nexport default Tide;\n/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/\n\n/* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/"]},"metadata":{},"sourceType":"module"}