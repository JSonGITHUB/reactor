{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/LogData.js\";\nimport React from 'react';\nimport PostDirectory from './PostDirectory.js';\n\nclass LogData extends React.Component {\n  constructor(props) {\n    super(props);\n    this.postDirectory = new PostDirectory();\n\n    this.getRecordId = () => {\n      const date = new Date();\n      const st = date.toDateString().replace(/ /g, \"\");\n      const nd = date.toLocaleTimeString().replace(/ /g, \"\");\n      localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n      return `${st}${nd}`;\n    };\n\n    this.getLogTemplate = {\n      Day: {\n        Date: \"2020-04-07T07:00:00.000Z\",\n        Day: 7,\n        Month: 4,\n        Year: 2020\n      },\n      Location: {\n        Break: \"HB: Sanchos\"\n      },\n      Swell: {\n        Direction: \"W\",\n        Height: \"head high\",\n        Report: \"4ft\"\n      },\n      Tide: {\n        Phase: \"High => Low\",\n        Height: \"2ft\"\n      },\n      Wind: {\n        Direction: \"N\",\n        Orientation: \"Offshore\",\n        MPH: \"5mph\",\n        Surface: \"Glassy\"\n      },\n      Conditions: {\n        Conditions: \"Firing\"\n      },\n      Comments: {\n        notes: \"All time HB, pouring rain, glassy, peaky barrels.\"\n      }\n    };\n\n    this.getDate = () => this.state.log.Day.Date;\n\n    console.log(`LOGDATA !!!!! props.recordId: ${props.recordId}`);\n    console.log(`LOGDATA !!!!! postDirectory: ${JSON.stringify(this.postDirectory.getDirectory(), null, 2)}`);\n    this.state = {\n      recordId: props.recordId === null ? this.getRecordId() : props.recordId,\n      log: JSON.parse(localStorage.getItem(props.recordId)) === null ? this.getLogTemplate : JSON.parse(localStorage.getItem(props.recordId))\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }\n    }, \"Count: \", this.state.postDirectory.length);\n  }\n\n}\n\nexport default LogData;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/LogData.js"],"names":["React","PostDirectory","LogData","Component","constructor","props","postDirectory","getRecordId","date","Date","st","toDateString","replace","nd","toLocaleTimeString","localStorage","setItem","getLogTemplate","Day","Month","Year","Location","Break","Swell","Direction","Height","Report","Tide","Phase","Wind","Orientation","MPH","Surface","Conditions","Comments","notes","getDate","state","log","console","recordId","JSON","stringify","getDirectory","parse","getItem","render","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AACA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AA6ClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SA3CnBC,aA2CmB,GA3CH,IAAIL,aAAJ,EA2CG;;AAAA,SAzCnBM,WAyCmB,GAzCL,MAAM;AAChB,YAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,YAAMC,EAAE,GAAGF,IAAI,CAACG,YAAL,GAAoBC,OAApB,CAA4B,IAA5B,EAAiC,EAAjC,CAAX;AACA,YAAMC,EAAE,GAAGL,IAAI,CAACM,kBAAL,GAA0BF,OAA1B,CAAkC,IAAlC,EAAuC,EAAvC,CAAX;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAoC,GAAEN,EAAG,GAAEG,EAAG,EAA9C;AACA,aAAQ,GAAEH,EAAG,GAAEG,EAAG,EAAlB;AACH,KAmCkB;;AAAA,SAjCnBI,cAiCmB,GAjCF;AACbC,MAAAA,GAAG,EAAE;AACHT,QAAAA,IAAI,EAAE,0BADH;AAEHS,QAAAA,GAAG,EAAE,CAFF;AAGHC,QAAAA,KAAK,EAAE,CAHJ;AAIHC,QAAAA,IAAI,EAAE;AAJH,OADQ;AAObC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE;AADC,OAPG;AAUbC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,GADN;AAELC,QAAAA,MAAM,EAAE,WAFH;AAGLC,QAAAA,MAAM,EAAE;AAHH,OAVM;AAebC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,aADH;AAEJH,QAAAA,MAAM,EAAE;AAFJ,OAfO;AAmBbI,MAAAA,IAAI,EAAE;AACJL,QAAAA,SAAS,EAAE,GADP;AAEJM,QAAAA,WAAW,EAAE,UAFT;AAGJC,QAAAA,GAAG,EAAE,MAHD;AAIJC,QAAAA,OAAO,EAAE;AAJL,OAnBO;AAyBbC,MAAAA,UAAU,EAAE;AACVA,QAAAA,UAAU,EAAE;AADF,OAzBC;AA4BbC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE;AADC;AA5BG,KAiCE;;AAAA,SAUnBC,OAVmB,GAUT,MAAM,KAAKC,KAAL,CAAWC,GAAX,CAAepB,GAAf,CAAmBT,IAVhB;;AAEf8B,IAAAA,OAAO,CAACD,GAAR,CAAa,iCAAgCjC,KAAK,CAACmC,QAAS,EAA5D;AACAD,IAAAA,OAAO,CAACD,GAAR,CAAa,gCAA+BG,IAAI,CAACC,SAAL,CAAe,KAAKpC,aAAL,CAAmBqC,YAAnB,EAAf,EAAiD,IAAjD,EAAuD,CAAvD,CAA0D,EAAtG;AAEA,SAAKN,KAAL,GAAa;AACTG,MAAAA,QAAQ,EAAGnC,KAAK,CAACmC,QAAN,KAAmB,IAApB,GAA4B,KAAKjC,WAAL,EAA5B,GAAiDF,KAAK,CAACmC,QADxD;AAETF,MAAAA,GAAG,EAAGG,IAAI,CAACG,KAAL,CAAW7B,YAAY,CAAC8B,OAAb,CAAqBxC,KAAK,CAACmC,QAA3B,CAAX,MAAqD,IAAtD,GAA8D,KAAKvB,cAAnE,GAAoFwB,IAAI,CAACG,KAAL,CAAW7B,YAAY,CAAC8B,OAAb,CAAqBxC,KAAK,CAACmC,QAA3B,CAAX;AAFhF,KAAb;AAIH;;AAGDM,EAAAA,MAAM,GAAG;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKT,KAAL,CAAW/B,aAAX,CAAyByC,MAApC,CAAP;AACP;;AA3DiC;;AA8DtC,eAAe7C,OAAf","sourcesContent":["import React from 'react';\nimport PostDirectory from './PostDirectory.js';\nclass LogData extends React.Component {\n    \n    postDirectory = new PostDirectory();\n\n    getRecordId = () => {\n        const date = new Date()\n        const st = date.toDateString().replace(/ /g,\"\");\n        const nd = date.toLocaleTimeString().replace(/ /g,\"\");\n        localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n        return `${st}${nd}`;\n    }\n\n    getLogTemplate = {\n        Day: {\n          Date: \"2020-04-07T07:00:00.000Z\",\n          Day: 7,\n          Month: 4,\n          Year: 2020\n        },\n        Location: {\n          Break: \"HB: Sanchos\"\n        },\n        Swell: {\n          Direction: \"W\",\n          Height: \"head high\",\n          Report: \"4ft\"\n        },\n        Tide: {\n          Phase: \"High => Low\",\n          Height: \"2ft\"\n        },\n        Wind: {\n          Direction: \"N\",\n          Orientation: \"Offshore\",\n          MPH: \"5mph\",\n          Surface: \"Glassy\"\n        },\n        Conditions: {\n          Conditions: \"Firing\"\n        },\n        Comments: {\n          notes: \"All time HB, pouring rain, glassy, peaky barrels.\"\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(`LOGDATA !!!!! props.recordId: ${props.recordId}`)\n        console.log(`LOGDATA !!!!! postDirectory: ${JSON.stringify(this.postDirectory.getDirectory(),null, 2)}`)\n        \n        this.state = {\n            recordId: (props.recordId === null) ? this.getRecordId() : props.recordId,\n            log: (JSON.parse(localStorage.getItem(props.recordId)) === null) ? this.getLogTemplate : JSON.parse(localStorage.getItem(props.recordId))\n        }\n    }\n    getDate = () => this.state.log.Day.Date;\n    \n    render() {      \n            return <p>Count: {this.state.postDirectory.length}</p> \n    }\n    \n}\nexport default LogData;"]},"metadata":{},"sourceType":"module"}