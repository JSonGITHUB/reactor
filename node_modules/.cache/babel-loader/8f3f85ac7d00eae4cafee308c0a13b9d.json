{"ast":null,"code":"import _slicedToArray from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import GridImage from'./GridImage';import getKey from'./KeyGenerator.js';var SearchBar=function SearchBar(_ref){var term=_ref.term,onSubmit=_ref.onSubmit;var _useState=useState(term||''),_useState2=_slicedToArray(_useState,2),keyword=_useState2[0],setTerm=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),menuArray=_useState4[0],setMenuArray=_useState4[1];var updateArray=function updateArray(array){console.log(\"menuArray: \".concat(JSON.stringify(array,null,2)));setMenuArray(array);};var clearMenu=function clearMenu(){return menuArray.length>0?setMenuArray([]):null;};var onFormSubmit=function onFormSubmit(event){event.preventDefault();clearMenu();console.log(\"Search Term: \".concat(keyword));onSubmit(keyword,updateArray);};var getImage=function getImage(item){return/*#__PURE__*/React.createElement(GridImage,{key:getKey(\"thumb\"),item:item});};/*\n    componentDidMount() {\n        if(window.location.pathname.indexOf(\"Photos\") > -1) {\n            this.clearMenu();\n            this.props.onSubmit('surfing pipeline', this.updateArray);\n        }\n        \n    }\n    */return/*#__PURE__*/React.createElement(\"div\",{className:\"width-100-percent\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:onFormSubmit,className:\"p-10 r-5 bg-lite ml-20 mr-20\"},/*#__PURE__*/React.createElement(\"label\",{className:\"color-yellow\"},\"Search: \"),/*#__PURE__*/React.createElement(\"input\",{className:\"m-5\",type:\"text\",value:keyword,onChange:function onChange(e){return setTerm(e.target.value);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"m-20\"},menuArray.map(function(item){return getImage(item);})));};export default SearchBar;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/SearchBar.js"],"names":["React","useState","useEffect","GridImage","getKey","SearchBar","term","onSubmit","keyword","setTerm","menuArray","setMenuArray","updateArray","array","console","log","JSON","stringify","clearMenu","length","onFormSubmit","event","preventDefault","getImage","item","e","target","value","map"],"mappings":"qJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAsB,IAApBC,CAAAA,IAAoB,MAApBA,IAAoB,CAAdC,QAAc,MAAdA,QAAc,eAETN,QAAQ,CAACK,IAAI,EAAI,EAAT,CAFC,wCAE7BE,OAF6B,eAEpBC,OAFoB,8BAGFR,QAAQ,CAAC,EAAD,CAHN,yCAG7BS,SAH6B,eAGlBC,YAHkB,eAKpC,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC3BC,OAAO,CAACC,GAAR,sBAA0BC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAsB,IAAtB,CAA4B,CAA5B,CAA1B,GACAF,YAAY,CAACE,KAAD,CAAZ,CACH,CAHD,CAIA,GAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAAOR,CAAAA,SAAS,CAACS,MAAV,CAAiB,CAAlB,CAAuBR,YAAY,CAAC,EAAD,CAAnC,CAA0C,IAAhD,EAAlB,CACA,GAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAK,CAC3BA,KAAK,CAACC,cAAN,GACAJ,SAAS,GACTJ,OAAO,CAACC,GAAR,wBAA4BP,OAA5B,GACAD,QAAQ,CAACC,OAAD,CAAUI,WAAV,CAAR,CACH,CALD,CAMA,GAAMW,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,qBAAU,oBAAC,SAAD,EAAW,GAAG,CAAEpB,MAAM,CAAC,OAAD,CAAtB,CAAiC,IAAI,CAAEoB,IAAvC,EAAV,EAAjB,CACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MACI,mBACI,2BAAK,SAAS,CAAC,mBAAf,eACI,4BAAM,QAAQ,CAAEJ,YAAhB,CAA8B,SAAS,CAAC,8BAAxC,eACQ,6BAAO,SAAS,CAAC,cAAjB,aADR,cAEQ,6BACI,SAAS,CAAC,KADd,CAEI,IAAI,CAAC,MAFT,CAGI,KAAK,CAAEZ,OAHX,CAII,QAAQ,CAAE,kBAAAiB,CAAC,QAAIhB,CAAAA,OAAO,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,EAJf,EAFR,CADJ,cAUI,2BAAK,SAAS,CAAC,MAAf,EACKjB,SAAS,CAACkB,GAAV,CAAc,SAACJ,IAAD,QAAUD,CAAAA,QAAQ,CAACC,IAAD,CAAlB,EAAd,CADL,CAVJ,CADJ,CAgBH,CA1CD,CA4CA,cAAenB,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GridImage from './GridImage'\nimport getKey from './KeyGenerator.js';\n\nconst SearchBar = ({term, onSubmit}) => {\n\n    const [keyword, setTerm] = useState(term || '');\n    const [menuArray, setMenuArray] = useState([]);\n\n    const updateArray = (array) => {\n        console.log(`menuArray: ${JSON.stringify(array, null, 2)}`)\n        setMenuArray(array);\n    }\n    const clearMenu = () => (menuArray.length>0) ? setMenuArray([]) : null;\n    const onFormSubmit = event =>  {\n        event.preventDefault();\n        clearMenu();\n        console.log(`Search Term: ${keyword}`);\n        onSubmit(keyword, updateArray);\n    }\n    const getImage = (item) => <GridImage key={getKey(\"thumb\")} item={item}></GridImage>\n    /*\n    componentDidMount() {\n        if(window.location.pathname.indexOf(\"Photos\") > -1) {\n            this.clearMenu();\n            this.props.onSubmit('surfing pipeline', this.updateArray);\n        }\n        \n    }\n    */\n    return (\n        <div className='width-100-percent'>\n            <form onSubmit={onFormSubmit} className='p-10 r-5 bg-lite ml-20 mr-20'>\n                    <label className='color-yellow'>Search: </label>\n                    <input\n                        className='m-5'\n                        type=\"text\"\n                        value={keyword}\n                        onChange={e => setTerm(e.target.value)}\n                    />\n            </form>\n            <div className='m-20'>\n                {menuArray.map((item) => getImage(item))}   \n            </div> \n        </div>\n    )\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}