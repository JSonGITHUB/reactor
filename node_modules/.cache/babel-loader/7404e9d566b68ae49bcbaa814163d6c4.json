{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/Home.js\";\nimport React from 'react';\nimport Timer from './Timer.js';\nimport Geolocator from './utils/Geolocator.js';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.calculateDistance = () => {\n      const lat1 = this.state.markedLatitude;\n      const lat2 = this.state.latitude;\n      const lon1 = this.state.markedLongitude;\n      const lon2 = this.state.longitude;\n      const unit = \"Miles\";\n\n      if (lat1 === lat2 && lon1 === lon2) {\n        return 0;\n      } else {\n        var radlat1 = Math.PI * lat1 / 180;\n        var radlat2 = Math.PI * lat2 / 180;\n        var theta = lon1 - lon2;\n        var radtheta = Math.PI * theta / 180;\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n\n        if (dist > 1) {\n          dist = 1;\n        }\n\n        dist = Math.acos(dist);\n        dist = dist * 180 / Math.PI;\n        dist = dist * 60 * 1.1515;\n        dist = dist.toFixed(0);\n\n        if (unit === \"Kilometers\") {\n          dist = dist * 1.609344;\n        }\n\n        if (unit === \"Nautical\") {\n          dist = dist * 0.8684;\n        }\n\n        console.log(`DISTANCE => ${dist}`);\n        return dist;\n      }\n    };\n\n    this.updateCurrentLocation = (longitude, latitude) => {\n      console.log(`UPDATING CURRENT POSITION ======> longitude: ${longitude} latitude: ${latitude}`);\n      this.setState({\n        longitude: longitude,\n        latitude: latitude,\n        distance: this.calculateDistance()\n      });\n    };\n\n    this.startDistance = () => {\n      this.setState({\n        markedLatitude: this.state.latitude,\n        markedLongitude: this.state.longitude\n      });\n    };\n\n    this.getDistance = () => this.state.distance;\n\n    this.state = {\n      longitude: null,\n      latitude: null,\n      distance: 0,\n      markedLongitude: null,\n      markedLatitude: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"App-link bold greet p-20 r-10 w-200 bg-green brdr-green noUnderline\",\n      href: \"https://jsongithub.github.io/portfolio/\",\n      target: \"_self\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"portfolio\"), /*#__PURE__*/React.createElement(Timer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), \"Current position:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(Geolocator, {\n      currentPositionExists: \"false\",\n      returnCurrentPosition: this.updateCurrentLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-neogreen p-20 bold greet bg-dkGreen r-5 m-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, this.getDistance()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button p-20 r-5 m-20 bg-neogreen completedSelector\",\n      onClick: this.startDistance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Start Distance\")));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/Home.js"],"names":["React","Timer","Geolocator","Home","Component","constructor","props","calculateDistance","lat1","state","markedLatitude","lat2","latitude","lon1","markedLongitude","lon2","longitude","unit","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","toFixed","console","log","updateCurrentLocation","setState","distance","startDistance","getDistance","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Timer from './Timer.js';\nimport Geolocator from './utils/Geolocator.js';\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            longitude: null,\n            latitude: null,\n            distance: 0,\n            markedLongitude: null,\n            markedLatitude: null\n        }\n    }\n    calculateDistance = () => {\n        const lat1 = this.state.markedLatitude;\n        const lat2 = this.state.latitude;\n        const lon1 = this.state.markedLongitude;\n        const lon2 = this.state.longitude;\n        const unit = \"Miles\"\n\n        if ((lat1 === lat2) && (lon1 === lon2)) {\n            return 0;\n        }else {\n            var radlat1 = Math.PI * lat1/180;\n            var radlat2 = Math.PI * lat2/180;\n            var theta = lon1-lon2;\n            var radtheta = Math.PI * theta/180;\n            var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n            if (dist > 1) {\n                dist = 1;\n            }\n            dist = Math.acos(dist);\n            dist = dist * 180/Math.PI;\n            dist = dist * 60 * 1.1515;\n            dist = dist.toFixed(0);\n            if (unit===\"Kilometers\") { dist = dist * 1.609344 }\n            if (unit===\"Nautical\") { dist = dist * 0.8684 }\n            console.log(`DISTANCE => ${dist}`)\n            return dist;\n        }\n    }\n    updateCurrentLocation = (longitude, latitude) => {\n        console.log(`UPDATING CURRENT POSITION ======> longitude: ${longitude} latitude: ${latitude}`)\n        this.setState({\n            longitude: longitude,\n            latitude: latitude,\n            distance: this.calculateDistance()\n        })\n    }\n    startDistance = () => {\n        this.setState({\n            markedLatitude: this.state.latitude,\n            markedLongitude: this.state.longitude\n        })\n    }\n    getDistance = () => this.state.distance;\n    render() {\n        return (\n            <div className=\"App fadeIn\">\n                <header className=\"App-content\">\n                    <a className=\"App-link bold greet p-20 r-10 w-200 bg-green brdr-green noUnderline\"\n                    href=\"https://jsongithub.github.io/portfolio/\"\n                    target=\"_self\"\n                    rel=\"noopener noreferrer\"\n                    >\n                        portfolio\n                    </a>\n                    {/*<Lister items={[1,2,3]} />*/}\n                    <Timer/>\n                    Current position:<br/>\n                    <Geolocator currentPositionExists=\"false\" returnCurrentPosition={this.updateCurrentLocation}/>\n                    <div className=\"color-neogreen p-20 bold greet bg-dkGreen r-5 m-20\">{this.getDistance()}</div>\n                    <div className=\"button p-20 r-5 m-20 bg-neogreen completedSelector\" onClick={this.startDistance}>Start Distance</div>\n                </header>\n            </div>\n        );\n    };\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}