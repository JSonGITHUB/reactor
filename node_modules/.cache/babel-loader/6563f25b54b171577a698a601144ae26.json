{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/Photos.js\";\nimport React, { useState } from 'react';\nimport SearchBar from './utils/SearchBar';\nimport UnSplash from './utils/UnSplash';\nimport config from '../apis/config';\n\nconst Photos = () => {\n  const [photos, setPhotos] = useState([]);\n  const KEY = 'Client-ID ' + config.unsplashAPI_KEY;\n  const api = config.unsplashAPI_BASE_URL;\n  console.log(`Photos => \\nconfig: ${JSON.stringify(config, null, 2)}`);\n  console.log(`Photos => \\napi: ${api}`);\n\n  const onSearchSubmit = async (term, callback) => {\n    const response = await UnSplash.get(api, {\n      params: {\n        query: term\n      },\n      headers: {\n        Authorization: KEY //need to get key\n\n      }\n    }).then(response => {\n      const images = [];\n      response.data.results.map((item, index) => {\n        images.push({\n          'image': item.urls.thumb,\n          'description': item.alt_description,\n          'location': item.user.location\n        });\n      });\n      setPhotos(images);\n      return callback(images);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    onSubmit: onSearchSubmit,\n    api: api,\n    KEY: KEY,\n    term: \"Wave\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"white p-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, photos.length, \" photos.\"));\n};\n\nexport default Photos;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/Photos.js"],"names":["React","useState","SearchBar","UnSplash","config","Photos","photos","setPhotos","KEY","unsplashAPI_KEY","api","unsplashAPI_BASE_URL","console","log","JSON","stringify","onSearchSubmit","term","callback","response","get","params","query","headers","Authorization","then","images","data","results","map","item","index","push","urls","thumb","alt_description","user","location","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMO,GAAG,GAAG,eAAeJ,MAAM,CAACK,eAAlC;AACA,QAAMC,GAAG,GAAGN,MAAM,CAACO,oBAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBC,IAAI,CAACC,SAAL,CAAeX,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAgC,EAAnE;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBH,GAAI,EAApC;;AAEA,QAAMM,cAAc,GAAG,OAAOC,IAAP,EAAaC,QAAb,KAA0B;AAC7C,UAAMC,QAAQ,GAAG,MAAMhB,QAAQ,CAACiB,GAAT,CAAaV,GAAb,EAAkB;AACjCW,MAAAA,MAAM,EAAE;AAACC,QAAAA,KAAK,EAAEL;AAAR,OADyB;AAEjCM,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAEhB,GADV,CACa;;AADb;AAFwB,KAAlB,EAMlBiB,IANkB,CAMZN,QAAQ,IAAI;AACf,YAAMO,MAAM,GAAG,EAAf;AACAP,MAAAA,QAAQ,CAACQ,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA0B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvCL,QAAAA,MAAM,CAACM,IAAP,CAAY;AACR,mBAASF,IAAI,CAACG,IAAL,CAAUC,KADX;AAER,yBAAeJ,IAAI,CAACK,eAFZ;AAGR,sBAAYL,IAAI,CAACM,IAAL,CAAUC;AAHd,SAAZ;AAKH,OAND;AAOA9B,MAAAA,SAAS,CAACmB,MAAD,CAAT;AACA,aAAOR,QAAQ,CAACQ,MAAD,CAAf;AACH,KAjBkB,CAAvB;AAkBH,GAnBD;;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAEV,cAArB;AAAqC,IAAA,GAAG,EAAEN,GAA1C;AAA+C,IAAA,GAAG,EAAEF,GAApD;AAAyD,IAAA,IAAI,EAAC,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BF,MAAM,CAACgC,MAApC,aAFJ,CADJ;AAMH,CAlCD;;AAmCA,eAAejC,MAAf","sourcesContent":["import React, {useState} from 'react';\nimport SearchBar from './utils/SearchBar';\nimport UnSplash from './utils/UnSplash';\nimport config from '../apis/config';\n\nconst Photos = () => {\n\n    const [photos, setPhotos] = useState([]);\n    const KEY = 'Client-ID ' + config.unsplashAPI_KEY;\n    const api = config.unsplashAPI_BASE_URL;\n    console.log(`Photos => \\nconfig: ${JSON.stringify(config, null, 2)}`)\n    console.log(`Photos => \\napi: ${api}`)\n\n    const onSearchSubmit = async (term, callback) => {\n        const response = await UnSplash.get(api, {\n                params: {query: term},\n                headers: {\n                    Authorization: KEY//need to get key\n                }\n            })\n            .then (response => {\n                const images = [];\n                response.data.results.map((item, index) => {\n                    images.push({\n                        'image': item.urls.thumb,\n                        'description': item.alt_description,\n                        'location': item.user.location\n                    });\n                })\n                setPhotos(images);\n                return callback(images)\n            });\n    }\n    return (\n        <div className=\"ui container\">\n            <SearchBar onSubmit={onSearchSubmit} api={api} KEY={KEY} term='Wave'/>\n            <div className='white p-10'>{photos.length} photos.</div>\n        </div>\n    )\n}\nexport default Photos;"]},"metadata":{},"sourceType":"module"}