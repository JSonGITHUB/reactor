{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js\";\nimport React from 'react';\nimport PostDirectory from './PostDirectory.js';\nimport logTemplateData from './LogTemplateData.js';\n\nclass LogId extends React.Component {\n  constructor(props) {\n    super(props);\n    this.postDirectory = new PostDirectory();\n\n    this.getDate = () => this.state.log.Day.Date;\n\n    this.generateNewLogId = () => {\n      const date = new Date();\n      const st = date.toDateString().replace(/ /g, \"\");\n      const nd = date.toLocaleTimeString().replace(/ /g, \"\");\n      localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n      const newId = `${st}${nd}`;\n      console.log(`LogId: generateNewLogId => this.state.logId: ${newId}`);\n      /*\n      this.setState({\n          logId: newId\n      });\n      */\n\n      return newId;\n    };\n\n    this.setLogId = (logId, log) => this.setState({\n      logId: logId,\n      log: log\n    });\n\n    this.getLogId = () => this.state.logId;\n\n    this.state = {\n      logId: logId === null || logId === undefined ? this.postDirectory.getLastId() : logId,\n      log: JSON.parse(localStorage.getItem(logId)) === null ? logTemplateData : JSON.parse(localStorage.getItem(logId))\n    };\n  }\n\n  render() {\n    const {\n      logId,\n      log,\n      postDirectory\n    } = this.state;\n    console.log(`LastLogId => render: this.state.logId: ${logId} - this.state.log: ${log}`);\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }\n    }, \"Count: \", postDirectory.length);\n  }\n\n}\n\nexport default LogId;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js"],"names":["React","PostDirectory","logTemplateData","LogId","Component","constructor","props","postDirectory","getDate","state","log","Day","Date","generateNewLogId","date","st","toDateString","replace","nd","toLocaleTimeString","localStorage","setItem","newId","console","setLogId","logId","setState","getLogId","undefined","getLastId","JSON","parse","getItem","render","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAIhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAFnBC,aAEmB,GAFH,IAAIN,aAAJ,EAEG;;AAAA,SAQnBO,OARmB,GAQT,MAAM,KAAKC,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBC,IARhB;;AAAA,SASnBC,gBATmB,GASA,MAAM;AACrB,YAAMC,IAAI,GAAG,IAAIF,IAAJ,EAAb;AACA,YAAMG,EAAE,GAAGD,IAAI,CAACE,YAAL,GAAoBC,OAApB,CAA4B,IAA5B,EAAiC,EAAjC,CAAX;AACA,YAAMC,EAAE,GAAGJ,IAAI,CAACK,kBAAL,GAA0BF,OAA1B,CAAkC,IAAlC,EAAuC,EAAvC,CAAX;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAoC,GAAEN,EAAG,GAAEG,EAAG,EAA9C;AACA,YAAMI,KAAK,GAAI,GAAEP,EAAG,GAAEG,EAAG,EAAzB;AACAK,MAAAA,OAAO,CAACb,GAAR,CAAa,gDAA+CY,KAAM,EAAlE;AACA;AACR;AACA;AACA;AACA;;AACQ,aAAOA,KAAP;AACH,KAtBkB;;AAAA,SAuBnBE,QAvBmB,GAuBR,CAACC,KAAD,EAAQf,GAAR,KAAgB,KAAKgB,QAAL,CAAc;AACrCD,MAAAA,KAAK,EAAEA,KAD8B;AAErCf,MAAAA,GAAG,EAAEA;AAFgC,KAAd,CAvBR;;AAAA,SA+BnBiB,QA/BmB,GA+BR,MAAM,KAAKlB,KAAL,CAAWgB,KA/BT;;AAGf,SAAKhB,KAAL,GAAa;AACTgB,MAAAA,KAAK,EAAGA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKG,SAA7B,GAA0C,KAAKrB,aAAL,CAAmBsB,SAAnB,EAA1C,GAA2EJ,KADzE;AAETf,MAAAA,GAAG,EAAGoB,IAAI,CAACC,KAAL,CAAWX,YAAY,CAACY,OAAb,CAAqBP,KAArB,CAAX,MAA4C,IAA7C,GAAqDvB,eAArD,GAAuE4B,IAAI,CAACC,KAAL,CAAWX,YAAY,CAACY,OAAb,CAAqBP,KAArB,CAAX;AAFnE,KAAb;AAIH;;AA0BDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAER,MAAAA,KAAF;AAASf,MAAAA,GAAT;AAAcH,MAAAA;AAAd,QAA+B,KAAKE,KAA1C;AACAc,IAAAA,OAAO,CAACb,GAAR,CAAa,0CAAyCe,KAAM,sBAAqBf,GAAI,EAArF;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWH,aAAa,CAAC2B,MAAzB,CAAP;AACH;;AAzC+B;;AA4CpC,eAAe/B,KAAf","sourcesContent":["import React from 'react';\nimport PostDirectory from './PostDirectory.js';\nimport logTemplateData from './LogTemplateData.js';\n\nclass LogId extends React.Component {\n    \n    postDirectory = new PostDirectory();\n    \n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            logId: (logId === null || logId === undefined) ? this.postDirectory.getLastId() : logId,\n            log: (JSON.parse(localStorage.getItem(logId)) === null) ? logTemplateData : JSON.parse(localStorage.getItem(logId))\n        }\n    }\n    getDate = () => this.state.log.Day.Date;\n    generateNewLogId = () => {\n        const date = new Date()\n        const st = date.toDateString().replace(/ /g,\"\");\n        const nd = date.toLocaleTimeString().replace(/ /g,\"\");\n        localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n        const newId = `${st}${nd}`;\n        console.log(`LogId: generateNewLogId => this.state.logId: ${newId}`);\n        /*\n        this.setState({\n            logId: newId\n        });\n        */\n        return newId;\n    }\n    setLogId = (logId, log) => this.setState({\n        logId: logId,\n        log: log\n    });\n    //getLocalLastRecordId = () => localStorage.getItem(\"lastPostId\");\n    //lastRecordIdExists = () => (this.getLocalLastRecordId() === null) ? false : true; \n    //lastRecordExists = () => (this.lastRecordIdExists() === true && localStorage.getItem(this.getLocalLastRecordId()) !== null) ? true : false\n    //getLastRecordId = () => (localStorage.getItem(\"lastPostId\") === null) ? this.generateNewLogId() : localStorage.getItem(\"lastPostId\");\n    getLogId = () => this.state.logId;\n    \n    render() {   \n        const { logId, log, postDirectory} = this.state;   \n        console.log(`LastLogId => render: this.state.logId: ${logId} - this.state.log: ${log}`);\n        return <p>Count: {postDirectory.length}</p> \n    }\n    \n}\nexport default LogId;"]},"metadata":{},"sourceType":"module"}