{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/TextColorizer.js\";\nimport React from 'react';\n\nclass TextColorizer extends React.Component {\n  constructor(_text) {\n    super();\n    this.colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n    this.colorIndex = 0;\n    this.getNextIndex = this.colorIndex === this.colors.length - 1 ? 0 : this.colors + 1;\n    this.getNextColor = this.colors[this.getNextIndex];\n\n    this.colorizeIt = text => {\n      text = text.split(\"\");\n      text.forEach(this.colorize);\n    };\n\n    this.colorize = (value, index, array) => {\n      //console.log(\"index: \" + index); \n      //console.log(\"array: \" + array); \n      //console.log(\"value: \" + value);\n      const character = value;\n\n      const colorizedCharacter = character => `<span class=${this.getNextColor}>${character}</span>`;\n\n      return colorizedCharacter(character);\n    };\n\n    this.text = _text;\n    console.log(`text: ${_text}`);\n  }\n\n  render() {\n    alert(`text: ${this.text}`);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"bigHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }\n    }, this.colorizeIt(this.props.text));\n  }\n\n}\n\nexport default TextColorizer;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/TextColorizer.js"],"names":["React","TextColorizer","Component","constructor","text","colors","colorIndex","getNextIndex","length","getNextColor","colorizeIt","split","forEach","colorize","value","index","array","character","colorizedCharacter","console","log","render","alert","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd;AADc,SAKlBC,MALkB,GAKT,CAAC,aAAD,EAAgB,cAAhB,EAAgC,WAAhC,CALS;AAAA,SAMlBC,UANkB,GAML,CANK;AAAA,SAOlBC,YAPkB,GAOF,KAAKD,UAAL,KAAqB,KAAKD,MAAL,CAAYG,MAAZ,GAAmB,CAAzC,GAA+C,CAA/C,GAAoD,KAAKH,MAAL,GAAc,CAP/D;AAAA,SAQlBI,YARkB,GAQF,KAAKJ,MAAL,CAAY,KAAKE,YAAjB,CARE;;AAAA,SASlBG,UATkB,GASJN,IAAD,IAAU;AACnBA,MAAAA,IAAI,GAAGA,IAAI,CAACO,KAAL,CAAW,EAAX,CAAP;AACAP,MAAAA,IAAI,CAACQ,OAAL,CAAa,KAAKC,QAAlB;AACH,KAZiB;;AAAA,SAalBA,QAbkB,GAaP,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyB;AAChC;AACA;AACA;AACA,YAAMC,SAAS,GAAGH,KAAlB;;AACA,YAAMI,kBAAkB,GAAID,SAAD,IAAgB,eAAc,KAAKR,YAAa,IAAGQ,SAAU,SAAxF;;AACA,aAAOC,kBAAkB,CAACD,SAAD,CAAzB;AACH,KApBiB;;AAEd,SAAKb,IAAL,GAAYA,KAAZ;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAQhB,KAAK,EAA1B;AACH;;AAiBDiB,EAAAA,MAAM,GAAG;AACLC,IAAAA,KAAK,CAAE,SAAQ,KAAKlB,IAAK,EAApB,CAAL;AACA,wBAAO;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKM,UAAL,CAAgB,KAAKa,KAAL,CAAWnB,IAA3B,CAAxB,CAAP;AACH;;AA1BuC;;AA6B5C,eAAeH,aAAf","sourcesContent":["import React from 'react';\nclass TextColorizer extends React.Component {\n    text;\n    constructor(text) {\n        super();\n        this.text = text;\n        console.log(`text: ${text}`)\n    }\n    colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n    colorIndex = 0;\n    getNextIndex = (this.colorIndex === (this.colors.length-1)) ? 0 : (this.colors + 1);\n    getNextColor = (this.colors[this.getNextIndex]);\n    colorizeIt = (text) => {\n        text = text.split(\"\");\n        text.forEach(this.colorize);\n    };\n    colorize = (value, index, array) => {\n        //console.log(\"index: \" + index); \n        //console.log(\"array: \" + array); \n        //console.log(\"value: \" + value);\n        const character = value;\n        const colorizedCharacter = (character) => `<span class=${this.getNextColor}>${character}</span>`\n        return colorizedCharacter(character);\n    }\n    render() {\n        alert(`text: ${this.text}`)\n        return <div class=\"bigHeader\">{this.colorizeIt(this.props.text)}</div>;\n    }\n}\n\nexport default TextColorizer;"]},"metadata":{},"sourceType":"module"}