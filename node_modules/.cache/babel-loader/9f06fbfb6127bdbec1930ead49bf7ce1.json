{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ScrollToTop.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollToTop = _ref => {\n  _s();\n  let {\n    loc\n  } = _ref;\n  useEffect(() => {\n    if (window.location.pathname !== loc.location) {\n      //console.log(`ScrollToTop =>\\nlocation: ${loc.pathname}`);\n      window.scrollTo(0, 0);\n    }\n  }, [loc.location, loc.pathname]);\n  const resetScroll = () => {\n    const body = document.body; // For Safari\n    const html = document.documentElement; // Chrome, Firefox, IE and Opera places the overflow at the html level, unless else is specified. Therefore, we use the documentElement property for these browsers\n    body.scrollLeft = 0;\n    body.scrollTop = 0;\n    html.scrollLeft = 0;\n    html.scrollTop = 0;\n  };\n  resetScroll();\n  return /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n_s(ScrollToTop, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ScrollToTop;\nexport default _c2 = withRouter(ScrollToTop);\nvar _c, _c2;\n$RefreshReg$(_c, \"ScrollToTop\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","withRouter","jsxDEV","_jsxDEV","ScrollToTop","_ref","_s","loc","window","location","pathname","scrollTo","resetScroll","body","document","html","documentElement","scrollLeft","scrollTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ScrollToTop.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nconst ScrollToTop = ({ loc }) => {\n    useEffect(() => {\n        if (window.location.pathname !== loc.location) {\n            //console.log(`ScrollToTop =>\\nlocation: ${loc.pathname}`);\n            window.scrollTo(0, 0);\n        }    \t\t\n    },[loc.location, loc.pathname]);\n\n    const resetScroll = () => {\n        const body = document.body; // For Safari\n        const html = document.documentElement; // Chrome, Firefox, IE and Opera places the overflow at the html level, unless else is specified. Therefore, we use the documentElement property for these browsers\n        body.scrollLeft = 0;\n        body.scrollTop = 0;\n        html.scrollLeft = 0;\n        html.scrollTop = 0;\n    }\n    resetScroll();\n    return <span></span>\n}\n\nexport default withRouter(ScrollToTop)"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGC,IAAA,IAAa;EAAAC,EAAA;EAAA,IAAZ;IAAEC;EAAI,CAAC,GAAAF,IAAA;EACxBL,SAAS,CAAC,MAAM;IACZ,IAAIQ,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAKH,GAAG,CAACE,QAAQ,EAAE;MAC3C;MACAD,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACzB;EACJ,CAAC,EAAC,CAACJ,GAAG,CAACE,QAAQ,EAAEF,GAAG,CAACG,QAAQ,CAAC,CAAC;EAE/B,MAAME,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,IAAI,GAAGC,QAAQ,CAACD,IAAI,CAAC,CAAC;IAC5B,MAAME,IAAI,GAAGD,QAAQ,CAACE,eAAe,CAAC,CAAC;IACvCH,IAAI,CAACI,UAAU,GAAG,CAAC;IACnBJ,IAAI,CAACK,SAAS,GAAG,CAAC;IAClBH,IAAI,CAACE,UAAU,GAAG,CAAC;IACnBF,IAAI,CAACG,SAAS,GAAG,CAAC;EACtB,CAAC;EACDN,WAAW,CAAC,CAAC;EACb,oBAAOT,OAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC;AACxB,CAAC;AAAAhB,EAAA,CAlBKF,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAoBjB,eAAAoB,GAAA,GAAevB,UAAU,CAACG,WAAW,CAAC;AAAA,IAAAmB,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}