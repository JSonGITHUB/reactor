{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/SurfLocation.js\";\nimport React from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport Tide from './Tide.js';\nimport WaterTemp from './WaterTemp.js';\nimport AirTemp from './AirTemp.js';\nimport WindDirection from './WindDirection.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport Dialog from '../functional/Dialog.js';\nimport swell1 from '../../assets/images/wavePrimary.png';\nimport swell2 from '../../assets/images/waveSecondaryB.png';\nimport N from '../../assets/images/windN.png';\nimport NE from '../../assets/images/windNE.png';\nimport E from '../../assets/images/windE.png';\nimport SE from '../../assets/images/windSE.png';\nimport S from '../../assets/images/windS.png';\nimport SW from '../../assets/images/windSW.png';\nimport W from '../../assets/images/windW.png';\nimport NW from '../../assets/images/windNW.png';\nimport tide from '../../assets/images/tide.png';\n\nclass SurfLocation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addOne = this.props.addOne;\n    const {\n      windDirection,\n      swell1Direction,\n      swell2Direction,\n      tide,\n      height\n    } = props.state;\n    this.state = {\n      windDirection: windDirection,\n      swell1Direction: swell1Direction,\n      swell2Direction: swell2Direction,\n      tide: tide,\n      height: height\n    };\n  }\n\n  render() {\n    const {\n      windDirection,\n      swell1Direction,\n      swell2Direction,\n      tide,\n      height\n    } = this.state;\n\n    const statusClass = status => status === true ? \"color-neogreen\" : \"color-yellow\";\n\n    const subStatusClass = status => status === true ? \"color-orange\" : \"color-yellow\";\n\n    const swell1Match = item => item.swell.indexOf(swell1Direction) > -1 ? true : false;\n\n    const swell2Match = item => item.swell.indexOf(swell2Direction) > -1 ? true : false;\n\n    const windMatch = item => item.wind.indexOf(windDirection) > -1 ? true : false;\n\n    const tideMatch = item => item.tide.indexOf(tide) > -1 ? true : false;\n\n    const swell1DirectionMatch = direction => direction.swell === swell1Direction ? true : false;\n\n    const swell2DirectionMatch = direction => direction === swell2Direction ? true : false;\n\n    const windDirectionMatch = direction => direction.wind === windDirection ? true : false;\n\n    const tideDirectionMatch = direction => direction.tide === tide ? true : false;\n\n    const swell1Confirm = matches => this.state.isSwell1 && matches.includes(\"swell1\") || this.state.isSwell1 === false ? true : false;\n\n    const swell2Confirm = matches => this.state.isSwell2 && matches.includes(\"swell2\") || this.state.isSwell2 === false ? true : false;\n\n    const tideConfirm = matches => this.state.isTide && matches.includes(\"tide\") || this.state.isTide === false ? true : false;\n\n    const windConfirm = matches => this.state.isWind && matches.includes(\"wind\") || this.state.isWind === false ? true : false;\n\n    const match = item => {\n      const matches = [];\n      let matchesCount = swell1Match(item) ? matches.push(\"swell1\") : matches;\n      matchesCount = swell2Match(item) ? matches.push(\"swell2\") : matches;\n      matchesCount = windMatch(item) ? matches.push(\"wind\") : matches;\n      matchesCount = tideMatch(item) ? matches.push(\"tide\") : matches; //console.log(`matches => ${item.name} - ${matches}`)\n\n      return matches;\n    };\n\n    const calculateDistance = item => {\n      const lat1 = item.latitude;\n      const lat2 = this.state.latitude;\n      const lon1 = item.longitude;\n      const lon2 = this.state.longitude;\n      const unit = \"Miles\";\n\n      if (lat1 === lat2 && lon1 === lon2) {\n        return 0;\n      } else {\n        var radlat1 = Math.PI * lat1 / 180;\n        var radlat2 = Math.PI * lat2 / 180;\n        var theta = lon1 - lon2;\n        var radtheta = Math.PI * theta / 180;\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n\n        if (dist > 1) {\n          dist = 1;\n        }\n\n        dist = Math.acos(dist);\n        dist = dist * 180 / Math.PI;\n        dist = dist * 60 * 1.1515;\n        dist = dist.toFixed(1);\n\n        if (unit === \"Kilometers\") {\n          dist = dist * 1.609344;\n        }\n\n        if (unit === \"Nautical\") {\n          dist = dist * 0.8684;\n        } //console.log(`DISTANCE => ${dist}`)\n\n\n        return dist;\n      }\n    };\n\n    const distance = item => calculateDistance(item); //Math.abs(item.latitude - this.state.latitude)+Math.abs(item.longitude - this.state.longitude);\n    //.01 - 1 mile\n\n\n    const distanceRange = Number(this.state.distance);\n\n    const regionMatch = item => distance(item) < distanceRange ? distance(item) : false;\n\n    const getMatchingLocation = item => {\n      const matches = match(item);\n\n      if (swell1Confirm(matches) && swell2Confirm(matches) && tideConfirm(matches) && windConfirm(matches)) {\n        if (regionMatch(item) !== false) {\n          if (matches.length >= Number(this.state.stars)) {\n            //console.log(`STARS ==================> Matches: ${matches.length} state stars:${this.state.stars}`)\n            this.props.addOne();\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: getKey(\"loc\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 32\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"r-10 m-10 p-20 bg-dkGreen\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"width100Percent flexContainer\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 45\n              }\n            }, this.getStars(matches)), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"mt-10 navBranding\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 45\n              }\n            }, item.name), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"greet color-yellow p-5 bg-dkGreen mt-15 mb-10 r-5\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 45\n              }\n            }, `${regionMatch(item)} miles`), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"flexContainer\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"flexContainer m-auto\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"columnRight pr-10\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 49\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"color-neogreen bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 53\n              }\n            }, \"Swell: \"), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"color-neogreen bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 53\n              }\n            }, \"Wind: \"), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"color-neogreen bold\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 53\n              }\n            }, \"Tide: \")), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"columnLeft\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 49\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 53\n              }\n            }, item.swell.map((swell, i) => /*#__PURE__*/React.createElement(\"span\", {\n              className: swell === this.state.swell1Direction ? statusClass(swell1Match(item)) : subStatusClass(swell2DirectionMatch(swell)),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 88\n              }\n            }, swell, i + 1 === item.swell.length ? \"\" : \", \"))), /*#__PURE__*/React.createElement(\"div\", {\n              className: statusClass(windMatch(item)),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 53\n              }\n            }, item.wind.map((wind, i) => /*#__PURE__*/React.createElement(\"span\", {\n              className: statusClass(windDirectionMatch({\n                wind\n              })),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 85\n              }\n            }, wind, i + 1 === item.wind.length ? \"\" : \", \"))), /*#__PURE__*/React.createElement(\"div\", {\n              className: statusClass(tideMatch(item)),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 53\n              }\n            }, item.tide.map((tide, i) => /*#__PURE__*/React.createElement(\"span\", {\n              className: statusClass(tideDirectionMatch({\n                tide\n              })),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 126\n              }\n            }, tide, i + 1 === item.tide.length ? \"\" : \", \"))))))));\n          }\n        }\n      }\n    };\n\n    return getMatchingLocation(this.props.item);\n  }\n\n}\n\nexport default SurfLocation;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/SurfLocation.js"],"names":["React","getKey","Tide","WaterTemp","AirTemp","WindDirection","Selector","Dialog","swell1","swell2","N","NE","E","SE","S","SW","W","NW","tide","SurfLocation","Component","constructor","props","addOne","windDirection","swell1Direction","swell2Direction","height","state","render","statusClass","status","subStatusClass","swell1Match","item","swell","indexOf","swell2Match","windMatch","wind","tideMatch","swell1DirectionMatch","direction","swell2DirectionMatch","windDirectionMatch","tideDirectionMatch","swell1Confirm","matches","isSwell1","includes","swell2Confirm","isSwell2","tideConfirm","isTide","windConfirm","isWind","match","matchesCount","push","calculateDistance","lat1","latitude","lat2","lon1","longitude","lon2","unit","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","toFixed","distance","distanceRange","Number","regionMatch","getMatchingLocation","length","stars","getStars","name","map","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport Tide from './Tide.js';\nimport WaterTemp from './WaterTemp.js';\nimport AirTemp from './AirTemp.js';\nimport WindDirection from './WindDirection.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport Dialog from '../functional/Dialog.js';\nimport swell1 from '../../assets/images/wavePrimary.png'\nimport swell2 from '../../assets/images/waveSecondaryB.png'\nimport N from '../../assets/images/windN.png'\nimport NE from '../../assets/images/windNE.png'\nimport E from '../../assets/images/windE.png'\nimport SE from '../../assets/images/windSE.png'\nimport S from '../../assets/images/windS.png'\nimport SW from '../../assets/images/windSW.png'\nimport W from '../../assets/images/windW.png'\nimport NW from '../../assets/images/windNW.png'\nimport tide from '../../assets/images/tide.png'\n\nclass SurfLocation extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.addOne = this.props.addOne\n        const {windDirection, swell1Direction, swell2Direction, tide, height} = props.state;\n        this.state = {\n            windDirection: windDirection, \n            swell1Direction: swell1Direction, \n            swell2Direction: swell2Direction, \n            tide: tide, \n            height: height\n        };\n    }\n    render() {\n        const {windDirection, swell1Direction, swell2Direction, tide, height} = this.state;\n        const statusClass = (status) => (status === true) ? \"color-neogreen\" : \"color-yellow\"; \n        const subStatusClass = (status) => (status === true) ? \"color-orange\" : \"color-yellow\"; \n        const swell1Match = (item) => (item.swell.indexOf(swell1Direction)>-1) ? true : false;\n        const swell2Match = (item) => (item.swell.indexOf(swell2Direction)>-1) ? true : false;\n        const windMatch = (item) => (item.wind.indexOf(windDirection)>-1) ? true : false;\n        const tideMatch = (item) => (item.tide.indexOf(tide)>-1) ? true : false;\n        const swell1DirectionMatch = (direction) => (direction.swell===swell1Direction) ? true : false;\n        const swell2DirectionMatch = (direction) => (direction===swell2Direction) ? true : false;\n        const windDirectionMatch = (direction) => (direction.wind === windDirection) ? true : false;\n        const tideDirectionMatch = (direction) => (direction.tide === tide) ? true : false;\n        const swell1Confirm = (matches) => ((this.state.isSwell1 && matches.includes(\"swell1\")) || this.state.isSwell1 === false) ? true : false;\n        const swell2Confirm = (matches) => ((this.state.isSwell2 && matches.includes(\"swell2\")) || this.state.isSwell2 === false) ? true : false;\n        const tideConfirm = (matches) => ((this.state.isTide && matches.includes(\"tide\")) || this.state.isTide === false) ? true : false;\n        const windConfirm = (matches) => ((this.state.isWind && matches.includes(\"wind\")) || this.state.isWind === false) ? true : false;\n        const match = (item) => {\n            const matches = [];\n            let matchesCount = (swell1Match(item)) ? matches.push(\"swell1\") : matches;\n            matchesCount = (swell2Match(item)) ? matches.push(\"swell2\") : matches;\n            matchesCount = (windMatch(item)) ? matches.push(\"wind\") : matches;\n            matchesCount = (tideMatch(item)) ? matches.push(\"tide\") : matches;\n            //console.log(`matches => ${item.name} - ${matches}`)\n            return matches;\n        }\n        const calculateDistance = (item) => {\n            const lat1 = item.latitude;\n            const lat2 = this.state.latitude;\n            const lon1 = item.longitude;\n            const lon2 = this.state.longitude;\n            const unit = \"Miles\"\n            if ((lat1 === lat2) && (lon1 === lon2)) {\n                return 0;\n            } else {\n                var radlat1 = Math.PI * lat1/180;\n                var radlat2 = Math.PI * lat2/180;\n                var theta = lon1-lon2;\n                var radtheta = Math.PI * theta/180;\n                var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n                if (dist > 1) {\n                    dist = 1;\n                }\n                dist = Math.acos(dist);\n                dist = dist * 180/Math.PI;\n                dist = dist * 60 * 1.1515;\n                dist = dist.toFixed(1);\n                if (unit===\"Kilometers\") { dist = dist * 1.609344 }\n                if (unit===\"Nautical\") { dist = dist * 0.8684 }\n                //console.log(`DISTANCE => ${dist}`)\n                return dist;\n            }\n        }\n        const distance = (item) => calculateDistance(item);\n        //Math.abs(item.latitude - this.state.latitude)+Math.abs(item.longitude - this.state.longitude);\n        //.01 - 1 mile\n        const distanceRange = Number(this.state.distance);\n        const regionMatch = (item) => (distance(item)<distanceRange) ? distance(item) : false;\n        const getMatchingLocation = (item) => {\n            const matches = match(item);\n            if (swell1Confirm(matches) && swell2Confirm(matches) && tideConfirm(matches) && windConfirm(matches)) {\n                if (regionMatch(item) !== false) {\n                    if (matches.length >= Number(this.state.stars)) {\n                        //console.log(`STARS ==================> Matches: ${matches.length} state stars:${this.state.stars}`)\n                        this.props.addOne();\n                        return <div key={getKey(\"loc\")}>\n                                    <div className=\"r-10 m-10 p-20 bg-dkGreen\">\n                                            <div className=\"width100Percent flexContainer\">{this.getStars(matches)}</div>\n                                            <div className=\"mt-10 navBranding\">{item.name}</div>\n                                            <div className=\"greet color-yellow p-5 bg-dkGreen mt-15 mb-10 r-5\">{`${regionMatch(item)} miles`}</div>\n                                        <div className=\"flexContainer\">\n                                            <div className=\"flexContainer m-auto\">\n                                                <div className=\"columnRight pr-10\">\n                                                    <div className=\"color-neogreen bold\">Swell: </div>\n                                                    <div className=\"color-neogreen bold\">Wind: </div>\n                                                    <div className=\"color-neogreen bold\">Tide: </div>\n                                                </div>\n                                                <div className=\"columnLeft\">\n                                                    <div>{item.swell.map((swell, i) => <span className={(swell === this.state.swell1Direction) ? statusClass(swell1Match(item)) : subStatusClass(swell2DirectionMatch(swell))}>{swell}{((i+1) === item.swell.length)? \"\" : \", \"}</span>)}</div>\n                                                    <div className={statusClass(windMatch(item))}>\n                                                        {item.wind.map((wind, i) => <span className={statusClass(windDirectionMatch({wind}))}>\n                                                                                    {wind}{((i+1) === item.wind.length)? \"\" : \", \"}\n                                                                                </span>)}\n                                                    </div>\n                                                    <div className={statusClass(tideMatch(item))}>{item.tide.map((tide,i) => <span className={statusClass(tideDirectionMatch({tide}))}>{tide}{((i+1) === item.tide.length)? \"\" : \", \"}</span>)}</div>\n                                                </div>\n                                            </div>\n                                        </div>   \n                                    </div>\n                                </div>\n                    }\n                }\n            }\n        }\n        return (\n            getMatchingLocation(this.props.item)\n        );\n    }\n}\nexport default SurfLocation;"]},"metadata":{},"sourceType":"module"}