{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/forms/FunctionalSelector.js\";\nimport React from 'react';\nimport getKey from '../utils/KeyGenerator.js';\n//<FunctionalSelector items={[\"Grapefruit\", \"Lime\", \"Coconut\", \"Mango\"]} />\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FunctionalSelector(props) {\n  //let action = \"\";\n  //console.log(`FunctionalSelector => props: ${JSON.stringify(props.onChange,null,2)}`)\n  let {\n    items,\n    label,\n    groupTitle,\n    selected,\n    padding,\n    fontSize,\n    maxWidth,\n    width\n  } = props;\n  //console.log(`FunctionalSelector => \\n${groupTitle}\\nlabel: ${label}\\nselected: ${selected}`)\n  const setSelected = item => {\n    selected = item;\n    return tag(item);\n  };\n  //const tagSelected = (item) => <option selected key={getKey(item)} value={item.toString()}>{item}</option>;\n  const tag = item => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: item,\n    children: item\n  }, getKey(item), false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 27\n  }, this);\n  const getTag = (item, index) => Number(item) === Number(selected) ? setSelected(item) : tag(item);\n  const selectItems = items.map((item, index) => getTag(item, index));\n  const handleChange = event => {\n    selected = event.target.value;\n    //this.setState({value: e.target.value});\n    props.onChange(groupTitle, label, selected);\n  };\n  const getStyle = {\n    padding: padding || 0,\n    fontSize: Number(fontSize),\n    color: 'yellow',\n    maxWidth: maxWidth,\n    width: width\n  };\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"glassy pt-5 pb-5 r-10 bg-dark white mt-5 button\",\n      style: getStyle,\n      value: selected,\n      onChange: handleChange,\n      children: selectItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_c = FunctionalSelector;\nexport default FunctionalSelector;\nvar _c;\n$RefreshReg$(_c, \"FunctionalSelector\");","map":{"version":3,"names":["React","getKey","jsxDEV","_jsxDEV","FunctionalSelector","props","items","label","groupTitle","selected","padding","fontSize","maxWidth","width","setSelected","item","tag","value","children","fileName","_jsxFileName","lineNumber","columnNumber","getTag","index","Number","selectItems","map","handleChange","event","target","onChange","getStyle","color","className","style","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/forms/FunctionalSelector.js"],"sourcesContent":["import React from 'react';\nimport getKey from '../utils/KeyGenerator.js';\n//<FunctionalSelector items={[\"Grapefruit\", \"Lime\", \"Coconut\", \"Mango\"]} />\n\nfunction FunctionalSelector(props) {\n    //let action = \"\";\n    //console.log(`FunctionalSelector => props: ${JSON.stringify(props.onChange,null,2)}`)\n    let { items, label, groupTitle, selected, padding, fontSize, maxWidth, width} = props;\n    //console.log(`FunctionalSelector => \\n${groupTitle}\\nlabel: ${label}\\nselected: ${selected}`)\n    const setSelected = (item) => {\n        selected = item;\n        return tag(item)\n    }\n    //const tagSelected = (item) => <option selected key={getKey(item)} value={item.toString()}>{item}</option>;\n    const tag = (item) => <option key={getKey(item)} value={item}>{item}</option>;\n    const getTag = (item, index) => (Number(item) === Number(selected)) ? setSelected(item) : tag(item);\n    const selectItems = items.map((item, index) => getTag(item,index));\n    const handleChange = (event) => {\n        selected = event.target.value;\n        //this.setState({value: e.target.value});\n        props.onChange(groupTitle, label, selected);\n    }\n    const getStyle = {\n        padding: padding || 0,\n        fontSize: Number(fontSize),\n        color: 'yellow',\n        maxWidth: maxWidth,\n        width: width\n    };\n    return (\n        <label>    \n            <select className='glassy pt-5 pb-5 r-10 bg-dark white mt-5 button' style={getStyle} value={selected} onChange={handleChange}>\n                {selectItems}\n            </select>\n        </label>\n    );\n}\n\nexport default FunctionalSelector;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,0BAA0B;AAC7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EAC/B;EACA;EACA,IAAI;IAAEC,KAAK;IAAEC,KAAK;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGR,KAAK;EACrF;EACA,MAAMS,WAAW,GAAIC,IAAI,IAAK;IAC1BN,QAAQ,GAAGM,IAAI;IACf,OAAOC,GAAG,CAACD,IAAI,CAAC;EACpB,CAAC;EACD;EACA,MAAMC,GAAG,GAAID,IAAI,iBAAKZ,OAAA;IAA2Bc,KAAK,EAAEF,IAAK;IAAAG,QAAA,EAAEH;EAAI,GAAhCd,MAAM,CAACc,IAAI,CAAC;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA6B,CAAC;EAC7E,MAAMC,MAAM,GAAGA,CAACR,IAAI,EAAES,KAAK,KAAMC,MAAM,CAACV,IAAI,CAAC,KAAKU,MAAM,CAAChB,QAAQ,CAAC,GAAIK,WAAW,CAACC,IAAI,CAAC,GAAGC,GAAG,CAACD,IAAI,CAAC;EACnG,MAAMW,WAAW,GAAGpB,KAAK,CAACqB,GAAG,CAAC,CAACZ,IAAI,EAAES,KAAK,KAAKD,MAAM,CAACR,IAAI,EAACS,KAAK,CAAC,CAAC;EAClE,MAAMI,YAAY,GAAIC,KAAK,IAAK;IAC5BpB,QAAQ,GAAGoB,KAAK,CAACC,MAAM,CAACb,KAAK;IAC7B;IACAZ,KAAK,CAAC0B,QAAQ,CAACvB,UAAU,EAAED,KAAK,EAAEE,QAAQ,CAAC;EAC/C,CAAC;EACD,MAAMuB,QAAQ,GAAG;IACbtB,OAAO,EAAEA,OAAO,IAAI,CAAC;IACrBC,QAAQ,EAAEc,MAAM,CAACd,QAAQ,CAAC;IAC1BsB,KAAK,EAAE,QAAQ;IACfrB,QAAQ,EAAEA,QAAQ;IAClBC,KAAK,EAAEA;EACX,CAAC;EACD,oBACIV,OAAA;IAAAe,QAAA,eACIf,OAAA;MAAQ+B,SAAS,EAAC,iDAAiD;MAACC,KAAK,EAAEH,QAAS;MAACf,KAAK,EAAER,QAAS;MAACsB,QAAQ,EAAEH,YAAa;MAAAV,QAAA,EACxHQ;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEhB;AAACc,EAAA,GAhCQhC,kBAAkB;AAkC3B,eAAeA,kBAAkB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}