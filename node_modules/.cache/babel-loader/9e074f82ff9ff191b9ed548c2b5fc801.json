{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js\";\nimport React from 'react';\nimport PostDirectory from './PostDirectory.js';\n\nconst LogId = ({\n  logId\n}) => {\n  const postDirectory = new PostDirectory();\n  const logID = logId === null || logId === undefined ? this.postDirectory.getLastId() : logId;\n  const log = JSON.parse(localStorage.getItem(logID)) === null ? this.getLogTemplate : JSON.parse(localStorage.getItem(logID));\n  console.log(`LastLogId => render: this.state.logId: ${logId} - this.state.log: ${log}`);\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }\n  }, \"Count: \", postDirectory.length);\n};\n\nexport default LogId;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js"],"names":["React","PostDirectory","LogId","logId","postDirectory","logID","undefined","getLastId","log","JSON","parse","localStorage","getItem","getLogTemplate","console","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACzB,QAAMC,aAAa,GAAG,IAAIH,aAAJ,EAAtB;AACA,QAAMI,KAAK,GAAIF,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKG,SAA7B,GAA0C,KAAKF,aAAL,CAAmBG,SAAnB,EAA1C,GAA2EJ,KAAzF;AACA,QAAMK,GAAG,GAAIC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBP,KAArB,CAAX,MAA4C,IAA7C,GAAqD,KAAKQ,cAA1D,GAA2EJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBP,KAArB,CAAX,CAAvF;AACAS,EAAAA,OAAO,CAACN,GAAR,CAAa,0CAAyCL,KAAM,sBAAqBK,GAAI,EAArF;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWJ,aAAa,CAACW,MAAzB,CAAP;AACH,CAND;;AAOA,eAAeb,KAAf","sourcesContent":["import React from 'react';\nimport PostDirectory from './PostDirectory.js';\nconst LogId = ({ logId }) => {\n    const postDirectory = new PostDirectory();\n    const logID = (logId === null || logId === undefined) ? this.postDirectory.getLastId() : logId;\n    const log = (JSON.parse(localStorage.getItem(logID)) === null) ? this.getLogTemplate : JSON.parse(localStorage.getItem(logID));\n    console.log(`LastLogId => render: this.state.logId: ${logId} - this.state.log: ${log}`);\n    return <p>Count: {postDirectory.length}</p> \n}\nexport default LogId;"]},"metadata":{},"sourceType":"module"}