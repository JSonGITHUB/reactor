{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport SurfingScores from './SurfingScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport jerseyColors from './JerseyColors.js';\n//import { getSurferIndexWithPriority, losePriority } from './SurfPriority.js';\nimport { newDate } from './Dates.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreKeeper = () => {\n  _s();\n  const surfScoring = ['', '', '', '', '', '', '', '', '', ''];\n  const initPlayers = [{\n    name: 'You',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: ['', '', '', '', '', '', '', '', '', ''],\n    surfJerseyColor: 0,\n    surfPriority: 0,\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }, {\n    name: 'Me',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: ['', '', '', '', '', '', '', '', '', ''],\n    surfJerseyColor: 0,\n    surfPriority: 0,\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }];\n  const initNewPlayer = name => {\n    const newPlayer = {\n      name: name,\n      score: 0,\n      dominoScore: 0,\n      golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      surfScores: ['', '', '', '', '', '', '', '', '', ''],\n      surfJerseyColor: 0,\n      surfPriority: 0,\n      cricketScores: [0, 0, 0, 0, 0, 0, 0]\n    };\n    return newPlayer;\n  };\n  const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n  const winners = [5, 10, 11, 15, 20, 21];\n  const dominoWinners = [50, 100, 150, 200];\n  const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n  const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || []);\n  const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n  const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n  const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n  const [heatLength, setHeatLength] = useState(winner * 60);\n  const [waveCount, setWaveCount] = useState(['', '', '', '', '', '', '', '', '', '']);\n  const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || []);\n  const darts = game !== 'darts' ? false : true;\n  const dominos = game !== 'dominos' ? false : true;\n  const surf = game !== 'surf' ? false : true;\n  const golf = game !== 'golf' ? false : true;\n  const cricketKey = (player, index) => `${player.player || player.name}Cricket${index}`;\n  const golfKey = (player, index) => `${player.player || player.name}Golf${index}`;\n  const surfKey = (player, index) => `${player.player || player.name}Surf${index}`;\n  const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n  const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n  const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n  const dominoScoring = [50, 100, 150, 200];\n  const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n  const [showButtons, setShowButtons] = useState(false);\n  const [heatData, setHeatData] = useState(JSAON.parse(localStorage.getItem('heatLog'))) || [];\n  useEffect(() => {\n    if (JSON.stringify(players, null, 2) !== '[]') {\n      const surfersScores = [];\n      localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n      localStorage.setItem('players', JSON.stringify(players));\n      setShowButtons(false);\n    }\n  }, [players]);\n  useEffect(() => {\n    setHeatLength(winner);\n  }, [winner]);\n  useEffect(() => {\n    localStorage.setItem('heatLog', JSON.stringify(heatData));\n  }, [heatData]);\n  useEffect(() => {\n    localStorage.setItem('golfPars', JSON.stringify(golfPars));\n  }, [golfPars]);\n  useEffect(() => {\n    if (!localStorage.getItem('players') || localStorage.getItem('players') === '[]') {\n      //const playersValue = localStorage.getItem('players');\n      //alert(`localStorage.players: ${playersValue}`)\n      //alert('Length:', playersValue.length);\n      newPlayer();\n    }\n    const newPlayers = [...players];\n    if (!players[0].cricketScores || !players[1].cricketScores) {\n      if (!players[0].cricketScores) {\n        newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n        newPlayers[0].dartsScore = 0;\n      }\n      if (!players[1].cricketScores) {\n        newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n        newPlayers[1].dartsScore = 0;\n      }\n    }\n    const initGolfStats = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n    if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n      newPlayers[0].golfPutts = golfScoring;\n      newPlayers[0].golfFW = initGolfStats;\n      newPlayers[0].golfGIR = initGolfStats;\n    }\n    if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n      newPlayers[1].golfPutts = golfScoring;\n      newPlayers[1].golfFW = initGolfStats;\n      newPlayers[1].golfGIR = initGolfStats;\n    }\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  }, []);\n  const setGameInProgress = playerIndex => {\n    if (playerIndex > 0) {\n      if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n        localStorage.setItem('gameStatus', 'inProgress');\n      }\n    }\n    localStorage.setItem(`player${playerIndex}`, 'loser');\n    return false;\n  };\n  const isWinner = playerIndex => getDartTotal(players[playerIndex]) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n  const playerScores = [{\n    name: 'Player 1',\n    scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88]\n  }, {\n    name: 'Player 2',\n    scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81]\n  }, {\n    name: 'Player 3',\n    scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89]\n  }];\n  const setGameOver = playerIndex => {\n    localStorage.setItem('gameStatus', 'gameOver');\n    localStorage.setItem(`player${playerIndex}`, 'winner');\n    return true;\n  };\n  if (darts && winner !== 21) {\n    localStorage.setItem('winner', 21);\n    setWinner(Number(localStorage.getItem('winner')));\n  }\n  const getDartTotal = player => {\n    const cricketScores = String(player.cricketScores).split(',');\n    let total = 0;\n    const addToTotal = value => total = total + value;\n    cricketScores.map((score, index) => addToTotal(Number(score)));\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const getGolfTotal = player => {\n    if (!golf) return;\n    let total = 0;\n    const newPlayers = JSON.parse(localStorage.getItem('players'));\n    const addToTotal = value => total = total + Number(value);\n    newPlayers.map(player => {\n      player.golfScores.map(score => addToTotal(score));\n      player.golfScore = total;\n    });\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    return total;\n  };\n  const getDominoTotal = index => {\n    const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n    const total = newScores[index];\n    console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`);\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const updateScores = () => {\n    const newPlayers = JSON.parse(localStorage.getItem('players'));\n    setPlayers(newPlayers);\n  };\n  const set21 = () => {\n    if (darts) {\n      localStorage.setItem('winner', 21);\n      setWinner(Number(localStorage.getItem('winner')));\n    }\n  };\n  const selectGame = (groupTitle, label, selected) => {\n    localStorage.setItem('game', selected);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setGame(localStorage.getItem('game'));\n    set21();\n  };\n  const selectWinner = (groupTitle, label, selected) => {\n    localStorage.setItem('winner', selected);\n    setWinner(Number(localStorage.getItem('winner')));\n    getScore();\n  };\n  const clear = event => {\n    //alert('Note was cleared: ' + event.value);\n    localStorage.setItem('players', JSON.stringify(initPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const recordHeatScores = () => {\n    const currentPlayers = JSON.parse(localStorage.getItem('players'));\n    const heatData = currentPlayers.map((player, index) => {\n      //console.log(`recordHeatScores=> name: ${player.name} score: ${player.surfScore}`);\n      return {\n        name: player.name,\n        score: player.surfScore,\n        scores: player.surfScores\n      };\n    });\n    //console.log(`recordHeatScores => heatData: ${JSON.stringify(heatData,null,2)}`);\n    const heatLog = [{\n      date: newDate(),\n      scores: heatData\n    }];\n    localStorage.setItem('heatLog', JSON.stringify(heatLog));\n  };\n  const displayHeatLog = () => {\n    const heatLog = JSON.parse(localStorage.getItem('heatLog'));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: heatLog[0].date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: heatData.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: `${player.name}: ${player.score}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(SurfScoringLogic, {\n              index: index,\n              completed: true,\n              players: players,\n              setPlayers: setPlayers,\n              editPlayer: editPlayer,\n              deleteAthlete: deletePlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 33\n          }, this), player.scores.map((score, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [score > 0 && index > 0 ? ', ' : null, score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 69\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 58\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 16\n    }, this);\n  };\n  const reset = event => {\n    let newPlayers = JSON.parse(localStorage.getItem('players'));\n    const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n    const id = (player, index) => {\n      if (darts) {\n        return cricketKey(player, index);\n      } else if (dominos) {\n        return getDominoKey(player, index);\n      } else if (golf) {\n        return golfKey(player, index);\n      } else if (surf) {\n        return surfKey(player, index);\n      }\n      return player.player || player.name;\n    };\n    const initValue = 0;\n    if (darts) {\n      newPlayers.map(player => {\n        player.dartsScore = 0;\n        player.cricketScores = [0, 0, 0, 0, 0, 0, 0];\n      });\n    } else if (golf) {\n      newPlayers.map(player => {\n        player.golfScore = 0;\n        player.golfScores = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n        player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n        player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      });\n    } else if (dominos) {\n      newPlayers[0].dominoScore = 0;\n      newPlayers[1].dominoScore = 0;\n    } else if (surf) {\n      newPlayers.map((player, index) => {\n        player.surfScores = surfScoring;\n        player.surfScore = 0;\n        player.surfPriority = 0;\n      });\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => getSurfTotal(b) - getSurfTotal(a));\n      newPlayers = [...sortedPlayers];\n    } else {\n      newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n    }\n    localStorage.setItem('gameStatus', 'inProgress');\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n    getScore();\n  };\n  const newPlayer = () => {\n    const newPlayer = prompt('Enter new name', '');\n    const initializedNewPlayer = initNewPlayer(newPlayer);\n    let newPlayers = [...players];\n    if (newPlayer !== null) {\n      newPlayers.push(initializedNewPlayer);\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n  };\n  const addPlayer = event => {\n    newPlayer();\n  };\n  const editPlayer = index => {\n    const newPlayer = prompt('Enter new name', players[index].name);\n    if (newPlayer !== null) {\n      let newPlayers = [...players];\n      newPlayers[index].name = newPlayer;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      //console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n  };\n  const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n  const deletePlayer = index => {\n    console.log(`deletePlayer => ${index}`);\n    const newPlayers = [...players].slice();\n    newPlayers.splice(index, 1);\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  /*\n  const getSurferIndexWithPriority = (priorityIndex) => {\n      for (let i = 0; i < players.length; i++) {\n          if (Number(players[i].surfPriority) === priorityIndex) {\n              return i;\n          }\n      }\n      return null;\n  }\n  const losePriority = (selectedPriority) => {\n      const newPlayers = [...players];\n      newPlayers.map((player, index) => {\n          if (player.surfPriority == selectedPriority) {\n              player.surfPriority = newPlayers.length;\n          } else if (player.surfPriority != 1 && selectedPriority != newPlayers.length) {\n              const shift = player.surfPriority - 1;\n              player.surfPriority = (shift > 0) ? shift : newPlayers.length;\n          }\n      });\n      localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n      setPlayers(newPlayers);\n  }\n  const shiftPriority = (priorityIndex) => {\n      const newPlayers = [...players];\n      newPlayers.map((player, index) => {\n          if (player.surfPriority === (priorityIndex - 1)) {\n              player.surfPriority = priorityIndex;\n          } else if (player.surfPriority === priorityIndex) {\n              player.surfPriority = (priorityIndex - 1);\n          }\n      });\n      localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n      setPlayers(newPlayers);\n  }\n  */\n  const resetSurfersScores = playerId => {\n    const newPlayers = [...players];\n    newPlayers[playerId].surfScore = 0;\n    newPlayers[playerId].surfScores = surfScoring;\n    setPlayers(newPlayers);\n    getScore();\n  };\n  const deleteAthlete = playerId => {\n    const newPlayers = [...players];\n    newPlayers.splice(playerId, 1);\n    setPlayers(newPlayers);\n  };\n  const getJerseyColorSelector = (playerId, color, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `bg-${color} ht-45 width50px button r-10`,\n    onClick: () => selectJersey(playerId, index)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 64\n  }, this);\n  const editSurfer = playerId => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-10 p-10 r-10 bg-darker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"size30 p-10\",\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10`,\n      onClick: () => editPlayer(playerId),\n      children: players[playerId].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"size30 p-10\",\n      children: \"Jersey color:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: jerseyColors.map((color, index) => index === Math.ceil(jerseyColors.length / 2) ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 29\n        }, this), getJerseyColorSelector(playerId, color, index)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 25\n      }, this) : getJerseyColorSelector(playerId, color, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10 m-5\",\n        onClick: () => resetSurfersScores(playerId),\n        children: \"Reset Scores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10 m-5\",\n        onClick: () => deleteAthlete(playerId),\n        children: \"Delete Athlete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 392,\n    columnNumber: 38\n  }, this);\n  const getSurfTotal = player => {\n    let total = 0;\n    const score = index => player.surfScores[index];\n    const addToTotal = value => total = total + value;\n    surfScoring.map((target, index) => {\n      addToTotal(Number(score(index)));\n    });\n    return total;\n  };\n  const isTieScore = index => {\n    const score = scoreTotal(index, players);\n    if (index !== 0) {\n      if (score === scoreTotal(index - 1, players)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const getHeatTotals = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: surferTotals(player, index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 49\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 436,\n    columnNumber: 33\n  }, this);\n  const place = index => isTieScore(index) && index !== 0 ? index : index + 1;\n  const placeSuffix = index => rank[isTieScore(index) && index !== 0 ? index - 1 : index > 2 ? 3 : index];\n  const position = index => `${place} ${placeSuffix}`;\n  const surferTotals = (player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [position(index), \" \", players[index].name, \" \", players[index].surfScore, \" \", rankStatus(player, index)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 45\n  }, this);\n  const rank = ['st', 'nd', 'rd', 'th'];\n  const rankStatus = (player, index) => {\n    const score = getSurfTotal(player);\n    const scoreDifference = Number(players[index === 0 ? 0 : index - 1].surfScore - players[index === 0 ? 1 : index].surfScore);\n    const difference = scoreDifference < 0 ? -1 * scoreDifference : scoreDifference;\n    const winningScore = Number(players[index === 0 ? 0 : index < 3 ? index - 1 : 1].surfScore);\n    const highestScoresIndices = findTwoHighestIndices(players[index].surfScores);\n    const losersHeighestScore = players[index].surfScores[highestScoresIndices[0]];\n    const need = winningScore - losersHeighestScore + .01;\n    const winsBy = `Wins by ${difference.toFixed(2)}`;\n    const needs = `Needs ${need.toFixed(2)}`;\n    if (index === 0) {\n      return winsBy;\n    }\n    return needs;\n  };\n  const findTwoHighestIndices = scores => {\n    const newScores = scores !== undefined ? scores : ['', '', '', '', '', '', '', '', '', ''];\n    let highestIndex = -1;\n    let secondHighestIndex = -1;\n    let highestScore = -Infinity;\n    let secondHighestScore = -Infinity;\n    for (let i = 0; i < newScores.length; i++) {\n      if (newScores[i] > highestScore) {\n        secondHighestIndex = highestIndex;\n        secondHighestScore = highestScore;\n        highestIndex = i;\n        highestScore = newScores[i];\n      } else if (newScores[i] > secondHighestScore) {\n        secondHighestIndex = i;\n        secondHighestScore = newScores[i];\n      }\n    }\n    return [highestIndex, secondHighestIndex];\n  };\n  const getTwoHighestScores = index => {\n    const player = players[index];\n    const scores = player.surfScores;\n    const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n    //console.log(`getTwoHighestScores => playerIndex: ${index} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n    return {\n      highScoreIndex: highestIndex,\n      secondHighScoreIndex: secondHighestIndex\n    };\n  };\n  const getScoreTotal = index => {\n    const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n    const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n    const score = highestScore + secondHighestScore;\n    return score;\n  };\n  const highestScore = (index, playersArray) => {\n    return playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n  };\n  const secondHighestScore = (index, playersArray) => playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n  const scoreTotal = (index, playersArray) => Number(highestScore(index, playersArray) + secondHighestScore(index, playersArray)).toFixed(2);\n  const selectJersey = (playerId, selection) => {\n    const newPlayers = [...players];\n    newPlayers[playerId].surfJerseyColor = selection;\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(newPlayers);\n  };\n  const scorecards = () => {\n    const scorecard = (playerIndex, scoreIndex, score) => {\n      const player = players[playerIndex];\n      if (darts) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`);\n        return /*#__PURE__*/_jsxDEV(CricketScore, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateScores: updateScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 24\n        }, this);\n      }\n      if (dominos) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(Dominos, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          scoreTotal: player.dominoScore || 0,\n          treeTotal: score,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          getDominoTotal: getDominoTotal,\n          updateScores: updateScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 24\n        }, this);\n      }\n      if (golf) {\n        console.log(`${game} - scorecard => player:${player.player || player.name}`);\n        console.log(`scoreIndex: ${scoreIndex}`);\n        console.log(`score: ${player.golfScores[scoreIndex]}`);\n        console.log(`scorecards => par: ${score}`);\n        return /*#__PURE__*/_jsxDEV(ScoreCard, {\n          game: game,\n          players: players,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateScores: updateScores,\n          winner: golfPars[scoreIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 24\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(ScoreCard, {\n        game: game,\n        players: players,\n        playerIndex: playerIndex,\n        scoreIndex: scoreIndex,\n        editPlayer: editPlayer,\n        deletePlayer: deletePlayer,\n        updateScores: updateScores,\n        winner: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 20\n      }, this);\n    };\n    /////////////////////////////////\n    const setSurfScore = (playerId, index, score) => {\n      const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n      const newPlayers = [...players];\n      const currentScore = newPlayers[playerId].surfScores[index];\n      const edit = currentScore !== '' && currentScore !== 0 ? false : true;\n      newPlayers[playerId].surfScores[index] = Number(newScore);\n      newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n      if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n        newPlayers.map((player, index) => {\n          if (index === playerId) {\n            player.surfPriority = players.length;\n          } else if (player.surfPriority != 0) {\n            player.surfPriority = player.surfPriority - 1;\n          }\n        });\n      }\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n      console.log('setSurfScore => sortedPlayers: ', sortedPlayers);\n      localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n      setPlayers(sortedPlayers);\n    };\n    const get2ndHighestScore = playerId => {\n      const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n      const secondHighestId = highestScores[1];\n      return players[playerId].surfScores[secondHighestId];\n    };\n    const getSurfScore = index => {\n      const newPlayers = [...players];\n      const surfScore = scoreTotal(index, newPlayers);\n      newPlayers[index].score = surfScore;\n      newPlayers[index].surfScore = surfScore;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      return surfScore;\n    };\n    const getWave = (playerId, index, score) => {\n      const player = players[playerId];\n      const theScore = player.surfScores[index];\n      const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n      const highestId = highestScores[0];\n      const secondHighestId = highestScores[1];\n      const firstScore = index === highestId ? true : false;\n      const secondScore = index === secondHighestId ? true : false;\n      const getClasses = firstScore || secondScore ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n      const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column r-10\",\n        onClick: () => setSurfScore(playerId, index, score),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"size30 bold color-yellow bg-dkYellow w-100 p-10\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ht-40 ${getClasses}`,\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 17\n        }, this)]\n      }, getKey(`wave${playerId}${index}${score}`), true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 26\n      }, this);\n      return wave;\n    };\n    const surferScores = (player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flexContainer ht-50 r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex2Column contentLeft r-10-lft m-0 w-75 p-10`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bold\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"size25 mt--10\",\n              children: place(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"size15 mt--10\",\n              children: placeSuffix(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bold\",\n            onClick: () => setShowButtons(showButtons !== false ? false : index),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"size30 mt-5 mb-5\",\n              children: (player.player || player.name).split(' ')[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"size20\",\n              children: player.name.indexOf(' ') !== -1 ? player.name.substring(player.name.indexOf(' ') + 1) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"size40 bold\",\n            children: getScoreTotal(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 bold\",\n            children: rankStatus(player, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 17\n        }, this)]\n      }, getKey(`${index}${player.player || player.name}`), true, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showButtons === index && editSurfer(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-scroll color-white copyright ml-10 mr-10 mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container mt-10\",\n              children: players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 13\n      }, this)]\n    }, getKey(`${index}${player.player || player.name}`), true, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 49\n    }, this);\n\n    /////////////////////////////////\n    const surfingScores = (player, index) => {\n      return surferScores(player, index);\n      /*if (players != undefined && index != undefined && player != undefined) {\n          return <SurfingScores\n              players={players}\n              player={player}\n              index={index}\n              surfScoring={surfScoring}\n              setPlayers={setPlayers}\n              key={getKey(index)}\n          >\n          </SurfingScores>\n      } \n      */\n    };\n\n    const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n    const dartScores = () => dartScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(0, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(1, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 68\n    }, this));\n    const editGolfPar = hole => {\n      const newPars = [...golfPars];\n      const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n      newPars[hole] = newPar;\n      setGolfPars(newPars);\n    };\n    const golfScores = () => golfScoring.map((hole, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentCenter bg-dark r-10 m-5 mt-35\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"copyright greet color-yellow\",\n            children: \"Hole:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size40 bold pt-5 pl-15 pr-15 bg-dark r-10\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"copyright greet color-yellow\",\n            children: \"Par:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size20 bold color-lite mt--5\",\n            children: golfPars[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex2Column p-5\",\n            children: scorecard(0, index, golfPars[index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex2Column p-5\",\n            children: scorecard(1, index, golfPars[index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 13\n      }, this)\n    }, getKey(hole), false, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 67\n    }, this));\n    const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index));\n    const dominoScores = () => dominoScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent contentCenter p-5\",\n        children: scorecard(0, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"r-5 font50 color-yellow m-auto w-100\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent contentCenter p-5\",\n        children: scorecard(1, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 72\n    }, this));\n    const isDominoWinner = playerIndex => getDominoTotal(playerIndex) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const dartClass = playerIndex => 'color-yellow flex3Column p-20 size25 bold' + (isWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dominoClass = playerIndex => 'color-yellow flex3Column p-20 size25 bold' + (isDominoWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dartScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDartTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDartTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 13\n      }, this), dartScores()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 38\n    }, this);\n    const golfScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy m-5 mb-20 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: players[0].golfScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10  size40 white\",\n            children: players[1].golfScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollHeight500\",\n        children: golfScores()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 38\n    }, this);\n    const dominoScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDominoTotal(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDominoTotal(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 13\n      }, this), dominoScores()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 40\n    }, this);\n    if (darts) return dartScoreboard();\n    if (dominos) return dominoScoreboard();\n    if (golf) return golfScoreboard();\n    //if (surf) return surfScoreboard\n    if (surf) return surfingScoreboard();else return renderedItems();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fadeIn mt--30\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-10\",\n      children: [/*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"game\",\n        label: \"item.description\",\n        items: games,\n        selected: game,\n        onChange: selectGame,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: darts || dominos ? '98%' : '65%'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 17\n      }, this), darts || golf ? /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Selector, {\n        className: \"fl-left\",\n        groupTitle: \"winner\",\n        label: \"i.description\",\n        items: dominos ? dominoWinners : surf ? heatLengths : winners,\n        selected: winner,\n        onChange: selectWinner,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: \"30%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 27\n      }, this), surf ? /*#__PURE__*/_jsxDEV(SurfScores, {\n        players: players,\n        setPlayers: setPlayers,\n        heatLength: winner,\n        isWinner: isWinner,\n        editPlayer: editPlayer,\n        deletePlayer: deletePlayer,\n        setGameStatus: setGameStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrollHeight450\",\n      children: scorecards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 13\n    }, this), surf ? displayHeatLog() : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow\",\n          onClick: () => addPlayer(),\n          children: \"add player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black\",\n          onClick: () => reset(),\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow\",\n          onClick: () => clear(),\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 798,\n    columnNumber: 9\n  }, this);\n};\n_s(ScoreKeeper, \"sS1nMvMddPa8FgVMQyBK/PcIdVI=\");\n_c = ScoreKeeper;\nexport default ScoreKeeper;\nvar _c;\n$RefreshReg$(_c, \"ScoreKeeper\");","map":{"version":3,"names":["React","useState","useEffect","ScoreCard","CricketScore","Dominos","SurfScores","SurfingScores","Selector","getKey","jerseyColors","newDate","jsxDEV","_jsxDEV","ScoreKeeper","_s","surfScoring","initPlayers","name","score","dominoScore","golfScores","golfGIR","golfFW","golfPutts","surfScores","surfJerseyColor","surfPriority","cricketScores","initNewPlayer","newPlayer","games","winners","dominoWinners","heatLengths","players","setPlayers","JSON","parse","localStorage","getItem","game","setGame","initScores","winner","setWinner","Number","heatLength","setHeatLength","waveCount","setWaveCount","surfersScores","setSurfersScores","darts","dominos","surf","golf","cricketKey","player","index","golfKey","surfKey","parsDefault","dartScoring","golfScoring","golfPars","setGolfPars","dominoScoring","gameStatus","setGameStatus","showButtons","setShowButtons","heatData","setHeatData","JSAON","stringify","setItem","newPlayers","dartsScore","initGolfStats","setGameInProgress","playerIndex","isWinner","getDartTotal","setGameOver","playerScores","scores","String","split","total","addToTotal","value","map","getGolfTotal","golfScore","getDominoTotal","newScores","console","log","updateScores","set21","selectGame","groupTitle","label","selected","selectWinner","getScore","clear","event","recordHeatScores","currentPlayers","surfScore","heatLog","date","displayHeatLog","children","fileName","_jsxFileName","lineNumber","columnNumber","SurfScoringLogic","completed","editPlayer","deleteAthlete","deletePlayer","reset","getDominoKey","id","initValue","sortedPlayers","sort","a","b","getSurfTotal","prompt","initializedNewPlayer","push","addPlayer","window","location","pathname","slice","splice","resetSurfersScores","playerId","getJerseyColorSelector","color","className","onClick","selectJersey","editSurfer","Math","ceil","length","Fragment","target","isTieScore","scoreTotal","getHeatTotals","surferTotals","place","placeSuffix","rank","position","rankStatus","scoreDifference","difference","winningScore","highestScoresIndices","findTwoHighestIndices","losersHeighestScore","need","winsBy","toFixed","needs","undefined","highestIndex","secondHighestIndex","highestScore","Infinity","secondHighestScore","i","getTwoHighestScores","highScoreIndex","secondHighScoreIndex","getScoreTotal","playersArray","selection","scorecards","scorecard","scoreIndex","treeTotal","setSurfScore","newScore","currentScore","edit","get2ndHighestScore","highestScores","secondHighestId","getSurfScore","getWave","theScore","highestId","firstScore","secondScore","getClasses","wave","surferScores","indexOf","substring","surfingScores","renderedItems","dartScores","editGolfPar","hole","newPars","newPar","surfingScoreboard","dominoScores","isDominoWinner","dartClass","dominoClass","dartScoreboard","golfScoreboard","dominoScoreboard","items","onChange","fontSize","padding","width","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport SurfingScores from './SurfingScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport jerseyColors from './JerseyColors.js';\n//import { getSurferIndexWithPriority, losePriority } from './SurfPriority.js';\nimport { newDate } from './Dates.js'\n\nconst ScoreKeeper = () => {\n\n    const surfScoring = ['', '', '', '', '', '', '', '', '', ''];\n    const initPlayers = [\n        {\n            name: 'You',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        },\n        {\n            name: 'Me',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n    ];\n    const initNewPlayer = (name) => {\n        const newPlayer = {\n            name: name,\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n        return newPlayer;\n    };\n    const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n    const winners = [5, 10, 11, 15, 20, 21];\n    const dominoWinners = [50, 100, 150, 200];\n    const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || []);\n    const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n    const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n    const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n    const [heatLength, setHeatLength] = useState(winner * 60);\n    const [waveCount, setWaveCount] = useState(['', '', '', '', '', '', '', '', '', '']);\n    const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n    const darts = (game !== 'darts') ? false : true;\n    const dominos = (game !== 'dominos') ? false : true;\n    const surf = (game !== 'surf') ? false : true;\n    const golf = (game !== 'golf') ? false : true;\n    const cricketKey = (player, index) => `${(player.player || player.name)}Cricket${index}`;\n    const golfKey = (player, index) => `${(player.player || player.name)}Golf${index}`;\n    const surfKey = (player, index) => `${(player.player || player.name)}Surf${index}`;\n    const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n    const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n    const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n    const dominoScoring = [50, 100, 150, 200];\n    const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n    const [showButtons, setShowButtons] = useState(false);\n    const [heatData, setHeatData] = useState(JSAON.parse(localStorage.getItem('heatLog'))) || [];\n    useEffect(() => {\n        if (JSON.stringify(players, null, 2) !== '[]') {\n            const surfersScores = [];\n            localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n            localStorage.setItem('players', JSON.stringify(players));\n            setShowButtons(false)\n        }\n    }, [players]);\n    useEffect(() => {\n        setHeatLength(winner);\n    }, [winner]);\n    useEffect(() => {\n        localStorage.setItem('heatLog', JSON.stringify(heatData))\n    }, [heatData]);\n\n    useEffect(() => {\n        localStorage.setItem('golfPars', JSON.stringify(golfPars));\n    }, [golfPars]);\n\n    useEffect(() => {\n        if (!localStorage.getItem('players') || (localStorage.getItem('players') === '[]')) {\n            //const playersValue = localStorage.getItem('players');\n            //alert(`localStorage.players: ${playersValue}`)\n            //alert('Length:', playersValue.length);\n            newPlayer();\n        }\n        const newPlayers = [...players];\n        if (!players[0].cricketScores || !players[1].cricketScores) {\n            if (!players[0].cricketScores) {\n                newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[0].dartsScore = 0;\n            }\n            if (!players[1].cricketScores) {\n                newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[1].dartsScore = 0;\n            }\n        }\n        const initGolfStats = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n        if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n            newPlayers[0].golfPutts = golfScoring;\n            newPlayers[0].golfFW = initGolfStats;\n            newPlayers[0].golfGIR = initGolfStats;\n        }\n        if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n            newPlayers[1].golfPutts = golfScoring;\n            newPlayers[1].golfFW = initGolfStats;\n            newPlayers[1].golfGIR = initGolfStats;\n        }\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }, []);\n\n    const setGameInProgress = (playerIndex) => {\n        if (playerIndex > 0) {\n            if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n                localStorage.setItem('gameStatus', 'inProgress')\n            }\n        }\n        localStorage.setItem(`player${playerIndex}`, 'loser');\n        return false;\n    }\n    const isWinner = (playerIndex) => (getDartTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const playerScores = [\n        { name: 'Player 1', scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88] },\n        { name: 'Player 2', scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81] },\n        { name: 'Player 3', scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89] },\n    ];\n    const setGameOver = (playerIndex) => {\n        localStorage.setItem('gameStatus', 'gameOver');\n        localStorage.setItem(`player${playerIndex}`, 'winner');\n        return true;\n    }\n\n    if (darts && winner !== 21) {\n        localStorage.setItem('winner', 21);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const getDartTotal = (player) => {\n        const cricketScores = String(player.cricketScores).split(',');\n        let total = 0;\n        const addToTotal = (value) => total = total + value;\n        cricketScores.map((score, index) => addToTotal(Number(score)));\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const getGolfTotal = (player) => {\n        if (!golf) return;\n        let total = 0;\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        const addToTotal = (value) => total = total + Number(value);\n        newPlayers.map((player) => {\n            player.golfScores.map((score) => addToTotal(score))\n            player.golfScore = total;\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        return total;\n    }\n    const getDominoTotal = (index) => {\n        const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n        const total = newScores[index];\n        console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n\n    const updateScores = () => {\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        setPlayers(newPlayers);\n    }\n    const set21 = () => {\n        if (darts) {\n            localStorage.setItem('winner', 21);\n            setWinner(Number(localStorage.getItem('winner')));\n        }\n    }\n    const selectGame = (groupTitle, label, selected) => {\n        localStorage.setItem('game', selected)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setGame(localStorage.getItem('game'));\n        set21();\n    }\n    const selectWinner = (groupTitle, label, selected) => {\n        localStorage.setItem('winner', selected)\n        setWinner(Number(localStorage.getItem('winner')));\n        getScore();\n    }\n    const clear = (event) => {\n        //alert('Note was cleared: ' + event.value);\n        localStorage.setItem('players', JSON.stringify(initPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n    const recordHeatScores = () => {\n        const currentPlayers = JSON.parse(localStorage.getItem('players'));\n        const heatData = currentPlayers.map((player, index) => {\n            //console.log(`recordHeatScores=> name: ${player.name} score: ${player.surfScore}`);\n            return {\n                name: player.name,\n                score: player.surfScore,\n                scores: player.surfScores\n            }\n        });\n        //console.log(`recordHeatScores => heatData: ${JSON.stringify(heatData,null,2)}`);\n        const heatLog = [{\n            date: newDate(),\n            scores: heatData\n        }];\n        localStorage.setItem('heatLog', JSON.stringify(heatLog));\n    }\n    const displayHeatLog = () => {\n        const heatLog = JSON.parse(localStorage.getItem('heatLog'));\n        return <div>\n                    <div>{heatLog[0].date}</div>\n                    <div>\n                        {heatData.map((player, index) => <div>\n                                <div>{`${player.name}: ${player.score}`}</div>\n                                <div><SurfScoringLogic\n                                    index={index} \n                                    completed={true}\n                                    players={players}\n                                    setPlayers={setPlayers}\n                                    editPlayer={editPlayer}\n                                    deleteAthlete={deletePlayer}\n                                    />\n                                </div>\n                                {player.scores.map((score,index) => <span>{(score>0&&index>0)?', ':null}{score}</span>)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n    }\n\n    const reset = (event) => {\n        let newPlayers = JSON.parse(localStorage.getItem('players'));\n        const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n\n        const id = (player, index) => {\n            if (darts) {\n                return cricketKey(player, index);\n            } else if (dominos) {\n                return getDominoKey(player, index);\n            } else if (golf) {\n                return golfKey(player, index);\n            } else if (surf) {\n                return surfKey(player, index);\n            }\n            return (player.player || player.name);\n        }\n\n        const initValue = 0;\n        if (darts) {\n            newPlayers.map((player) => {\n                player.dartsScore = 0;\n                player.cricketScores = [0, 0, 0, 0, 0, 0, 0];\n            });\n        } else if (golf) {\n            newPlayers.map((player) => {\n                player.golfScore = 0;\n                player.golfScores = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n                player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            });\n        } else if (dominos) {\n            newPlayers[0].dominoScore = 0;\n            newPlayers[1].dominoScore = 0;\n        } else if (surf) {\n            newPlayers.map((player, index) => {\n                player.surfScores = surfScoring;\n                player.surfScore = 0;\n                player.surfPriority = 0;\n            });\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => getSurfTotal(b) - getSurfTotal(a));\n            newPlayers = [...sortedPlayers];\n        } else {\n            newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n        }\n        localStorage.setItem('gameStatus', 'inProgress');\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        getScore();\n    }\n    const newPlayer = () => {\n        const newPlayer = prompt('Enter new name', '');\n        const initializedNewPlayer = initNewPlayer(newPlayer);\n        let newPlayers = [...players];\n        if (newPlayer !== null) {\n            newPlayers.push(initializedNewPlayer);\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n    }\n    const addPlayer = (event) => {\n        newPlayer();\n    }\n    const editPlayer = (index) => {\n        const newPlayer = prompt('Enter new name', players[index].name);\n        if (newPlayer !== null) {\n            let newPlayers = [...players];\n            newPlayers[index].name = newPlayer;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            //console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n\n    const deletePlayer = (index) => {\n        console.log(`deletePlayer => ${index}`)\n        const newPlayers = [...players].slice();\n        newPlayers.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    };\n    /*\n    const getSurferIndexWithPriority = (priorityIndex) => {\n        for (let i = 0; i < players.length; i++) {\n            if (Number(players[i].surfPriority) === priorityIndex) {\n                return i;\n            }\n        }\n        return null;\n    }\n    const losePriority = (selectedPriority) => {\n        const newPlayers = [...players];\n        newPlayers.map((player, index) => {\n            if (player.surfPriority == selectedPriority) {\n                player.surfPriority = newPlayers.length;\n            } else if (player.surfPriority != 1 && selectedPriority != newPlayers.length) {\n                const shift = player.surfPriority - 1;\n                player.surfPriority = (shift > 0) ? shift : newPlayers.length;\n            }\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n        setPlayers(newPlayers);\n    }\n    const shiftPriority = (priorityIndex) => {\n        const newPlayers = [...players];\n        newPlayers.map((player, index) => {\n            if (player.surfPriority === (priorityIndex - 1)) {\n                player.surfPriority = priorityIndex;\n            } else if (player.surfPriority === priorityIndex) {\n                player.surfPriority = (priorityIndex - 1);\n            }\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n        setPlayers(newPlayers);\n    }\n    */\n    const resetSurfersScores = (playerId) => {\n        const newPlayers = [...players];\n        newPlayers[playerId].surfScore = 0;\n        newPlayers[playerId].surfScores = surfScoring;\n        setPlayers(newPlayers);\n        getScore();\n    }\n    const deleteAthlete = (playerId) => {\n        const newPlayers = [...players];\n        newPlayers.splice(playerId, 1);\n        setPlayers(newPlayers);\n    }\n    const getJerseyColorSelector = (playerId, color, index) => <button className={`bg-${color} ht-45 width50px button r-10`} onClick={() => selectJersey(playerId, index)}></button>;\n    const editSurfer = (playerId) => <div className='m-10 p-10 r-10 bg-darker'>\n            <div className='size30 p-10'>Name:</div>\n            <button className={`bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10`} onClick={() => editPlayer(playerId)}>{players[playerId].name}</button>\n            <div className='size30 p-10'>Jersey color:</div>\n            <div>\n                {jerseyColors.map((color,index) => \n                    index === Math.ceil(jerseyColors.length / 2) ? (\n                        <React.Fragment key={index}>\n                            <br />\n                            {getJerseyColorSelector(playerId, color, index)}\n                        </React.Fragment>\n                    ) : (\n                        getJerseyColorSelector(playerId, color, index)\n                    )\n                )}\n            </div>\n            <div>\n                <button className='bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10 m-5' onClick={() => resetSurfersScores(playerId)}>\n                    Reset Scores\n                </button>\n                <button className='bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10 m-5' onClick={() => deleteAthlete(playerId)}>\n                    Delete Athlete\n                </button>\n            </div>\n        </div>\n    const getSurfTotal = (player) => {\n        let total = 0;\n        const score = (index) => player.surfScores[index];\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n                addToTotal(Number(score(index)))\n            }\n        );\n        return total;\n    }\n    const isTieScore = (index) => {\n        const score = scoreTotal(index, players);\n        if (index !== 0) {\n            if (score === scoreTotal(index - 1, players)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    const getHeatTotals = () => <div>\n                {players.map((player, index) => <div>{surferTotals(player, index)}</div>)}\n            </div>\n    const place = (index) => (isTieScore(index) && (index !== 0)) ? index : (index + 1);\n    const placeSuffix = (index) => rank[(isTieScore(index) && (index !== 0)) ? (index-1) : (index > 2) ? 3 : (index)];\n    const position = (index) => `${place} ${placeSuffix}`;\n    const surferTotals = (player, index) => <div>{position(index)} {players[index].name} {players[index].surfScore} {rankStatus(player, index)}</div>;\n    const rank = ['st', 'nd', 'rd', 'th'];\n    const rankStatus = (player, index) => {\n        const score = getSurfTotal(player);\n        const scoreDifference = Number(players[(index === 0) ? 0 : (index - 1)].surfScore - players[(index === 0) ? 1 : (index)].surfScore);\n        const difference = (scoreDifference < 0) ? (-1 * scoreDifference) : scoreDifference;\n        const winningScore = Number(players[(index === 0) ? 0 : ((index < 3) ? (index - 1) : 1)].surfScore);\n        const highestScoresIndices = findTwoHighestIndices(players[index].surfScores);\n        const losersHeighestScore = players[index].surfScores[highestScoresIndices[0]];\n        const need = (winningScore - losersHeighestScore) + .01;\n        const winsBy = `Wins by ${difference.toFixed(2)}`;\n        const needs = `Needs ${need.toFixed(2)}`;\n        if (index === 0) {\n            return winsBy;\n        }\n        return needs;\n    }\n    const findTwoHighestIndices = (scores) => {\n        const newScores = (scores !== undefined) ? scores : ['', '', '', '', '', '', '', '', '', ''];\n        let highestIndex = -1;\n        let secondHighestIndex = -1;\n        let highestScore = -Infinity;\n        let secondHighestScore = -Infinity;\n        for (let i = 0; i < newScores.length; i++) {\n            if (newScores[i] > highestScore) {\n                secondHighestIndex = highestIndex;\n                secondHighestScore = highestScore;\n                highestIndex = i;\n                highestScore = newScores[i];\n            } else if (newScores[i] > secondHighestScore) {\n                secondHighestIndex = i;\n                secondHighestScore = newScores[i];\n            }\n        }\n        return [highestIndex, secondHighestIndex];\n    };\n    const getTwoHighestScores = (index) => {\n        const player = players[index];\n        const scores = player.surfScores;\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n        //console.log(`getTwoHighestScores => playerIndex: ${index} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            highScoreIndex: highestIndex,\n            secondHighScoreIndex: secondHighestIndex\n        };\n    };\n    const getScoreTotal = (index) => {\n        const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n        const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n        const score = (highestScore + secondHighestScore);\n        return score;\n    }\n    const highestScore = (index, playersArray) => {\n        return playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n    }\n    const secondHighestScore = (index, playersArray) => playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n    const scoreTotal = (index, playersArray) => Number(highestScore(index, playersArray) + secondHighestScore(index, playersArray)).toFixed(2);\n\n    const selectJersey = (playerId, selection) => {\n        const newPlayers = [...players];\n        newPlayers[playerId].surfJerseyColor = (selection);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(newPlayers);\n    }\n    const scorecards = () => {\n        const scorecard = (playerIndex, scoreIndex, score) => {\n            const player = players[playerIndex];\n            if (darts) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`)\n                return <CricketScore\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (dominos) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`)\n                return <Dominos\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    scoreTotal={player.dominoScore || 0}\n                    treeTotal={score}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    getDominoTotal={getDominoTotal}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (golf) {\n                console.log(`${game} - scorecard => player:${player.player || player.name}`);\n                console.log(`scoreIndex: ${scoreIndex}`);\n                console.log(`score: ${player.golfScores[scoreIndex]}`);\n                console.log(`scorecards => par: ${score}`);\n                return <ScoreCard\n                    game={game}\n                    players={players}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={golfPars[scoreIndex]}\n                />\n            }\n            return <ScoreCard\n                game={game}\n                players={players}\n                playerIndex={playerIndex}\n                scoreIndex={scoreIndex}\n                editPlayer={editPlayer}\n                deletePlayer={deletePlayer}\n                updateScores={updateScores}\n                winner={winner}\n            />\n        }\n        /////////////////////////////////\n        const setSurfScore = (playerId, index, score) => {\n            const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n            const newPlayers = [...players];\n            const currentScore = newPlayers[playerId].surfScores[index];\n            const edit = (currentScore !== '' && currentScore !== 0) ? false : true;\n            newPlayers[playerId].surfScores[index] = Number(newScore);\n            newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n            if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n                newPlayers.map((player, index) => {\n                    if (index === playerId) {\n                        player.surfPriority = players.length;\n                    } else if (player.surfPriority != 0) {\n                        player.surfPriority = player.surfPriority - 1;\n                    }\n                });\n            }\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n\n            console.log('setSurfScore => sortedPlayers: ', sortedPlayers)\n\n            localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n            setPlayers(sortedPlayers);\n        }\n        const get2ndHighestScore = (playerId) => {\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const secondHighestId = highestScores[1];\n            return players[playerId].surfScores[secondHighestId];\n        }\n        const getSurfScore = (index) => {\n            const newPlayers = [...players];\n            const surfScore = scoreTotal(index, newPlayers);\n\n            newPlayers[index].score = surfScore;\n            newPlayers[index].surfScore = surfScore;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            return surfScore;\n        };\n        const getWave = (playerId, index, score) => {\n            const player = players[playerId];\n            const theScore = player.surfScores[index];\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const highestId = highestScores[0];\n            const secondHighestId = highestScores[1];\n            const firstScore = (index === highestId) ? true : false;\n            const secondScore = (index === secondHighestId) ? true : false;\n            const getClasses = (firstScore || secondScore) ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n            const wave = <div className=\"column r-10\" onClick={() => setSurfScore(playerId, index, score)} key={getKey(`wave${playerId}${index}${score}`)}>\n                <div className='size30 bold color-yellow bg-dkYellow w-100 p-10'>{index + 1}</div>\n                <div className={`ht-40 ${getClasses}`}>{score}</div>\n            </div>\n            return wave\n        }\n        const surferScores = (player, index) => <div className='button' key={getKey(`${index}${(player.player || player.name)}`)}>\n            <div className={`flexContainer ht-50 r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`} key={getKey(`${index}${(player.player || player.name)}`)}>\n                <div className={`flex2Column contentLeft r-10-lft m-0 w-75 p-10`}>\n                    <div className='bold'>\n                        <span className='size25 mt--10'>\n                            {place(index)}\n                        </span>\n                        <span className='size15 mt--10'>\n                            {placeSuffix(index)}\n                        </span>\n                    </div>\n                    <div className='bold' onClick={()=>setShowButtons((showButtons!==false)?false:index)}>\n                        <div className='size30 mt-5 mb-5'>\n                            {(player.player || player.name).split(' ')[0]}\n                        </div>\n                        <div className='size20'>\n                            {(player.name.indexOf(' ') !== -1)?player.name.substring(player.name.indexOf(' ') + 1):null}\n                        </div>\n                    </div>\n                </div>\n                <div className={`r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`}>\n                    <div className='size40 bold'>{getScoreTotal(index)}</div>\n                    <div className='mt-10 bold'>{rankStatus(player, index)}</div>\n                </div>\n            </div>\n            <div>\n                {showButtons === index && (\n                editSurfer(index)\n            )}\n            </div>\n            <div>\n                <div>\n                    <div className='h-scroll color-white copyright ml-10 mr-10 mt-5'>\n                        <div className=\"container mt-10\">\n                            {players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        /////////////////////////////////\n        const surfingScores = (player, index) => {\n            return surferScores(player, index);\n            /*if (players != undefined && index != undefined && player != undefined) {\n                return <SurfingScores\n                    players={players}\n                    player={player}\n                    index={index}\n                    surfScoring={surfScoring}\n                    setPlayers={setPlayers}\n                    key={getKey(index)}\n                >\n                </SurfingScores>\n            } \n            */\n        }\n\n        const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n\n        const dartScores = () => dartScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex3Column p-5'>\n                {scorecard(0, index, 0)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(1, index, 0)}\n            </div>\n        </div>);\n\n        const editGolfPar = (hole) => {\n            const newPars = [...golfPars];\n            const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n            newPars[hole] = newPar;\n            setGolfPars(newPars);\n        }\n\n        const golfScores = () => golfScoring.map((hole, index) => <div key={getKey(hole)}>\n            <div className='contentCenter bg-dark r-10 m-5 mt-35'>\n                <div>\n                    <span className='copyright greet color-yellow'>\n                        Hole:\n                    </span>\n                    <span className='size40 bold pt-5 pl-15 pr-15 bg-dark r-10'>\n                        {index + 1}\n                    </span>\n                    <span className='copyright greet color-yellow'>\n                        Par:\n                    </span>\n                    <span className='size20 bold color-lite mt--5'>\n                        {golfPars[index]}\n                    </span>\n                </div>\n                <div className='flexContainer'>\n                    <div className='flex2Column p-5'>\n                        {scorecard(0, index, golfPars[index])}\n                    </div>\n                    <div className='flex2Column p-5'>\n                        {scorecard(1, index, golfPars[index])}\n                    </div>\n                </div>\n            </div>\n        </div>);\n\n        const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index));\n\n        const dominoScores = () => dominoScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(0, index, score)}\n            </div>\n            <div className='r-5 font50 color-yellow m-auto w-100'>\n                {score}\n            </div>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(1, index, score)}\n            </div>\n        </div>);\n\n        const isDominoWinner = (playerIndex) => (getDominoTotal(playerIndex) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n\n        const dartClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        const dominoClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isDominoWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n\n        const dartScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>{players[0].player || players[0].name}:<div className='mt-10 size40 white'>{getDartTotal(players[0])}</div></div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>{players[1].player || players[1].name}:<div className='mt-10 size40 white'>{getDartTotal(players[1])}</div></div>\n            </div>\n            {dartScores()}\n        </React.Fragment>\n\n        const golfScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy m-5 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>\n                    {players[0].player || players[0].name}:<div className='mt-10 size40 white'>{players[0].golfScore}</div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>\n                    {players[1].player || players[1].name}:<div className='mt-10  size40 white'>{players[1].golfScore}</div>\n                </div>\n            </div>\n            <div className='scrollHeight500'>\n                {golfScores()}\n            </div>\n        </React.Fragment>\n\n        const dominoScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10'>\n                <div className={dominoClass(0)}>\n                    {players[0].player || players[0].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(0)}\n                    </div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dominoClass(1)}>\n                    {players[1].player || players[1].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(1)}\n                    </div>\n                </div>\n            </div>\n            {dominoScores()}\n        </React.Fragment>\n            \n        if (darts) return dartScoreboard()\n        if (dominos) return dominoScoreboard()\n        if (golf) return golfScoreboard()\n        //if (surf) return surfScoreboard\n        if (surf) return surfingScoreboard()\n        else return renderedItems();\n    }\n\n    return (\n        <div className='fadeIn mt--30'>\n            <div className='mb-10'>\n                <Selector\n                    groupTitle='game'\n                    label='item.description'\n                    items={games}\n                    selected={game}\n                    onChange={selectGame}\n                    fontSize='25'\n                    padding='10px'\n                    width={(darts || dominos) ? '98%' : '65%'}\n                />\n                {\n                    (darts || golf)\n                        ? <React.Fragment></React.Fragment>\n                        : <Selector className='fl-left'\n                            groupTitle='winner'\n                            label='i.description'\n                            items={(dominos) ? dominoWinners : ((surf) ? heatLengths : winners)}\n                            selected={winner}\n                            onChange={selectWinner}\n                            fontSize='25'\n                            padding='10px'\n                            width='30%'\n                        />\n                }\n                {(surf) ?\n                    <SurfScores\n                        players={players}\n                        setPlayers={setPlayers}\n                        heatLength={winner}\n                        isWinner={isWinner}\n                        editPlayer={editPlayer} \n                        deletePlayer={deletePlayer}\n                        setGameStatus={setGameStatus}\n                    ></SurfScores>\n                    :\n                    <React.Fragment></React.Fragment>\n\n                }\n            </div>\n            <div className='scrollHeight450'>\n                {scorecards()}\n            </div>\n            {(surf)?displayHeatLog():null}\n            <div className='flexContainer width-100-percent'>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow' onClick={() => addPlayer()}>add player</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black' onClick={() => reset()}>reset</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow' onClick={() => clear()}>clear</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScoreKeeper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}