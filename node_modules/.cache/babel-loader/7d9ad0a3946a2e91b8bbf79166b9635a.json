{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/LogEntry.js\";\nimport React from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport RadioSelector from '../forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport LogData from './LogData.js';\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\nimport LogId from './LogId.js';\nimport templateData from './TemplateData.js';\nimport selector from './Selector.js';\nimport group from './Group.js';\nimport groupsModule from './Groups.js';\n\nclass LogEntry extends React.Component {\n  //log = JSON.parse(localStorage.getItem(\"ThuApr3020207:03:14PM\"));\n  constructor(props) {\n    super(props);\n    this.posts = new PostDirectory();\n    this.postDirectory = this.posts.getDirectory();\n\n    this.setDefaultLastId = () => {\n      return \"ThuApr3020207:03:14PM\";\n    };\n\n    this.lastPostId = localStorage.getItem(\"lastPostId\") === null ? this.posts.getLastItem() : localStorage.getItem(\"lastPostId\");\n    this.logData = new LogData({\n      recordId: this.lastPostId\n    });\n\n    this.getStateLog = () => this.props.getStateLog();\n\n    this.items = () => this.state.items;\n\n    this.selected = (item, groupTitle) => item.selections.indexOf(this.log[groupTitle][item.description]) !== -1 ? true : false;\n\n    this.defaultSelection = (item, groupTitle) => this.selected(item, groupTitle) ? item.selections.indexOf(this.log[groupTitle][item.description]) : 0;\n\n    this.radioItems = (item, groupTitle) => {\n      return /*#__PURE__*/React.createElement(RadioSelector, {\n        header: groupTitle,\n        groupTitle: groupTitle,\n        selected: this.defaultSelection(item, groupTitle),\n        label: item.description,\n        items: item.selections,\n        onChange: this.handleSelection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      });\n    };\n\n    this.radio = (item, groupTitle) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"r-vw bg-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 35\n      }\n    }, this.radioItems(item, groupTitle));\n\n    this.selectionInterface = (item, groupTitle) => item.type === \"radio\" ? this.radio(item, groupTitle) : selector(item, groupTitle, this.spot, this.defaultSelection, this.handleSelection, this.selected);\n\n    this.groups = groupsModule(this.items, this.state.log, this.defaultSelection, this.selectionInterface);\n\n    this.categories = () => {\n      this.selectorStatus = [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 16\n        }\n      }, this.groups());\n    };\n\n    this.getLogObject = () => this.state.log;\n\n    this.dateEntry = () => {\n      const {\n        log,\n        date\n      } = this.state;\n      const logExists = log !== undefined && log !== null && JSON.stringify(log, null, 2) !== \"{}\" ? true : false;\n\n      const stateLogDate = () => this.getLogObject().Day.Date;\n\n      const getDate = () => logExists === true ? new Date(stateLogDate()) : new Date(date);\n\n      const getTodaysDate = () => new Date();\n\n      const getStateDate = () => date;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-5 subHeader color-yellow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flexContainer width-100-percent bg-vdkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, {\n        onChange: this.onDateChange,\n        value: getDate(),\n        className: \"p-vw bg-green flex3Column r-vw m-vw\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 27\n        }\n      })));\n    };\n\n    this.selectorStatus = [];\n    const {\n      items,\n      buttonLabel,\n      title,\n      message,\n      logId\n    } = props;\n    this.buttonLabel = buttonLabel;\n    this.title = title;\n    this.message = message;\n    this.logId = logId;\n    this.spot = localStorage.getItem('spot'); //this.logData.init();\n\n    if (logId !== undefined && logId !== \"\") {\n      this.lastPostId = logId;\n      console.log(`$$ logId1: ${logId}`);\n      this.log = localStorage.getItem(logId) === null ? this.templateData : JSON.parse(localStorage.getItem(logId));\n    } else {\n      this.lastPostId = \"ThuApr3020209:19:28PM\";\n      console.log(`logId2: ${this.lastPostId}`);\n      this.log = JSON.parse(localStorage.getItem(\"ThuApr3020209:19:28PM\"));\n    }\n\n    this.logIdComponent = new LogId({\n      logId: this.props.logId,\n      log: this.log\n    });\n    this.state = {\n      date: new Date(),\n      items: items,\n      spot: this.spot,\n      log: this.log,\n      lastPostId: logId,\n      change: false\n    };\n    this.handleSelection = this.handleSelection.bind(this);\n    this.updateNotes = this.updateNotes.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.onDateChange = this.onDateChange.bind(this);\n  }\n\n  setLogState() {\n    this.setState({\n      log: this.log,\n      change: true\n    });\n  }\n\n  handleSelection(groupTitle, label, selected) {\n    if (typeof groupTitle === \"string\") {\n      this.log[groupTitle][label] = selected;\n      this.props.onChange(groupTitle, label, selected, true);\n      this.setLogState();\n    }\n  }\n\n  updateNotes(event) {\n    this.handleSelection(\"Comments\", \"notes\", event.target.value);\n  }\n\n  handleSubmit(event) {\n    let {\n      log\n    } = this.state;\n    log = log !== undefined && JSON.stringify(log, null, 2) !== \"{}\" ? log : this.log;\n    console.log(`handleSubmit: ${JSON.stringify(log, null, 2)}`);\n    const recordId = this.logIdComponent.generateNewLogId();\n    console.log(`handleSubmit: recordId: ${recordId}`);\n    let postDirectory = this.posts.getDirectory();\n    let post = \"\";\n\n    const logIt = () => {\n      postDirectory.push(recordId);\n      postDirectory = JSON.stringify(postDirectory);\n      console.log(`postDirectory: ${postDirectory}`);\n      post = JSON.stringify(log, null, 2);\n      console.log(`post: ${post}`);\n      localStorage.setItem(recordId, post); //localStorage.setItem(\"postDirectory\", postDirectory);\n\n      this.posts.add(recordId);\n    };\n\n    const selectorStatusComplete = this.selectorStatus.includes(false) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n\n    if (selectorStatusComplete) {\n      logIt();\n    }\n  }\n\n  handleSave(event) {\n    let {\n      log,\n      lastPostId\n    } = this.state;\n    log = log !== undefined && JSON.stringify(log, null, 2) !== \"{}\" ? log : this.log;\n    console.log(`handleSave: ${log}`);\n    const recordId = lastPostId;\n    let post = \"\";\n\n    const logIt = () => {\n      post = JSON.stringify(log, null, 2);\n      console.log(`post: ${post}`);\n      localStorage.setItem(recordId, post);\n    };\n\n    const selectorStatusComplete = this.selectorStatus.includes(false) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n\n    if (selectorStatusComplete) {\n      logIt();\n    }\n  }\n\n  handleDelete(event) {\n    const recordId = this.state.lastPostId;\n    this.posts.delete(recordId);\n  }\n\n  onDateChange(date) {\n    const pickerDate = date;\n    date = String(date);\n    const day = pickerDate.getDate();\n    const month = pickerDate.getMonth() + 1;\n    const year = pickerDate.getFullYear();\n    const logDate = {\n      \"month\": month,\n      \"day\": day,\n      \"year\": year\n    };\n    this.handleSelection(\"Day\", \"Date\", pickerDate);\n    this.handleSelection(\"Day\", \"Day\", day);\n    this.handleSelection(\"Day\", \"Month\", month);\n    this.handleSelection(\"Day\", \"Year\", year);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Route, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      title: this.title,\n      message: this.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, this.dateEntry(), this.categories(), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, \"Additional Comments: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"10\",\n      cols: window.innerWidth / 15,\n      value: this.state.log.Comments.notes,\n      onChange: this.updateNotes,\n      className: \"mt-10 greet p-10 r-10 brdr-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      className: \"noUnderline color-black\",\n      to: \"/LogDirectory\",\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.handleSubmit,\n      className: \"button m-1 greet p-20 r-10 bg-green brdr-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 29\n      }\n    }, this.buttonLabel)), /*#__PURE__*/React.createElement(Link, {\n      className: \"noUnderline color-black\",\n      to: \"/LogDirectory\",\n      onClick: () => this.handleSave(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button m-1 greet p-20 r-10 bg-yellow brdr-yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    }, \"save\")), /*#__PURE__*/React.createElement(Link, {\n      className: \"noUnderline color-black\",\n      to: \"/LogDirectory\",\n      onClick: () => this.handleDelete(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button m-1 greet p-20 r-10 bg-red brdr-red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }\n    }, \"delete\")), /*#__PURE__*/React.createElement(PostDirectory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default LogEntry;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LogEntry.js"],"names":["React","Dialog","RadioSelector","DatePicker","getKey","PostDirectory","LogData","BrowserRouter","Router","Switch","Link","Route","LogId","templateData","selector","group","groupsModule","LogEntry","Component","constructor","props","posts","postDirectory","getDirectory","setDefaultLastId","lastPostId","localStorage","getItem","getLastItem","logData","recordId","getStateLog","items","state","selected","item","groupTitle","selections","indexOf","log","description","defaultSelection","radioItems","handleSelection","radio","selectionInterface","type","spot","groups","categories","selectorStatus","getLogObject","dateEntry","date","logExists","undefined","JSON","stringify","stateLogDate","Day","Date","getDate","getTodaysDate","getStateDate","onDateChange","buttonLabel","title","message","logId","console","parse","logIdComponent","change","bind","updateNotes","handleSubmit","handleSave","handleDelete","setLogState","setState","label","onChange","event","target","value","generateNewLogId","post","logIt","push","setItem","add","selectorStatusComplete","includes","window","confirm","delete","pickerDate","String","day","month","getMonth","year","getFullYear","logDate","render","innerWidth","Comments","notes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport RadioSelector from '../forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport LogData from './LogData.js';\nimport {BrowserRouter as Router, Switch, Link, Route} from 'react-router-dom';\nimport LogId from './LogId.js';\nimport templateData from './TemplateData.js';\nimport selector from './Selector.js';\nimport group from './Group.js';\nimport groupsModule from './Groups.js'\nclass LogEntry extends React.Component {\n    //log = JSON.parse(localStorage.getItem(\"ThuApr3020207:03:14PM\"));\n    posts = new PostDirectory();\n    postDirectory = this.posts.getDirectory();\n    setDefaultLastId = () => {\n        return \"ThuApr3020207:03:14PM\"\n    }\n    lastPostId = (localStorage.getItem(\"lastPostId\") === null) ? this.posts.getLastItem() : localStorage.getItem(\"lastPostId\");\n    logData = new LogData({recordId: this.lastPostId});\n    \n    constructor(props) {\n        super(props);\n        this.selectorStatus = [];\n        const {items, buttonLabel, title, message, logId } = props; \n        this.buttonLabel = buttonLabel;\n        this.title = title;\n        this.message = message;\n        this.logId = logId;\n        this.spot = localStorage.getItem('spot');\n        //this.logData.init();\n        if (logId !== undefined && logId !== \"\" ) {\n            this.lastPostId = logId;\n            console.log(`$$ logId1: ${logId}`);\n            this.log = (localStorage.getItem(logId) === null) ? this.templateData : JSON.parse(localStorage.getItem(logId));\n        } else {\n            this.lastPostId = \"ThuApr3020209:19:28PM\";\n            console.log(`logId2: ${this.lastPostId}`)\n            this.log = JSON.parse(localStorage.getItem(\"ThuApr3020209:19:28PM\"))\n        }\n        this.logIdComponent = new LogId({logId: this.props.logId, log: this.log});\n        this.state = {\n            date: new Date(),\n            items: items,\n            spot: this.spot,\n            log: this.log,\n            lastPostId: logId,\n            change: false\n        };\n        this.handleSelection = this.handleSelection.bind(this);\n        this.updateNotes = this.updateNotes.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n    }\n    setLogState() {\n        this.setState({\n            log: this.log,\n            change: true\n        });\n    }\n    handleSelection(groupTitle, label, selected) {\n        if (typeof groupTitle === \"string\") {\n            this.log[groupTitle][label] = selected;\n            this.props.onChange(groupTitle, label, selected, true);\n            this.setLogState();\n        } \n    }\n    updateNotes(event) {\n        this.handleSelection(\"Comments\", \"notes\", event.target.value);\n    }\n    handleSubmit(event) {\n        let { log } = this.state;\n        log = (log !== undefined && JSON.stringify(log, null, 2) !== \"{}\") ? log : this.log;\n        console.log(`handleSubmit: ${JSON.stringify(log, null, 2)}`)\n        const recordId = this.logIdComponent.generateNewLogId();\n        console.log(`handleSubmit: recordId: ${recordId}`)\n        let postDirectory = this.posts.getDirectory();\n        let post = \"\";\n        const logIt = () => {\n            postDirectory.push(recordId);\n            postDirectory = JSON.stringify(postDirectory);\n            console.log(`postDirectory: ${postDirectory}`)\n            post = JSON.stringify(log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n            //localStorage.setItem(\"postDirectory\", postDirectory);\n            this.posts.add(recordId);\n        }\n        const selectorStatusComplete = (this.selectorStatus.includes(false)) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n        if (selectorStatusComplete) {\n            logIt();\n        }\n    }\n    handleSave(event) {\n        let { log, lastPostId } = this.state;\n        log = (log !== undefined && JSON.stringify(log, null, 2) !== \"{}\") ? log : this.log;\n        console.log(`handleSave: ${log}`)\n        const recordId = lastPostId;\n        let post = \"\";\n        const logIt = () => {\n            post = JSON.stringify(log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n        }\n        const selectorStatusComplete = (this.selectorStatus.includes(false)) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n        if (selectorStatusComplete) {\n            logIt();\n        }\n    }\n    handleDelete(event) {\n        const recordId = this.state.lastPostId;\n        this.posts.delete(recordId);\n    }\n    onDateChange(date) {\n        const pickerDate = date;\n        date = String(date);\n        const day = pickerDate.getDate();\n        const month = pickerDate.getMonth()+1;\n        const year = pickerDate.getFullYear();\n        const logDate = {\n            \"month\": month,\n            \"day\": day,\n            \"year\": year\n        }\n        this.handleSelection(\"Day\", \"Date\", pickerDate);\n        this.handleSelection(\"Day\", \"Day\", day);\n        this.handleSelection(\"Day\", \"Month\", month);\n        this.handleSelection(\"Day\", \"Year\", year);\n    }\n    getStateLog = () => this.props.getStateLog();\n    items = () => this.state.items;\n    selected = (item,groupTitle) => ((item.selections.indexOf(this.log[groupTitle][item.description])) !== -1) ? true : false;\n    defaultSelection = (item,groupTitle) => (this.selected(item,groupTitle)) ? (item.selections.indexOf(this.log[groupTitle][item.description])) : 0; \n    \n    radioItems = (item, groupTitle) => {\n        return (\n            <RadioSelector\n                header={groupTitle}\n                groupTitle={groupTitle} \n                selected={this.defaultSelection(item,groupTitle)} \n                label={item.description} \n                items={item.selections} \n                onChange={this.handleSelection}\n            />\n        )\n    };\n\n    radio = (item, groupTitle) => <div className=\"r-vw bg-green\">\n                {this.radioItems(item, groupTitle)}\n            </div>;\n    \n    selectionInterface = (item, groupTitle) => (item.type === \"radio\") ? this.radio(item, groupTitle) : selector(item, groupTitle, this.spot, this.defaultSelection, this.handleSelection, this.selected);\n\n    /*groups = () => this.items().map((item) => {\n        const headerClasses = 'subHeader color-yellow';\n        const selectorClasses = \"greet p-vw bg-vdkGreen flex3Column\";\n        const groupClasses = (window.innerWidth < 500) ? \"r-vw\" : \"flexContainer width-100-percent r-vw\";\n        const description = item.description;\n        //console.log(`description: ${JSON.stringify(item,null,2)}`)\n        const addToLogs = (group) => {\n            this.log[description][group.description] = group.selections[this.defaultSelection(group, description)]\n        }\n       return <div key={getKey(\"groupConainer\")}>\n                    <div key={getKey(\"groupHeader\")} className={headerClasses}>\n                        {item.description}\n                    </div>\n                    <div className={groupClasses} key={getKey(\"groupSubConainer\")}>\n                        {group(item).map((group) => \n                            <div key={getKey(\"selectorContainer\")} className={selectorClasses}>\n                                {this.selectionInterface(group, description)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n    })\n    */\n    groups = groupsModule(this.items, this.state.log, this.defaultSelection, this.selectionInterface);\n    categories = () => {\n        this.selectorStatus = [];\n        return <div className='description'>{this.groups()}</div>;\n    }\n    getLogObject = () => this.state.log;\n    dateEntry = () => {\n        const {log, date } = this.state;\n        const logExists = (log !== undefined && log !== null && JSON.stringify(log, null, 2) !== \"{}\") ? true : false;\n        const stateLogDate = () => this.getLogObject().Day.Date;\n        const getDate = () => (logExists === true) ? new Date(stateLogDate()) : new Date(date);\n        const getTodaysDate = () => new Date();\n        const getStateDate = () => date;\n        return <React.Fragment>\n                    <div className='mb-5 subHeader color-yellow'>Date</div>\n                    <div className='flexContainer width-100-percent bg-vdkGreen'>\n                        <DatePicker\n                            onChange={this.onDateChange}\n                            value={getDate()} \n                            className='p-vw bg-green flex3Column r-vw m-vw'\n                        /><br/>\n                    </div>\n                </React.Fragment>\n    }\n    \n    render() {\n        return (\n            <Route>\n                <Dialog title={this.title} message={this.message}>\n                    <form onSubmit={this.handleSubmit}>\n                        {this.dateEntry()}\n                        {this.categories()}\n                        <br/>\n                        \n                        <div className=\"mb-5\">Additional Comments: </div>\n                        <textarea \n                            rows=\"10\" \n                            cols={window.innerWidth/15} \n                            value={this.state.log.Comments.notes} \n                            onChange={this.updateNotes} \n                            className=\"mt-10 greet p-10 r-10 brdr-green\"\n                        /><br/><br/>\n                        <Link className=\"noUnderline color-black\"\n                            to=\"/LogDirectory\"\n                            onClick={() => this.handleSubmit()}>\n                            <div onClick={this.handleSubmit} className=\"button m-1 greet p-20 r-10 bg-green brdr-green\">\n                                {this.buttonLabel}\n                            </div>\n                        </Link> \n                        <Link className=\"noUnderline color-black\"\n                            to=\"/LogDirectory\"\n                            onClick={() => this.handleSave()}>\n                            <div className=\"button m-1 greet p-20 r-10 bg-yellow brdr-yellow\">\n                                save\n                            </div>\n                        </Link>\n                        <Link className=\"noUnderline color-black\"\n                            to=\"/LogDirectory\"\n                            onClick={() => this.handleDelete()}>\n                            <div  className=\"button m-1 greet p-20 r-10 bg-red brdr-red\">\n                                delete\n                            </div>\n                        </Link>\n                        <PostDirectory />\n                    </form>\n                </Dialog>\n            </Route>\n        );\n    };\n}\n\nexport default LogEntry;"]},"metadata":{},"sourceType":"module"}