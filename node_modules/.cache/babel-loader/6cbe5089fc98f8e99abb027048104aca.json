{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/LogDirectory.js\";\nimport React from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport shakaBlack from '../../assets/images/shakaBlack.png';\nimport thumbsUp from '../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../assets/images/ThumbsDown.png';\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\n\nclass LogDirectory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    this.suffix = [\"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\"];\n    this.icons = [shakaBlack, thumbsUp, thumbsDown];\n    this.conditions = [\"Firing\", \"Good\", \"Bad\"];\n    this.posts = new PostDirectory();\n\n    this.items = () => this.posts.getDirectory();\n\n    this.sessions = () => this.items().map(item => {\n      const itemObj = JSON.parse(localStorage.getItem(item));\n\n      if (itemObj !== null) {\n        console.log(`ITEM: ${item} ====> ${JSON.stringify(itemObj, null, 2)}`);\n        const conditionsIndex = this.conditions.indexOf(itemObj.Conditions.Conditions);\n        const conditions = this.conditions[conditionsIndex];\n        const spot = itemObj.Location.Break;\n        const day = itemObj.Day.Day;\n        const month = this.months[itemObj.Day.Month - 1];\n        const year = itemObj.Day.Year;\n        const conditionDescription = itemObj.Conditions.Conditions;\n        const condition = this.icons[conditionsIndex];\n        return /*#__PURE__*/React.createElement(Link, {\n          className: \"noUnderline\",\n          key: getKey(\"link\"),\n          to: {\n            pathname: '/SurfLog',\n            state: {\n              spot: {\n                spot\n              },\n              logId: {\n                item\n              }\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          key: getKey(\"log\"),\n          className: \"flexContainer button color-graphite pointer greet m-1 r-5 incompletedSelector bg-yellow myButton\",\n          onClick: () => this.sessionClick(item, spot),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"flexOneFourthColumn p-10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: condition,\n          alt: conditionDescription,\n          className: \"shaka\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"flexThreeFourthColumnLeft pt-10 pb-10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }\n        }, month + \" \" + day + this.suffix[Number(String(day).slice(-1))]\n        /*+ \" \" + this.year(item)*/\n        + \": \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }\n        }), spot)));\n      }\n\n      return \"\";\n    });\n\n    this.logSession = () => window.location.pathname = \"/reactor/SurfLog\";\n\n    const {\n      title,\n      message\n    } = props;\n    this.title = title;\n    this.message = message;\n    this.sessionClick = this.sessionClick.bind(this);\n    this.logSession = this.logSession.bind(this);\n  }\n\n  sessionClick(item, spot) {\n    localStorage.setItem(\"spot\", spot);\n    console.log(`sessionClick ${item} --> Spot: ${spot}`);\n  }\n\n  render() {\n    //console.log(`postssssss=>${JSON.stringify(this.posts.getDirectory(),null,2)}`)\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-content fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      title: \"Log Directory\",\n      message: \"Review sessions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PostDirectory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), this.sessions(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button p-20 r-5 m-20 bg-neogreen incompletedSelector color-black\",\n      onClick: this.logSession,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Add Session\")));\n  }\n\n}\n\nexport default LogDirectory;\n/*\n\"ThuApr3020209:17:44PM\",\n\"ThuApr3020209:19:28PM\",\n\"FriMay0120207:10:29PM\",\n\"SunMay03202012:59:02PM\",\n\"SunMay0320201:04:32PM\",\n\"SunMay0320201:11:21PM\",\n\"SunMay0320201:12:16PM\",\n\"SunMay0320201:21:55PM\",\n\"SunMay0320201:22:13PM\",\n\"SunMay0320201:22:29PM\"\n*/","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LogDirectory.js"],"names":["React","Dialog","getKey","PostDirectory","shakaBlack","thumbsUp","thumbsDown","BrowserRouter","Router","Switch","Link","Route","LogDirectory","Component","constructor","props","months","suffix","icons","conditions","posts","items","getDirectory","sessions","map","item","itemObj","JSON","parse","localStorage","getItem","console","log","stringify","conditionsIndex","indexOf","Conditions","spot","Location","Break","day","Day","month","Month","year","Year","conditionDescription","condition","pathname","state","logId","sessionClick","Number","String","slice","logSession","window","location","title","message","bind","setItem","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport shakaBlack from '../../assets/images/shakaBlack.png';\nimport thumbsUp from '../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../assets/images/ThumbsDown.png';\nimport {BrowserRouter as Router, Switch, Link, Route} from 'react-router-dom';\n\nclass LogDirectory extends React.Component {\n\n    constructor(props) {\n        super(props);\n        const { title, message }= props;\n        this.title = title;\n        this.message = message;\n        this.sessionClick = this.sessionClick.bind(this);\n        this.logSession = this.logSession.bind(this);\n    }\n    sessionClick(item, spot) {\n        localStorage.setItem(\"spot\", spot)\n        console.log(`sessionClick ${item} --> Spot: ${spot}`);\n    }\n    months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"]\n    suffix = [\"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\"];\n    icons = [shakaBlack, thumbsUp, thumbsDown];\n    conditions = [\"Firing\", \"Good\", \"Bad\"];\n    posts = new PostDirectory();\n    items = () => this.posts.getDirectory();\n    \n    sessions = () => this.items().map((item) => {\n        const itemObj = JSON.parse(localStorage.getItem(item));\n        \n        if (itemObj !== null) {\n            console.log(`ITEM: ${item} ====> ${JSON.stringify(itemObj, null, 2)}`)\n            const conditionsIndex = this.conditions.indexOf(itemObj.Conditions.Conditions);\n            const conditions = this.conditions[conditionsIndex];\n            const spot = itemObj.Location.Break;\n            const day = itemObj.Day.Day;\n            const month = this.months[itemObj.Day.Month-1];\n            const year = itemObj.Day.Year;\n            const conditionDescription = itemObj.Conditions.Conditions;\n            const condition = this.icons[conditionsIndex];\n\n            return (\n                <Link \n                    className=\"noUnderline\" \n                    key={getKey(\"link\")} \n                    to={{\n                        pathname: '/SurfLog', \n                        state: {\n                            spot: {spot}, \n                            logId: {item}\n                        }\n                    }}\n                >\n                    <div key={getKey(\"log\")} className=\"flexContainer button color-graphite pointer greet m-1 r-5 incompletedSelector bg-yellow myButton\" onClick={() => this.sessionClick(item, spot)}>\n                            <div className=\"flexOneFourthColumn p-10\">\n                                {/*<img src={this.condition(item)} alt={item} className='shaka' />*/}\n                                <img src={condition} alt={conditionDescription} className='shaka' />\n                            </div>\n                            <div className=\"flexThreeFourthColumnLeft pt-10 pb-10\">\n                                {month + \" \" + day + this.suffix[Number(String(day).slice(-1))] /*+ \" \" + this.year(item)*/ + \": \"}\n                                <br/>{spot}\n                            </div>\n                                {\n                                    //item.substring(3, 6) + \", \" + \n                                    //item.substring(6, item.indexOf(\"20\")) + \" \" + \n                                    //item.substring(item.indexOf(\"20\"), item.indexOf(\"20\")+4) + \" \" + \n                                    //item.substring(item.length-2, item.length) + \n                                }\n                    </div>\n                </Link>\n            )\n        }\n        return \"\";\n    })\n    logSession = () => window.location.pathname = \"/reactor/SurfLog\";\n    render() {\n        //console.log(`postssssss=>${JSON.stringify(this.posts.getDirectory(),null,2)}`)\n        return (\n            <div className=\"App-content fadeIn\">\n                <Dialog title=\"Log Directory\" message=\"Review sessions\">\n                    <PostDirectory/>\n                    {this.sessions()}\n                    <div className=\"button p-20 r-5 m-20 bg-neogreen incompletedSelector color-black\" onClick={this.logSession}>Add Session</div>\n                </Dialog>\n            </div>\n        );\n    };\n}\n\nexport default LogDirectory;\n\n/*\n\"ThuApr3020209:17:44PM\",\n\"ThuApr3020209:19:28PM\",\n\"FriMay0120207:10:29PM\",\n\"SunMay03202012:59:02PM\",\n\"SunMay0320201:04:32PM\",\n\"SunMay0320201:11:21PM\",\n\"SunMay0320201:12:16PM\",\n\"SunMay0320201:21:55PM\",\n\"SunMay0320201:22:13PM\",\n\"SunMay0320201:22:29PM\"\n*/"]},"metadata":{},"sourceType":"module"}