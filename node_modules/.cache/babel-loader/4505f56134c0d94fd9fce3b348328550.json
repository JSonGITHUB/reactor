{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreKeeper = () => {\n  _s();\n  const initPlayers = [{\n    name: 'You',\n    score: 0,\n    scores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }, {\n    name: 'Me',\n    score: 0,\n    scores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }];\n  const initScores = localStorage.getItem('twoPlayerScores') || [0, 0];\n  const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n  const winners = [5, 10, 11, 15, 20, 21];\n  const dominoWinners = [50, 100, 150, 200];\n  const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n  const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n  //const [ editStatus, setEdit ] = useState(false);\n  const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n  const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n  const [twoPlayerScores, setTwoPlayerScores] = useState(initScores);\n  const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n  const [heatLength, setHeatLength] = useState(60 * 60);\n  const [waveCount, setWaveCount] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  const [sortedPlayers, setSortedPlayers] = useState([]);\n  const darts = game !== 'darts' ? false : true;\n  const dominos = game !== 'dominos' ? false : true;\n  const surf = game !== 'surf' ? false : true;\n  const golf = game !== 'golf' ? false : true;\n  const cricketKey = (player, index) => `${player}Cricket${index}`;\n  const golfKey = (player, index) => `${player}Golf${index}`;\n  const surfKey = (player, index) => `${player}Surf${index}`;\n  const dominoKey = (player, index) => `${player}Domino${index}`;\n  const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n  const golfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n  const golfPars = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n  const dominoScoring = [50, 100, 150, 200];\n  const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n  const findTwoHighestIndices = scores => {\n    let highestIndex = 0;\n    let secondHighestIndex = -1;\n    scores.forEach((score, index) => {\n      if (score > scores[highestIndex]) {\n        secondHighestIndex = highestIndex;\n        highestIndex = index;\n      } else if (secondHighestIndex === -1 || score > scores[secondHighestIndex]) {\n        secondHighestIndex = index;\n      }\n    });\n    return [highestIndex, secondHighestIndex];\n  };\n\n  // Find the indices of the two highest scores for each player\n  const getTwoHighestScores = playerIndex => {\n    const player = playerScores[playerIndex];\n    const [highestIndex, secondHighestIndex] = findTwoHighestIndices(playerScores[playerIndex].scores);\n    console.log(`${player.name}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n    return {\n      'highScoreIndex': highestIndex,\n      'secondHighScoreIndex': secondHighestIndex\n    };\n  };\n  const floatDecimalOneDigit = number => {\n    if (Number.isInteger(number) && number >= 10 && number <= 99) {\n      return number / 10;\n    } else {\n      return null;\n    }\n  };\n  const getSurfScore = index => {\n    if (surf) {\n      const newPlayer = {\n        'name': players[index].name,\n        'score': 0,\n        'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n      };\n      if (playerScores.length < players.length) {\n        playerScores.push(newPlayer);\n      }\n      const scoreTotal = floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex]));\n      return scoreTotal;\n    }\n    return;\n  };\n  useEffect(() => {\n    const surfersScores = [];\n    console.log(`sortedPlayers => ${sortedPlayers}`);\n    const surfingScoreboard = sortedPlayers.map((player, index) => {\n      surfersScores[index] = getSurfScore(index);\n    });\n    localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n  }, [sortedPlayers]);\n  const setGameInProgress = playerIndex => {\n    if (playerIndex > 0) {\n      if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n        localStorage.setItem('gameStatus', 'inProgress');\n      }\n    }\n    localStorage.setItem(`player${playerIndex}`, 'loser');\n    //setGameStatus('inProgress');\n    return false;\n  };\n  const isWinner = playerIndex => getDartTotal(players[playerIndex]) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n  const playerScores = [{\n    name: 'Player 1',\n    scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88]\n  }, {\n    name: 'Player 2',\n    scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81]\n  }, {\n    name: 'Player 3',\n    scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89]\n  }];\n  const setGameOver = playerIndex => {\n    localStorage.setItem('gameStatus', 'gameOver');\n    localStorage.setItem(`player${playerIndex}`, 'winner');\n    //setGameStatus('gameOver');\n    return true;\n  };\n  const setTimer = (groupTitle, label, selected) => {\n    localStorage.setItem('timer', selected);\n    setTime(selected * 60);\n    setHeatLength(selected * 60);\n  };\n  if (darts && winner !== 21) {\n    localStorage.setItem('winner', 21);\n    setWinner(Number(localStorage.getItem('winner')));\n  }\n  const getDartTotal = player => {\n    let total = 0;\n    const score = index => localStorage.getItem(cricketKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    dartScoring.map((target, index) => addToTotal(Number(score(index))));\n    console.log(`getDartTotalplayer=> ${player.name}: ${total}`);\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const getGolfTotal = player => {\n    if (!golf) return;\n    let total = 0;\n    const score = index => localStorage.getItem(golfKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    golfScoring.map((target, index) => {\n      console.log(`getGolfTotal=> ${golfKey(player, index)} ${index}: ${total}`);\n      addToTotal(Number(score(index)));\n    });\n    //console.log(`getGolfTotalplayer=> ${player}: ${total}`)\n    return total;\n  };\n  const getDominoTotal = player => {\n    let total = 0;\n    const score = index => localStorage.getItem(dominoKey(player, index)) || 0;\n    const addToTotal = value => total = total + value;\n    dominoScoring.map((target, index) => addToTotal(Number(score(index))));\n    //console.log(`getDominoTotalplayer=> ${player}: ${total}`)\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const updateTwoPlayerScores = (player, index, score) => {\n    const newScores = [];\n    //players.map((player, index) => newScores.push(getDartTotal(player)));\n    players.map((player, index) => newScores.push(getDartTotal(player)));\n    //console.log(`updateTwoPlayerScores=>\\nplayer: ${player}\\nindex: ${index}\\nscore: ${score}\\nnewScore: ${JSON.stringify(newScores)}`)\n    //console.log(`${players[0]}: ${twoPlayerScores[0]}\\n${players[1]}: ${twoPlayerScores[1]}`)\n    //const isWinner = (score) => (score >= winner) ? true : false;\n    //players.map((player, index) => (isWinner(newScores[index])) ? setTwoPlayerWinner(index) : setTwoPlayerWinner(3));\n    localStorage.setItem('winner', twoPlayerScores);\n    localStorage.setItem('twoPlayerScores', twoPlayerScores);\n    setTwoPlayerScores(newScores);\n  };\n  //console.log(`players: ${players}`)\n  const set21 = () => {\n    if (darts) {\n      localStorage.setItem('winner', 21);\n      setWinner(Number(localStorage.getItem('winner')));\n    }\n  };\n  const selectGame = (groupTitle, label, selected) => {\n    localStorage.setItem('game', selected);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setGame(localStorage.getItem('game'));\n    set21();\n  };\n  const selectWinner = (groupTitle, label, selected) => {\n    localStorage.setItem('winner', selected);\n    localStorage.setItem('gameStatus', 'gameOver');\n    setWinner(Number(localStorage.getItem('winner')));\n  };\n  const clear = event => {\n    alert('Note was cleared: ' + event.value);\n    localStorage.setItem('players', JSON.stringify(initPlayers));\n    localStorage.setItem('gameStatus', 'inProgress');\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const reset = event => {\n    //alert('Note was cleared: ');\n    //const cricketKey = (player,index) => `${player}Cricket${index}`;\n    //const golfKey = (player,index) => `${player}Golf${index}`;\n    //const dominoKey = (player,index) => `${player}Domino${index}`;\n    let id = (player, index) => darts ? cricketKey(player.name, index) : player.name;\n    id = (player, index) => dominos ? dominoKey(player.name, index) : player.name;\n    id = (player, index) => golf ? golfKey(player.name, index) : player.name;\n    id = (player, index) => surf ? surfKey(player.name, index) : player.name;\n    const initValue = 0;\n    if (darts) {\n      players.map(player => dartScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n    } else if (dominos) {\n      //players.map((player) => dominoScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n      //players.map((player) => dominoScoring.map((target, index) => localStorage.setItem(dominoKey(player, index), initValue)));\n      players.map(player => dominoScoring.map((target, index) => localStorage.setItem(dominoKey(player.name, index), initValue)));\n    } else {\n      players.map((player, index) => localStorage.setItem(id(player.name, index), initValue));\n    }\n    localStorage.setItem('gameStatus', 'inProgress');\n    getScore();\n  };\n  const addPlayer = event => {\n    //alert('Note was cleared: ' + value);\n    const newPlayer = prompt('Enter new name', '');\n    let newPlayers = players;\n    if (newPlayer !== null) {\n      newPlayers.push(newPlayer);\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n    //getScore();\n  };\n\n  const editPlayer = index => {\n    //console.log(`edit: ${index}`);\n    const newPlayer = prompt('Enter new name', players[index]);\n    if (newPlayer !== null) {\n      let newPlayers = players;\n      newPlayers[index] = newPlayer;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n      getScore();\n    }\n  };\n  const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n  const deletePlayer = index => {\n    console.log(`deletePlayer => ${index}`);\n    const newPlayers = players.slice();\n    newPlayers.splice(index, 1);\n    //playerScores.splice(index, 1);\n    //surfersScores.splice(index, 1);\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const scorecards = () => {\n    //console.log(`build Scorecards`)\n    const scorecard = (player, index, score) => {\n      if (darts) {\n        console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(CricketScore, {\n          game: game,\n          player: player,\n          index: index,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateTwoPlayerScores: updateTwoPlayerScores,\n          winner: winner\n        }, getKey(player), false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 24\n        }, this);\n      }\n      if (dominos) {\n        console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(Dominos, {\n          game: game,\n          player: player,\n          index: index,\n          scoreTotal: score,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          getDominoTotal: getDominoTotal,\n          updateTwoPlayerScores: updateTwoPlayerScores,\n          winner: winner\n        }, getKey(player), false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 24\n        }, this);\n      }\n      if (golf) {\n        console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(ScoreCard, {\n          game: game,\n          player: golfPars[index],\n          index: index,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateTwoPlayerScores: updateTwoPlayerScores,\n          winner: winner\n        }, getKey(player), false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 24\n        }, this);\n      }\n      console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`);\n      return /*#__PURE__*/_jsxDEV(ScoreCard, {\n        game: game,\n        player: player,\n        index: index,\n        editPlayer: editPlayer,\n        deletePlayer: deletePlayer,\n        updateTwoPlayerScores: updateTwoPlayerScores,\n        winner: winner\n      }, getKey(player), false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 20\n      }, this);\n    };\n    const rankStatus = (player, index, score) => {\n      console.log(`ranksStatus => surfersScores player: ${player} index: ${index} score: ${score}`);\n      const winsBy = 'Wins by 7.17';\n      const needs = 'Needs 0.01';\n      if (index === 0) {\n        return winsBy;\n      }\n      return needs;\n    };\n    const getWave = (playerId, index, score) => {\n      console.log(`getWave => playerId: ${playerId} index: ${index} score: ${score}`);\n      const highestScores = findTwoHighestIndices(playerScores[playerId].scores);\n      const highestId = highestScores[0];\n      const secondHighestId = highestScores[1];\n      const firstScore = index === highestId ? true : false;\n      const secondScore = index === secondHighestId ? true : false;\n      const getClasses = firstScore || secondScore ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n      const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"greet bold color-yellow bg-dkYellow w-100 p-5\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getClasses,\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 26\n      }, this);\n      return wave;\n    };\n    const surfingScores = (player, index, score) => {\n      if (surf) {\n        console.log(`surfingScores => player: ${player} index: ${index} score:${playerScores[index].scores[0]}`);\n        const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flexContainer width-100-percent mt--10 mb--10\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-10 p-5 w-100 size40 mt-10\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex3ColumnLeft m-1 p-5 size40 mt-10\",\n              children: player\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex3ColumnRight mr-10 p-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"size25 bold\",\n                children: score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: rankStatus(player, index, score)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 25\n            }, this)]\n          }, getKey(player), true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-scroll color-white copyright m-10\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"container mt-10\",\n                  children: playerScores[index].scores.map((score, wave) => getWave(index, wave, floatDecimalOneDigit(score)))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 38\n        }, this);\n        return surferScores;\n      }\n      return;\n    };\n    const renderedItems = players.map((player, index) => scorecard(player, index));\n    const dartScores = dartScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(players[0], index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(players[1], index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 62\n    }, this));\n    const golfScores = golfScoring.map((hole, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(golfPars[index], index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: hole\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(golfPars[index], index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 13\n      }, this)]\n    }, getKey(hole), true, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 61\n    }, this));\n\n    //const surfingRankboard = players.map((player, index) => surfingRanks(player, index))};\n    const surfingScoreboard = sortedPlayers.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n    const dominoScores = dominoScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent p-5\",\n        children: scorecard(players[0], index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent p-5\",\n        children: scorecard(players[1], index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 66\n    }, this));\n    const isDominoWinner = playerIndex => getDominoTotal(players[playerIndex]) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const dartClass = playerIndex => 'flex3Column p-20 size25 bold' + (isWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dominoClass = playerIndex => 'flex3Column p-20 size25 bold' + (isDominoWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dartScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDartTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-yellow navBranding w-200\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDartTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }, this), dartScores]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 32\n    }, this);\n    const golfScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getGolfTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-yellow navBranding w-200\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getGolfTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }, this), golfScores]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 32\n    }, this);\n    players.map((player, index) => scorecard(player, index));\n    const dominoScoreboard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent mb-20 bg-green r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(0),\n          children: [players[0], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDominoTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-yellow navBranding w-200\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(1),\n          children: [players[1], \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-yellow mt-10\",\n            children: getDominoTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 13\n      }, this), dominoScores]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 34\n    }, this);\n    if (darts) return dartScoreboard;\n    if (dominos) return dominoScoreboard;\n    if (golf) return golfScoreboard;\n    //if (surf) return surfScoreboard\n    if (surf) return surfingScoreboard;else return renderedItems;\n  };\n  //console.log(`localStorage => game: ${localStorage.getItem('game')}`)\n  //console.log(`localStorage => gameStatus: ${localStorage.getItem('gameStatus')}`)\n  //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n  //console.log(`localStorage => winner: ${localStorage.getItem('winner')}`)\n  //console.log(`localStorage => twoPlayerScores: ${localStorage.getItem('twoPlayerScores')}`)\n  //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n  //console.log(`localStorage => player1: ${localStorage.getItem('players1')}`)\n  //console.log(`localStorage => player2: ${localStorage.getItem('players2')}`)\n  console.log(`time: ${time}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fadeIn mt--30\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-20\",\n      children: [/*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"game\",\n        label: \"item.description\",\n        items: games,\n        selected: game,\n        onChange: selectGame,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: darts || dominos ? '98%' : '65%'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }, this), darts || golf ? /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"winner\",\n        label: \"i.description\",\n        items: dominos ? dominoWinners : surf ? heatLengths : winners,\n        selected: surf ? time / 60 : winner,\n        onChange: surf ? setTimer : selectWinner,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: \"30%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 27\n      }, this), surf ? /*#__PURE__*/_jsxDEV(SurfScores, {\n        editPlayer: editPlayer,\n        deletePlayer: deletePlayer,\n        winner: winner,\n        updateTwoPlayerScores: updateTwoPlayerScores,\n        game: game,\n        surfKey: surfKey,\n        time: time,\n        setTime: setTime,\n        heatLength: heatLength,\n        setSortedPlayers: setSortedPlayers,\n        isWinner: isWinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 13\n    }, this), scorecards(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow\",\n          onClick: () => addPlayer(),\n          children: \"add player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black\",\n          onClick: () => reset(),\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow\",\n          onClick: () => clear(),\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 9\n  }, this);\n};\n_s(ScoreKeeper, \"id06On9+bmOEzWrr+nHPTzyT25Q=\");\n_c = ScoreKeeper;\nexport default ScoreKeeper;\nvar _c;\n$RefreshReg$(_c, \"ScoreKeeper\");","map":{"version":3,"names":["React","useState","useEffect","ScoreCard","CricketScore","Dominos","SurfScores","Selector","getKey","jsxDEV","_jsxDEV","ScoreKeeper","_s","initPlayers","name","score","scores","initScores","localStorage","getItem","games","winners","dominoWinners","heatLengths","players","setPlayers","JSON","parse","game","setGame","winner","setWinner","Number","twoPlayerScores","setTwoPlayerScores","time","setTime","heatLength","setHeatLength","waveCount","setWaveCount","sortedPlayers","setSortedPlayers","darts","dominos","surf","golf","cricketKey","player","index","golfKey","surfKey","dominoKey","dartScoring","golfScoring","golfPars","dominoScoring","gameStatus","setGameStatus","findTwoHighestIndices","highestIndex","secondHighestIndex","forEach","getTwoHighestScores","playerIndex","playerScores","console","log","floatDecimalOneDigit","number","isInteger","getSurfScore","newPlayer","length","push","scoreTotal","highScoreIndex","secondHighScoreIndex","surfersScores","surfingScoreboard","map","setItem","stringify","setGameInProgress","isWinner","getDartTotal","setGameOver","setTimer","groupTitle","label","selected","total","addToTotal","value","target","getGolfTotal","getDominoTotal","updateTwoPlayerScores","newScores","set21","selectGame","selectWinner","clear","event","alert","reset","id","initValue","getScore","addPlayer","prompt","newPlayers","editPlayer","window","location","pathname","deletePlayer","slice","splice","scorecards","scorecard","fileName","_jsxFileName","lineNumber","columnNumber","rankStatus","winsBy","needs","getWave","playerId","highestScores","highestId","secondHighestId","firstScore","secondScore","getClasses","wave","className","children","surfingScores","surferScores","class","renderedItems","dartScores","golfScores","hole","dominoScores","isDominoWinner","dartClass","dominoClass","dartScoreboard","Fragment","golfScoreboard","dominoScoreboard","items","onChange","fontSize","padding","width","onClick","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\n\nconst ScoreKeeper = () => {\n\n    const initPlayers = [\n        {\n            name: 'You',\n            score: 0,\n            scores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        },\n        {\n            name: 'Me',\n            score: 0,\n            scores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        } \n    ];\n    const initScores = localStorage.getItem('twoPlayerScores') || [0, 0];\n    const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n    const winners = [5, 10, 11, 15, 20, 21];\n    const dominoWinners = [50, 100, 150, 200];\n    const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n    //const [ editStatus, setEdit ] = useState(false);\n    const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n    const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n    const [twoPlayerScores, setTwoPlayerScores] = useState(initScores);\n    const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n    const [heatLength, setHeatLength] = useState(60 * 60);\n    const [waveCount, setWaveCount] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n    const [sortedPlayers, setSortedPlayers] = useState([]);\n    const darts = (game !== 'darts') ? false : true;\n    const dominos = (game !== 'dominos') ? false : true;\n    const surf = (game !== 'surf') ? false : true;\n    const golf = (game !== 'golf') ? false : true;\n    const cricketKey = (player, index) => `${player}Cricket${index}`;\n    const golfKey = (player, index) => `${player}Golf${index}`;\n    const surfKey = (player, index) => `${player}Surf${index}`;\n    const dominoKey = (player, index) => `${player}Domino${index}`;\n    const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n    const golfScoring = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n    const golfPars = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n    const dominoScoring = [50, 100, 150, 200];\n    const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n    \n    const findTwoHighestIndices = (scores) => {\n        let highestIndex = 0;\n        let secondHighestIndex = -1;\n\n        scores.forEach((score, index) => {\n            if (score > scores[highestIndex]) {\n                secondHighestIndex = highestIndex;\n                highestIndex = index;\n            } else if (secondHighestIndex === -1 || score > scores[secondHighestIndex]) {\n                secondHighestIndex = index;\n            }\n        });\n\n        return [highestIndex, secondHighestIndex];\n    };\n\n    // Find the indices of the two highest scores for each player\n    const getTwoHighestScores = (playerIndex) => {\n        const player = playerScores[playerIndex];\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(playerScores[playerIndex].scores);\n        console.log(`${player.name}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            'highScoreIndex': highestIndex,\n            'secondHighScoreIndex': secondHighestIndex\n        }\n    }\n\n    const floatDecimalOneDigit = (number) => {\n        if (Number.isInteger(number) && number >= 10 && number <= 99) {\n            return number / 10;\n        } else {\n            return null;\n        }\n    };\n\n    const getSurfScore = (index) => {\n        if (surf) {\n            const newPlayer = {\n                'name': players[index].name,\n                'score': 0,\n                'scores': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n            }\n            if (playerScores.length < players.length) {\n                playerScores.push(newPlayer)\n            }\n            const scoreTotal = floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).highScoreIndex])) + floatDecimalOneDigit(Number(playerScores[index].scores[getTwoHighestScores(index).secondHighScoreIndex]));\n            return scoreTotal;\n        }\n        return\n    };\n\n    useEffect(() => {\n        const surfersScores = [];\n        console.log(`sortedPlayers => ${sortedPlayers}`)\n        const surfingScoreboard = sortedPlayers.map((player, index) => {\n            surfersScores[index] = getSurfScore(index);\n        })\n        localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n    }, [sortedPlayers]);\n\n    const setGameInProgress = (playerIndex) => {\n        if (playerIndex > 0) {\n            if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n                localStorage.setItem('gameStatus', 'inProgress')\n            }\n        }\n        localStorage.setItem(`player${playerIndex}`, 'loser');\n        //setGameStatus('inProgress');\n        return false;\n    }\n    const isWinner = (playerIndex) => (getDartTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const playerScores = [\n        { name: 'Player 1', scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88] },\n        { name: 'Player 2', scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81] },\n        { name: 'Player 3', scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89] },\n    ];\n    const setGameOver = (playerIndex) => {\n        localStorage.setItem('gameStatus', 'gameOver');\n        localStorage.setItem(`player${playerIndex}`, 'winner');\n        //setGameStatus('gameOver');\n        return true;\n    }\n    const setTimer = (groupTitle, label, selected) => {\n        localStorage.setItem('timer', selected);\n        setTime(selected * 60);\n        setHeatLength(selected * 60);\n    }\n    \n    if (darts && winner !== 21) {\n        localStorage.setItem('winner', 21);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const getDartTotal = (player) => {\n        let total = 0;\n        const score = (index) => localStorage.getItem(cricketKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        dartScoring.map((target, index) => addToTotal(Number(score(index))));\n        console.log(`getDartTotalplayer=> ${player.name}: ${total}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const getGolfTotal = (player) => {\n        if (!golf) return;\n        let total = 0;\n        const score = (index) => localStorage.getItem(golfKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        golfScoring.map((target, index) => {\n            console.log(`getGolfTotal=> ${golfKey(player, index)} ${index}: ${total}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        //console.log(`getGolfTotalplayer=> ${player}: ${total}`)\n        return total;\n    }\n    const getDominoTotal = (player) => {\n        let total = 0;\n        const score = (index) => localStorage.getItem(dominoKey(player, index)) || 0;\n        const addToTotal = (value) => total = total + value;\n        dominoScoring.map((target, index) => addToTotal(Number(score(index))));\n        //console.log(`getDominoTotalplayer=> ${player}: ${total}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const updateTwoPlayerScores = (player, index, score) => {\n        const newScores = [];\n        //players.map((player, index) => newScores.push(getDartTotal(player)));\n        players.map((player, index) => newScores.push(getDartTotal(player)));\n        //console.log(`updateTwoPlayerScores=>\\nplayer: ${player}\\nindex: ${index}\\nscore: ${score}\\nnewScore: ${JSON.stringify(newScores)}`)\n        //console.log(`${players[0]}: ${twoPlayerScores[0]}\\n${players[1]}: ${twoPlayerScores[1]}`)\n        //const isWinner = (score) => (score >= winner) ? true : false;\n        //players.map((player, index) => (isWinner(newScores[index])) ? setTwoPlayerWinner(index) : setTwoPlayerWinner(3));\n        localStorage.setItem('winner', twoPlayerScores);\n        localStorage.setItem('twoPlayerScores', twoPlayerScores);\n        setTwoPlayerScores(newScores);\n    }\n    //console.log(`players: ${players}`)\n    const set21 = () => {\n        if (darts) {\n            localStorage.setItem('winner', 21);\n            setWinner(Number(localStorage.getItem('winner')));\n        }\n    }\n    const selectGame = (groupTitle, label, selected) => {\n        localStorage.setItem('game', selected)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setGame(localStorage.getItem('game'));\n        set21();\n    }\n    const selectWinner = (groupTitle, label, selected) => {\n        localStorage.setItem('winner', selected)\n        localStorage.setItem('gameStatus', 'gameOver');\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const clear = (event) => {\n        alert('Note was cleared: ' + event.value);\n        localStorage.setItem('players', JSON.stringify(initPlayers));\n        localStorage.setItem('gameStatus', 'inProgress');\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n    const reset = (event) => {\n        //alert('Note was cleared: ');\n        //const cricketKey = (player,index) => `${player}Cricket${index}`;\n        //const golfKey = (player,index) => `${player}Golf${index}`;\n        //const dominoKey = (player,index) => `${player}Domino${index}`;\n        let id = (player, index) => (darts) ? cricketKey(player.name, index) : player.name;\n        id = (player, index) => (dominos) ? dominoKey(player.name, index) : player.name;\n        id = (player, index) => (golf) ? golfKey(player.name, index) : player.name;\n        id = (player, index) => (surf) ? surfKey(player.name, index) : player.name;\n        const initValue = 0;\n        if (darts) {\n            players.map((player) => dartScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n        } else if (dominos) {\n            //players.map((player) => dominoScoring.map((target, index) => localStorage.setItem(id(player, index), initValue)));\n            //players.map((player) => dominoScoring.map((target, index) => localStorage.setItem(dominoKey(player, index), initValue)));\n            players.map((player) => dominoScoring.map((target, index) => localStorage.setItem(dominoKey(player.name, index), initValue)));\n        } else {\n            players.map((player, index) => localStorage.setItem(id(player.name, index), initValue));\n        }\n        localStorage.setItem('gameStatus', 'inProgress');\n        getScore();\n    }\n    const addPlayer = (event) => {\n        //alert('Note was cleared: ' + value);\n        const newPlayer = prompt('Enter new name', '');\n        let newPlayers = players;\n        if (newPlayer !== null) {\n            newPlayers.push(newPlayer);\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n        //getScore();\n    }\n    \n    const editPlayer = (index) => {\n        //console.log(`edit: ${index}`);\n        const newPlayer = prompt('Enter new name', players[index]);\n        if (newPlayer !== null) {\n            let newPlayers = players;\n            newPlayers[index] = newPlayer;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n            getScore();\n        }\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n    \n    const deletePlayer = (index) => {\n        console.log(`deletePlayer => ${index}`)\n        const newPlayers = players.slice();\n        newPlayers.splice(index, 1);\n        //playerScores.splice(index, 1);\n        //surfersScores.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    };\n    \n    const scorecards = () => {\n        //console.log(`build Scorecards`)\n        const scorecard = (player, index, score) => {\n            if (darts) {\n                console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n                return <CricketScore\n                    game={game}\n                    player={player}\n                    index={index}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateTwoPlayerScores={updateTwoPlayerScores}\n                    winner={winner}\n                    key={getKey(player)}\n                />\n            }\n            if (dominos) {\n                console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n                return <Dominos\n                    game={game}\n                    player={player}\n                    index={index}\n                    scoreTotal={score}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    getDominoTotal={getDominoTotal}\n                    updateTwoPlayerScores={updateTwoPlayerScores}\n                    winner={winner}\n                    key={getKey(player)}\n                />\n            }\n            if (golf) {\n                console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n                return <ScoreCard\n                    game={game}\n                    player={golfPars[index]}\n                    index={index}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateTwoPlayerScores={updateTwoPlayerScores}\n                    winner={winner}\n                    key={getKey(player)}\n                />\n            }\n            console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n            return <ScoreCard\n                game={game}\n                player={player}\n                index={index}\n                editPlayer={editPlayer}\n                deletePlayer={deletePlayer}\n                updateTwoPlayerScores={updateTwoPlayerScores}\n                winner={winner}\n                key={getKey(player)}\n            />\n        }\n        const rankStatus = (player, index, score) => {\n            console.log(`ranksStatus => surfersScores player: ${player} index: ${index} score: ${score}`)\n            const winsBy = 'Wins by 7.17';\n            const needs = 'Needs 0.01';\n            if (index === 0) {\n                return winsBy\n            }\n            return needs\n        }\n        \n        const getWave = (playerId, index, score) => {\n            console.log(`getWave => playerId: ${playerId} index: ${index} score: ${score}`);\n            const highestScores = findTwoHighestIndices(playerScores[playerId].scores);\n            const highestId = highestScores[0];\n            const secondHighestId = highestScores[1];\n            const firstScore = (index === highestId) ? true : false;\n            const secondScore = (index === secondHighestId) ? true : false;\n            const getClasses = (firstScore || secondScore) ? 'greet bold color-neogreen p-5' : 'greet color-light p-5';\n            const wave = <div className=\"column\">\n                <div className='greet bold color-yellow bg-dkYellow w-100 p-5'>{index + 1}</div>\n                <div className={getClasses}>{score}</div>\n            </div>\n            return wave\n        }\n\n        \n        const surfingScores = (player, index, score) => {\n            if (surf) {\n                console.log(`surfingScores => player: ${player} index: ${index} score:${playerScores[index].scores[0]}`);\n                const surferScores = <div>\n                    <div className='flexContainer width-100-percent mt--10 mb--10' key={getKey(player)}>\n                        <div className='ml-10 p-5 w-100 size40 mt-10'>{index + 1}</div>\n                        <div className='flex3ColumnLeft m-1 p-5 size40 mt-10'>{player}</div>\n                        <div className='flex3ColumnRight mr-10 p-5'>\n                            <div className='size25 bold'>{score}</div>\n                            <div>{rankStatus(player, index, score)}</div>\n                        </div>\n                    </div>\n                    <div>\n                        <div>\n                            <div className='h-scroll color-white copyright m-10'>\n                                <div class=\"container mt-10\">\n                                    {playerScores[index].scores.map((score, wave) => getWave(index, wave, floatDecimalOneDigit(score)))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                return surferScores\n            }\n            return\n        }\n        const renderedItems = players.map((player, index) => scorecard(player, index));\n\n        const dartScores = dartScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex3Column p-5'>\n                {scorecard(players[0], index)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(players[1], index)}\n            </div>\n        </div>);\n\n        const golfScores = golfScoring.map((hole, index) => <div className='flexContainer width-100-percent' key={getKey(hole)}>\n            <div className='flex3Column p-5'>\n                {scorecard(golfPars[index], index)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {hole}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(golfPars[index], index)}\n            </div>\n        </div>);\n        \n        //const surfingRankboard = players.map((player, index) => surfingRanks(player, index))};\n        const surfingScoreboard = sortedPlayers.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n       \n        const dominoScores = dominoScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex2Column10Percent p-5'>\n                {scorecard(players[0], index, score)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex2Column10Percent p-5'>\n                {scorecard(players[1], index, score)}\n            </div>\n        </div>);\n\n        const isDominoWinner = (playerIndex) => (getDominoTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n\n        const dartClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        const dominoClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isDominoWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n\n        const dartScoreboard = <React.Fragment>\n            <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                <div className={dartClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getDartTotal(players[0])}</div></div>\n                <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                <div className={dartClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getDartTotal(players[1])}</div></div>\n            </div>\n            {dartScores}\n        </React.Fragment>\n\n        const golfScoreboard = <React.Fragment>\n            <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                <div className={dartClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getGolfTotal(players[0])}</div></div>\n                <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                <div className={dartClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getGolfTotal(players[1])}</div></div>\n            </div>\n            {golfScores}\n        </React.Fragment>\n        \n        players.map((player, index) => scorecard(player, index));\n\n        const dominoScoreboard = <React.Fragment>\n            <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                <div className={dominoClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getDominoTotal(players[0])}</div></div>\n                <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                <div className={dominoClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getDominoTotal(players[1])}</div></div>\n            </div>\n            {dominoScores}\n        </React.Fragment>\n\n        if (darts) return dartScoreboard\n        if (dominos) return dominoScoreboard\n        if (golf) return golfScoreboard\n        //if (surf) return surfScoreboard\n        if (surf) return surfingScoreboard\n        else return renderedItems;\n    }\n    //console.log(`localStorage => game: ${localStorage.getItem('game')}`)\n    //console.log(`localStorage => gameStatus: ${localStorage.getItem('gameStatus')}`)\n    //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n    //console.log(`localStorage => winner: ${localStorage.getItem('winner')}`)\n    //console.log(`localStorage => twoPlayerScores: ${localStorage.getItem('twoPlayerScores')}`)\n    //console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n    //console.log(`localStorage => player1: ${localStorage.getItem('players1')}`)\n    //console.log(`localStorage => player2: ${localStorage.getItem('players2')}`)\n    console.log(`time: ${time}`)\n\n    return (\n        <div className='fadeIn mt--30'>\n            <div className='mb-20'>\n                <Selector\n                    groupTitle='game'\n                    label='item.description'\n                    items={games}\n                    selected={game}\n                    onChange={selectGame}\n                    fontSize='25'\n                    padding='10px'\n                    width={(darts || dominos) ? '98%' : '65%'}\n                />\n                {\n                    (darts || golf)\n                        ? <React.Fragment></React.Fragment>\n                        : <Selector\n                            groupTitle='winner'\n                            label='i.description'\n                            items={(dominos) ? dominoWinners : ((surf) ? heatLengths : winners)}\n                            selected={(surf) ? (time / 60) : winner}\n                            onChange={(surf) ? setTimer : selectWinner}\n                            fontSize='25'\n                            padding='10px'\n                            width='30%'\n                        />\n                }\n                {(surf) ?\n                    <SurfScores\n                        editPlayer={editPlayer}\n                        deletePlayer={deletePlayer}\n                        winner={winner}\n                        updateTwoPlayerScores={updateTwoPlayerScores}\n                        game={game}\n                        surfKey={surfKey}\n                        time={time}\n                        setTime={setTime}\n                        heatLength={heatLength}\n                        setSortedPlayers={setSortedPlayers}\n                        isWinner={isWinner}\n                    ></SurfScores>\n                    :\n                    <React.Fragment></React.Fragment>\n                    \n                }\n            </div>\n            {scorecards()}\n            <div className='flexContainer width-100-percent'>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow' onClick={() => addPlayer()}>add player</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black' onClick={() => reset()}>reset</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow' onClick={() => clear()}>clear</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScoreKeeper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}