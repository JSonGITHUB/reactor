{"ast":null,"code":"import _objectSpread from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import LogEntry from'./LogEntryFunctional.js';import Loader from'../utils/Loader.js';import interfaceData from'./InterfaceData.js';import templateData from'./LogTemplateData.js';import generateNewLogId from'./GenerateLogId.js';import directionObject from'./DirectionObject.js';var Logger=function Logger(_ref){var logId=_ref.logId,location=_ref.location;//console.log(`Logger => logId: ${logId}\\nlocalStorage.getItem('logId'): ${localStorage.getItem('logId')}`); \nvar logExists=function logExists(){return localStorage.getItem(logId)===null?false:true;};var initLogId=function initLogId(){return logExists()?logId:generateNewLogId();};var initLog=function initLog(){return logExists()?JSON.parse(localStorage.getItem(logId)):templateData;};var _useState=useState({//logID: initLogId(),\nlogID:localStorage.getItem('logId'),log:initLog(),isLoaded:false,items:[]}),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var getSpot=function getSpot(){return localStorage.getItem(\"spot\");};useEffect(function(){var state=location.state;var logId=localStorage.getItem('logId');//console.log(`LoggerFunctional => componentDidMount -> SPOT: ${getSpot()}\\ngetLogId: ${localStorage.getItem('logId')}\\nlogId: ${logId}`); \nif(localStorage.getItem(logId)===null){setStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{log:templateData,logID:generateNewLogId()});});//console.log(`LoggerFunctional => componentDidMount -> 1\\nSPOT: ${getSpot()}\\nlogID: ${logId}\\nlog: ${JSON.stringify(status.log, null, 2)}`); \n}else{setStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{log:JSON.parse(localStorage.getItem(logId)),logID:logId});});//console.log(`LoggerFunctional => componentDidMount -> 2\\nSPOT: ${getSpot()}\\nlogID: ${logId}\\nlog: ${JSON.stringify(status.log, null, 2)}`); \n}var data=interfaceData;var returnJSON=function returnJSON(response){return response.json();};var returnRejection=function returnRejection(response){return Promise.reject({status:response.status,data:data});};var validate=function validate(response){return response.ok?returnJSON(response):returnRejection(response);};/*\n        const requestInit = {\n            method:'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            cache: 'default'\n        };\n        */ //const uri = new Request('https://jsongithub.github.io/portfolio/assets/data/appData.json', requestInit);\n//GOOD const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\nvar uri='https://jsongithub.github.io/portfolio/assets/data/appData.json';//const uri = 'localhost:8080/writeSurfLog.json';\n/*\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                setIsLoaded(true);\n                setItems(data);\n                setLogID(logId);\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n        */setStatus({log:JSON.parse(localStorage.getItem(logId)),logID:logId,items:data,isLoaded:true});},[location]);var updateLog=function updateLog(groupTitle,label,selected,set){var log=status.log!==null?status.log:templateData;log[groupTitle][label]=selected;if(label==='Direction'&&groupTitle===('Swell1'||'Swell2')){log[groupTitle]['Angle']=directionObject[selected];}//console.log(`updateLog => \\ngroupTitle: ${groupTitle} \\nlabel: ${label}\\nselected: ${selected}\\nset: ${set}\\nlog: ${JSON.stringify(log, null, 2)}`)\nif(groupTitle!==undefined&&groupTitle!==1&&selected!==undefined&&set){setStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{log:log});});}};var getStateLog=function getStateLog(){return status.log;};//console.log(`LoggerFunctional ===> ${JSON.stringify(status.items, null, 2)}`);\nvar appInterface=/*#__PURE__*/React.createElement(\"div\",{className:\"App-content fadeIn\"},/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"},/*#__PURE__*/React.createElement(Loader,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"}));if(status.isLoaded){//console.log(`LoggerFunctional => log:\\n${JSON.stringify(status.log, null, 2)}`)\nappInterface=/*#__PURE__*/React.createElement(\"div\",{className:\"App-content fadeIn\"},/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"},/*#__PURE__*/React.createElement(LogEntry,{logId:status.logID,onChange:updateLog,getStateLog:getStateLog,title:\"Session Log\",message:\"Add your session data\",buttonLabel:\"submit\",items:status.items})),/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"}));}return appInterface;};export default Logger;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LoggerFunctional.js"],"names":["React","useState","useEffect","LogEntry","Loader","interfaceData","templateData","generateNewLogId","directionObject","Logger","logId","location","logExists","localStorage","getItem","initLogId","initLog","JSON","parse","logID","log","isLoaded","items","status","setStatus","getSpot","state","prevState","data","returnJSON","response","json","returnRejection","Promise","reject","validate","ok","uri","updateLog","groupTitle","label","selected","set","undefined","getStateLog","appInterface"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport LogEntry from './LogEntryFunctional.js';\nimport Loader from '../utils/Loader.js';\nimport interfaceData from './InterfaceData.js'\nimport templateData from './LogTemplateData.js';\nimport generateNewLogId from './GenerateLogId.js';\nimport directionObject from './DirectionObject.js';\n\nconst Logger = ({logId, location}) => { \n    //console.log(`Logger => logId: ${logId}\\nlocalStorage.getItem('logId'): ${localStorage.getItem('logId')}`); \n    const logExists = () => (localStorage.getItem(logId) === null) ? false : true;\n    const initLogId = () => (logExists()) ? logId : generateNewLogId();\n    const initLog = () => (logExists()) ? JSON.parse(localStorage.getItem(logId)) : templateData;\n    const [status, setStatus] = useState({\n        //logID: initLogId(),\n        logID: localStorage.getItem('logId'),\n        log: initLog(),\n        isLoaded: false,\n        items: []\n    })\n    const getSpot = () => localStorage.getItem(\"spot\");\n    useEffect(() => {\n        const { state } = location;\n        const logId = localStorage.getItem('logId');\n        //console.log(`LoggerFunctional => componentDidMount -> SPOT: ${getSpot()}\\ngetLogId: ${localStorage.getItem('logId')}\\nlogId: ${logId}`); \n        \n        if (localStorage.getItem(logId) === null) {\n            setStatus(prevState => ({\n                ...prevState,\n                log: templateData,\n                logID:generateNewLogId()\n            }));\n            //console.log(`LoggerFunctional => componentDidMount -> 1\\nSPOT: ${getSpot()}\\nlogID: ${logId}\\nlog: ${JSON.stringify(status.log, null, 2)}`); \n        \n        } else {\n            setStatus(prevState => ({\n                ...prevState,\n                log: JSON.parse(localStorage.getItem(logId)),\n                logID: logId\n            }));\n            //console.log(`LoggerFunctional => componentDidMount -> 2\\nSPOT: ${getSpot()}\\nlogID: ${logId}\\nlog: ${JSON.stringify(status.log, null, 2)}`); \n        }\n        \n        let data = interfaceData;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        /*\n        const requestInit = {\n            method:'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            cache: 'default'\n        };\n        */\n        //const uri = new Request('https://jsongithub.github.io/portfolio/assets/data/appData.json', requestInit);\n        //GOOD const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n        const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n        //const uri = 'localhost:8080/writeSurfLog.json';\n        /*\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                setIsLoaded(true);\n                setItems(data);\n                setLogID(logId);\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n        */\n        setStatus({\n            log: JSON.parse(localStorage.getItem(logId)),\n            logID: logId,\n            items: data,\n            isLoaded: true\n        });\n    }, [location])\n\n    const updateLog = (groupTitle, label, selected, set) => {\n        const log = (status.log !== null) ? status.log : templateData;\n        log[groupTitle][label] = selected;\n        if (label === 'Direction' && groupTitle === ('Swell1' || 'Swell2')) {\n            log[groupTitle]['Angle'] = directionObject[selected];\n        }\n        //console.log(`updateLog => \\ngroupTitle: ${groupTitle} \\nlabel: ${label}\\nselected: ${selected}\\nset: ${set}\\nlog: ${JSON.stringify(log, null, 2)}`)\n        if (groupTitle !== undefined && groupTitle !== 1 && selected !== undefined && set) {\n            setStatus(prevState => ({\n                ...prevState,\n                log: log\n            }));\n        }\n    }\n    const getStateLog = () => status.log;\n          \n    //console.log(`LoggerFunctional ===> ${JSON.stringify(status.items, null, 2)}`);\n    let appInterface = <div className=\"App-content fadeIn\">\n                            <div className=\"flex3Column\"></div>\n                            <div className=\"flex3Column\">\n                                <Loader />\n                            </div>\n                            <div className=\"flex3Column\"></div>\n                        </div>;\n    if (status.isLoaded) {\n        //console.log(`LoggerFunctional => log:\\n${JSON.stringify(status.log, null, 2)}`)\n        appInterface = <div className=\"App-content fadeIn\">\n            <div className=\"flex3Column\"></div>\n            <div className=\"flex3Column\">\n                <LogEntry\n                    logId={status.logID}\n                    onChange={updateLog} \n                    getStateLog={getStateLog} \n                    title=\"Session Log\" \n                    message=\"Add your session data\"  \n                    buttonLabel=\"submit\" \n                    items={status.items}\n                />\n            </div>\n            <div className=\"flex3Column\"></div>\n        </div>\n        \n    }\n    return (\n        appInterface            \n    )\n    \n}\nexport default Logger;"]},"metadata":{},"sourceType":"module"}