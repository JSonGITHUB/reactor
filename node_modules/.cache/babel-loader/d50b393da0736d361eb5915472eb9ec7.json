{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/SurfScores.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LongPressButton from './LongPressButton.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport ScoreCard from './ScoreCard.js';\nimport { getSurferIndexWithPriority, losePriority } from './SurfPriority.js';\nimport SurfScoringLogic from './SurfScoringLogic.js';\nimport { newDate } from './Dates.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurfScores = _ref => {\n  _s();\n  let {\n    players,\n    setPlayers,\n    heatLength,\n    isWinner,\n    editPlayer,\n    deletePlayer\n  } = _ref;\n  const [timerOn, setTimerOn] = useState(false);\n  const [timesUp, setTimesUp] = useState(false);\n  const [time, setTime] = useState(heatLength * 60); // Initial time in seconds (e.g., 1 hour)\n\n  useEffect(() => {\n    let intervalId;\n    if (timerOn) {\n      intervalId = setInterval(() => {\n        setTime(prevTime => {\n          const newTime = prevTime - 1;\n          if (newTime <= 0) {\n            clearInterval(intervalId);\n            setTimesUp(true);\n            return 0;\n          }\n          return newTime;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [timerOn]);\n  useEffect(() => {\n    console.log(`SurfScores => time: ${time}`);\n    if (time == 0) {\n      getAthleteScore();\n    }\n  }, [time]);\n  useEffect(() => {\n    if (timesUp) {\n      setTimerOn(false);\n      //setTime(heatLength);\n      console.log(`heatLength: ${heatLength}`);\n      setTimesUp(true);\n    }\n  }, [timesUp]);\n  const toggleTimer = () => {\n    if (timerOn) {\n      setTimerOn(false);\n    } else {\n      console.log(`time: ${time}`);\n      if (time === 0) {\n        setTime(heatLength * 60);\n      }\n      setTimerOn(true);\n    }\n  };\n  const restartTimer = () => {\n    setTime(heatLength * 60);\n    setTimerOn(true);\n  };\n  const surfClass = playerIndex => 'flex3Column p-20 size25 bold' + (isWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n  const months = ['Jan', 'Feb', 'March', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n  const getTimerButtonClasses = () => {\n    const timerButtonClasses = timerOn ? 'bg-red' : 'bg-green';\n    return timerButtonClasses;\n  };\n  const getTimerClasses = () => {\n    const timerClasses = time < 120 ? 'blinking-fade' : '';\n    return timerClasses;\n  };\n  const formatTime = timeInSeconds => {\n    const hours = Math.floor(timeInSeconds / 3600);\n    const minutes = Math.floor(timeInSeconds % 3600 / 60);\n    const seconds = timeInSeconds % 60;\n    const formattedHours = hours.toString().padStart(2, '0');\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    const formattedSeconds = seconds.toString().padStart(2, '0');\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n  };\n  const getJerseyColor = surferIndex => {\n    if (players[surferIndex].surfJerseyColor === undefined) {\n      const newPlayers = [...players];\n      newPlayers[surferIndex].surfJerseyColor = surferIndex;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      return 0;\n    }\n    return players[surferIndex].surfJerseyColor;\n  };\n  const getPriorityColor = priorityIndex => {\n    const surferIndex = getSurferIndexWithPriority(players, priorityIndex);\n    const jerseyColorIndex = surferIndex === null ? null : getJerseyColor(surferIndex);\n    const color = jerseyColorIndex === null ? 'white' : jerseyColors[jerseyColorIndex];\n    return color;\n  };\n  const jerseyColors = ['white', 'yellow', 'neogreen', 'black', 'blue', 'orange', 'pink', 'red'];\n  const getPriorityItem = index => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `button flex${players.length}Column r-10 m-5 w-75 size40 pt-20 pb-20 bg-${getPriorityColor(index)}`,\n      onClick: () => losePriority(players, setPlayers, index),\n      children: index\n    }, getKey(`priorityFlag`), false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 20\n    }, this);\n  };\n  const getAthleteScore = index => {\n    //console.log(`SurfScores => getAthleteScore => index: ${index}`)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex${players.length}Column r-10 m-5 size20`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-5\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `ht-5 bg-${getPriorityColor(players[index].surfPriority)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-5\",\n        children: players[index].surfScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"greet\",\n        children: /*#__PURE__*/_jsxDEV(SurfScoringLogic, {\n          index: index,\n          completed: time > 0 ? false : true,\n          players: players,\n          setPlayers: setPlayers,\n          editPlayer: editPlayer,\n          deleteAthlete: deletePlayer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-5\",\n        children: players[index].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)]\n    }, getKey(`athleteScore`), true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 16\n    }, this);\n  };\n  const getPriorityDisplay = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centeredContent bold size25 p-10 bg-dark r-10 ml-10 mr-10 mt-10 mb-15\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer ml-5 mt-10 mr-5 color-dark text-outline-light\",\n          children: players.map((player, index) => getPriorityItem(index + 1))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 16\n    }, this);\n  };\n  const date = new Date().toLocaleString();\n  const getScoreDisplay = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bold size25 p-10 bg-white color-dark r-10 ml-10 mr-10 mt-10 mb-15\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Scoreboard - \", newDate()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer ml-5 mr-5 text-outline-light width-100-percent\",\n          children: players.map((player, index) => getAthleteScore(index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer p-5 bg-dark r-10 m-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex3Column m-5 r-10 bold size20 p-20 color-light ${getTimerButtonClasses()}`,\n        onClick: () => toggleTimer(),\n        children: timerOn ? 'STOP' : 'START'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-5 r-10 bg-dkBlue bold size25 p-20 color-light\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: getTimerClasses(),\n          children: formatTime(time)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex3Column m-5 r-10 bold size20 p-20 color-light bg-green`,\n        onClick: () => restartTimer(),\n        children: \"RESTART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), getScoreDisplay(), getPriorityDisplay()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 12\n  }, this);\n};\n_s(SurfScores, \"L0iReu1wLgSRnRr00pF0rOkOsrU=\");\n_c = SurfScores;\nexport default SurfScores;\nvar _c;\n$RefreshReg$(_c, \"SurfScores\");","map":{"version":3,"names":["React","useState","useEffect","LongPressButton","Selector","getKey","ScoreCard","getSurferIndexWithPriority","losePriority","SurfScoringLogic","newDate","jsxDEV","_jsxDEV","SurfScores","_ref","_s","players","setPlayers","heatLength","isWinner","editPlayer","deletePlayer","timerOn","setTimerOn","timesUp","setTimesUp","time","setTime","intervalId","setInterval","prevTime","newTime","clearInterval","console","log","getAthleteScore","toggleTimer","restartTimer","surfClass","playerIndex","months","getTimerButtonClasses","timerButtonClasses","getTimerClasses","timerClasses","formatTime","timeInSeconds","hours","Math","floor","minutes","seconds","formattedHours","toString","padStart","formattedMinutes","formattedSeconds","getJerseyColor","surferIndex","surfJerseyColor","undefined","newPlayers","localStorage","setItem","JSON","stringify","getPriorityColor","priorityIndex","jerseyColorIndex","color","jerseyColors","getPriorityItem","index","className","length","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","surfPriority","surfScore","completed","deleteAthlete","name","getPriorityDisplay","map","player","date","Date","toLocaleString","getScoreDisplay","Fragment","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/SurfScores.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LongPressButton from './LongPressButton.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport ScoreCard from './ScoreCard.js';\nimport { getSurferIndexWithPriority, losePriority } from './SurfPriority.js';\nimport SurfScoringLogic from './SurfScoringLogic.js';\nimport { newDate } from './Dates.js';\n\nconst SurfScores = ({ players, setPlayers, heatLength, isWinner, editPlayer, deletePlayer}) => {\n\n    const [timerOn, setTimerOn] = useState(false);\n    const [timesUp, setTimesUp] = useState(false);\n    const [time, setTime] = useState(heatLength * 60); // Initial time in seconds (e.g., 1 hour)\n   \n    useEffect(() => {\n        let intervalId;\n        if (timerOn) {\n            intervalId = setInterval(() => {\n                setTime((prevTime) => {\n                    const newTime = prevTime - 1;\n                    if (newTime <= 0) {\n                        clearInterval(intervalId);\n                        setTimesUp(true);\n                        return 0;\n                    }\n                    return newTime;\n                });\n            }, 1000);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [timerOn]);\n\n    useEffect(() => {\n        console.log(`SurfScores => time: ${time}`)\n        if (time == 0) {\n            getAthleteScore();\n        }\n    }, [time]);\n\n    useEffect(() => {\n        if (timesUp) {\n            setTimerOn(false);\n            //setTime(heatLength);\n            console.log(`heatLength: ${heatLength}`)\n            setTimesUp(true);\n        }\n    }, [timesUp]);\n\n    const toggleTimer = () => {\n        if (timerOn) {\n            setTimerOn(false)\n        } else {\n            console.log(`time: ${time}`)\n            if (time === 0) {\n                setTime(heatLength*60);\n            }\n            setTimerOn(true)\n        }\n    }\n    const restartTimer = () => {\n        setTime(heatLength*60);\n        setTimerOn(true);\n    }\n\n    const surfClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n    const months = ['Jan', 'Feb', 'March', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\n    const getTimerButtonClasses = () => {\n        const timerButtonClasses = timerOn ? 'bg-red' : 'bg-green';\n        return timerButtonClasses;\n    }\n    const getTimerClasses = () => {\n        const timerClasses = (time < 120) ? 'blinking-fade' : '';\n        return timerClasses;\n    }\n    const formatTime = (timeInSeconds) => {\n        const hours = Math.floor(timeInSeconds / 3600);\n        const minutes = Math.floor((timeInSeconds % 3600) / 60);\n        const seconds = timeInSeconds % 60;\n        const formattedHours = hours.toString().padStart(2, '0');\n        const formattedMinutes = minutes.toString().padStart(2, '0');\n        const formattedSeconds = seconds.toString().padStart(2, '0');\n        return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n    };\n    const getJerseyColor = (surferIndex) => {\n        if (players[surferIndex].surfJerseyColor === undefined) {\n            const newPlayers = [...players];\n            newPlayers[surferIndex].surfJerseyColor = surferIndex;\n            localStorage.setItem('players', JSON.stringify(newPlayers))\n            return 0;\n        }\n        return players[surferIndex].surfJerseyColor;\n    }\n    const getPriorityColor = (priorityIndex) => {\n        const surferIndex = getSurferIndexWithPriority(players, priorityIndex);\n        const jerseyColorIndex = (surferIndex === null) ? null : getJerseyColor(surferIndex);\n        const color = (jerseyColorIndex === null) ? 'white' : jerseyColors[jerseyColorIndex];\n        return color;\n    }\n    const jerseyColors = ['white', 'yellow', 'neogreen', 'black', 'blue', 'orange', 'pink', 'red'];\n    const getPriorityItem = (index) => {\n            return <div className={`button flex${players.length}Column r-10 m-5 w-75 size40 pt-20 pb-20 bg-${getPriorityColor(index)}`} key={getKey(`priorityFlag`)} onClick={() => losePriority(players, setPlayers, index)}>\n                        {index}\n                    </div>\n    }\n    const getAthleteScore = (index) => {\n        //console.log(`SurfScores => getAthleteScore => index: ${index}`)\n        return <div className={`flex${players.length}Column r-10 m-5 size20`} key={getKey(`athleteScore`)}>\n                    <div className='p-5'>{index+1}</div>\n                    <div className={`ht-5 bg-${getPriorityColor(players[index].surfPriority)}`}></div>\n                    <div className='p-5'>{players[index].surfScore}</div>\n                    <div className='greet'>\n                        <SurfScoringLogic\n                            index={index} \n                            completed={(time>0)?false:true}\n                            players={players}\n                            setPlayers={setPlayers}\n                            editPlayer={editPlayer}\n                            deleteAthlete={deletePlayer}\n                            />\n                    </div>\n                    <div className='p-5'>{players[index].name}</div>\n                </div>\n    }\n       \n    const getPriorityDisplay = () => {\n        return <div>\n            <div className='centeredContent bold size25 p-10 bg-dark r-10 ml-10 mr-10 mt-10 mb-15'>\n                <div>Priority</div>\n                <div className='flexContainer ml-5 mt-10 mr-5 color-dark text-outline-light' >\n                    {players.map((player, index) => getPriorityItem(index+1))}\n                </div>\n            </div>\n        </div>\n    }\n    const date = new Date().toLocaleString();\n        \n    const getScoreDisplay = () => {\n        return <div>\n            <div className='bold size25 p-10 bg-white color-dark r-10 ml-10 mr-10 mt-10 mb-15'>\n                <div>Scoreboard - {newDate()}</div>\n                <div className='flexContainer ml-5 mr-5 text-outline-light width-100-percent' >\n                    {players.map((player, index) => getAthleteScore(index))}\n                </div>\n            </div>\n        </div>\n    }\n\n    return <React.Fragment>\n        <div className='flexContainer p-5 bg-dark r-10 m-10'>\n            <div className={`flex3Column m-5 r-10 bold size20 p-20 color-light ${getTimerButtonClasses()}`} onClick={() => toggleTimer()}>\n                {(timerOn) ? 'STOP' : 'START'}\n            </div>\n            <div className='flex3Column m-5 r-10 bg-dkBlue bold size25 p-20 color-light'>\n                <span className={getTimerClasses()}>\n                    {formatTime(time)}\n                </span>\n            </div>\n            <div className={`flex3Column m-5 r-10 bold size20 p-20 color-light bg-green`} onClick={() => restartTimer()}>\n                RESTART\n            </div>\n        </div>\n        {getScoreDisplay()}\n        {getPriorityDisplay()}\n    </React.Fragment>\n\n}\n\nexport default SurfScores;"],"mappings":"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"},"metadata":{},"sourceType":"module"}