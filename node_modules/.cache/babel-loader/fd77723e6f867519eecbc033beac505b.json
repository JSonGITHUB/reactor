{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/SurfingScores.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport jerseyColors from './JerseyColors.js';\nimport SurfScoringLogic from './SurfScoringLogic.js';\nimport { findTwoHighestIndices } from './HighScores.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurfingScores = (players, index, surfScoring, setPlayers, editPlayer, deletePlayer) => {\n  _s();\n  console.log(`SurfingScores => players: ${JSON.stringify(players)} index: ${index}`);\n  const [state, setState] = useState({\n    editIndex: null,\n    showButtons: false\n  });\n  const [timer, setTimer] = useState(null);\n  const [showButtons, setShowButtons] = useState(false);\n  const handleTouchStart = () => {\n    console.log(`handleTouchStart`);\n    setTimer(setTimeout(() => setShowButtons(true), 1000));\n  };\n  useEffect(() => {\n    alert(`SurfingScores => timer: ${timer}`);\n  }, [timer]);\n  const handleTouchEnd = () => {\n    clearTimeout(timer);\n    //setShowButtons(false);\n  };\n\n  const rank = ['st', 'nd', 'rd', 'th'];\n  const getTwoHighestScores = () => {\n    const player = players[index];\n    const scores = player.surfScores;\n    const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n    //console.log(`getTwoHighestScores => playerIndex: ${index} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n    return {\n      highScoreIndex: highestIndex,\n      secondHighScoreIndex: secondHighestIndex\n    };\n  };\n  const getScoreTotal = index => {\n    const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n    const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n    const score = highestScore + secondHighestScore;\n    console.log(`getScoreTotal => player: ${index} score: ${score}`);\n    return score;\n  };\n  const highestScore = playersArray => {\n    //console.log(`highestScore = (index: ${index}, playersArray: ${JSON.stringify(playersArray, null, 2)})`)\n    return playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n  };\n  const secondHighestScore = playersArray => playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n  const scoreTotal = (index, playersArray) => Number(highestScore(playersArray) + secondHighestScore(playersArray)).toFixed(2);\n  const setSurfScore = (playerId, index, score) => {\n    const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n    const newPlayers = [...players];\n    const currentScore = newPlayers[playerId].surfScores[index];\n    const edit = currentScore !== '' && currentScore !== 0 ? false : true;\n    newPlayers[playerId].surfScores[index] = Number(newScore);\n    newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n    if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n      newPlayers.map((player, index) => {\n        if (index === playerId) {\n          player.surfPriority = players.length;\n        } else if (player.surfPriority != 0) {\n          player.surfPriority = player.surfPriority - 1;\n        }\n      });\n    }\n    const sortedPlayers = [...newPlayers];\n    sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n    console.log('setSurfScore => sortedPlayers: ', sortedPlayers);\n    localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n    setPlayers(sortedPlayers);\n  };\n  const get2ndHighestScore = playerId => {\n    const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n    const secondHighestId = highestScores[1];\n    return players[playerId].surfScores[secondHighestId];\n  };\n  const getWave = (playerId, index, score) => {\n    const player = players[playerId];\n    const theScore = player.surfScores[index];\n    const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n    const highestId = highestScores[0];\n    const secondHighestId = highestScores[1];\n    const firstScore = index === highestId ? true : false;\n    const secondScore = index === secondHighestId ? true : false;\n    const getClasses = firstScore || secondScore ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n    const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column r-10\",\n      onClick: () => setSurfScore(playerId, index, score),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"size30 bold color-yellow bg-dkYellow w-100 p-10\",\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `ht-40 ${getClasses}`,\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, getKey(`wave${playerId}${index}${score}`), true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 22\n    }, this);\n    return wave;\n  };\n  const selectJersey = index => {\n    const newPlayers = [...players];\n    newPlayers[index].surfJerseyColor = Number(newPlayers[index].surfJerseyColor) + 1;\n    newPlayers[index].surfJerseyColor = newPlayers[index].surfJerseyColor > jerseyColors.length - 1 ? 0 : newPlayers[index].surfJerseyColor;\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(newPlayers);\n  };\n  const isTieScore = index => {\n    const score = scoreTotal(index, players);\n    if (index !== 0) {\n      if (score === scoreTotal(index - 1, players)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const editSurfer = index => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: alert(`Subtract ${index}`),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: alert(`Add ${index}`),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 35\n  }, this);\n  const getSurfTotal = player => {\n    let total = 0;\n    const score = index => player.surfScores[index];\n    const addToTotal = value => total = total + value;\n    surfScoring.map((target, index) => {\n      //console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`)\n      addToTotal(Number(score(index)));\n    });\n    return total;\n  };\n  const surferScores = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[0] || jerseyColors[0]}`,\n      onTouchStart: () => handleTouchStart(index),\n      onTouchEnd: handleTouchEnd,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex2Column contentLeft r-10-lft m-0 w-75 p-10`,\n        onClick: () => selectJersey(index),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size25 mt--10\",\n            children: isTieScore(index) && index !== 0 ? index : index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size15 mt--10\",\n            children: rank[isTieScore(index) && index !== 0 ? index : index > 2 ? 3 : index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"size30 mt-5 mb-5\",\n          children: (players[index].player || players[index].name).split(' ')[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"size20\",\n          children: (players[index].player || players[index].name).split(' ')[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"size40 bold\",\n          children: getSurfTotal(players[index])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-10 bold\",\n          children: [\"Index: \", index, \"Players: \", players]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)]\n    }, getKey(`${index}${players[index].player || players[index].name}`), true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showButtons && editSurfer(index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-scroll color-white copyright ml-10 mr-10 mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container mt-10\",\n            children: players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)]\n  }, getKey(`${index}${players[index].player || players[index].name}`), true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 32\n  }, this);\n  return surferScores();\n};\n_s(SurfingScores, \"K1a2T8vvy6OsqjOtGdkc65h1p1E=\");\n_c = SurfingScores;\nexport default SurfingScores;\nvar _c;\n$RefreshReg$(_c, \"SurfingScores\");","map":{"version":3,"names":["React","useState","useEffect","getKey","jerseyColors","SurfScoringLogic","findTwoHighestIndices","jsxDEV","_jsxDEV","SurfingScores","players","index","surfScoring","setPlayers","editPlayer","deletePlayer","_s","console","log","JSON","stringify","state","setState","editIndex","showButtons","timer","setTimer","setShowButtons","handleTouchStart","setTimeout","alert","handleTouchEnd","clearTimeout","rank","getTwoHighestScores","player","scores","surfScores","highestIndex","secondHighestIndex","highScoreIndex","secondHighScoreIndex","getScoreTotal","highestScore","secondHighestScore","score","playersArray","scoreTotal","Number","toFixed","setSurfScore","playerId","newScore","prompt","name","newPlayers","currentScore","edit","surfScore","surfPriority","map","length","sortedPlayers","sort","a","b","localStorage","setItem","get2ndHighestScore","highestScores","secondHighestId","getWave","theScore","highestId","firstScore","secondScore","getClasses","wave","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","selectJersey","surfJerseyColor","isTieScore","editSurfer","getSurfTotal","total","addToTotal","value","target","surferScores","onTouchStart","onTouchEnd","split","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/SurfingScores.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport jerseyColors from './JerseyColors.js';\nimport SurfScoringLogic from './SurfScoringLogic.js';\nimport { findTwoHighestIndices } from './HighScores.js';\n\nconst SurfingScores = (players, index, surfScoring, setPlayers, editPlayer, deletePlayer) => {\n\n    console.log(`SurfingScores => players: ${JSON.stringify(players)} index: ${index}`)\n\n    const[state, setState] = useState({\n        editIndex: null,\n        showButtons: false\n    });\n    const [timer, setTimer] = useState(null);\n    const [showButtons, setShowButtons] = useState(false);\n    const handleTouchStart = () => {\n        console.log(`handleTouchStart`)\n        setTimer(setTimeout(() => setShowButtons(true), 1000));\n    };\n    useEffect(() => {\n        alert(`SurfingScores => timer: ${timer}`);\n    }, [timer]);\n\n    const handleTouchEnd = () => {\n        clearTimeout(timer);\n        //setShowButtons(false);\n    };\n    const rank = ['st', 'nd', 'rd', 'th'];\n\n    const getTwoHighestScores = () => {\n        const player = players[index];\n        const scores = player.surfScores;\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n        //console.log(`getTwoHighestScores => playerIndex: ${index} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            highScoreIndex: highestIndex,\n            secondHighScoreIndex: secondHighestIndex\n        };\n    };\n    const getScoreTotal = (index) => {\n        const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n        const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n        const score = (highestScore + secondHighestScore);\n        console.log(`getScoreTotal => player: ${index} score: ${score}`);\n        return score;\n    }\n    const highestScore = (playersArray) => {\n        //console.log(`highestScore = (index: ${index}, playersArray: ${JSON.stringify(playersArray, null, 2)})`)\n        return playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n    }\n    const secondHighestScore = (playersArray) => playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n    const scoreTotal = (index, playersArray) => Number(highestScore(playersArray) + secondHighestScore(playersArray)).toFixed(2);\n\n    const setSurfScore = (playerId, index, score) => {\n\n        const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n        const newPlayers = [...players];\n        const currentScore = newPlayers[playerId].surfScores[index];\n        const edit = (currentScore !== '' && currentScore !== 0) ? false : true;\n        newPlayers[playerId].surfScores[index] = Number(newScore);\n        newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n        if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n            newPlayers.map((player, index) => {\n                if (index === playerId) {\n                    player.surfPriority = players.length;\n                } else if (player.surfPriority != 0) {\n                    player.surfPriority = player.surfPriority - 1;\n                }\n            });\n        }\n        const sortedPlayers = [...newPlayers];\n        sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n\n        console.log('setSurfScore => sortedPlayers: ', sortedPlayers)\n\n        localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n        setPlayers(sortedPlayers);\n    }\n    const get2ndHighestScore = (playerId) => {\n        const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n        const secondHighestId = highestScores[1];\n        return players[playerId].surfScores[secondHighestId];\n    }\n    const getWave = (playerId, index, score) => {\n        const player = players[playerId];\n        const theScore = player.surfScores[index];\n        const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n        const highestId = highestScores[0];\n        const secondHighestId = highestScores[1];\n        const firstScore = (index === highestId) ? true : false;\n        const secondScore = (index === secondHighestId) ? true : false;\n        const getClasses = (firstScore || secondScore) ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n        const wave = <div className=\"column r-10\" onClick={() => setSurfScore(playerId, index, score)} key={getKey(`wave${playerId}${index}${score}`)}>\n            <div className='size30 bold color-yellow bg-dkYellow w-100 p-10'>{index + 1}</div>\n            <div className={`ht-40 ${getClasses}`}>{score}</div>\n        </div>\n        return wave\n    }\n    const selectJersey = (index) => {\n        const newPlayers = [...players];\n        newPlayers[index].surfJerseyColor = Number(newPlayers[index].surfJerseyColor) + 1;\n        newPlayers[index].surfJerseyColor = (newPlayers[index].surfJerseyColor > (jerseyColors.length - 1)) ? 0 : newPlayers[index].surfJerseyColor;\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(newPlayers);\n    }\n    const isTieScore = (index) => {\n        const score = scoreTotal(index, players);\n        if (index !== 0) {\n            if (score === scoreTotal(index - 1, players)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    const editSurfer = (index) => <div>\n        <button onClick={alert(`Subtract ${index}`)}>-</button>\n        <button onClick={alert(`Add ${index}`)}>+</button>\n    </div>\n    const getSurfTotal = (player) => {\n        let total = 0;\n        const score = (index) => player.surfScores[index];\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n            //console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        return total;\n    }\n\n    const surferScores = () => <div key={getKey(`${index}${(players[index].player || players[index].name)}`)}>\n        {/*<div className={`flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`} key={getKey(`${index}${(player.player || player.name)}`)}  onTouchStart={() => handleTouchStart(index)} onTouchEnd={handleTouchEnd}>*/}\n        <div className={`flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[0] || jerseyColors[0]}`} key={getKey(`${index}${(players[index].player || players[index].name)}`)} onTouchStart={() => handleTouchStart(index)} onTouchEnd={handleTouchEnd}>\n            <div className={`flex2Column contentLeft r-10-lft m-0 w-75 p-10`} onClick={() => selectJersey(index)}>\n                <div>\n                    <span className='size25 mt--10'>\n                        {(isTieScore(index) && (index !== 0)) ? index : (index + 1)}\n                    </span>\n                    <span className='size15 mt--10'>\n                        {rank[(isTieScore(index) && (index !== 0)) ? index : (index > 2) ? 3 : (index)]}\n                    </span>\n                </div>\n                <div className='size30 mt-5 mb-5'>\n                    {(players[index].player || players[index].name).split(' ')[0]}\n                </div>\n                <div className='size20'>\n                    {(players[index].player || players[index].name).split(' ')[1]}\n                </div>\n            </div>\n            <div className={`r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`}>\n                <div className='size40 bold'>{getSurfTotal(players[index])}</div>\n                <div className='mt-10 bold'>\n                    {/*\n                        <SurfScoringLogic\n                            index={index}\n                            completed={false}\n                            players={players}\n                            //setPlayers={setPlayers}\n                            //editPlayer={editPlayer}\n                            //deleteAthlete={deletePlayer}\n                        />\n                    */}\n                    Index: {index}\n                    Players: {players}\n                </div>\n            </div>\n        </div>\n        <div>\n            {showButtons && (\n                editSurfer(index)\n            )}\n        </div>\n        <div>\n            <div>\n                <div className='h-scroll color-white copyright ml-10 mr-10 mt-5'>\n                    <div className=\"container mt-10\">\n                        {players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    return surferScores()\n}\nexport default SurfingScores;"],"mappings":"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"},"metadata":{},"sourceType":"module"}