{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/Tide.js\";\nimport React from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport Loader from '../utils/Loader.js';\n\nclass Tide extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCurrentTide = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 28\n      }\n    }, \"Tide: \", this.state.tide, \" Height: \", this.state.height);\n\n    this.percent = 'twentyfivePercent mt--70 mb--70';\n\n    this.loading = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: this.percent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      isMotionOn: this.props.isMotionOn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }));\n\n    this.state = {\n      tide: \"low\",\n      height: \"1'\"\n    };\n  }\n\n  componentDidMount() {\n    let data;\n\n    const returnJSON = response => response.json();\n\n    const returnRejection = response => Promise.reject({\n      status: response.status,\n      data\n    });\n\n    const validate = response => response.ok ? returnJSON(response) : returnRejection(response);\n\n    let getCurrentTime = new Date();\n    getCurrentTime = `${getCurrentTime.getFullYear()}${getCurrentTime.getMonth() + 1 < 10 ? `0${getCurrentTime.getMonth() + 1}` : getCurrentTime.getMonth() + 1}${getCurrentTime.getDate() < 10 ? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${getCurrentTime.getHours()}:00`;\n    console.log(`Tide   -      getCurrentTime: ${getCurrentTime} ===> 20200520%2018:24`);\n    const uriMLLW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n    const uriMHHW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MHHW&units=english&time_zone=gmt&application=web_services&format=json`;\n    const uri = uriMHHW; //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n\n    /*\n    {\n        \"metadata\":{\n            \"id\":\"9410230\",\n            \"name\":\"La Jolla\",\n            \"lat\":\"32.8669\",\n            \"lon\":\"-117.2571\"\n        }, \n        \"data\": [\n            {\n                \"t\":\"2020-05-20 19:00\", \n                \"v\":\"2.081\", \n                \"s\":\"0.413\", \n                \"f\":\"1,0,0,0\", \n                \"q\":\"p\"\n            }\n        ]\n    }\n    */\n\n    fetch(uri).then(response => validate(response)).then(data => {\n      this.setState({\n        tide: data.metadata.name,\n        height: data.data[0].v\n      });\n    }).catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-yellow greet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }\n    }, this.loading(), this.getCurrentTide());\n  }\n\n}\n\nexport default Tide;\n/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/\n\n/* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/Tide.js"],"names":["React","Dialog","Loader","Tide","Component","constructor","props","getCurrentTide","state","tide","height","percent","loading","isMotionOn","componentDidMount","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","getCurrentTime","Date","getFullYear","getMonth","getDate","getHours","console","log","uriMLLW","uriMHHW","uri","fetch","then","setState","metadata","name","v","catch","err","window","location","pathname","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport Loader from '../utils/Loader.js';\n\nclass Tide extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tide: \"low\",\n            height: \"1'\"\n        }\n    }\n    componentDidMount() {\n        \n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        let getCurrentTime = new Date();\n        getCurrentTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${(getCurrentTime.getHours())}:00`\n        console.log(`Tide   -      getCurrentTime: ${getCurrentTime} ===> 20200520%2018:24`)\n        const uriMLLW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        const uriMHHW = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_level&datum=MHHW&units=english&time_zone=gmt&application=web_services&format=json`;\n        const uri = uriMHHW;\n        \n        //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        /*\n        {\n            \"metadata\":{\n                \"id\":\"9410230\",\n                \"name\":\"La Jolla\",\n                \"lat\":\"32.8669\",\n                \"lon\":\"-117.2571\"\n            }, \n            \"data\": [\n                {\n                    \"t\":\"2020-05-20 19:00\", \n                    \"v\":\"2.081\", \n                    \"s\":\"0.413\", \n                    \"f\":\"1,0,0,0\", \n                    \"q\":\"p\"\n                }\n            ]\n        }\n        */\n        \n        \n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                this.setState({\n                    tide: data.metadata.name,\n                    height: data.data[0].v\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n    }\n    getCurrentTide = () => <div>Tide: {this.state.tide} Height: {this.state.height}</div>;\n    percent = 'twentyfivePercent mt--70 mb--70';\n    loading = () => <div className={this.percent}>\n                <Loader isMotionOn={this.props.isMotionOn}/>\n            </div>;\n    render() {\n        return <div className=\"color-yellow greet\">\n                {this.loading()}\n                {this.getCurrentTide()}\n            </div>\n    };\n}\n\nexport default Tide;\n/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/\n\n/* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/"]},"metadata":{},"sourceType":"module"}