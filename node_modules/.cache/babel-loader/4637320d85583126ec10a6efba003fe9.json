{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js\";\nimport React, { useState } from 'react';\nimport { openweatherAPI_KEY, openweatherAPI_BASE_URL } from '../../apis/config';\n\nconst CitySelector = () => {\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n  //Metric\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n  //Image Source\n  //http://openweathermap.org/img/wn/10d@2x.png\n  const key = openweatherAPI_KEY;\n  const baseUrl = openweatherAPI_BASE_URL;\n  const [city, setCity] = useState('London');\n  const [results, setResults] = useState('');\n  const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n\n  const displayResults = results => {\n    console.log(`display: ${JSON.stringify(results, null, 2)}`);\n    const main = results.list[0].main;\n    const temp = main.temp;\n    const feels_like = main.feels_like;\n    const temp_min = main.feels_like;\n    const temp_max = main.feels_like;\n    const humidity = main.humidity;\n    const weather = results.list[0].weather[0];\n    const mainDescription = weather.main;\n    const description = weather.description;\n    const icon = weather.icon;\n    const wind = results.list[0].wind;\n    const windSpeed = wind.speed;\n    const windDirection = wind.deg;\n    const visibility = results.list[0].visibility;\n    const display = `${mainDescription} ${description} temp: ${temp}° feels like: ${feels_like}° humidity: ${humidity}° wind: ${windSpeed}mph wind direction: ${windDirection} visibility: ${visibility}`;\n    console.log(`display: ${display}`);\n    setResults(display);\n  };\n\n  const onSearch = () => {\n    fetch(`${baseUrl}${urlEnd}${key}`).then(response => response.json()) //        .then((result) => console.log(`${JSON.stringify(result,null, 2)}`))\n    .then(results => displayResults(results));\n  };\n\n  const onKeyDown = event => {\n    if (event.keyCode === 13) {\n      onSearch();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"navBranding color-yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Search your city\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyDown: onKeyDown,\n    value: city,\n    placeholder: \"Enter city\",\n    onChange: event => setCity(event.target.value),\n    className: \"greet p-20 r-10 w-200 brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSearch,\n    className: \"ml-5 greet p-20 r-10 w-200 bg-green brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Check Weather\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"navBranding color-yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Results:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-neogreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, results));\n};\n\nexport default CitySelector;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js"],"names":["React","useState","openweatherAPI_KEY","openweatherAPI_BASE_URL","CitySelector","key","baseUrl","city","setCity","results","setResults","urlEnd","displayResults","console","log","JSON","stringify","main","list","temp","feels_like","temp_min","temp_max","humidity","weather","mainDescription","description","icon","wind","windSpeed","speed","windDirection","deg","visibility","display","onSearch","fetch","then","response","json","onKeyDown","event","keyCode","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { openweatherAPI_KEY, openweatherAPI_BASE_URL } from '../../apis/config';\n\n\nconst CitySelector = () => {\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n    //Metric\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n    //Image Source\n    //http://openweathermap.org/img/wn/10d@2x.png\n    const key = openweatherAPI_KEY;\n    const baseUrl = openweatherAPI_BASE_URL;\n\n    const [city, setCity] = useState('London');\n    const [results, setResults] = useState('');\n    const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n\n    const displayResults = (results) => {\n        console.log(`display: ${JSON.stringify(results, null, 2)}`)\n        const main = results.list[0].main;\n        const temp = main.temp;\n        const feels_like = main.feels_like;\n        const temp_min = main.feels_like;\n        const temp_max = main.feels_like;\n        const humidity = main.humidity;\n        const weather = results.list[0].weather[0];\n        const mainDescription = weather.main;\n        const description = weather.description;\n        const icon = weather.icon;\n        const wind = results.list[0].wind;\n        const windSpeed = wind.speed;\n        const windDirection = wind.deg;\n        const visibility = results.list[0].visibility;\n        const display = `${\n            mainDescription\n        } ${\n            description\n        } temp: ${\n            temp\n        }° feels like: ${\n            feels_like\n        }° humidity: ${\n            humidity\n        }° wind: ${\n            windSpeed\n        }mph wind direction: ${\n            windDirection\n        } visibility: ${visibility}`;\n        console.log(`display: ${display}`)\n        setResults(display)\n    }\n\n    const onSearch = () => {\n        fetch(`${baseUrl}${urlEnd}${key}`)\n        .then((response) => response.json())\n//        .then((result) => console.log(`${JSON.stringify(result,null, 2)}`))\n        .then((results) => displayResults(results));\n    };\n    const onKeyDown = (event) => {\n        if (event.keyCode === 13) {\n            onSearch();\n        }\n    };\n    return (\n        <div>\n            <h1 className='navBranding color-yellow'>Search your city</h1>\n            <input onKeyDown={onKeyDown} value={city} placeholder=\"Enter city\"\n                    onChange={(event) => setCity(event.target.value)} className=\"greet p-20 r-10 w-200 brdr-green\"/>\n            <button onClick={onSearch} className=\"ml-5 greet p-20 r-10 w-200 bg-green brdr-green\">\n                Check Weather\n            </button>\n            <h1 className='navBranding color-yellow'>Results:</h1>\n            <div className='color-neogreen'>{results}</div>\n        </div>\n    );\n};\n\nexport default CitySelector;"]},"metadata":{},"sourceType":"module"}