{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/AirTemp.js\";\nimport React from 'react';\nimport Loader from '../utils/Loader.js';\n\nclass AirTemp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAirTempData = () => {\n      console.log(`getAir ->`);\n      let data;\n\n      const returnJSON = response => response.json();\n\n      const returnRejection = response => Promise.reject({\n        status: response.status,\n        data\n      });\n\n      const validate = response => response.ok ? returnJSON(response) : returnRejection(response);\n\n      let getCurrentTime = new Date(); //20200520%2018:24\n      //getCurrentTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${(getCurrentTime.getHours())}:${getCurrentTime.getMinutes()}`\n\n      getCurrentTime = `${getCurrentTime.getFullYear()}${getCurrentTime.getMonth() + 1 < 10 ? `0${getCurrentTime.getMonth() + 1}` : getCurrentTime.getMonth() + 1}${getCurrentTime.getDate() < 10 ? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${getCurrentTime.getHours() < 10 ? `0${getCurrentTime.getHours()}` : getCurrentTime.getHours()}:${getCurrentTime.getMinutes() < 10 ? `0${getCurrentTime.getMinutes()}` : getCurrentTime.getMinutes()}`; //getCurrentTime = \"20200520%2018:24\";\n\n      console.log(`getCurrentTime: ${getCurrentTime} ===> 20200520%2018:24`);\n      const airTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=air_temperature&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`; //`https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2018:24&end_date=20200520%2018:24&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`\n\n      fetch(airTempuri).then(response => validate(response)).then(data => {\n        this.setState({\n          temp: Number(data.data[0].v).toFixed(0)\n        });\n      }).catch(err => console.log(`Something went wrong!\\nuri: ${airTempuri} \\npath: ${window.location.pathname}\\n`, err));\n    };\n\n    this.getInterval = () => this.state.temp !== null ? 150000 : 33000;\n\n    this.getCurrentTemp = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 28\n      }\n    }, this.state.temp, \"\\xB0 \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"greet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 52\n      }\n    }, \"F\"));\n\n    this.percent = 'twentyfivePercent mt--70 mb--70';\n\n    this.loading = () => /*#__PURE__*/React.createElement(\"div\", {\n      className: this.percent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      isMotionOn: this.props.isMotionOn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }));\n\n    this.state = {\n      temp: null\n    };\n  }\n\n  componentDidMount() {\n    this.getAirTempData();\n    this.timerID = setInterval(() => this.getAirTempData(), this.getInterval());\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return this.getCurrentTemp();\n  }\n\n}\n\nexport default AirTemp;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/AirTemp.js"],"names":["React","Loader","AirTemp","Component","constructor","props","getAirTempData","console","log","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","getCurrentTime","Date","getFullYear","getMonth","getDate","getHours","getMinutes","airTempuri","fetch","then","setState","temp","Number","v","toFixed","catch","err","window","location","pathname","getInterval","state","getCurrentTemp","percent","loading","isMotionOn","componentDidMount","timerID","setInterval","componentWillUnmount","clearInterval","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Loader from '../utils/Loader.js';\n\nclass AirTemp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            temp: null,\n        }\n    }\n    getAirTempData = () => {\n        console.log(`getAir ->`);\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        let getCurrentTime = new Date();//20200520%2018:24\n        //getCurrentTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${(getCurrentTime.getHours())}:${getCurrentTime.getMinutes()}`\n        getCurrentTime = `${(getCurrentTime.getFullYear())}${((getCurrentTime.getMonth()+1)<10) ? `0${(getCurrentTime.getMonth()+1)}` : (getCurrentTime.getMonth()+1)}${(getCurrentTime.getDate()<10)? `0${getCurrentTime.getDate()}` : getCurrentTime.getDate()}%20${((getCurrentTime.getHours())<10) ? `0${(getCurrentTime.getHours())}` : (getCurrentTime.getHours())}:${((getCurrentTime.getMinutes())<10) ? `0${(getCurrentTime.getMinutes())}` : (getCurrentTime.getMinutes())}`\n        //getCurrentTime = \"20200520%2018:24\";\n        console.log(`getCurrentTime: ${getCurrentTime} ===> 20200520%2018:24`)\n        const airTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=air_temperature&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        //`https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2018:24&end_date=20200520%2018:24&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`\n        fetch(airTempuri)\n            .then(response => validate(response))\n            .then(data => {\n                this.setState({\n                    temp: Number(data.data[0].v).toFixed(0)\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${airTempuri} \\npath: ${window.location.pathname}\\n`, err));\n    }\n    getInterval = () => (this.state.temp !== null) ? 150000 : 33000;\n    componentDidMount() {\n        this.getAirTempData();\n        this.timerID = setInterval(() => this.getAirTempData(), this.getInterval());\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    getCurrentTemp = () => <div>{this.state.temp}Â° <span className=\"greet\">F</span></div>;\n    percent = 'twentyfivePercent mt--70 mb--70';\n    loading = () => <div className={this.percent}>\n                <Loader isMotionOn={this.props.isMotionOn}/>\n            </div>;\n    render() {\n        return this.getCurrentTemp()\n    };\n}\n\nexport default AirTemp;"]},"metadata":{},"sourceType":"module"}