{"ast":null,"code":"import React from'react';import getKey from'../utils/KeyGenerator.js';var TextColorizer=function TextColorizer(props){var colorClass=\"\";var colors=[\"color-green\",\"color-yellow\",\"color-red\"];var colorIndex=0;var resetColorIndex=function resetColorIndex(){colorIndex=0;return colorIndex;};var nextIndex=function nextIndex(){colorIndex++;return colorIndex;};var getNextColor=function getNextColor(){return colorIndex>=colors.length-1?resetColorIndex():nextIndex();};return/*#__PURE__*/React.createElement(\"div\",{className:props.class},props.text.split('').map(function(listValue,index){colorClass=colors[getNextColor()];return/*#__PURE__*/React.createElement(\"span\",{key:getKey(listValue),className:colorClass},listValue);}));};export default TextColorizer;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/TextColorizer.js"],"names":["React","getKey","TextColorizer","props","colorClass","colors","colorIndex","resetColorIndex","nextIndex","getNextColor","length","class","text","split","map","listValue","index"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAC3B,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAMC,CAAAA,MAAM,CAAG,CAAC,aAAD,CAAgB,cAAhB,CAAgC,WAAhC,CAAf,CACA,GAAIC,CAAAA,UAAU,CAAG,CAAjB,CACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1BD,UAAU,CAAG,CAAb,CACA,MAAOA,CAAAA,UAAP,CACH,CAHD,CAIA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpBF,UAAU,GACV,MAAOA,CAAAA,UAAP,CACH,CAHD,CAIA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SAAOH,CAAAA,UAAU,EAAID,MAAM,CAACK,MAAP,CAAc,CAA7B,CAAkCH,eAAe,EAAjD,CAAsDC,SAAS,EAArE,EAArB,CACA,mBACI,2BAAK,SAAS,CAAEL,KAAK,CAACQ,KAAtB,EACKR,KAAK,CAACS,IAAN,CAAWC,KAAX,CAAiB,EAAjB,EAAqBC,GAArB,CAAyB,SAASC,SAAT,CAAoBC,KAApB,CAA0B,CAChDZ,UAAU,CAAGC,MAAM,CAACI,YAAY,EAAb,CAAnB,CACA,mBAAO,4BAAM,GAAG,CAAER,MAAM,CAACc,SAAD,CAAjB,CAA8B,SAAS,CAAEX,UAAzC,EAAsDW,SAAtD,CAAP,CACH,CAHA,CADL,CADJ,CAQH,CArBD,CAsBA,cAAeb,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport getKey from '../utils/KeyGenerator.js';\n\nconst TextColorizer = props => {\n    let colorClass = \"\";\n    const colors = [\"color-green\", \"color-yellow\", \"color-red\"];\n    let colorIndex = 0;\n    const resetColorIndex = () => {\n        colorIndex = 0\n        return colorIndex;\n    }\n    const nextIndex = () => {\n        colorIndex++\n        return colorIndex;\n    }\n    const getNextColor = () => (colorIndex >= colors.length-1) ? resetColorIndex() : nextIndex();\n    return (\n        <div className={props.class}>\n            {props.text.split('').map(function(listValue, index){\n                colorClass = colors[getNextColor()];\n                return <span key={getKey(listValue)} className={colorClass}>{listValue}</span>;\n            })}\n        </div>\n    );\n}\nexport default TextColorizer;"]},"metadata":{},"sourceType":"module"}