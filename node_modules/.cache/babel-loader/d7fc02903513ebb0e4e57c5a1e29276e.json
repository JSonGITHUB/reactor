{"ast":null,"code":"import _slicedToArray from\"/Users/js/Dev/my-first-reactor/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';var currentTime=new Date();var months=['January','February','March','April','May','June','July','August','September','October','November','December'];var getDaysInMonth=function getDaysInMonth(){var month=currentTime.getMonth()+1;var year=currentTime.getYear();var daysInMonth=new Date(year,month,0).getDate();return daysInMonth;};var getNextDay=function getNextDay(currentDate){currentDate=Number(currentDate)+1;if(currentDate>=getDaysInMonth()){//console.log(`getNextDay =>\\nnextDay: 01\\nDaysInMont: ${getDaysInMonth()}`);\nreturn'01';}currentDate=currentDate<10?\"0\".concat(currentDate):currentDate;//console.log(`getNextDay =>\\nnextDay: ${currentDate}\\nDaysInMont: ${getDaysInMonth()}`);\nreturn currentDate;//((currentTime.getMonth()+1 === 2) &&)\n};var getNextMonth=function getNextMonth(currentMonth){// eslint-disable-next-line\nvar endOfMonth=false;if(currentTime.getDate()===getDaysInMonth()){currentMonth=currentMonth+1;}var month=currentMonth<10?\"0\".concat(currentMonth):currentMonth;return month;//((currentTime.getMonth()+1 === 2) &&)\n};var useCurrentTime=function useCurrentTime(){var getCurrentTime=new Date();var year=getCurrentTime.getFullYear();var currentMonth=getCurrentTime.getMonth()+1;var month=currentMonth<10?\"0\".concat(currentMonth):currentMonth;var monthLong=months[currentMonth-1];var monthNextLong=months[currentMonth];var currentDate=getCurrentTime.getDate();var date=currentDate<10?\"0\".concat(currentDate):currentDate;var currentHour=getCurrentTime.getHours();var hours=currentHour<10?\"0\".concat(currentHour<0?0:currentHour):currentHour;var startHour=currentHour-7<10?\"0\".concat(currentHour-7<0?0:currentHour-7):currentHour-7;var currentMinutes=getCurrentTime.getMinutes();var minutes=currentMinutes<10?\"0\".concat(currentMinutes):currentMinutes;//const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\nvar getEndTime=\"\".concat(year).concat(getNextMonth(currentMonth)).concat(getNextDay(currentDate),\"%20\").concat(hours,\":\").concat(minutes);var getStartTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(startHour,\":00\");getCurrentTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(hours,\":\").concat(minutes);//console.log(`useCurrentTime - getStartTime: ${getStartTime} => getEndTime: ${getEndTime}`)\n// eslint-disable-next-line\nvar _useState=useState(getStartTime),_useState2=_slicedToArray(_useState,2),startTime=_useState2[0],setStartTime=_useState2[1];// eslint-disable-next-line\nvar _useState3=useState(getEndTime),_useState4=_slicedToArray(_useState3,2),endTime=_useState4[0],setEndTime=_useState4[1];var currentTime=new Date();/*\n    https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?\n    product=predictions&\n    application=NOS.COOPS.TAC.WL&\n    begin_date=20210330%2003:00&\n      end_date=20210330%2010:33&\n    datum=MLLW&\n    station=9410230&\n    time_zone=lst_ldt&\n    units=english&\n    interval=hilo&\n    format=json\n*/var time={hours:hours,minutes:minutes,date:date,month:month,monthLong:monthLong,monthNextLong:monthNextLong,year:year,currentTime:currentTime,startTime:startTime,endTime:endTime};return[time];};export default useCurrentTime;","map":{"version":3,"names":["useState","currentTime","Date","months","getDaysInMonth","month","getMonth","year","getYear","daysInMonth","getDate","getNextDay","currentDate","Number","concat","getNextMonth","currentMonth","endOfMonth","useCurrentTime","getCurrentTime","getFullYear","monthLong","monthNextLong","date","currentHour","getHours","hours","startHour","currentMinutes","getMinutes","minutes","getEndTime","getStartTime","_useState","_useState2","_slicedToArray","startTime","setStartTime","_useState3","_useState4","endTime","setEndTime","time"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/useCurrentTime.js"],"sourcesContent":["import { useState } from 'react';\n\nconst currentTime = new Date();\nconst months = ['January','February','March','April','May','June','July','August','September','October','November','December'];\nconst getDaysInMonth = () => {\n    const month = currentTime.getMonth()+1;\n    const year = currentTime.getYear();\n    const daysInMonth = new Date(year, month, 0).getDate();\n    return daysInMonth;\n}\nconst getNextDay = (currentDate) => {\n    currentDate = Number(currentDate)+1;\n    if (currentDate >= getDaysInMonth()) {\n        //console.log(`getNextDay =>\\nnextDay: 01\\nDaysInMont: ${getDaysInMonth()}`);\n        return '01'\n    }\n    currentDate = (currentDate<10) ? `0${currentDate}` : currentDate;\n    //console.log(`getNextDay =>\\nnextDay: ${currentDate}\\nDaysInMont: ${getDaysInMonth()}`);\n    return currentDate;\n    //((currentTime.getMonth()+1 === 2) &&)\n}\nconst getNextMonth = (currentMonth) => {\n    // eslint-disable-next-line\n    let endOfMonth = false;\n    if (currentTime.getDate() === getDaysInMonth()) {\n        currentMonth = currentMonth + 1;\n    }\n    const month = ((currentMonth)<10) ? `0${(currentMonth)}` : currentMonth;\n    \n    return month\n    //((currentTime.getMonth()+1 === 2) &&)\n}\n\nconst useCurrentTime = () => {\n\n    let getCurrentTime = new Date();\n    const year = getCurrentTime.getFullYear();\n    const currentMonth = getCurrentTime.getMonth()+1;\n    const month = ((currentMonth)<10) ? `0${(currentMonth)}` : currentMonth;\n    const monthLong = months[currentMonth-1];\n    const monthNextLong = months[currentMonth];\n    const currentDate = getCurrentTime.getDate();\n    const date = (currentDate<10) ? `0${currentDate}` : currentDate;\n    const currentHour = getCurrentTime.getHours();\n    const hours = (currentHour<10) ? `0${(currentHour<0) ? 0 : currentHour}` : currentHour;\n    const startHour = ((currentHour-7)<10) ? `0${((currentHour-7)<0)?0:(currentHour-7)}` : (currentHour-7);\n    const currentMinutes = getCurrentTime.getMinutes();\n    const minutes = (currentMinutes<10) ? `0${currentMinutes}` : currentMinutes;\n    //const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n    const getEndTime = `${year}${getNextMonth(currentMonth)}${getNextDay(currentDate)}%20${hours}:${minutes}`;\n    const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n    getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n    //console.log(`useCurrentTime - getStartTime: ${getStartTime} => getEndTime: ${getEndTime}`)\n    // eslint-disable-next-line\n    const [startTime, setStartTime] = useState(getStartTime);\n    // eslint-disable-next-line\n    const [endTime, setEndTime] = useState(getEndTime);\n    const currentTime = new Date();\n/*\n    https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?\n    product=predictions&\n    application=NOS.COOPS.TAC.WL&\n    begin_date=20210330%2003:00&\n      end_date=20210330%2010:33&\n    datum=MLLW&\n    station=9410230&\n    time_zone=lst_ldt&\n    units=english&\n    interval=hilo&\n    format=json\n*/   \n    const time = {   \n        hours,\n        minutes,\n        date,\n        month,\n        monthLong,\n        monthNextLong,\n        year,\n        currentTime,\n        startTime,\n        endTime\n    }\n\n    return [ time ]; \n            \n\n}\nexport default useCurrentTime;"],"mappings":"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"},"metadata":{},"sourceType":"module"}