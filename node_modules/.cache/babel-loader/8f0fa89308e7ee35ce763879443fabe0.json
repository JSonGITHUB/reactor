{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/Forms/FormRadio.js\";\nimport React from 'react';\nimport shakaBlack from '../assets/images/shakaBlack.png';\nimport thumbsUp from '../assets/images/ThumbsUp.png';\nimport thumbsDown from '../assets/images/ThumbsDown.png';\n/*\n<FormRadio \n          selected={\"Ahi\"} \n          header = {\"Poki Bowl\"} \n          items = {[\"one\", \"two\", \"three\"]}\n        />\n*/\n\nclass FormRadio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.items = props.items;\n    this.state = {\n      value: props.selected,\n      selected: props.selected,\n      select: props.selected,\n      header: props.header,\n      label: props.label,\n      groupTitle: props.groupTitle,\n      items: props.items\n    };\n  }\n\n  selectItems() {\n    const getIcon = (item, index, select) => {\n      const value = item.toString();\n      const displayClass = select === true ? \"shakingShaka shaka\" : \"shaka\";\n      let displayColor = value === \"Firing\" ? \"bg-neogreen\" : \"bg-yellow\";\n      displayColor = value === \"Bad\" ? \"bg-red\" : displayColor;\n      const buttonClass = displayColor + \" pt-10 pb-5 radius-10 m-5 button\";\n\n      const click = () => {\n        this.props.onChange(this.state.groupTitle, this.state.groupTitle, item);\n        this.setState({\n          selected: index,\n          value: item\n        });\n      };\n\n      let icon = value === \"Firing\" ? shakaBlack : thumbsUp;\n      icon = value === \"Bad\" ? thumbsDown : icon;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: buttonClass,\n        onClick: click,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        id: value,\n        src: icon,\n        alt: value,\n        className: displayClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 83\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: index,\n        key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n        type: \"radio\",\n        value: item.toString(),\n        onChange: click,\n        checked: Number(this.state.selected) === Number(index) ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"description color-black ml-5\",\n        key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, item.toString())));\n    };\n\n    const icon = (item, index, select) => {\n      let iconOut = \"\";\n      iconOut = getIcon(item, index, select);\n      return iconOut;\n    };\n\n    return this.state.items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, icon(item, index, Number(this.state.selected) === Number(index) ? true : false)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-5 p-20 m-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, this.selectItems());\n  }\n\n}\n\nexport default FormRadio;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/Forms/FormRadio.js"],"names":["React","shakaBlack","thumbsUp","thumbsDown","FormRadio","Component","constructor","props","items","state","value","selected","select","header","label","groupTitle","selectItems","getIcon","item","index","toString","displayClass","displayColor","buttonClass","click","onChange","setState","icon","toLowerCase","Math","round","random","Number","iconOut","map","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport shakaBlack from '../assets/images/shakaBlack.png';\nimport thumbsUp from '../assets/images/ThumbsUp.png';\nimport thumbsDown from '../assets/images/ThumbsDown.png';\n/*\n<FormRadio \n          selected={\"Ahi\"} \n          header = {\"Poki Bowl\"} \n          items = {[\"one\", \"two\", \"three\"]}\n        />\n*/\nclass FormRadio extends React.Component {\n\n    constructor(props) {\n        super(props); \n        this.items = props.items;\n        this.state = { \n            value: props.selected,\n            selected: props.selected,\n            select: props.selected,\n            header: props.header,\n            label: props.label,\n            groupTitle: props.groupTitle,\n            items: props.items\n        }\n    };\n    \n    selectItems() {\n        const getIcon =(item, index, select) => {\n            const value = item.toString();\n            const displayClass = (select === true) ? \"shakingShaka shaka\" : \"shaka\";\n            \n            let displayColor = (value === \"Firing\") ? \"bg-neogreen\" : \"bg-yellow\";\n            displayColor = (value === \"Bad\") ? \"bg-red\" : displayColor;\n            \n            const buttonClass = displayColor + \" pt-10 pb-5 radius-10 m-5 button\";\n            \n            const click = () => {\n                this.props.onChange(this.state.groupTitle, this.state.groupTitle, item);\n                this.setState({\n                    selected: index,\n                    value: item\n                });\n            }\n            \n            let icon = (value === \"Firing\") ? shakaBlack : thumbsUp;\n            icon = (value === \"Bad\") ? thumbsDown : icon;\n            \n            return <div className={buttonClass} onClick={click}>\n                <img id={value} src={icon} alt={value} className={displayClass} /><br/>\n                <div className=\"p-10\">\n                    <input id={index} key={item.toString().toLowerCase()+(Math.round(Math.random()*100))} type=\"radio\" value={item.toString()} onChange={click} checked={Number(this.state.selected) === Number(index) ? true : false}/>\n                    <span className=\"description color-black ml-5\" key={item.toString().toLowerCase()+(Math.round(Math.random()*100))}>{item.toString()}</span>\n                </div>\n            </div>;\n        }\n\n        const icon = (item, index, select) => {\n            let iconOut = \"\";\n            iconOut = getIcon(item, index, select);\n            return iconOut;\n        } \n        \n        \n        return this.state.items.map((item, index) =>\n            <div className=\"flex3Column\" key={item.toString().toLowerCase()+(Math.round(Math.random()*100))} >\n                {icon(item, index, (Number(this.state.selected) === Number(index)) ? true : false)}\n            </div>\n        )\n\n    }\n\n    render() {\n        return (\n            <div className=\"m-5 p-20 m-5\">    \n                {this.selectItems()}\n            </div>\n        );\n    };\n}\nexport default FormRadio;"]},"metadata":{},"sourceType":"module"}