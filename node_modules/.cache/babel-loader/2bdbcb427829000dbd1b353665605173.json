{"ast":null,"code":"import _classCallCheck from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Loader from'../utils/Loader.js';var WindDirection=/*#__PURE__*/function(_React$Component){_inherits(WindDirection,_React$Component);var _super=_createSuper(WindDirection);function WindDirection(props){var _this;_classCallCheck(this,WindDirection);_this=_super.call(this,props);_this.getWindData=function(){console.log(\"getWind ->\");var data;var returnJSON=function returnJSON(response){return response.json();};var returnRejection=function returnRejection(response){return Promise.reject({status:response.status,data:data});};var validate=function validate(response){return response.ok?returnJSON(response):returnRejection(response);};var getCurrentTime=new Date();var year=getCurrentTime.getFullYear();var currentMonth=getCurrentTime.getMonth()+1;var month=currentMonth<10?\"0\".concat(currentMonth):currentMonth;var currentDate=getCurrentTime.getDate();var date=currentDate<10?\"0\".concat(currentDate):currentDate;var currentHour=getCurrentTime.getHours();var hours=currentHour<10?\"0\".concat(currentHour):currentHour;var startHour=currentHour-1<10?\"0\".concat(currentHour-1):currentHour-1;var currentMinutes=getCurrentTime.getMinutes();var minutes=currentMinutes<10?\"0\".concat(currentMinutes):currentMinutes;var getEndTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(hours,\":\").concat(minutes);var getStartTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(startHour,\":00\");getCurrentTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(hours,\":\").concat(minutes);console.log(\"Wind   - getStartTime: \".concat(getStartTime,\" => getEndTime: \").concat(getEndTime));var uriWind=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=\".concat(getStartTime,\"&end_date=\").concat(getEndTime,\"&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json\");var uriWindTest=\"https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2020:00&end_date=20200520%2020:00&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json\";var uri=uriWind;//const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\nfetch(uri).then(function(response){return validate(response);}).then(function(data){console.log(\"WindDirection => direction: \".concat(JSON.stringify(data.data[data.data.length-1],null,2)));_this.props.setWind(data.data[data.data.length-1].dr,data.data[data.data.length-1].d,data.data[data.data.length-1].s,data.data[data.data.length-1].g);_this.setState({station:data.metadata.name,speed:data.data[data.data.length-1].s,angle:data.data[data.data.length-1].d,direction:data.data[data.data.length-1].dr,gusts:data.data[data.data.length-1].g});}).catch(function(err){return console.log(\"Something went wrong!\\nuri: \".concat(uri,\" \\npath: \").concat(window.location.pathname,\"\\n\"),err);});};_this.getInterval=function(){return 300000;};_this.getCurrentWind=function(){return/*#__PURE__*/React.createElement(\"div\",{className:_this.props.columns>1?\"flexContainer\":\"\"},/*#__PURE__*/React.createElement(\"div\",{className:_this.props.columns>1?\"flex3Column\":\"\"},\"\".concat(_this.state.direction,\" \").concat(Number(_this.state.angle).toFixed(0),\"\\xB0\")),/*#__PURE__*/React.createElement(\"div\",{className:_this.props.columns>1?\"flex3Column\":\"\"},\"\".concat(Number(_this.state.speed).toFixed(0),\"-\").concat(Number(_this.state.gusts).toFixed(0)),\" \",/*#__PURE__*/React.createElement(\"span\",{className:\"greet\"},\"knots\")));};_this.state={direction:null,columns:props.columns,station:null,speed:null,angle:null,gusts:null};return _this;}_createClass(WindDirection,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.getWindData();this.timerID=setInterval(function(){return _this2.getWindData();},this.getInterval());}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.timerID);}/*\n    Water Level: 2.01 ft Above MLLW\n    Next Tide at 3:09 PM: Low 1.70 ft\n    Gusting to: 12.3 kts from WSW\n    */},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,this.getCurrentWind());}}]);return WindDirection;}(React.Component);export default WindDirection;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/WindDirection.js"],"names":["React","Loader","WindDirection","props","getWindData","console","log","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","getCurrentTime","Date","year","getFullYear","currentMonth","getMonth","month","currentDate","getDate","date","currentHour","getHours","hours","startHour","currentMinutes","getMinutes","minutes","getEndTime","getStartTime","uriWind","uriWindTest","uri","fetch","then","JSON","stringify","length","setWind","dr","d","s","g","setState","station","metadata","name","speed","angle","direction","gusts","catch","err","window","location","pathname","getInterval","getCurrentWind","columns","state","Number","toFixed","timerID","setInterval","clearInterval","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Loader from '../utils/Loader.js';\n\nclass WindDirection extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            direction: null,\n            columns: props.columns,\n            station: null,\n            speed: null,\n            angle: null,\n            gusts: null\n        }\n    }\n    getWindData = () => {\n        console.log(`getWind ->`);\n        let data;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        let getCurrentTime = new Date();\n        const year = getCurrentTime.getFullYear();\n        const currentMonth = getCurrentTime.getMonth()+1;\n        const month = ((currentMonth)<10) ? `0${(currentMonth)}` : currentMonth;\n        const currentDate = getCurrentTime.getDate();\n        const date = (currentDate<10) ? `0${currentDate}` : currentDate;\n        const currentHour = getCurrentTime.getHours();\n        const hours = (currentHour<10) ? `0${currentHour}` : currentHour;\n        const startHour = ((currentHour-1)<10) ? `0${(currentHour-1)}` : (currentHour-1);\n        const currentMinutes = getCurrentTime.getMinutes();\n        const minutes = (currentMinutes<10) ? `0${currentMinutes}` : currentMinutes;\n        const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n        getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n        console.log(`Wind   - getStartTime: ${getStartTime} => getEndTime: ${getEndTime}`)\n        const uriWind = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getStartTime}&end_date=${getEndTime}&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uriWindTest = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=20200520%2020:00&end_date=20200520%2020:00&station=9410230&product=wind&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n        const uri = uriWind;\n        \n        //const waterTempuri = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${getCurrentTime}&end_date=${getCurrentTime}&station=9410230&product=water_temperature&datum=mllw&units=english&time_zone=gmt&application=web_services&format=json`;\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                console.log(`WindDirection => direction: ${JSON.stringify(data.data[data.data.length - 1],null,2)}`)\n                this.props.setWind(data.data[data.data.length - 1].dr, data.data[data.data.length - 1].d, data.data[data.data.length - 1].s, data.data[data.data.length - 1].g)\n                this.setState({\n                    station: data.metadata.name,\n                    speed: data.data[data.data.length - 1].s,\n                    angle: data.data[data.data.length - 1].d,\n                    direction: data.data[data.data.length - 1].dr,\n                    gusts: data.data[data.data.length - 1].g\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n\n    }\n    /*\n    {\n        \"metadata\":{\n            \"id\":\"9410230\",\n            \"name\":\"La Jolla\",\n            \"lat\":\"32.8669\",\n            \"lon\":\"-117.2571\"\n        }, \n        \"data\": [\n            {\n                \"t\":\"2020-05-20 20:00\", \n                \"s\":\"5.25\", \n                \"d\":\"313.00\",\n                 \"dr\":\"NW\", \n                 \"g\":\"7.39\", \n                 \"f\":\"0,0\"\n            }\n        ]\n    }\n    */\n    getInterval = () => 300000;\n    componentDidMount() {\n        this.getWindData()\n        this.timerID = setInterval(() => this.getWindData(), this.getInterval());\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    /*\n    Water Level: 2.01 ft Above MLLW\n    Next Tide at 3:09 PM: Low 1.70 ft\n    Gusting to: 12.3 kts from WSW\n    */\n    getCurrentWind = () => <div className={(this.props.columns > 1) ? \"flexContainer\": \"\"}>\n                            <div className={(this.props.columns > 1) ? \"flex3Column\": \"\"}>{`${this.state.direction} ${Number(this.state.angle).toFixed(0)}°`}</div>\n                            <div className={(this.props.columns > 1) ? \"flex3Column\": \"\"}>{`${Number(this.state.speed).toFixed(0)}-${Number(this.state.gusts).toFixed(0)}`} <span className=\"greet\">knots</span></div>\n                        </div>\n    render() {\n        return <div>{this.getCurrentWind()}</div>\n    };\n}\n\nexport default WindDirection;"]},"metadata":{},"sourceType":"module"}