{"ast":null,"code":"import React from 'react';\n\nclass WaveUtils extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addWave = state => {\n      const locations = state.locations;\n      const swells = [];\n      const winds = [];\n      const tides = [];\n      let i = 0;\n      let wave = prompt(\"wave: \", \"enter spot\");\n      const swellCount = prompt(\"swell count: \", \"how many directions?\");\n\n      for (i = 0; i < swellCount; i++) {\n        swells[i] = prompt(\"swell direction\", \"direction\");\n      }\n\n      const windCount = prompt(\"wind count: \", \"how many directions?\");\n\n      for (i = 0; i < windCount; i++) {\n        winds[i] = prompt(\"wind direction\", \"direction\");\n      }\n\n      const tideCount = prompt(\"tide count: \", \"how many tides?\");\n\n      for (i = 0; i < tideCount; i++) {\n        tides[i] = prompt(\"tide direction\", \"direction\");\n      }\n\n      const getObj = () => {\n        return {\n          name: wave,\n          latitude: state.latitude,\n          longitude: state.longitude,\n          swell: swells,\n          wind: winds,\n          tide: tides\n        };\n      };\n\n      locations.push(getObj());\n      console.log(`add a wave...  winds: ${JSON.stringify(getObj(), null, 2)}`);\n      localStorage.setItem('locations', JSON.stringify(locations));\n      this.setState({\n        locations: locations\n      });\n    };\n\n    this.deleteWave = (state, props) => {\n      const locations = state.locations; //console.log(`Props: ${JSON.stringify(props, null, 2)}`)\n\n      let index = 0;\n      let result = locations.find(obj => {\n        index++;\n        return obj.name === props.name;\n      });\n      console.log(`delete 1 => index: ${index} result: ${JSON.stringify(result, null, 2)}`);\n      console.log(`delete 2 => locations: [${index}]: ${JSON.stringify(locations[index], null, 2)}`); ///////////////\n\n      locations.splice(index - 1, 1);\n      localStorage.setItem('locations', JSON.stringify(locations));\n      console.log(`delete 3 => locations: [${index - 1}]: ${locations.map((location, index) => `${index} ${location.name}`)}`);\n      this.setState({\n        locations: locations\n      });\n    };\n\n    this.editWaveSave = (state, location, index) => {\n      console.log(`editWaveSave() => ${JSON.stringify(location, null, 2)}`);\n      let locations = state.locations;\n      let swells = location.swell;\n      let winds = location.wind;\n      let tides = location.tide;\n      let i = 0;\n      let wave = prompt(\"wave: \", location.name);\n      const swellCount = prompt(\"swell count: \", swells.length);\n\n      for (i = 0; i < swellCount; i++) {\n        swells[i] = prompt(\"edit swell direction\", swells[i]);\n      }\n\n      swells = swells.slice(0, swellCount);\n      const windCount = prompt(\"wind count: \", winds.length);\n\n      for (i = 0; i < windCount; i++) {\n        winds[i] = prompt(\"edit wind direction\", winds[i]);\n      }\n\n      winds = winds.slice(0, windCount);\n      const tideCount = prompt(\"tide count: \", tides.length);\n\n      for (i = 0; i < tideCount; i++) {\n        tides[i] = prompt(\"edit tide direction\", tides[i]);\n      }\n\n      tides = tides.slice(0, tideCount);\n\n      const getObj = () => {\n        return {\n          name: wave,\n          latitude: location.latitude,\n          longitude: location.longitude,\n          swell: swells,\n          wind: winds,\n          tide: tides\n        };\n      };\n\n      console.log(`locations: ${JSON.stringify(locations[index], null, 2)} => will be ${JSON.stringify(getObj(), null, 2)}`);\n      locations[index] = getObj();\n      console.log(`edit a wave saving... ${JSON.stringify(locations[index], null, 2)}`);\n      localStorage.setItem('locations', JSON.stringify(locations));\n      this.setState({\n        locations: locations\n      });\n    };\n\n    this.editWave = props => {\n      const locations = this.state.locations;\n\n      if (props.name === \"button\") {\n        console.log(`edit a wave... ${JSON.stringify(props, null, 2)}`);\n        this.handleEditToggle();\n      } else {\n        console.log(`Props: ${JSON.stringify(props, null, 2)}`);\n        let index = 0;\n        let result = locations.find(obj => {\n          index++;\n          return obj.name === props.name;\n        });\n        console.log(`index: ${index} result: ${JSON.stringify(result, null, 2)}`);\n        console.log(`locations: [${index}]: ${JSON.stringify(locations[index - 1], null, 2)}`);\n        this.editWaveSave(result, index - 1);\n      }\n    };\n  }\n\n}\n\nexport default WaveUtils;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/WaveUtils.js"],"names":["React","WaveUtils","Component","addWave","state","locations","swells","winds","tides","i","wave","prompt","swellCount","windCount","tideCount","getObj","name","latitude","longitude","swell","wind","tide","push","console","log","JSON","stringify","localStorage","setItem","setState","deleteWave","props","index","result","find","obj","splice","map","location","editWaveSave","length","slice","editWave","handleEditToggle"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass WaveUtils extends React.Component {\n    \n    addWave = (state) => {\n        const locations = state.locations;\n        const swells = [];\n        const winds = [];\n        const tides = [];\n        let i=0;\n        let wave = prompt(\"wave: \", \"enter spot\");\n        const swellCount = prompt(\"swell count: \", \"how many directions?\");\n        for (i=0; i<swellCount; i++) {\n            swells[i] = prompt(\"swell direction\", \"direction\");\n        }\n        const windCount = prompt(\"wind count: \", \"how many directions?\");\n        for (i=0; i<windCount; i++) {\n            winds[i] = prompt(\"wind direction\", \"direction\");\n        }\n        const tideCount = prompt(\"tide count: \", \"how many tides?\");\n        for (i=0; i<tideCount; i++) {\n            tides[i] = prompt(\"tide direction\", \"direction\");\n        }\n        const getObj = () => {\n            return {\n                name: wave,\n                latitude: state.latitude,\n                longitude: state.longitude,\n                swell: swells,\n                wind: winds,\n                tide: tides\n            }\n        }\n        locations.push(getObj());\n        console.log(`add a wave...  winds: ${JSON.stringify(getObj(), null, 2)}`)\n        localStorage.setItem('locations', JSON.stringify(locations))\n        this.setState({\n            locations: locations\n        })\n    }\n    deleteWave = (state, props) => {\n        const locations = state.locations;\n        //console.log(`Props: ${JSON.stringify(props, null, 2)}`)\n        let index = 0;\n        let result = locations.find(obj => {\n            index++\n            return obj.name === props.name\n        })\n        console.log(`delete 1 => index: ${index} result: ${JSON.stringify(result, null, 2)}`)\n        console.log(`delete 2 => locations: [${index}]: ${JSON.stringify(locations[index], null, 2)}`)\n\n        ///////////////\n        locations.splice(index-1, 1);\n        localStorage.setItem('locations', JSON.stringify(locations))\n        console.log(`delete 3 => locations: [${index-1}]: ${locations.map((location, index) => `${index} ${location.name}`)}`)\n        this.setState({\n            locations: locations\n        })\n    }\n    editWaveSave = (state, location, index) => {\n        console.log(`editWaveSave() => ${JSON.stringify(location,null,2)}`)\n        let locations = state.locations;\n        let swells = location.swell;\n        let winds = location.wind;\n        let tides = location.tide;\n        let i=0;\n        let wave = prompt(\"wave: \", location.name);\n        const swellCount = prompt(\"swell count: \", swells.length);\n        for (i=0; i<swellCount; i++) {\n            swells[i] = prompt(\"edit swell direction\", swells[i]);\n        }\n        swells = swells.slice(0, swellCount);\n        const windCount = prompt(\"wind count: \", winds.length);\n        for (i=0; i<windCount; i++) {\n            winds[i] = prompt(\"edit wind direction\", winds[i]);\n        }\n        winds = winds.slice(0, windCount);\n        const tideCount = prompt(\"tide count: \", tides.length);\n        for (i=0; i<tideCount; i++) {\n            tides[i] = prompt(\"edit tide direction\", tides[i]);\n        }\n        tides = tides.slice(0, tideCount);\n        const getObj = () => {\n            return {\n                name: wave,\n                latitude: location.latitude,\n                longitude: location.longitude,\n                swell: swells,\n                wind: winds,\n                tide: tides\n            }\n        }\n        console.log(`locations: ${JSON.stringify(locations[index],null,2)} => will be ${JSON.stringify(getObj(),null,2)}`)\n        locations[index] = getObj();\n        console.log(`edit a wave saving... ${JSON.stringify(locations[index], null, 2)}`)\n        localStorage.setItem('locations', JSON.stringify(locations))\n        this.setState({\n            locations: locations\n        })\n    }\n    editWave = (props) => {\n        const locations = this.state.locations;\n        \n        if (props.name === \"button\") {\n            console.log(`edit a wave... ${JSON.stringify(props, null, 2)}`);\n            this.handleEditToggle()\n\n        } else {\n            console.log(`Props: ${JSON.stringify(props, null, 2)}`)\n            let index = 0;\n            let result = locations.find(obj => {\n                index++\n                return obj.name === props.name\n            })\n            console.log(`index: ${index} result: ${JSON.stringify(result, null, 2)}`)\n            console.log(`locations: [${index}]: ${JSON.stringify(locations[index-1], null, 2)}`)\n            this.editWaveSave(result, index-1);\n        }\n    }\n}\nexport default WaveUtils"]},"metadata":{},"sourceType":"module"}