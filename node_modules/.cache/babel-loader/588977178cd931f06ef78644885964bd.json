{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/forms/FormRadio.js\";\nimport React, { useState } from 'react';\nimport shakaBlack from '../../assets/images/shakaBlack.png';\nimport thumbsUp from '../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../assets/images/ThumbsDown.png';\nimport getKey from '../utils/KeyGenerator.js';\n/*\n<FormRadio \n          selected={\"Ahi\"} \n          header = {\"Poki Bowl\"} \n          items = {[\"one\", \"two\", \"three\"]}\n        />\n*/\n\nconst FormRadio = ({\n  items,\n  selected,\n  header,\n  label,\n  groupTitle,\n  onChange\n}) => {\n  const [value, setValue] = useState(selected);\n  const [select, setSelect] = useState(selected);\n\n  const selectItems = () => {\n    const getIcon = (item, index, select) => {\n      const value = item.toString();\n      const displayClass = select === true ? \"shakingShaka shaka\" : \"shaka\";\n      let displayColor = index === 0 ? \"bg-neogreen\" : \"bg-yellow\";\n      displayColor = index === 2 ? \"bg-red\" : displayColor;\n      const buttonClass = displayColor + \" pt-10 pb-5 r-5 m-5 button\";\n\n      const click = () => {\n        onChange(groupTitle, groupTitle, item);\n        setSelect(item);\n        setValue(item);\n      };\n\n      let icon = index === 0 ? shakaBlack : thumbsUp;\n      icon = index === 2 ? thumbsDown : icon;\n      const generateUppercaseKey = item.toString().toUpperCase() + Math.round(Math.random() * 100);\n      const checked = Number(value) === Number(index) ? true : false;\n      const descriptionClass = \"description color-black ml-5\";\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: buttonClass,\n        onClick: click,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        id: value,\n        src: icon,\n        alt: value,\n        className: displayClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 83\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: index,\n        key: getKey(item),\n        type: \"radio\",\n        value: item,\n        onChange: click,\n        checked: checked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: descriptionClass,\n        key: generateUppercaseKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, item)));\n    };\n\n    const icon = (item, index, select) => {\n      let iconOut = \"\";\n      iconOut = getIcon(item, index, select);\n      return iconOut;\n    };\n\n    const isSelected = index => Number(value) === Number(index) ? true : false;\n\n    return items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, icon(item, index, isSelected(index))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-5 p-20 m-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, selectItems());\n};\n\nexport default FormRadio;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/forms/FormRadio.js"],"names":["React","useState","shakaBlack","thumbsUp","thumbsDown","getKey","FormRadio","items","selected","header","label","groupTitle","onChange","value","setValue","select","setSelect","selectItems","getIcon","item","index","toString","displayClass","displayColor","buttonClass","click","icon","generateUppercaseKey","toUpperCase","Math","round","random","checked","Number","descriptionClass","iconOut","isSelected","map","toLowerCase"],"mappings":"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","sourcesContent":["import React , { useState } from 'react';\nimport shakaBlack from '../../assets/images/shakaBlack.png';\nimport thumbsUp from '../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../assets/images/ThumbsDown.png';\nimport getKey from '../utils/KeyGenerator.js';\n/*\n<FormRadio \n          selected={\"Ahi\"} \n          header = {\"Poki Bowl\"} \n          items = {[\"one\", \"two\", \"three\"]}\n        />\n*/\nconst FormRadio = ({ items, selected, header, label, groupTitle, onChange }) => {\n\n    const [ value, setValue] =  useState(selected);\n    const [ select, setSelect] =  useState(selected);\n\n    const selectItems = () => {\n        const getIcon = (item, index, select) => {\n            const value = item.toString();\n            const displayClass = (select === true) ? \"shakingShaka shaka\" : \"shaka\";\n            \n            let displayColor = (index === 0) ? \"bg-neogreen\" : \"bg-yellow\";\n            displayColor = (index === 2) ? \"bg-red\" : displayColor;\n            \n            const buttonClass = displayColor + \" pt-10 pb-5 r-5 m-5 button\";\n            const click = () => {\n                onChange(groupTitle, groupTitle, item);\n                setSelect(item);\n                setValue(item);\n            }\n            \n            let icon = (index === 0) ? shakaBlack : thumbsUp;\n            icon = (index === 2) ? thumbsDown : icon;\n            const generateUppercaseKey = item.toString().toUpperCase()+(Math.round(Math.random()*100));\n            const checked = Number(value) === Number(index) ? true : false;\n            const descriptionClass = \"description color-black ml-5\";\n            return <div className={buttonClass} onClick={click}>\n                <img id={value} src={icon} alt={value} className={displayClass} /><br/>\n                <div className=\"p-10\">\n                    <input id={index} key={getKey(item)} type=\"radio\" value={item} onChange={click} checked={checked}/>\n                    <span className={descriptionClass} key={generateUppercaseKey}>{item}</span>\n                </div>\n            </div>;\n        }\n\n        const icon = (item, index, select) => {\n            let iconOut = \"\";\n            iconOut = getIcon(item, index, select);\n            return iconOut;\n        }\n        const isSelected = (index) => (Number(value) === Number(index)) ? true : false;\n        return items.map((item, index) =>\n            <div className=\"flex3Column\" key={item.toString().toLowerCase()+(Math.round(Math.random()*100))} >\n                {icon(item, index, isSelected(index))}\n            </div>\n        )\n\n    }\n    return (\n        <div className=\"m-5 p-20 m-5\">    \n            {selectItems()}\n        </div>\n    );\n}\nexport default FormRadio;"]},"metadata":{},"sourceType":"module"}