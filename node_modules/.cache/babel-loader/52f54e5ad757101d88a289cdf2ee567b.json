{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/Logger.js\";\nimport React from 'react';\nimport LogEntry from './LogEntry.js';\nimport Loader from '../utils/Loader.js';\nimport LogId from './LogId.js';\n\nclass Logger extends React.Component {\n  constructor(props) {\n    super(props); //        console.log(`Logger => constructor -> props.logId: ${this.logIdComponent.getLogId()}`)\n    //        console.log(`Logger => constructor -> localStorage.getItem: ${this.logIdComponent.getLogId()} ====> ${localStorage.getItem(this.logIdComponent.getLogId())}`)\n\n    this.logIdComponent = new LogId(this.props.logId);\n\n    this.getSpot = () => this.state.spot ? JSON.stringify(this.state.spot) : JSON.stringify(this.log, null, 2);\n\n    this.getStateLog = () => this.state.log;\n\n    if (localStorage.getItem(this.logIdComponent.getLogId()) === null) {\n      this.log = this.logIdComponent.templateData;\n      this.lodId = this.logIdComponent.generateNewLogId();\n    } else {\n      this.log = JSON.parse(localStorage.getItem(this.logIdComponent.getLogId()));\n      this.logId = this.logIdComponent.getLogId();\n    } //        console.log(`Logger => constructor -> log: ${JSON.stringify(this.log,null,2)}`)\n\n\n    this.state = {\n      date: new Date(),\n      log: this.log,\n      items: [],\n      isLoaded: false,\n      logId: this.logId\n    };\n    this.updateLog = this.updateLog.bind(this);\n    this.getStateLog = this.getStateLog.bind(this);\n  }\n\n  componentDidMount() {\n    //const logId = (this.props.location.state === undefined) ? this.logIdComponent.getLastRecordId() : this.props.location.state.logId.item;\n    const {\n      state\n    } = this.props.location;\n    console.log(`Logger => componentDidMount -> this.props.location.state: ${this.getSpot()}`);\n    const logId = state === undefined ? this.logIdComponent.getLogId() : state.logId.item; //console.log(`Logger => componentDidMount -> logId: ${logId}`)\n\n    if (localStorage.getItem(this.logIdComponent.getLogId()) === null) {\n      this.log = this.logIdComponent.templateData;\n      this.lodId = this.logIdComponent.generateNewLogId();\n    } else {\n      this.log = JSON.parse(localStorage.getItem(this.logIdComponent.getLogId()));\n      this.logId = this.logIdComponent.getLogId();\n    }\n\n    console.log(`logId$$$$$$$$$$: ${this.logIdComponent.getLogId()} --- localStorage.${this.logIdComponent.getLogId()} ==== ${JSON.stringify(this.log, null, 2)} AND logId::::: ${logId}`); //      console.log(`Logger => constructor -> log: ${JSON.stringify(this.log,null,2)}`)\n\n    let data;\n    localStorage.setItem('spot', this.getSpot());\n\n    const returnJSON = response => response.json();\n\n    const returnRejection = response => Promise.reject({\n      status: response.status,\n      data\n    });\n\n    const validate = response => response.ok ? returnJSON(response) : returnRejection(response);\n    /*\n    const requestInit = {\n        method:'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        mode: 'cors',\n        cache: 'default'\n    };\n    */\n    //const uri = new Request('https://jsongithub.github.io/portfolio/assets/data/appData.json', requestInit);\n    //GOOD const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n\n\n    const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json'; //const uri = 'localhost:8080/writeSurfLog.json';\n\n    fetch(uri).then(response => validate(response)).then(data => {\n      this.setState({\n        isLoaded: true,\n        items: data,\n        //logId: this.logIdComponent.getLogId()\n        logId: logId\n      });\n    }).catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n  }\n\n  updateLog(groupTitle, label, selected, set) {\n    this.log[groupTitle][label] = selected;\n\n    if (groupTitle !== undefined && groupTitle !== 1 && selected !== undefined && set) {\n      this.setState({\n        log: this.log\n      });\n    }\n  }\n\n  render() {\n    let {\n      isLoaded,\n      items\n    } = this.state; //        console.log(`Logger ===> ${JSON.stringify(items[0].group.selections, null, 2)}`);\n\n    let appInterface = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-content fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }));\n\n    if (isLoaded) {\n      appInterface = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-content fadeIn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex3Column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex3Column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LogEntry // logId={this.logIdComponent.getLogId()}\n      , {\n        logId: this.state.logId,\n        onChange: this.updateLog,\n        getStateLog: this.getStateLog,\n        title: \"Session Log\",\n        message: \"Add your session data\",\n        buttonLabel: \"submit\",\n        items: items,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex3Column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }));\n    }\n\n    return appInterface;\n  }\n\n}\n\nexport default Logger;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/Logger.js"],"names":["React","LogEntry","Loader","LogId","Logger","Component","constructor","props","logIdComponent","logId","getSpot","state","spot","JSON","stringify","log","getStateLog","localStorage","getItem","getLogId","templateData","lodId","generateNewLogId","parse","date","Date","items","isLoaded","updateLog","bind","componentDidMount","location","console","undefined","item","data","setItem","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","uri","fetch","then","setState","catch","err","window","pathname","groupTitle","label","selected","set","render","appInterface"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LogEntry from './LogEntry.js';\nimport Loader from '../utils/Loader.js';\nimport LogId from './LogId.js';\nclass Logger extends React.Component {\n\n    logIdComponent = new LogId(this.props.logId);\n    \n    constructor(props) {\n        super(props);\n//        console.log(`Logger => constructor -> props.logId: ${this.logIdComponent.getLogId()}`)\n//        console.log(`Logger => constructor -> localStorage.getItem: ${this.logIdComponent.getLogId()} ====> ${localStorage.getItem(this.logIdComponent.getLogId())}`)\n        if (localStorage.getItem(this.logIdComponent.getLogId()) === null) {\n            this.log = this.logIdComponent.templateData;\n            this.lodId = this.logIdComponent.generateNewLogId();\n        } else {\n            this.log = JSON.parse(localStorage.getItem(this.logIdComponent.getLogId()));\n            this.logId = this.logIdComponent.getLogId()\n        }\n//        console.log(`Logger => constructor -> log: ${JSON.stringify(this.log,null,2)}`)\n        this.state = {\n            date: new Date(),\n            log: this.log,\n            items: [],\n            isLoaded: false,\n            logId: this.logId\n        };\n        this.updateLog = this.updateLog.bind(this);\n        this.getStateLog = this.getStateLog.bind(this);\n    }\n    getSpot = () => (this.state.spot) ? JSON.stringify(this.state.spot) : JSON.stringify(this.log,null,2);\n    componentDidMount() {\n        //const logId = (this.props.location.state === undefined) ? this.logIdComponent.getLastRecordId() : this.props.location.state.logId.item;\n        const { state } = this.props.location;\n        console.log(`Logger => componentDidMount -> this.props.location.state: ${this.getSpot()}`); \n        const logId = (state === undefined) ? this.logIdComponent.getLogId() : state.logId.item;\n        //console.log(`Logger => componentDidMount -> logId: ${logId}`)\n        if (localStorage.getItem(this.logIdComponent.getLogId()) === null) {\n            this.log = this.logIdComponent.templateData;\n            this.lodId = this.logIdComponent.generateNewLogId();\n        } else {\n            this.log = JSON.parse(localStorage.getItem(this.logIdComponent.getLogId()));\n            this.logId = this.logIdComponent.getLogId()\n        }\n        console.log(`logId$$$$$$$$$$: ${this.logIdComponent.getLogId()} --- localStorage.${this.logIdComponent.getLogId()} ==== ${JSON.stringify(this.log,null,2)} AND logId::::: ${logId}`)\n//      console.log(`Logger => constructor -> log: ${JSON.stringify(this.log,null,2)}`)\n        let data;\n        localStorage.setItem('spot', this.getSpot());\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        /*\n        const requestInit = {\n            method:'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            cache: 'default'\n        };\n        */\n        //const uri = new Request('https://jsongithub.github.io/portfolio/assets/data/appData.json', requestInit);\n        //GOOD const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n        const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n        //const uri = 'localhost:8080/writeSurfLog.json';\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                this.setState({\n                    isLoaded: true,\n                    items: data,\n                    //logId: this.logIdComponent.getLogId()\n                    logId: logId\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n       \n    }\n\n    updateLog(groupTitle, label, selected, set) {\n        this.log[groupTitle][label] = selected;\n        if (groupTitle !== undefined && groupTitle !== 1 && selected !== undefined && set) {\n            this.setState({log: this.log});\n        }\n    }\n    getStateLog = () => this.state.log;\n    \n    render() {      \n        let {isLoaded, items} = this.state;\n//        console.log(`Logger ===> ${JSON.stringify(items[0].group.selections, null, 2)}`);\n        let appInterface = <div className=\"App-content fadeIn\">\n                                <div className=\"flex3Column\"></div>\n                                <div className=\"flex3Column\">\n                                    <Loader />\n                                </div>\n                                <div className=\"flex3Column\"></div>\n                            </div>;\n        if (isLoaded) {\n            appInterface = <div className=\"App-content fadeIn\">\n                <div className=\"flex3Column\"></div>\n                <div className=\"flex3Column\">\n                    <LogEntry\n                       // logId={this.logIdComponent.getLogId()}\n                        logId={this.state.logId}\n                        onChange={this.updateLog} \n                        getStateLog={this.getStateLog} \n                        title=\"Session Log\" \n                        message=\"Add your session data\"  \n                        buttonLabel=\"submit\" \n                        items={items}\n                    />\n                </div>\n                <div className=\"flex3Column\"></div>\n            </div>\n            \n        }\n        return (\n            appInterface            \n        )\n    }\n    \n}\nexport default Logger;"]},"metadata":{},"sourceType":"module"}