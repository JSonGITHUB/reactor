{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/Timer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.timeItIs = [\"shaka time!!!\", \"get a wave brah!\", \"keep froth alive...\"];\n    this.logos = [\"logo1\", \"logo2\", \"logo3\"];\n    this.x = 0;\n    this.interval = 0;\n    this.timeItIsNow = this.timeItIs[this.x];\n    this.state = {\n      date: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    this.interval = this.interval === 3 ? 0 : this.interval + 1;\n    this.x = this.x === this.timeItIs.length - 1 && this.interval === 0 ? 0 : this.interval === 0 ? this.x + 1 : this.x;\n    this.timeItIsNow = this.timeItIs[this.x];\n\n    if (this.x === 0) {\n      this.logos.forEach(this.myFunction); //document.getElementById('logo1').classList.remove('shakingShaka');\n      //document.getElementById('shaka').classList.add('shakingShaka');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"time mt-40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"do you know what time it is?\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, this.state.date.toLocaleTimeString().replace(\" \", \"\").toLocaleLowerCase()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, this.timeItIsNow)));\n  }\n\n}\n/*\nReactDOM.render(\n    <Timer />,\n    document.getElementById('time')\n);\n*/\n\n\nlet initTimer = () => {\n  ReactDOM.render( /*#__PURE__*/React.createElement(Timer, {\n    date: new Date(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), document.getElementById('time'));\n};\n\nsetTimeout(initTimer, 1000);","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/Timer.js"],"names":["React","ReactDOM","Timer","Component","constructor","props","timeItIs","logos","x","interval","timeItIsNow","state","date","Date","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","render","length","forEach","myFunction","toLocaleTimeString","replace","toLocaleLowerCase","initTimer","document","getElementById","setTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n   \nclass Timer extends React.Component {\n    \n    timeItIs = [\n        \"shaka time!!!\",\n        \"get a wave brah!\",\n        \"keep froth alive...\",\n    ];\n    logos = [\"logo1\",\"logo2\",\"logo3\"];\n    x = 0;\n    interval = 0;\n    timeItIsNow = this.timeItIs[this.x];\n\n    constructor(props) {\n        super(props);\n        this.state = {date: new Date()};\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n  \n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n    tick() {\n        this.setState({\n            date: new Date()\n        });\n    }\n    render() {\n        this.interval = (this.interval === 3) ? 0 : (this.interval+1);\n        this.x = (this.x === (this.timeItIs.length-1) && (this.interval === 0)) ? 0 : ((this.interval === 0) ? (this.x+1) : this.x);\n        this.timeItIsNow = this.timeItIs[this.x];\n        if (this.x === 0) {\n            this.logos.forEach(this.myFunction);\n            //document.getElementById('logo1').classList.remove('shakingShaka');\n            //document.getElementById('shaka').classList.add('shakingShaka');\n        }\n        return (\n            <div className=\"time mt-40\">\n                <div className='color-red'>\n                    do you know what time it is?\n                </div>\n                <br/>\n                <b>\n                    {this.state.date.toLocaleTimeString().replace(\" \",\"\").toLocaleLowerCase()}\n                </b>\n                <br/>\n                <br/>\n                <div className='color-green'>\n                    <b>{ this.timeItIsNow }</b>\n                </div>\n            </div>\n        )\n    }\n}\n/*\nReactDOM.render(\n    <Timer />,\n    document.getElementById('time')\n);\n*/\n\nlet initTimer = () => {\n    ReactDOM.render(\n        <Timer date={ new Date() } />,\n        document.getElementById('time')\n    )\n}\nsetTimeout(initTimer, 1000);\n"]},"metadata":{},"sourceType":"module"}