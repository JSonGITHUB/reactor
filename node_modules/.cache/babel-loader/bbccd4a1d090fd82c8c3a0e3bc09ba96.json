{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js\";\nimport React, { useState } from 'react';\nimport PostDirectory from './PostDirectory.js';\nimport templateData from './TemplateData.js';\n\nconst LogId = logId => {\n  const postDirectory = new PostDirectory();\n  const [status, setStatus] = useState({\n    logId: logId === null || logId === undefined ? postDirectory.getLastId() : logId,\n    log: JSON.parse(localStorage.getItem(logId)) === null ? getLogTemplate : JSON.parse(localStorage.getItem(logId))\n  });\n\n  const getDate = () => status.log.Day.Date;\n\n  const generateNewLogId = () => {\n    const date = new Date();\n    const st = date.toDateString().replace(/ /g, \"\");\n    const nd = date.toLocaleTimeString().replace(/ /g, \"\");\n    localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n    const newId = `${st}${nd}`;\n    console.log(`LogId: generateNewLogId => status.logId: ${newId}`);\n    return newId;\n  };\n\n  const setLogId = (logId, log) => setStatus({\n    logId: logId,\n    log: log\n  });\n\n  const getLogId = () => status.logId;\n\n  console.log(`LastLogId => render: status.logId: ${status.logId} - status.log: ${status.log}`);\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }\n  }, \"Count: \", postDirectory.length);\n};\n\nexport default LogId;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/LogId.js"],"names":["React","useState","PostDirectory","templateData","LogId","logId","postDirectory","status","setStatus","undefined","getLastId","log","JSON","parse","localStorage","getItem","getLogTemplate","getDate","Day","Date","generateNewLogId","date","st","toDateString","replace","nd","toLocaleTimeString","setItem","newId","console","setLogId","getLogId","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAErB,QAAMC,aAAa,GAAG,IAAIJ,aAAJ,EAAtB;AAEA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AACjCI,IAAAA,KAAK,EAAGA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKI,SAA7B,GAA0CH,aAAa,CAACI,SAAd,EAA1C,GAAsEL,KAD5C;AAEjCM,IAAAA,GAAG,EAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBV,KAArB,CAAX,MAA4C,IAA7C,GAAqDW,cAArD,GAAsEJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBV,KAArB,CAAX;AAF1C,GAAD,CAApC;;AAIA,QAAMY,OAAO,GAAG,MAAMV,MAAM,CAACI,GAAP,CAAWO,GAAX,CAAeC,IAArC;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,IAAI,GAAG,IAAIF,IAAJ,EAAb;AACA,UAAMG,EAAE,GAAGD,IAAI,CAACE,YAAL,GAAoBC,OAApB,CAA4B,IAA5B,EAAiC,EAAjC,CAAX;AACA,UAAMC,EAAE,GAAGJ,IAAI,CAACK,kBAAL,GAA0BF,OAA1B,CAAkC,IAAlC,EAAuC,EAAvC,CAAX;AACAV,IAAAA,YAAY,CAACa,OAAb,CAAqB,YAArB,EAAoC,GAAEL,EAAG,GAAEG,EAAG,EAA9C;AACA,UAAMG,KAAK,GAAI,GAAEN,EAAG,GAAEG,EAAG,EAAzB;AACAI,IAAAA,OAAO,CAAClB,GAAR,CAAa,4CAA2CiB,KAAM,EAA9D;AACA,WAAOA,KAAP;AACH,GARD;;AASA,QAAME,QAAQ,GAAG,CAACzB,KAAD,EAAQM,GAAR,KAAgBH,SAAS,CAAC;AACvCH,IAAAA,KAAK,EAAEA,KADgC;AAEvCM,IAAAA,GAAG,EAAEA;AAFkC,GAAD,CAA1C;;AAIA,QAAMoB,QAAQ,GAAG,MAAMxB,MAAM,CAACF,KAA9B;;AACAwB,EAAAA,OAAO,CAAClB,GAAR,CAAa,sCAAqCJ,MAAM,CAACF,KAAM,kBAAiBE,MAAM,CAACI,GAAI,EAA3F;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWL,aAAa,CAAC0B,MAAzB,CAAP;AACH,CAzBD;;AA0BA,eAAe5B,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport PostDirectory from './PostDirectory.js';\nimport templateData from './TemplateData.js';\nconst LogId = (logId) => {\n    \n    const postDirectory = new PostDirectory();\n    \n    const [status, setStatus] = useState({\n        logId: (logId === null || logId === undefined) ? postDirectory.getLastId() : logId,\n        log: (JSON.parse(localStorage.getItem(logId)) === null) ? getLogTemplate : JSON.parse(localStorage.getItem(logId))\n    })\n    const getDate = () => status.log.Day.Date;\n    const generateNewLogId = () => {\n        const date = new Date()\n        const st = date.toDateString().replace(/ /g,\"\");\n        const nd = date.toLocaleTimeString().replace(/ /g,\"\");\n        localStorage.setItem(\"lastPostId\", `${st}${nd}`);\n        const newId = `${st}${nd}`;\n        console.log(`LogId: generateNewLogId => status.logId: ${newId}`);\n        return newId;\n    }\n    const setLogId = (logId, log) => setStatus({\n        logId: logId,\n        log: log\n    });\n    const getLogId = () => status.logId;     \n    console.log(`LastLogId => render: status.logId: ${status.logId} - status.log: ${status.log}`);\n    return <p>Count: {postDirectory.length}</p> \n}\nexport default LogId;"]},"metadata":{},"sourceType":"module"}