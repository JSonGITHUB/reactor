{"ast":null,"code":"\"use strict\"; /// <reference lib=\"esnext\"/>\n/// <reference lib=\"dom\"/>\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // TODO: Use the `URL` global when targeting Node.js 10\n\nconst URLGlobal = typeof URL === 'undefined' ? require('url').URL : URL;\nconst {\n  toString\n} = Object.prototype;\n\nconst isOfType = type => value => typeof value === type;\n\nconst getObjectType = value => {\n  const objectName = toString.call(value).slice(8, -1);\n\n  if (objectName) {\n    return objectName;\n  }\n\n  return undefined;\n};\n\nconst isObjectOfType = type => value => getObjectType(value) === type;\n\nfunction is(value) {\n  switch (value) {\n    case null:\n      return \"null\"\n      /* null */\n      ;\n\n    case true:\n    case false:\n      return \"boolean\"\n      /* boolean */\n      ;\n\n    default:\n  }\n\n  switch (typeof value) {\n    case 'undefined':\n      return \"undefined\"\n      /* undefined */\n      ;\n\n    case 'string':\n      return \"string\"\n      /* string */\n      ;\n\n    case 'number':\n      return \"number\"\n      /* number */\n      ;\n\n    case 'bigint':\n      return \"bigint\"\n      /* bigint */\n      ;\n\n    case 'symbol':\n      return \"symbol\"\n      /* symbol */\n      ;\n\n    default:\n  }\n\n  if (is.function_(value)) {\n    return \"Function\"\n    /* Function */\n    ;\n  }\n\n  if (is.observable(value)) {\n    return \"Observable\"\n    /* Observable */\n    ;\n  }\n\n  if (is.array(value)) {\n    return \"Array\"\n    /* Array */\n    ;\n  }\n\n  if (is.buffer(value)) {\n    return \"Buffer\"\n    /* Buffer */\n    ;\n  }\n\n  const tagType = getObjectType(value);\n\n  if (tagType) {\n    return tagType;\n  }\n\n  if (value instanceof String || value instanceof Boolean || value instanceof Number) {\n    throw new TypeError('Please don\\'t use object wrappers for primitive types');\n  }\n\n  return \"Object\"\n  /* Object */\n  ;\n}\n\nis.undefined = isOfType('undefined');\nis.string = isOfType('string');\nconst isNumberType = isOfType('number');\n\nis.number = value => isNumberType(value) && !is.nan(value);\n\nis.bigint = isOfType('bigint'); // eslint-disable-next-line @typescript-eslint/ban-types\n\nis.function_ = isOfType('function');\n\nis.null_ = value => value === null;\n\nis.class_ = value => is.function_(value) && value.toString().startsWith('class ');\n\nis.boolean = value => value === true || value === false;\n\nis.symbol = isOfType('symbol');\n\nis.numericString = value => is.string(value) && value.length > 0 && !Number.isNaN(Number(value));\n\nis.array = Array.isArray;\n\nis.buffer = value => !is.nullOrUndefined(value) && !is.nullOrUndefined(value.constructor) && is.function_(value.constructor.isBuffer) && value.constructor.isBuffer(value);\n\nis.nullOrUndefined = value => is.null_(value) || is.undefined(value);\n\nis.object = value => !is.null_(value) && (typeof value === 'object' || is.function_(value));\n\nis.iterable = value => !is.nullOrUndefined(value) && is.function_(value[Symbol.iterator]);\n\nis.asyncIterable = value => !is.nullOrUndefined(value) && is.function_(value[Symbol.asyncIterator]);\n\nis.generator = value => is.iterable(value) && is.function_(value.next) && is.function_(value.throw);\n\nis.nativePromise = value => isObjectOfType(\"Promise\"\n/* Promise */\n)(value);\n\nconst hasPromiseAPI = value => is.object(value) && is.function_(value.then) && // eslint-disable-line promise/prefer-await-to-then\nis.function_(value.catch);\n\nis.promise = value => is.nativePromise(value) || hasPromiseAPI(value);\n\nis.generatorFunction = isObjectOfType(\"GeneratorFunction\"\n/* GeneratorFunction */\n); // eslint-disable-next-line @typescript-eslint/ban-types\n\nis.asyncFunction = isObjectOfType(\"AsyncFunction\"\n/* AsyncFunction */\n); // eslint-disable-next-line no-prototype-builtins, @typescript-eslint/ban-types\n\nis.boundFunction = value => is.function_(value) && !value.hasOwnProperty('prototype');\n\nis.regExp = isObjectOfType(\"RegExp\"\n/* RegExp */\n);\nis.date = isObjectOfType(\"Date\"\n/* Date */\n);\nis.error = isObjectOfType(\"Error\"\n/* Error */\n);\n\nis.map = value => isObjectOfType(\"Map\"\n/* Map */\n)(value);\n\nis.set = value => isObjectOfType(\"Set\"\n/* Set */\n)(value);\n\nis.weakMap = value => isObjectOfType(\"WeakMap\"\n/* WeakMap */\n)(value);\n\nis.weakSet = value => isObjectOfType(\"WeakSet\"\n/* WeakSet */\n)(value);\n\nis.int8Array = isObjectOfType(\"Int8Array\"\n/* Int8Array */\n);\nis.uint8Array = isObjectOfType(\"Uint8Array\"\n/* Uint8Array */\n);\nis.uint8ClampedArray = isObjectOfType(\"Uint8ClampedArray\"\n/* Uint8ClampedArray */\n);\nis.int16Array = isObjectOfType(\"Int16Array\"\n/* Int16Array */\n);\nis.uint16Array = isObjectOfType(\"Uint16Array\"\n/* Uint16Array */\n);\nis.int32Array = isObjectOfType(\"Int32Array\"\n/* Int32Array */\n);\nis.uint32Array = isObjectOfType(\"Uint32Array\"\n/* Uint32Array */\n);\nis.float32Array = isObjectOfType(\"Float32Array\"\n/* Float32Array */\n);\nis.float64Array = isObjectOfType(\"Float64Array\"\n/* Float64Array */\n);\nis.bigInt64Array = isObjectOfType(\"BigInt64Array\"\n/* BigInt64Array */\n);\nis.bigUint64Array = isObjectOfType(\"BigUint64Array\"\n/* BigUint64Array */\n);\nis.arrayBuffer = isObjectOfType(\"ArrayBuffer\"\n/* ArrayBuffer */\n);\nis.sharedArrayBuffer = isObjectOfType(\"SharedArrayBuffer\"\n/* SharedArrayBuffer */\n);\nis.dataView = isObjectOfType(\"DataView\"\n/* DataView */\n);\n\nis.directInstanceOf = (instance, class_) => Object.getPrototypeOf(instance) === class_.prototype;\n\nis.urlInstance = value => isObjectOfType(\"URL\"\n/* URL */\n)(value);\n\nis.urlString = value => {\n  if (!is.string(value)) {\n    return false;\n  }\n\n  try {\n    new URLGlobal(value); // eslint-disable-line no-new\n\n    return true;\n  } catch (_a) {\n    return false;\n  }\n}; // TODO: Use the `not` operator with a type guard here when it's available.\n// Example: `is.truthy = (value: unknown): value is (not false | not 0 | not '' | not undefined | not null) => Boolean(value);`\n\n\nis.truthy = value => Boolean(value); // Example: `is.falsy = (value: unknown): value is (not true | 0 | '' | undefined | null) => Boolean(value);`\n\n\nis.falsy = value => !value;\n\nis.nan = value => Number.isNaN(value);\n\nconst primitiveTypeOfTypes = new Set(['undefined', 'string', 'number', 'bigint', 'boolean', 'symbol']);\n\nis.primitive = value => is.null_(value) || primitiveTypeOfTypes.has(typeof value);\n\nis.integer = value => Number.isInteger(value);\n\nis.safeInteger = value => Number.isSafeInteger(value);\n\nis.plainObject = value => {\n  // From: https://github.com/sindresorhus/is-plain-obj/blob/master/index.js\n  if (getObjectType(value) !== \"Object\"\n  /* Object */\n  ) {\n      return false;\n    }\n\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.getPrototypeOf({});\n};\n\nconst typedArrayTypes = new Set([\"Int8Array\"\n/* Int8Array */\n, \"Uint8Array\"\n/* Uint8Array */\n, \"Uint8ClampedArray\"\n/* Uint8ClampedArray */\n, \"Int16Array\"\n/* Int16Array */\n, \"Uint16Array\"\n/* Uint16Array */\n, \"Int32Array\"\n/* Int32Array */\n, \"Uint32Array\"\n/* Uint32Array */\n, \"Float32Array\"\n/* Float32Array */\n, \"Float64Array\"\n/* Float64Array */\n, \"BigInt64Array\"\n/* BigInt64Array */\n, \"BigUint64Array\"\n/* BigUint64Array */\n]);\n\nis.typedArray = value => {\n  const objectType = getObjectType(value);\n\n  if (objectType === undefined) {\n    return false;\n  }\n\n  return typedArrayTypes.has(objectType);\n};\n\nconst isValidLength = value => is.safeInteger(value) && value >= 0;\n\nis.arrayLike = value => !is.nullOrUndefined(value) && !is.function_(value) && isValidLength(value.length);\n\nis.inRange = (value, range) => {\n  if (is.number(range)) {\n    return value >= Math.min(0, range) && value <= Math.max(range, 0);\n  }\n\n  if (is.array(range) && range.length === 2) {\n    return value >= Math.min(...range) && value <= Math.max(...range);\n  }\n\n  throw new TypeError(`Invalid range: ${JSON.stringify(range)}`);\n};\n\nconst NODE_TYPE_ELEMENT = 1;\nconst DOM_PROPERTIES_TO_CHECK = ['innerHTML', 'ownerDocument', 'style', 'attributes', 'nodeValue'];\n\nis.domElement = value => is.object(value) && value.nodeType === NODE_TYPE_ELEMENT && is.string(value.nodeName) && !is.plainObject(value) && DOM_PROPERTIES_TO_CHECK.every(property => property in value);\n\nis.observable = value => {\n  if (!value) {\n    return false;\n  } // eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\n\n  if (value[Symbol.observable] && value === value[Symbol.observable]()) {\n    return true;\n  }\n\n  if (value['@@observable'] && value === value['@@observable']()) {\n    return true;\n  }\n\n  return false;\n};\n\nis.nodeStream = value => is.object(value) && is.function_(value.pipe) && !is.observable(value);\n\nis.infinite = value => value === Infinity || value === -Infinity;\n\nconst isAbsoluteMod2 = remainder => value => is.integer(value) && Math.abs(value % 2) === remainder;\n\nis.evenInteger = isAbsoluteMod2(0);\nis.oddInteger = isAbsoluteMod2(1);\n\nis.emptyArray = value => is.array(value) && value.length === 0;\n\nis.nonEmptyArray = value => is.array(value) && value.length > 0;\n\nis.emptyString = value => is.string(value) && value.length === 0; // TODO: Use `not ''` when the `not` operator is available.\n\n\nis.nonEmptyString = value => is.string(value) && value.length > 0;\n\nconst isWhiteSpaceString = value => is.string(value) && /\\S/.test(value) === false;\n\nis.emptyStringOrWhitespace = value => is.emptyString(value) || isWhiteSpaceString(value);\n\nis.emptyObject = value => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length === 0; // TODO: Use `not` operator here to remove `Map` and `Set` from type guard:\n// - https://github.com/Microsoft/TypeScript/pull/29317\n\n\nis.nonEmptyObject = value => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length > 0;\n\nis.emptySet = value => is.set(value) && value.size === 0;\n\nis.nonEmptySet = value => is.set(value) && value.size > 0;\n\nis.emptyMap = value => is.map(value) && value.size === 0;\n\nis.nonEmptyMap = value => is.map(value) && value.size > 0;\n\nconst predicateOnArray = (method, predicate, values) => {\n  if (is.function_(predicate) === false) {\n    throw new TypeError(`Invalid predicate: ${JSON.stringify(predicate)}`);\n  }\n\n  if (values.length === 0) {\n    throw new TypeError('Invalid number of values');\n  }\n\n  return method.call(values, predicate);\n};\n\nis.any = (predicate, ...values) => predicateOnArray(Array.prototype.some, predicate, values);\n\nis.all = (predicate, ...values) => predicateOnArray(Array.prototype.every, predicate, values); // Some few keywords are reserved, but we'll populate them for Node.js users\n// See https://github.com/Microsoft/TypeScript/issues/2536\n\n\nObject.defineProperties(is, {\n  class: {\n    value: is.class_\n  },\n  function: {\n    value: is.function_\n  },\n  null: {\n    value: is.null_\n  }\n});\nexports.default = is; // For CommonJS default export support\n\nmodule.exports = is;\nmodule.exports.default = is;","map":{"version":3,"sources":["../source/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/// <reference lib=\"esnext\"/>\n/// <reference lib=\"dom\"/>\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// TODO: Use the `URL` global when targeting Node.js 10\nconst URLGlobal = typeof URL === 'undefined' ? require('url').URL : URL;\nconst { toString } = Object.prototype;\nconst isOfType = (type) => (value) => typeof value === type;\nconst getObjectType = (value) => {\n    const objectName = toString.call(value).slice(8, -1);\n    if (objectName) {\n        return objectName;\n    }\n    return undefined;\n};\nconst isObjectOfType = (type) => (value) => getObjectType(value) === type;\nfunction is(value) {\n    switch (value) {\n        case null:\n            return \"null\" /* null */;\n        case true:\n        case false:\n            return \"boolean\" /* boolean */;\n        default:\n    }\n    switch (typeof value) {\n        case 'undefined':\n            return \"undefined\" /* undefined */;\n        case 'string':\n            return \"string\" /* string */;\n        case 'number':\n            return \"number\" /* number */;\n        case 'bigint':\n            return \"bigint\" /* bigint */;\n        case 'symbol':\n            return \"symbol\" /* symbol */;\n        default:\n    }\n    if (is.function_(value)) {\n        return \"Function\" /* Function */;\n    }\n    if (is.observable(value)) {\n        return \"Observable\" /* Observable */;\n    }\n    if (is.array(value)) {\n        return \"Array\" /* Array */;\n    }\n    if (is.buffer(value)) {\n        return \"Buffer\" /* Buffer */;\n    }\n    const tagType = getObjectType(value);\n    if (tagType) {\n        return tagType;\n    }\n    if (value instanceof String || value instanceof Boolean || value instanceof Number) {\n        throw new TypeError('Please don\\'t use object wrappers for primitive types');\n    }\n    return \"Object\" /* Object */;\n}\nis.undefined = isOfType('undefined');\nis.string = isOfType('string');\nconst isNumberType = isOfType('number');\nis.number = (value) => isNumberType(value) && !is.nan(value);\nis.bigint = isOfType('bigint');\n// eslint-disable-next-line @typescript-eslint/ban-types\nis.function_ = isOfType('function');\nis.null_ = (value) => value === null;\nis.class_ = (value) => is.function_(value) && value.toString().startsWith('class ');\nis.boolean = (value) => value === true || value === false;\nis.symbol = isOfType('symbol');\nis.numericString = (value) => is.string(value) && value.length > 0 && !Number.isNaN(Number(value));\nis.array = Array.isArray;\nis.buffer = (value) => !is.nullOrUndefined(value) && !is.nullOrUndefined(value.constructor) && is.function_(value.constructor.isBuffer) && value.constructor.isBuffer(value);\nis.nullOrUndefined = (value) => is.null_(value) || is.undefined(value);\nis.object = (value) => !is.null_(value) && (typeof value === 'object' || is.function_(value));\nis.iterable = (value) => !is.nullOrUndefined(value) && is.function_(value[Symbol.iterator]);\nis.asyncIterable = (value) => !is.nullOrUndefined(value) && is.function_(value[Symbol.asyncIterator]);\nis.generator = (value) => is.iterable(value) && is.function_(value.next) && is.function_(value.throw);\nis.nativePromise = (value) => isObjectOfType(\"Promise\" /* Promise */)(value);\nconst hasPromiseAPI = (value) => is.object(value) &&\n    is.function_(value.then) && // eslint-disable-line promise/prefer-await-to-then\n    is.function_(value.catch);\nis.promise = (value) => is.nativePromise(value) || hasPromiseAPI(value);\nis.generatorFunction = isObjectOfType(\"GeneratorFunction\" /* GeneratorFunction */);\n// eslint-disable-next-line @typescript-eslint/ban-types\nis.asyncFunction = isObjectOfType(\"AsyncFunction\" /* AsyncFunction */);\n// eslint-disable-next-line no-prototype-builtins, @typescript-eslint/ban-types\nis.boundFunction = (value) => is.function_(value) && !value.hasOwnProperty('prototype');\nis.regExp = isObjectOfType(\"RegExp\" /* RegExp */);\nis.date = isObjectOfType(\"Date\" /* Date */);\nis.error = isObjectOfType(\"Error\" /* Error */);\nis.map = (value) => isObjectOfType(\"Map\" /* Map */)(value);\nis.set = (value) => isObjectOfType(\"Set\" /* Set */)(value);\nis.weakMap = (value) => isObjectOfType(\"WeakMap\" /* WeakMap */)(value);\nis.weakSet = (value) => isObjectOfType(\"WeakSet\" /* WeakSet */)(value);\nis.int8Array = isObjectOfType(\"Int8Array\" /* Int8Array */);\nis.uint8Array = isObjectOfType(\"Uint8Array\" /* Uint8Array */);\nis.uint8ClampedArray = isObjectOfType(\"Uint8ClampedArray\" /* Uint8ClampedArray */);\nis.int16Array = isObjectOfType(\"Int16Array\" /* Int16Array */);\nis.uint16Array = isObjectOfType(\"Uint16Array\" /* Uint16Array */);\nis.int32Array = isObjectOfType(\"Int32Array\" /* Int32Array */);\nis.uint32Array = isObjectOfType(\"Uint32Array\" /* Uint32Array */);\nis.float32Array = isObjectOfType(\"Float32Array\" /* Float32Array */);\nis.float64Array = isObjectOfType(\"Float64Array\" /* Float64Array */);\nis.bigInt64Array = isObjectOfType(\"BigInt64Array\" /* BigInt64Array */);\nis.bigUint64Array = isObjectOfType(\"BigUint64Array\" /* BigUint64Array */);\nis.arrayBuffer = isObjectOfType(\"ArrayBuffer\" /* ArrayBuffer */);\nis.sharedArrayBuffer = isObjectOfType(\"SharedArrayBuffer\" /* SharedArrayBuffer */);\nis.dataView = isObjectOfType(\"DataView\" /* DataView */);\nis.directInstanceOf = (instance, class_) => Object.getPrototypeOf(instance) === class_.prototype;\nis.urlInstance = (value) => isObjectOfType(\"URL\" /* URL */)(value);\nis.urlString = (value) => {\n    if (!is.string(value)) {\n        return false;\n    }\n    try {\n        new URLGlobal(value); // eslint-disable-line no-new\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n};\n// TODO: Use the `not` operator with a type guard here when it's available.\n// Example: `is.truthy = (value: unknown): value is (not false | not 0 | not '' | not undefined | not null) => Boolean(value);`\nis.truthy = (value) => Boolean(value);\n// Example: `is.falsy = (value: unknown): value is (not true | 0 | '' | undefined | null) => Boolean(value);`\nis.falsy = (value) => !value;\nis.nan = (value) => Number.isNaN(value);\nconst primitiveTypeOfTypes = new Set([\n    'undefined',\n    'string',\n    'number',\n    'bigint',\n    'boolean',\n    'symbol'\n]);\nis.primitive = (value) => is.null_(value) || primitiveTypeOfTypes.has(typeof value);\nis.integer = (value) => Number.isInteger(value);\nis.safeInteger = (value) => Number.isSafeInteger(value);\nis.plainObject = (value) => {\n    // From: https://github.com/sindresorhus/is-plain-obj/blob/master/index.js\n    if (getObjectType(value) !== \"Object\" /* Object */) {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.getPrototypeOf({});\n};\nconst typedArrayTypes = new Set([\n    \"Int8Array\" /* Int8Array */,\n    \"Uint8Array\" /* Uint8Array */,\n    \"Uint8ClampedArray\" /* Uint8ClampedArray */,\n    \"Int16Array\" /* Int16Array */,\n    \"Uint16Array\" /* Uint16Array */,\n    \"Int32Array\" /* Int32Array */,\n    \"Uint32Array\" /* Uint32Array */,\n    \"Float32Array\" /* Float32Array */,\n    \"Float64Array\" /* Float64Array */,\n    \"BigInt64Array\" /* BigInt64Array */,\n    \"BigUint64Array\" /* BigUint64Array */\n]);\nis.typedArray = (value) => {\n    const objectType = getObjectType(value);\n    if (objectType === undefined) {\n        return false;\n    }\n    return typedArrayTypes.has(objectType);\n};\nconst isValidLength = (value) => is.safeInteger(value) && value >= 0;\nis.arrayLike = (value) => !is.nullOrUndefined(value) && !is.function_(value) && isValidLength(value.length);\nis.inRange = (value, range) => {\n    if (is.number(range)) {\n        return value >= Math.min(0, range) && value <= Math.max(range, 0);\n    }\n    if (is.array(range) && range.length === 2) {\n        return value >= Math.min(...range) && value <= Math.max(...range);\n    }\n    throw new TypeError(`Invalid range: ${JSON.stringify(range)}`);\n};\nconst NODE_TYPE_ELEMENT = 1;\nconst DOM_PROPERTIES_TO_CHECK = [\n    'innerHTML',\n    'ownerDocument',\n    'style',\n    'attributes',\n    'nodeValue'\n];\nis.domElement = (value) => is.object(value) && value.nodeType === NODE_TYPE_ELEMENT && is.string(value.nodeName) &&\n    !is.plainObject(value) && DOM_PROPERTIES_TO_CHECK.every(property => property in value);\nis.observable = (value) => {\n    if (!value) {\n        return false;\n    }\n    // eslint-disable-next-line no-use-extend-native/no-use-extend-native\n    if (value[Symbol.observable] && value === value[Symbol.observable]()) {\n        return true;\n    }\n    if (value['@@observable'] && value === value['@@observable']()) {\n        return true;\n    }\n    return false;\n};\nis.nodeStream = (value) => is.object(value) && is.function_(value.pipe) && !is.observable(value);\nis.infinite = (value) => value === Infinity || value === -Infinity;\nconst isAbsoluteMod2 = (remainder) => (value) => is.integer(value) && Math.abs(value % 2) === remainder;\nis.evenInteger = isAbsoluteMod2(0);\nis.oddInteger = isAbsoluteMod2(1);\nis.emptyArray = (value) => is.array(value) && value.length === 0;\nis.nonEmptyArray = (value) => is.array(value) && value.length > 0;\nis.emptyString = (value) => is.string(value) && value.length === 0;\n// TODO: Use `not ''` when the `not` operator is available.\nis.nonEmptyString = (value) => is.string(value) && value.length > 0;\nconst isWhiteSpaceString = (value) => is.string(value) && /\\S/.test(value) === false;\nis.emptyStringOrWhitespace = (value) => is.emptyString(value) || isWhiteSpaceString(value);\nis.emptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length === 0;\n// TODO: Use `not` operator here to remove `Map` and `Set` from type guard:\n// - https://github.com/Microsoft/TypeScript/pull/29317\nis.nonEmptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length > 0;\nis.emptySet = (value) => is.set(value) && value.size === 0;\nis.nonEmptySet = (value) => is.set(value) && value.size > 0;\nis.emptyMap = (value) => is.map(value) && value.size === 0;\nis.nonEmptyMap = (value) => is.map(value) && value.size > 0;\nconst predicateOnArray = (method, predicate, values) => {\n    if (is.function_(predicate) === false) {\n        throw new TypeError(`Invalid predicate: ${JSON.stringify(predicate)}`);\n    }\n    if (values.length === 0) {\n        throw new TypeError('Invalid number of values');\n    }\n    return method.call(values, predicate);\n};\nis.any = (predicate, ...values) => predicateOnArray(Array.prototype.some, predicate, values);\nis.all = (predicate, ...values) => predicateOnArray(Array.prototype.every, predicate, values);\n// Some few keywords are reserved, but we'll populate them for Node.js users\n// See https://github.com/Microsoft/TypeScript/issues/2536\nObject.defineProperties(is, {\n    class: {\n        value: is.class_\n    },\n    function: {\n        value: is.function_\n    },\n    null: {\n        value: is.null_\n    }\n});\nexports.default = is;\n// For CommonJS default export support\nmodule.exports = is;\nmodule.exports.default = is;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}