{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/Components/BoilingVerdict.js\";\nimport React from 'react';\n\nclass BoilingVerdict extends React.Component {\n  constructor(props) {\n    super(props);\n    this.celsius = props.celsius;\n  }\n\n  tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n\n    if (Number.isNaN(input)) {\n      return '';\n    }\n\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n  }\n\n  toCelsius(fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n  }\n\n  toFahrenheit(celsius) {\n    return celsius * 9 / 5 + 32;\n  }\n\n  render() {\n    //        console.log(`BoilingVerdict => celsius: ${this.props.celsius}`);\n    if (this.props.celsius >= 100) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 49\n        }\n      }, \"The water would boil.\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    }, \"The water would not boil.\");\n  }\n\n}\n\nexport default BoilingVerdict;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/Components/BoilingVerdict.js"],"names":["React","BoilingVerdict","Component","constructor","props","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","toCelsius","fahrenheit","toFahrenheit","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAeD,KAAK,CAACC,OAArB;AACH;;AACDC,EAAAA,UAAU,CAACC,WAAD,EAAcC,OAAd,EAAuB;AAC7B,UAAMC,KAAK,GAAGC,UAAU,CAACH,WAAD,CAAxB;;AACA,QAAII,MAAM,CAACC,KAAP,CAAaH,KAAb,CAAJ,EAAyB;AACrB,aAAO,EAAP;AACH;;AACD,UAAMI,MAAM,GAAGL,OAAO,CAACC,KAAD,CAAtB;AACA,UAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,IAApB,IAA4B,IAA5C;AACA,WAAOC,OAAO,CAACG,QAAR,EAAP;AACH;;AACDC,EAAAA,SAAS,CAACC,UAAD,EAAa;AAClB,WAAO,CAACA,UAAU,GAAG,EAAd,IAAoB,CAApB,GAAwB,CAA/B;AACH;;AAEDC,EAAAA,YAAY,CAACf,OAAD,EAAU;AAClB,WAAQA,OAAO,GAAG,CAAV,GAAc,CAAf,GAAoB,EAA3B;AACH;;AACDgB,EAAAA,MAAM,GAAG;AACb;AACQ,QAAI,KAAKjB,KAAL,CAAWC,OAAX,IAAsB,GAA1B,EAA+B;AAAE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AAAqC;;AACtE,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAP;AACH;;AA1BwC;;AA6B7C,eAAeJ,cAAf","sourcesContent":["import React from 'react';\n\nclass BoilingVerdict extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.celsius = props.celsius;\n    }\n    tryConvert(temperature, convert) {\n        const input = parseFloat(temperature);\n        if (Number.isNaN(input)) {\n            return '';\n        }\n        const output = convert(input);\n        const rounded = Math.round(output * 1000) / 1000;\n        return rounded.toString();\n    }\n    toCelsius(fahrenheit) {\n        return (fahrenheit - 32) * 5 / 9;\n    }\n\n    toFahrenheit(celsius) {\n        return (celsius * 9 / 5) + 32;\n    }\n    render() {\n//        console.log(`BoilingVerdict => celsius: ${this.props.celsius}`);\n        if (this.props.celsius >= 100) { return <p>The water would boil.</p> }\n        return <p>The water would not boil.</p>;\n    }\n}\n\nexport default BoilingVerdict;"]},"metadata":{},"sourceType":"module"}