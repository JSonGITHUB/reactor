{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/PhotoSequence.js\";\nimport React, { useState, useEffect } from 'react';\nimport images from './SequenceImages.js';\n\nconst PhotoSequence = () => {\n  const [index, setIndex] = useState(0);\n  const [play, setPlay] = useState(true);\n  const [control, setControl] = useState(false);\n\n  const imagesFolder = require.context('../../public/images', true);\n\n  const [url, setUrl] = useState(imagesFolder(`./${images[index]}`));\n\n  const getImage = () => {\n    //let url = `https://lh3.googleusercontent.com/${this.state.images[i].image}`;\n    console.log(`control: ${control}\\nplay: ${play}\\nindex: ${index}\\nimages.length: ${images.length}`);\n\n    if (play || control) {\n      setUrl(imagesFolder(`./${images[index]}`));\n      const newIndex = index + 1 === images.length ? 0 : index + 1; //if (play) setIndex(newIndex);\n\n      setControl(false);\n    }\n  };\n\n  const togglePlay = () => setPlay(!play);\n\n  const nextImage = () => {\n    const newIndex = index + 1 === images.length ? 0 : index + 1;\n    setIndex(newIndex);\n    setPlay(false);\n    setControl(true);\n    getImage();\n  };\n\n  const previousImage = () => {\n    const newIndex = index - 1 < 0 ? images.length - 1 : index - 1;\n    setIndex(newIndex);\n    setPlay(false);\n    setControl(true);\n    getImage();\n  };\n  /*\n  useEffect(() => {     \t\t\n      const timerID = setInterval(\n          () => getImage(),\n          800\n      );\n      return function cleanUp () {\n          clearInterval(timerID);\n      }\n  });\n  */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flexContainer p-10 r-10 bg-lite ml-20 mr-20 mb-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => previousImage(),\n    className: \"bg-dkGreen button pointer flex3Column b size25 color-neogreen p-10 r-5 bg-black m-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => togglePlay(),\n    className: \"bg-dkYellow button pointer flex3Column b size20 color-neogreen p-10 r-5 bg-black m-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, play === true ? '||' : '>'), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => nextImage(),\n    className: \"bg-dkGreen button pointer flex3Column b size25 color-neogreen p-10 r-5 bg-black m-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => togglePlay(),\n    id: \"photo{index}\",\n    className: \"width-100-percent\",\n    src: url,\n    alt: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PhotoSequence;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/PhotoSequence.js"],"names":["React","useState","useEffect","images","PhotoSequence","index","setIndex","play","setPlay","control","setControl","imagesFolder","require","context","url","setUrl","getImage","console","log","length","newIndex","togglePlay","nextImage","previousImage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport images from './SequenceImages.js';\n\nconst PhotoSequence = () => {\n    const [index, setIndex] = useState(0);\n    const [play, setPlay] = useState(true);\n    const [control, setControl] = useState(false);\n    const imagesFolder = require.context('../../public/images', true);\n    const [url, setUrl] = useState(imagesFolder(`./${images[index]}`));\n    const getImage = () => {\n        //let url = `https://lh3.googleusercontent.com/${this.state.images[i].image}`;\n        console.log(`control: ${control}\\nplay: ${play}\\nindex: ${index}\\nimages.length: ${images.length}`)\n        if (play || control) {\n            setUrl(imagesFolder(`./${images[index]}`));\n            const newIndex = ((index+1) === images.length) ? 0 : (index+1);\n            //if (play) setIndex(newIndex);\n            setControl(false);  \n        } \n    }\n    const togglePlay = () => setPlay(!play);\n    const nextImage = () => {\n        const newIndex = ((index+1) === images.length) ? 0 : (index+1);\n        setIndex(newIndex);\n        setPlay(false);\n        setControl(true);\n        getImage();\n    }\n    const previousImage = () => {\n        const newIndex = ((index-1) < 0) ? (images.length-1) : (index-1);\n        setIndex(newIndex);\n        setPlay(false);\n        setControl(true);\n        getImage();\n    }\n    /*\n    useEffect(() => {     \t\t\n        const timerID = setInterval(\n            () => getImage(),\n            800\n        );\n        return function cleanUp () {\n            clearInterval(timerID);\n        }\n    });\n    */\n    return (\n        <div>\n            <div className='flexContainer p-10 r-10 bg-lite ml-20 mr-20 mb-20'>\n                <div onClick={() => previousImage()} className='bg-dkGreen button pointer flex3Column b size25 color-neogreen p-10 r-5 bg-black m-5'>-</div>\n                <div onClick={() => togglePlay()} className='bg-dkYellow button pointer flex3Column b size20 color-neogreen p-10 r-5 bg-black m-5'>{(play === true) ? '||' : '>'}</div>\n                <div onClick={() => nextImage()} className='bg-dkGreen button pointer flex3Column b size25 color-neogreen p-10 r-5 bg-black m-5'>+</div>\n            </div>\n            <img onClick={() => togglePlay()} id='photo{index}' className=\"width-100-percent\" src={url} alt={url} />\n        </div>\n    )\n}\n\nexport default PhotoSequence;"]},"metadata":{},"sourceType":"module"}