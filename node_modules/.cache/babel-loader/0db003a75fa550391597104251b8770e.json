{"ast":null,"code":"import _slicedToArray from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';var DropDown=function DropDown(_ref){var label=_ref.label,options=_ref.options,selected=_ref.selected,onSelectionChange=_ref.onSelectionChange;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var toggleOpenStatus=function toggleOpenStatus(){return setOpen(!open);};var ref=useRef();useEffect(function(){var onBodyClick=function onBodyClick(event){if(ref.current.contains(event.target)){return;}setOpen(false);};document.body.addEventListener('click',onBodyClick);return function(){document.body.removeEventListener('click',onBodyClick);};},[]);var list=options.map(function(option){if(option.value===selected.value){return null;}return/*#__PURE__*/React.createElement(\"div\",{key:option.value,className:\"item button pointer r-5 p-10 mr-20 ml-20 bold mb-1 bg-\".concat(option.value),onClick:function onClick(){return onSelectionChange(option);}},option.label);});return/*#__PURE__*/React.createElement(\"div\",{ref:ref,className:\"ui form bg-dkGreen p-10 r-5\"},/*#__PURE__*/React.createElement(\"div\",{className:\"field\"},/*#__PURE__*/React.createElement(\"label\",{className:\"label\"},/*#__PURE__*/React.createElement(\"span\",{className:\"color-yellow greet normal\"},label)),/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return toggleOpenStatus();},className:\"ui selection dropdown \".concat(open?'visible active':'')},/*#__PURE__*/React.createElement(\"i\",{className:\"dropdown icon\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"text\"},selected.label),/*#__PURE__*/React.createElement(\"div\",{className:\"menu \".concat(open?'visible transition':'')},list))));};export default DropDown;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/DropDown.js"],"names":["React","useState","useEffect","useRef","DropDown","label","options","selected","onSelectionChange","open","setOpen","toggleOpenStatus","ref","onBodyClick","event","current","contains","target","document","body","addEventListener","removeEventListener","list","map","option","value"],"mappings":"qJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAoD,IAAjDC,CAAAA,KAAiD,MAAjDA,KAAiD,CAA1CC,OAA0C,MAA1CA,OAA0C,CAAjCC,QAAiC,MAAjCA,QAAiC,CAAvBC,iBAAuB,MAAvBA,iBAAuB,eACzCP,QAAQ,CAAC,KAAD,CADiC,wCAC1DQ,IAD0D,eACpDC,OADoD,eAEjE,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAMD,CAAAA,OAAO,CAAC,CAACD,IAAF,CAAb,EAAzB,CACA,GAAMG,CAAAA,GAAG,CAAGT,MAAM,EAAlB,CACAD,SAAS,CAAC,UAAM,CACZ,GAAMW,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC3B,GAAIF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAAJ,CAAwC,CACpC,OACH,CACDP,OAAO,CAAC,KAAD,CAAP,CACH,CALD,CAMAQ,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,CAAwCP,WAAxC,EAEA,MAAO,WAAM,CACTK,QAAQ,CAACC,IAAT,CAAcE,mBAAd,CAAkC,OAAlC,CAA2CR,WAA3C,EACH,CAFD,CAIH,CAbQ,CAaN,EAbM,CAAT,CAeA,GAAMS,CAAAA,IAAI,CAAGhB,OAAO,CAACiB,GAAR,CAAY,SAACC,MAAD,CAAY,CACjC,GAAIA,MAAM,CAACC,KAAP,GAAiBlB,QAAQ,CAACkB,KAA9B,CAAqC,CACjC,MAAO,KAAP,CACH,CACD,mBACI,2BACI,GAAG,CAAED,MAAM,CAACC,KADhB,CAEI,SAAS,iEAA2DD,MAAM,CAACC,KAAlE,CAFb,CAGI,OAAO,CAAE,yBAAMjB,CAAAA,iBAAiB,CAACgB,MAAD,CAAvB,EAHb,EAKKA,MAAM,CAACnB,KALZ,CADJ,CASH,CAbY,CAAb,CAcA,mBACI,2BAAK,GAAG,CAAEO,GAAV,CAAe,SAAS,CAAC,6BAAzB,eACI,2BAAK,SAAS,CAAC,OAAf,eACI,6BAAO,SAAS,CAAC,OAAjB,eAAyB,4BAAM,SAAS,CAAC,2BAAhB,EAA6CP,KAA7C,CAAzB,CADJ,cAEI,2BACI,OAAO,CAAE,yBAAMM,CAAAA,gBAAgB,EAAtB,EADb,CAEI,SAAS,iCAA2BF,IAAI,CAAG,gBAAH,CAAsB,EAArD,CAFb,eAII,yBAAG,SAAS,CAAC,eAAb,EAJJ,cAKI,2BAAK,SAAS,CAAC,MAAf,EAAuBF,QAAQ,CAACF,KAAhC,CALJ,cAMI,2BAAK,SAAS,gBAAUI,IAAI,CAAG,oBAAH,CAA0B,EAAxC,CAAd,EACKa,IADL,CANJ,CAFJ,CADJ,CADJ,CAkBH,CAnDD,CAoDA,cAAelB,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nconst DropDown = ({ label, options, selected, onSelectionChange}) => {\n    const [open, setOpen] = useState(false);\n    const toggleOpenStatus = () => setOpen(!open);\n    const ref = useRef();\n    useEffect(() => {\n        const onBodyClick = (event) => {\n            if (ref.current.contains(event.target)) {\n                return;\n            }\n            setOpen(false);\n        }\n        document.body.addEventListener('click', onBodyClick);\n\n        return () => {\n            document.body.removeEventListener('click', onBodyClick);\n        }\n\n    }, []);\n    \n    const list = options.map((option) => {\n        if (option.value === selected.value) {\n            return null;\n        }\n        return (\n            <div \n                key={option.value} \n                className={`item button pointer r-5 p-10 mr-20 ml-20 bold mb-1 bg-${option.value}`}\n                onClick={() => onSelectionChange(option)}\n            >\n                {option.label}\n            </div>\n        )\n    })\n    return (\n        <div ref={ref} className='ui form bg-dkGreen p-10 r-5'>\n            <div className='field'>\n                <label className='label'><span className='color-yellow greet normal'>{label}</span></label>\n                <div \n                    onClick={() => toggleOpenStatus()}\n                    className={`ui selection dropdown ${open ? 'visible active' : ''}`}\n                >\n                    <i className=\"dropdown icon\"></i>\n                    <div className='text'>{selected.label}</div>\n                    <div className={`menu ${open ? 'visible transition' : ''}`}>\n                        {list}\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n    )\n}\nexport default DropDown;"]},"metadata":{},"sourceType":"module"}