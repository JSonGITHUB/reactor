{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/LogEntry.js\";\nimport React from 'react';\nimport Dialog from './functional/Dialog.js';\nimport Selector from './forms/FunctionalSelector.js';\nimport RadioSelector from './forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from './utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport LogData from './LogData.js';\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom';\n\nclass LogEntry extends React.Component {\n  //log = JSON.parse(localStorage.getItem(\"ThuApr3020207:03:14PM\"));\n  constructor(props) {\n    super(props);\n    this.posts = new PostDirectory();\n    this.postDirectory = this.posts.getDirectory();\n\n    this.setDefaultLastId = () => {\n      //console.log(`lastPostId: \"ThuApr3020207:03:14PM\"`)\n      return \"ThuApr3020207:03:14PM\";\n    };\n\n    this.lastPostId = localStorage.getItem(\"lastPostId\") === null ? this.posts.getLastItem() : localStorage.getItem(\"lastPostId\");\n    this.logData = new LogData({\n      recordId: this.lastPostId\n    });\n\n    this.getStateLog = () => this.props.getStateLog();\n\n    this.items = () => this.state.items;\n\n    this.hasBeenSelected = (item, groupTitle) => item.selections.indexOf(this.log[groupTitle][item.description]) !== -1 ? true : false;\n\n    this.defaultSelection = (item, groupTitle) => this.hasBeenSelected(item, groupTitle) ? item.selections.indexOf(this.log[groupTitle][item.description]) : 0;\n\n    this.selectorColor = (item, groupTitle) => this.hasBeenSelected(item, groupTitle) ? \"completedSelector\" : \"incompletedSelector\";\n\n    this.radioItems = (item, groupTitle) => /*#__PURE__*/React.createElement(RadioSelector, {\n      header: groupTitle,\n      groupTitle: groupTitle,\n      selected: this.defaultSelection(item, groupTitle),\n      label: item.description,\n      items: item.selections,\n      onChange: this.handleSelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 40\n      }\n    });\n\n    this.selector = (item, groupTitle) => {\n      //console.log(`item: ${JSON.stringify(item, null, 2)}  groupTitle: ${groupTitle}`)\n      //const setSelectorStatus = ((item.selections.indexOf(this.log[groupTitle][item.description])) !== -1) ? this.selectorStatus.push(true) : this.selectorStatus.push(false);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: this.selectorColor(item, groupTitle) + \" r-vw p-vw bg-green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, item.description, \": \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Selector, {\n        groupTitle: groupTitle,\n        selected: this.defaultSelection(item, groupTitle),\n        label: item.description,\n        items: item.selections,\n        onChange: this.handleSelection,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      })));\n    };\n\n    this.radio = (item, groupTitle) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"r-vw bg-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 35\n      }\n    }, this.radioItems(item, groupTitle));\n\n    this.group = item => item.group;\n\n    this.selectionInterface = (item, groupTitle) => item.type === \"radio\" ? this.radio(item, groupTitle) : this.selector(item, groupTitle);\n\n    this.groups = () => this.items().map(item => {\n      const headerClasses = 'subHeader color-yellow';\n      const selectorClasses = \"greet p-vw bg-vdkGreen flex3Column\";\n      const groupClasses = window.innerWidth < 500 ? \"r-vw\" : \"flexContainer width-100-percent r-vw\";\n      const description = item.description;\n\n      const addToLogs = group => {\n        this.log[description][group.description] = group.selections[this.defaultSelection(group, description)]; //this.props.onChange(description, group.description, group.selections[this.defaultSelection(group, description)], false);\n      }; // const logger = this.group(item).map((group) => addToLogs(group));\n\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"groupConainer\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"groupHeader\"),\n        className: headerClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      }, item.description), /*#__PURE__*/React.createElement(\"div\", {\n        className: groupClasses,\n        key: getKey(\"groupSubConainer\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      }, this.group(item).map(group => /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey(\"selectorConainer\"),\n        className: selectorClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }\n      }, this.selectionInterface(group, description)))));\n    });\n\n    this.categories = () => {\n      this.selectorStatus = [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 16\n        }\n      }, this.groups());\n    };\n\n    this.dateEntry = () => {\n      const logExists = this.state.log !== undefined && JSON.stringify(this.state.log, null, 2) !== \"{}\" ? true : false;\n      console.log(`this.state: ${JSON.stringify(this.state, null, 2)}`);\n\n      const stateLogDate = () => new Date(this.state.log.Day.Date);\n\n      const getDate = () => logExists === true ? new Date(stateLogDate()) : new Date(this.state.date);\n\n      const getTodaysDate = () => new Date();\n\n      const getStateDate = () => this.state.date; //console.log(`getDate(): ${getDate()}`)\n      //console.log(`getTodaysDate(): ${getTodaysDate()}`)\n      //console.log(`this.state.log.Day.Date: ${this.state.log.Day.Date}`)\n      //console.log(`this.state.date: ${getStateDate()}`)\n      //console.log(`this.state.log: ${JSON.stringify(this.state.log, null,2)}`)\n      //console.log(`this.lastPostId: ${this.lastPostId}`)\n\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-5 subHeader color-yellow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flexContainer width-100-percent bg-vdkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, {\n        onChange: this.onDateChange,\n        value: getDate() //value={getTodaysDate()} \n        ,\n        className: \"p-vw bg-green flex3Column r-vw m-vw\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 23\n        }\n      })));\n    };\n\n    this.selectorStatus = [];\n    this.buttonLabel = props.buttonLabel;\n    this.title = props.title;\n    this.message = props.message;\n    this.logId = props.logId;\n    this.logData.init();\n\n    if (props.logId !== undefined && props.logId !== \"\") {\n      this.lastPostId = props.logId;\n      console.log(`$$ logId1: ${props.logId}`);\n      this.log = localStorage.getItem(props.logId) === null ? this.posts.getLastItem() : JSON.parse(localStorage.getItem(props.logId));\n    } else {\n      this.lastPostId = \"ThuApr3020207:03:14PM\";\n      console.log(`logId2: ${this.lastPostId}`);\n      this.log = JSON.parse(localStorage.getItem(\"ThuApr3020207:03:14PM\"));\n    }\n\n    this.state = {\n      date: new Date(),\n      items: props.items,\n      log: this.log,\n      lastPostId: props.logId\n    };\n    this.handleSelection = this.handleSelection.bind(this);\n    this.updateNotes = this.updateNotes.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.onDateChange = this.onDateChange.bind(this);\n  }\n\n  setLogState() {\n    this.setState({\n      log: this.log\n    });\n  }\n\n  handleSelection(groupTitle, label, selected) {\n    if (typeof groupTitle === \"string\") {\n      this.log[groupTitle][label] = selected;\n      this.props.onChange(groupTitle, label, selected, true);\n      this.setLogState();\n    }\n  }\n\n  updateNotes(event) {\n    this.handleSelection(\"Comments\", \"notes\", event.target.value);\n  }\n\n  handleSubmit(event) {\n    const log = this.state.log !== undefined && JSON.stringify(this.state.log, null, 2) !== \"{}\" ? this.state.log : this.log;\n    console.log(`handleSubmit: ${log}`);\n    const recordId = this.getRecordId();\n    let postDirectory = this.posts.getDirectory();\n    let post = \"\";\n\n    const logIt = () => {\n      postDirectory.push(recordId);\n      postDirectory = JSON.stringify(postDirectory);\n      console.log(`postDirectory: ${postDirectory}`);\n      post = JSON.stringify(log, null, 2);\n      console.log(`post: ${post}`);\n      localStorage.setItem(recordId, post); //localStorage.setItem(\"postDirectory\", postDirectory);\n\n      this.posts.add(recordId);\n    };\n\n    const selectorStatusComplete = this.selectorStatus.includes(false) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n\n    if (selectorStatusComplete) {\n      logIt();\n    }\n  }\n\n  handleSave(event) {\n    const log = this.state.log !== undefined && JSON.stringify(this.state.log, null, 2) !== \"{}\" ? this.state.log : this.log;\n    console.log(`handleSave: ${log}`);\n    const recordId = this.state.lastPostId;\n    let post = \"\";\n\n    const logIt = () => {\n      post = JSON.stringify(log, null, 2);\n      console.log(`post: ${post}`);\n      localStorage.setItem(recordId, post);\n    };\n\n    const selectorStatusComplete = this.selectorStatus.includes(false) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n\n    if (selectorStatusComplete) {\n      logIt();\n    }\n  }\n\n  handleDelete(event) {\n    const recordId = this.state.lastPostId;\n    console.log(`delete record: ${recordId} ${this.state.log.Location.Break}`); //localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory));\n\n    this.posts.delete(recordId);\n  }\n\n  onDateChange(date) {\n    const pickerDate = date;\n    date = String(date);\n    const day = pickerDate.getDate();\n    const month = pickerDate.getMonth() + 1;\n    const year = pickerDate.getFullYear();\n    const logDate = {\n      \"month\": month,\n      \"day\": day,\n      \"year\": year\n    };\n    this.handleSelection(\"Day\", \"Date\", pickerDate);\n    this.handleSelection(\"Day\", \"Day\", day);\n    this.handleSelection(\"Day\", \"Month\", month);\n    this.handleSelection(\"Day\", \"Year\", year);\n  }\n\n  render() {\n    //console.log(`GET STATE LOG ${JSON.stringify(this.getStateLog(), null, 2)}`)\n    return /*#__PURE__*/React.createElement(Dialog, {\n      title: this.title,\n      message: this.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, this.dateEntry(), this.categories(), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, \"Additional Comments: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"10\",\n      cols: window.innerWidth / 15,\n      value: this.state.log.Comments.notes,\n      onChange: this.updateNotes,\n      className: \"mt-10 greet p-10 r-10 brdr-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 181\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 186\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/LogDirectory\",\n      onClick: () => this.handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.handleSubmit,\n      className: \"button m-1 greet p-20 r-10 bg-green brdr-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, this.buttonLabel)), /*#__PURE__*/React.createElement(Link, {\n      to: \"/LogDirectory\",\n      onClick: () => this.handleSave(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button m-1 greet p-20 r-10 bg-yellow brdr-yellow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }, \"save\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"/LogDirectory\",\n      onClick: () => this.handleDelete(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button m-1 greet p-20 r-10 bg-red brdr-red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }, \"delete\")), /*#__PURE__*/React.createElement(PostDirectory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default LogEntry;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/LogEntry.js"],"names":["React","Dialog","Selector","RadioSelector","DatePicker","getKey","PostDirectory","LogData","BrowserRouter","Router","Switch","Link","Route","LogEntry","Component","constructor","props","posts","postDirectory","getDirectory","setDefaultLastId","lastPostId","localStorage","getItem","getLastItem","logData","recordId","getStateLog","items","state","hasBeenSelected","item","groupTitle","selections","indexOf","log","description","defaultSelection","selectorColor","radioItems","handleSelection","selector","radio","group","selectionInterface","type","groups","map","headerClasses","selectorClasses","groupClasses","window","innerWidth","addToLogs","categories","selectorStatus","dateEntry","logExists","undefined","JSON","stringify","console","stateLogDate","Date","Day","getDate","date","getTodaysDate","getStateDate","onDateChange","buttonLabel","title","message","logId","init","parse","bind","updateNotes","handleSubmit","handleDelete","setLogState","setState","label","selected","onChange","event","target","value","getRecordId","post","logIt","push","setItem","add","selectorStatusComplete","includes","confirm","handleSave","Location","Break","delete","pickerDate","String","day","month","getMonth","year","getFullYear","logDate","render","Comments","notes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dialog from './functional/Dialog.js';\nimport Selector from './forms/FunctionalSelector.js';\nimport RadioSelector from './forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from './utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport LogData from './LogData.js';\nimport {BrowserRouter as Router, Switch, Link, Route} from 'react-router-dom';\n\nclass LogEntry extends React.Component {\n   //log = JSON.parse(localStorage.getItem(\"ThuApr3020207:03:14PM\"));\n    posts = new PostDirectory();\n    postDirectory = this.posts.getDirectory();\n    setDefaultLastId = () => {\n        //console.log(`lastPostId: \"ThuApr3020207:03:14PM\"`)\n        return \"ThuApr3020207:03:14PM\"\n    }\n    lastPostId = (localStorage.getItem(\"lastPostId\") === null) ? this.posts.getLastItem() : localStorage.getItem(\"lastPostId\");\n    logData = new LogData({recordId: this.lastPostId});\n\n    constructor(props) {\n        super(props);\n        this.selectorStatus = [];\n        this.buttonLabel = props.buttonLabel;\n        this.title = props.title;\n        this.message = props.message;\n        this.logId = props.logId;\n        this.logData.init();\n        if (props.logId !== undefined && props.logId !== \"\" ) {\n            this.lastPostId = props.logId;\n            console.log(`$$ logId1: ${props.logId}`);\n            this.log = (localStorage.getItem(props.logId) === null) ? this.posts.getLastItem() : JSON.parse(localStorage.getItem(props.logId));\n        } else {\n            this.lastPostId = \"ThuApr3020207:03:14PM\";\n            console.log(`logId2: ${this.lastPostId}`)\n            this.log = JSON.parse(localStorage.getItem(\"ThuApr3020207:03:14PM\"))\n        }\n        this.state = {\n            date: new Date(),\n            items: props.items,\n            log: this.log,\n            lastPostId: props.logId\n        };\n        this.handleSelection = this.handleSelection.bind(this);\n        this.updateNotes = this.updateNotes.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n    }\n    setLogState() {\n        this.setState({\n            log: this.log\n        });\n    }\n    handleSelection(groupTitle, label, selected) {\n        if (typeof groupTitle === \"string\") {\n            this.log[groupTitle][label] = selected;\n            this.props.onChange(groupTitle, label, selected, true);\n            this.setLogState();\n        } \n    }\n    updateNotes(event) {\n        this.handleSelection(\"Comments\", \"notes\", event.target.value);\n    }\n    handleSubmit(event) {\n        const log = (this.state.log !== undefined && JSON.stringify(this.state.log, null, 2) !== \"{}\") ? this.state.log : this.log;\n        console.log(`handleSubmit: ${log}`)\n        const recordId = this.getRecordId();\n        let postDirectory = this.posts.getDirectory();\n        let post = \"\";\n        const logIt = () => {\n            postDirectory.push(recordId);\n            postDirectory = JSON.stringify(postDirectory);\n            console.log(`postDirectory: ${postDirectory}`)\n            post = JSON.stringify(log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n            //localStorage.setItem(\"postDirectory\", postDirectory);\n            this.posts.add(recordId);\n        }\n        const selectorStatusComplete = (this.selectorStatus.includes(false)) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n        if (selectorStatusComplete) {\n            logIt();\n        }\n    }\n    handleSave(event) {\n        const log = (this.state.log !== undefined && JSON.stringify(this.state.log, null, 2) !== \"{}\") ? this.state.log : this.log;\n        console.log(`handleSave: ${log}`)\n        const recordId = this.state.lastPostId;\n        let post = \"\";\n        const logIt = () => {\n            post = JSON.stringify(log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n        }\n        const selectorStatusComplete = (this.selectorStatus.includes(false)) ? window.confirm(\"Report is incomplete, submit anyway?\") : true;\n        if (selectorStatusComplete) {\n            logIt();\n        }\n    }\n    handleDelete(event) {\n        const recordId = this.state.lastPostId;\n        console.log(`delete record: ${recordId} ${this.state.log.Location.Break}`);\n        //localStorage.setItem(\"postDirectory\", JSON.stringify(this.postDirectory));\n        this.posts.delete(recordId);\n    }\n    onDateChange(date) {\n        const pickerDate = date;\n        date = String(date);\n        const day = pickerDate.getDate();\n        const month = pickerDate.getMonth()+1;\n        const year = pickerDate.getFullYear();\n        const logDate = {\n            \"month\": month,\n            \"day\": day,\n            \"year\": year\n        }\n        this.handleSelection(\"Day\", \"Date\", pickerDate);\n        this.handleSelection(\"Day\", \"Day\", day);\n        this.handleSelection(\"Day\", \"Month\", month);\n        this.handleSelection(\"Day\", \"Year\", year);\n    }\n    getStateLog = () => this.props.getStateLog();\n    items = () => this.state.items;\n    hasBeenSelected = (item,groupTitle) => ((item.selections.indexOf(this.log[groupTitle][item.description])) !== -1) ? true : false;\n    defaultSelection = (item,groupTitle) => (this.hasBeenSelected(item,groupTitle)) ? (item.selections.indexOf(this.log[groupTitle][item.description])) : 0; \n    selectorColor = (item,groupTitle) => (this.hasBeenSelected(item,groupTitle)) ? \"completedSelector\" : \"incompletedSelector\";\n    \n    radioItems = (item, groupTitle) => <RadioSelector\n                    header={groupTitle}\n                    groupTitle={groupTitle} \n                    selected={this.defaultSelection(item,groupTitle)} \n                    label={item.description} \n                    items={item.selections} \n                    onChange={this.handleSelection}\n                />;\n    selector = (item, groupTitle) => {\n            //console.log(`item: ${JSON.stringify(item, null, 2)}  groupTitle: ${groupTitle}`)\n            //const setSelectorStatus = ((item.selections.indexOf(this.log[groupTitle][item.description])) !== -1) ? this.selectorStatus.push(true) : this.selectorStatus.push(false);\n            \n            return <div className={this.selectorColor(item,groupTitle) + \" r-vw p-vw bg-green\"}>\n                <div className=\"mb-5\">{item.description}: </div>\n                <div className=\"mb-5\">\n                    <Selector \n                        groupTitle={groupTitle} \n                        selected={this.defaultSelection(item,groupTitle)} \n                        label={item.description} \n                        items={item.selections}\n                        onChange={this.handleSelection}\n                    />\n                </div>\n            </div>;\n    }\n\n    radio = (item, groupTitle) => <div className=\"r-vw bg-green\">\n                {this.radioItems(item, groupTitle)}\n            </div>;\n    group = (item) => item.group;\n    selectionInterface = (item, groupTitle) => (item.type === \"radio\") ? this.radio(item, groupTitle) : this.selector(item, groupTitle);\n\n    groups = () => this.items().map((item) => {\n        const headerClasses = 'subHeader color-yellow';\n        const selectorClasses = \"greet p-vw bg-vdkGreen flex3Column\";\n        const groupClasses = (window.innerWidth < 500) ? \"r-vw\" : \"flexContainer width-100-percent r-vw\";\n        const description = item.description;\n        const addToLogs = (group) => {\n            this.log[description][group.description] = group.selections[this.defaultSelection(group, description)]\n            //this.props.onChange(description, group.description, group.selections[this.defaultSelection(group, description)], false);\n        }\n       // const logger = this.group(item).map((group) => addToLogs(group));\n        return <div key={getKey(\"groupConainer\")}>\n                    <div key={getKey(\"groupHeader\")} className={headerClasses}>\n                        {item.description}\n                    </div>\n                    <div className={groupClasses} key={getKey(\"groupSubConainer\")}>\n                        {this.group(item).map((group) => \n                            <div key={getKey(\"selectorConainer\")} className={selectorClasses}>\n                                {this.selectionInterface(group, description)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n    })\n    categories = () => {\n        this.selectorStatus = [];\n        return <div className='description'>{this.groups()}</div>;\n    }\n    dateEntry = () => {\n\n            const logExists = (this.state.log !== undefined && JSON.stringify(this.state.log, null, 2) !== \"{}\") ? true : false;\n            console.log(`this.state: ${JSON.stringify(this.state,null,2)}`)\n            const stateLogDate = () => new Date(this.state.log.Day.Date);\n            const getDate = () => (logExists === true) ? new Date(stateLogDate()) : new Date(this.state.date);\n            const getTodaysDate = () => new Date();\n            const getStateDate = () => this.state.date;\n            //console.log(`getDate(): ${getDate()}`)\n            //console.log(`getTodaysDate(): ${getTodaysDate()}`)\n            //console.log(`this.state.log.Day.Date: ${this.state.log.Day.Date}`)\n            //console.log(`this.state.date: ${getStateDate()}`)\n            //console.log(`this.state.log: ${JSON.stringify(this.state.log, null,2)}`)\n            //console.log(`this.lastPostId: ${this.lastPostId}`)\n            return <div>\n                <div className='mb-5 subHeader color-yellow'>Date</div>\n                <div className='flexContainer width-100-percent bg-vdkGreen'>\n                    <DatePicker\n                        onChange={this.onDateChange}\n                        value={getDate()} \n                        //value={getTodaysDate()} \n                        className='p-vw bg-green flex3Column r-vw m-vw'\n                    /><br/>\n                </div>\n            </div>\n    }\n    \n    render() {\n        //console.log(`GET STATE LOG ${JSON.stringify(this.getStateLog(), null, 2)}`)\n        return (\n            <Dialog title={this.title} message={this.message}>\n                <form onSubmit={this.handleSubmit}>\n                    {this.dateEntry()}\n                    {this.categories()}\n                    <br/>\n                    \n                    <div className=\"mb-5\">Additional Comments: </div>\n                    <textarea rows=\"10\" cols={window.innerWidth/15} value={this.state.log.Comments.notes} onChange={this.updateNotes} className=\"mt-10 greet p-10 r-10 brdr-green\"/><br/><br/>\n                    <Link\n                        to=\"/LogDirectory\"\n                        onClick={() => this.handleSubmit()}>\n                        <div onClick={this.handleSubmit} className=\"button m-1 greet p-20 r-10 bg-green brdr-green\">\n                            {this.buttonLabel}\n                        </div>\n                    </Link> \n                    <Link\n                        to=\"/LogDirectory\"\n                        onClick={() => this.handleSave()}>\n                        <div className=\"button m-1 greet p-20 r-10 bg-yellow brdr-yellow\">\n                            save\n                        </div>\n                    </Link>\n                    <Link\n                        to=\"/LogDirectory\"\n                        onClick={() => this.handleDelete()}>\n                        <div  className=\"button m-1 greet p-20 r-10 bg-red brdr-red\">\n                            delete\n                        </div>\n                    </Link>\n                    <PostDirectory />\n                </form>\n            </Dialog>\n        );\n    };\n}\n\nexport default LogEntry;"]},"metadata":{},"sourceType":"module"}