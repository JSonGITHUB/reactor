{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/weather/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport config from '../apis/config';\nimport CitySelector from './CitySelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  // eslint-disable-next-line\n  const [city, setCity] = useState('London');\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n  //Metric\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n  //Image Source\n  //http://openweathermap.org/img/wn/10d@2x.png\n  const key = config.openweatherAPI_KEY;\n  const baseUrl = config.openweatherAPI_BASE_URL;\n  const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n  // eslint-disable-next-line\n  const path = '/data/2.5/forecast?q=';\n  // eslint-disable-next-line\n  const param = ',us&appid=';\n  const api = `${baseUrl}${urlEnd}${key}`;\n  // eslint-disable-next-line\n  const onSearch = (term, callback) => {\n    fetch(api).then(response => response.json()).then(result => console.log(`${JSON.stringify(result, 2, null)}`));\n  };\n  return /*#__PURE__*/_jsxDEV(CitySelector, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Weather, \"e7MAutp2VH0kDo9IBR+9gAc/NnE=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","config","CitySelector","jsxDEV","_jsxDEV","Weather","_s","city","setCity","key","openweatherAPI_KEY","baseUrl","openweatherAPI_BASE_URL","urlEnd","path","param","api","onSearch","term","callback","fetch","then","response","json","result","console","log","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/weather/Weather.js"],"sourcesContent":["import React, { useState } from 'react';\nimport config from '../apis/config';\nimport CitySelector from './CitySelector';\n\nconst Weather  = () => {\n    // eslint-disable-next-line\n    const [city, setCity] = useState('London');\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n    //Metric\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n    //Image Source\n    //http://openweathermap.org/img/wn/10d@2x.png\n    const key = config.openweatherAPI_KEY;\n    const baseUrl = config.openweatherAPI_BASE_URL;\n    const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n    // eslint-disable-next-line\n    const path = '/data/2.5/forecast?q=';\n    // eslint-disable-next-line\n    const param = ',us&appid=';\n    const api = `${baseUrl}${urlEnd}${key}`\n    // eslint-disable-next-line\n    const onSearch = (term, callback) => {\n        fetch(api)\n        .then((response) => response.json())\n        .then((result) => console.log(`${JSON.stringify(result,2, null)}`))\n    };\n\n    return (\n        <CitySelector />\n    )\n}\nexport default Weather;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAIA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,QAAQ,CAAC;EAC1C;EACA;EACA;EACA;EACA;EACA,MAAMS,GAAG,GAAGR,MAAM,CAACS,kBAAkB;EACrC,MAAMC,OAAO,GAAGV,MAAM,CAACW,uBAAuB;EAC9C,MAAMC,MAAM,GAAI,wBAAuBN,IAAK,YAAW;EACvD;EACA,MAAMO,IAAI,GAAG,uBAAuB;EACpC;EACA,MAAMC,KAAK,GAAG,YAAY;EAC1B,MAAMC,GAAG,GAAI,GAAEL,OAAQ,GAAEE,MAAO,GAAEJ,GAAI,EAAC;EACvC;EACA,MAAMQ,QAAQ,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IACjCC,KAAK,CAACJ,GAAG,CAAC,CACTK,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAKC,OAAO,CAACC,GAAG,CAAE,GAAEC,IAAI,CAACC,SAAS,CAACJ,MAAM,EAAC,CAAC,EAAE,IAAI,CAAE,EAAC,CAAC,CAAC;EACvE,CAAC;EAED,oBACIpB,OAAA,CAACF,YAAY;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAExB,CAAC;AAAA1B,EAAA,CA1BKD,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AA2Bb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}