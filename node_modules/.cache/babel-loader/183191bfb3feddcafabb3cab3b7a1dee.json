{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/Calculator.js\";\n//stateful component\nimport React from 'react';\nimport TemperatureInput from './TemperatureInput';\nimport BoilingVerdict from './BoilingVerdict';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {\n      temperature: '',\n      scale: 'c'\n    };\n  } //gets called by TemperatureInput on change => setState call render()\n\n\n  handleCelsiusChange(temperature) {\n    console.log(\"handleCelsiusChange\");\n    this.setState({\n      scale: 'c',\n      temperature\n    });\n  } //gets called by TemperatureInput on change => setState call render()\n\n\n  handleFahrenheitChange(temperature) {\n    console.log(\"handleFahrenheitChange\");\n    this.setState({\n      scale: 'f',\n      temperature\n    });\n  }\n\n  render() {\n    const boilingVerdict = new BoilingVerdict({\n      'celsius': ''\n    });\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? boilingVerdict.tryConvert(temperature, boilingVerdict.toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? boilingVerdict.tryConvert(temperature, boilingVerdict.toFahrenheit) : temperature; //console.log(`Calculator => celsius: ${celsius}`);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"neumorphism flexcontainer p-20 App-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flexContainer App-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(TemperatureInput, {\n      scale: \"c\",\n      temperature: celsius,\n      onTemperatureChange: this.handleCelsiusChange,\n      id: \"celsius\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TemperatureInput, {\n      scale: \"f\",\n      temperature: fahrenheit,\n      onTemperatureChange: this.handleFahrenheitChange,\n      id: \"fahrenheit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BoilingVerdict, {\n      celsius: parseFloat(celsius),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/Calculator.js"],"names":["React","TemperatureInput","BoilingVerdict","Calculator","Component","constructor","props","handleCelsiusChange","bind","handleFahrenheitChange","state","temperature","scale","console","log","setState","render","boilingVerdict","celsius","tryConvert","toCelsius","fahrenheit","toFahrenheit","parseFloat"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKE,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE,EAAd;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAAb;AACH,GAPoC,CAQrC;;;AACAL,EAAAA,mBAAmB,CAACI,WAAD,EAAc;AAC7BE,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAKC,QAAL,CAAc;AAACH,MAAAA,KAAK,EAAE,GAAR;AAAaD,MAAAA;AAAb,KAAd;AACH,GAZoC,CAarC;;;AACAF,EAAAA,sBAAsB,CAACE,WAAD,EAAc;AAChCE,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,SAAKC,QAAL,CAAc;AAACH,MAAAA,KAAK,EAAE,GAAR;AAAaD,MAAAA;AAAb,KAAd;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAMC,cAAc,GAAG,IAAIf,cAAJ,CAAmB;AAAC,iBAAW;AAAZ,KAAnB,CAAvB;AACA,UAAMU,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;AACA,UAAMD,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,UAAMO,OAAO,GAAGN,KAAK,KAAK,GAAV,GAAgBK,cAAc,CAACE,UAAf,CAA0BR,WAA1B,EAAuCM,cAAc,CAACG,SAAtD,CAAhB,GAAmFT,WAAnG;AACA,UAAMU,UAAU,GAAGT,KAAK,KAAK,GAAV,GAAgBK,cAAc,CAACE,UAAf,CAA0BR,WAA1B,EAAuCM,cAAc,CAACK,YAAtD,CAAhB,GAAsFX,WAAzG,CALK,CAML;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFJ,eAYI,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAC,GADV;AAEI,MAAA,WAAW,EAAEO,OAFjB;AAGI,MAAA,mBAAmB,EAAE,KAAKX,mBAH9B;AAGmD,MAAA,EAAE,EAAC,SAHtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,eAgBI,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAC,GADV;AAEI,MAAA,WAAW,EAAEc,UAFjB;AAGI,MAAA,mBAAmB,EAAE,KAAKZ,sBAH9B;AAGsD,MAAA,EAAE,EAAC,YAHzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,eAoBI,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAEc,UAAU,CAACL,OAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,CADJ;AAwBH;;AAlDoC;;AAqDvC,eAAef,UAAf","sourcesContent":["//stateful component\nimport React from 'react';\nimport TemperatureInput from './TemperatureInput';\nimport BoilingVerdict from './BoilingVerdict';\n\nclass Calculator extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n        this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n        this.state = {temperature: '', scale: 'c'};\n    }\n    //gets called by TemperatureInput on change => setState call render()\n    handleCelsiusChange(temperature) {\n        console.log(\"handleCelsiusChange\")\n        this.setState({scale: 'c', temperature});\n    }\n    //gets called by TemperatureInput on change => setState call render()\n    handleFahrenheitChange(temperature) {\n        console.log(\"handleFahrenheitChange\")\n        this.setState({scale: 'f', temperature});\n    }\n\n    render() {\n        const boilingVerdict = new BoilingVerdict({'celsius': ''});\n        const scale = this.state.scale;\n        const temperature = this.state.temperature;\n        const celsius = scale === 'f' ? boilingVerdict.tryConvert(temperature, boilingVerdict.toCelsius) : temperature;\n        const fahrenheit = scale === 'c' ? boilingVerdict.tryConvert(temperature, boilingVerdict.toFahrenheit) : temperature;\n        //console.log(`Calculator => celsius: ${celsius}`);\n        return (\n            <div className=\"neumorphism flexcontainer p-20 App-content\">\n                \n                <div className=\"flexContainer App-content\">\n                    <div className=\"flex3Column\"></div>\n                    <div className=\"flex3Column\"></div>\n                    <div className=\"flex3Column\"></div>\n                </div>\n\n\n\n\n\n                <TemperatureInput\n                    scale=\"c\"\n                    temperature={celsius}\n                    onTemperatureChange={this.handleCelsiusChange} id=\"celsius\"/>\n                <TemperatureInput\n                    scale=\"f\"\n                    temperature={fahrenheit}\n                    onTemperatureChange={this.handleFahrenheitChange} id=\"fahrenheit\"/>\n                <BoilingVerdict celsius={parseFloat(celsius)} />\n            </div>\n        );\n    }\n}\n\n  export default Calculator;"]},"metadata":{},"sourceType":"module"}