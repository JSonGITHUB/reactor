{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/Forms/FormRadio.js\";\nimport React from 'react';\nimport shakaBlack from '../assets/images/shakaBlack.png';\nimport thumbsUp from '../assets/images/ThumbsUp.png';\nimport thumbsDown from '../assets/images/ThumbsDown.png';\n/*\n<FormRadio \n          selected={\"Ahi\"} \n          header = {\"Poki Bowl\"} \n          items = {[\"one\", \"two\", \"three\"]}\n        />\n*/\n\nclass FormRadio extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      console.log(`${this.state.label} => ${event.target.value}`);\n      /*\n              this.setState({\n                  selected: event.target.id,\n                  value: event.target.value\n              });\n      */\n\n      this.props.onChange(event.target.value, this.state.groupTitle);\n    };\n\n    this.items = props.items;\n    this.state = {\n      value: props.selected,\n      selected: props.selected,\n      select: props.selected,\n      header: props.header,\n      label: props.label,\n      groupTitle: props.groupTitle,\n      items: props.items\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  selectItems() {\n    const reportAwesome = () => console.log(\"awesome\");\n\n    this.setState({\n      selected: 0,\n      value: 'Firing'\n    });\n\n    const reportGood = () => console.log(\"good\");\n\n    this.setState({\n      selected: 1,\n      value: 'Fun'\n    });\n\n    const reportBad = () => console.log(\"bad\");\n\n    this.setState({\n      selected: 2,\n      value: 'Fucked'\n    });\n\n    const getIcon = (item, index, select) => {\n      const value = item.toString();\n      const displayClass = select === true ? \"shakingShaka shaka\" : \"shaka\";\n      let displayColor = value === \"Firing\" ? \"bg-neogreen\" : \"bg-yellow\";\n      displayColor = value === \"Bad\" ? \"bg-red\" : displayColor;\n      const buttonClass = displayColor + \" pt-10 pb-5 radius-10 m-5 button\";\n      let click = value === \"Firing\" ? reportAwesome : reportGood;\n      click = value === \"Bad\" ? reportBad : click;\n      let icon = value === \"Firing\" ? shakaBlack : thumbsUp;\n      icon = value === \"Bad\" ? thumbsDown : icon;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: buttonClass,\n        onClick: click,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        id: value,\n        src: icon,\n        alt: value,\n        className: displayClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 83\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: index,\n        key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n        type: \"radio\",\n        value: item.toString(),\n        onChange: this.handleChange,\n        checked: Number(this.state.selected) === Number(index) ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"description color-black ml-5\",\n        key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, item.toString())));\n    };\n\n    const icon = (item, index, select) => {\n      let iconOut = \"\";\n      iconOut = getIcon(item, index, select);\n      return iconOut;\n    };\n\n    return this.state.items.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex3Column\",\n      key: item.toString().toLowerCase() + Math.round(Math.random() * 100),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, icon(item, index, Number(this.state.selected) === Number(index) ? true : false)));\n  }\n\n  render() {\n    //console.log(`${this.state.label} => ${this.state.value}`)\n    this.props.onChange(this.state.value, this.state.groupTitle);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-5 p-20 m-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, this.selectItems());\n  }\n\n}\n\nexport default FormRadio;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/Forms/FormRadio.js"],"names":["React","shakaBlack","thumbsUp","thumbsDown","FormRadio","Component","constructor","props","handleChange","event","console","log","state","label","target","value","onChange","groupTitle","items","selected","select","header","bind","selectItems","reportAwesome","setState","reportGood","reportBad","getIcon","item","index","toString","displayClass","displayColor","buttonClass","click","icon","toLowerCase","Math","round","random","Number","iconOut","map","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport shakaBlack from '../assets/images/shakaBlack.png';\nimport thumbsUp from '../assets/images/ThumbsUp.png';\nimport thumbsDown from '../assets/images/ThumbsDown.png';\n/*\n<FormRadio \n          selected={\"Ahi\"} \n          header = {\"Poki Bowl\"} \n          items = {[\"one\", \"two\", \"three\"]}\n        />\n*/\nclass FormRadio extends React.Component {\n\n    constructor(props) {\n        super(props); \n        this.items = props.items;\n        this.state = { \n            value: props.selected,\n            selected: props.selected,\n            select: props.selected,\n            header: props.header,\n            label: props.label,\n            groupTitle: props.groupTitle,\n            items: props.items\n        }\n        this.handleChange = this.handleChange.bind(this);\n    };\n\n    handleChange = (event) => {\n        console.log(`${this.state.label} => ${event.target.value}`)\n/*\n        this.setState({\n            selected: event.target.id,\n            value: event.target.value\n        });\n*/\n        this.props.onChange(event.target.value, this.state.groupTitle);\n    }\n    selectItems() {\n        const reportAwesome = () => console.log(\"awesome\");\n        this.setState({\n            selected: 0,\n            value: 'Firing'\n        });\n        const reportGood = () => console.log(\"good\")\n        this.setState({\n            selected: 1,\n            value: 'Fun'\n        });\n        const reportBad = () => console.log(\"bad\")\n        this.setState({\n            selected: 2,\n            value: 'Fucked'\n        });\n        const getIcon =(item, index, select) => {\n            const value = item.toString();\n            const displayClass = (select === true) ? \"shakingShaka shaka\" : \"shaka\";\n            \n            let displayColor = (value === \"Firing\") ? \"bg-neogreen\" : \"bg-yellow\";\n            displayColor = (value === \"Bad\") ? \"bg-red\" : displayColor;\n            \n            const buttonClass = displayColor + \" pt-10 pb-5 radius-10 m-5 button\";\n            let click = (value === \"Firing\") ? reportAwesome : reportGood;\n            click = (value === \"Bad\") ? reportBad : click;\n            \n            let icon = (value === \"Firing\") ? shakaBlack : thumbsUp;\n            icon = (value === \"Bad\") ? thumbsDown : icon;\n            \n            return <div className={buttonClass} onClick={click}>\n                <img id={value} src={icon} alt={value} className={displayClass} /><br/>\n                <div className=\"p-10\">\n                    <input id={index} key={item.toString().toLowerCase()+(Math.round(Math.random()*100))} type=\"radio\" value={item.toString()} onChange={this.handleChange} checked={Number(this.state.selected) === Number(index) ? true : false}/>\n                    <span className=\"description color-black ml-5\" key={item.toString().toLowerCase()+(Math.round(Math.random()*100))}>{item.toString()}</span>\n                </div>\n            </div>;\n        }\n\n        const icon = (item, index, select) => {\n            let iconOut = \"\";\n            iconOut = getIcon(item, index, select);\n            return iconOut;\n        } \n        \n        \n        return this.state.items.map((item, index) =>\n            <div className=\"flex3Column\" key={item.toString().toLowerCase()+(Math.round(Math.random()*100))} >\n                {icon(item, index, (Number(this.state.selected) === Number(index)) ? true : false)}\n            </div>\n        )\n\n    }\n\n    render() {\n        //console.log(`${this.state.label} => ${this.state.value}`)\n        this.props.onChange(this.state.value, this.state.groupTitle);\n        return (\n            <div className=\"m-5 p-20 m-5\">    \n                {this.selectItems()}\n            </div>\n        );\n    };\n}\nexport default FormRadio;"]},"metadata":{},"sourceType":"module"}