{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/waves/Tide.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Loader from '../utils/Loader.js';\n//import tide from '../../assets/images/tide.png'\nimport arrowDown from '../../assets/images/ArrowDown.png';\nimport arrowUp from '../../assets/images/ArrowUp.png';\n//import config from '../../apis/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tide = _ref => {\n  _s();\n  let {\n    tideNow,\n    data,\n    time,\n    setTide,\n    display,\n    isMotionOn\n  } = _ref;\n  let localTide = Number(JSON.parse(localStorage.getItem(\"tideData\")).data[JSON.parse(localStorage.getItem(\"tideData\")).data.length - 1].v).toFixed(1);\n  let localD = JSON.parse(localStorage.getItem(\"tideData\")).data[JSON.parse(localStorage.getItem(\"tideData\")).data.length - 1].d;\n  let localDr = JSON.parse(localStorage.getItem(\"tideData\")).data[JSON.parse(localStorage.getItem(\"tideData\")).data.length - 1].dr;\n\n  //console.log('Tide => tideNow: ', tideNow);\n  //console.log('Tide => tideNOW!!!: ', localTide);\n  //console.log('Tide => D!!!: ', localD);\n  //console.log('Tide => Dr!!!: ', localDr);\n  //console.log('Tide => data: ', data);\n  //console.log('Tide => display: ', display);\n  //console.log('Tide => time: ', time[0].year);\n\n  //const KEY = 'Client-ID '+config.unsplashAPI_KEY;\n  //const api = config.tideAPI_BASE_URL;\n  //const uriMLL = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${startTime}&end_date=${endTime}&station=9410230&product=water_level&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n\n  const [status, setStatus] = useState({\n    tide: '',\n    tideDirection: localStorage.getItem('tideDirection') || \"?\",\n    height: null,\n    updated: false\n  });\n  const getCurrentWaterLevel = () => {\n    //console.log('getCurrentWaterLevel - status: ', status);\n    if (tideNow.data !== undefined) {\n      const waterLevel = Number(tideNow.data[tideNow.data.length - 1].v).toFixed(1);\n      localStorage.setItem('height', waterLevel);\n      //console.log(`Tide => getCurrentWaterLevel => waterLevel: ${waterLevel}`)\n      return waterLevel;\n    }\n    localStorage.setItem('height', localTide);\n    return localTide;\n  };\n  const getCurrentTide = getCurrentWaterLevel() > 3 ? \"high\" : getCurrentWaterLevel() < 2 ? \"low\" : \"medium\";\n  useEffect(() => {\n    let mounted = true;\n    if (tideNow.data !== undefined && mounted === true) {\n      const tide = getCurrentTide;\n      const height = localStorage.getItem('height');\n      //console.log(`tideNowData => \\nurl: ${tideNowLink}\\nstartTime: ${startTime}\\nendTime: ${endTime}`)\n      //console.log(`tideData => data: ${JSON.stringify(data, null, 2)}`)\n      setTide(tide, height);\n    }\n    return () => mounted = false;\n  }, [tideNow.data, getCurrentTide, setTide]);\n  useEffect(() => {\n    let mounted = true;\n    const predictions = data[0].predictions;\n    if (predictions !== undefined && status.updated !== true && mounted) {\n      localStorage.setItem('tides', JSON.stringify(data));\n      const getTideHour = tide => Number(tide.t.split(\" \")[1].split(\":\")[0]);\n      const getTideMinutes = tide => Number(tide.t.split(\" \")[1].split(\":\")[1]);\n      const getTideTime = tide => `${getTideHour(tide)}:${getTideMinutes(tide)}`;\n      const getTideHeight = tide => Number(tide.v);\n      const getTide = tide => tide.type;\n      console.log(`Tide - getDirection => data: ${JSON.stringify(data, null, 2)}`);\n      const hours = predictions.map(tide => getTideHour(tide));\n      const minutes = predictions.map(tide => getTideMinutes(tide));\n      const times = predictions.map(tide => getTideTime(tide));\n      const heights = predictions.map(tide => getTideHeight(tide));\n      //console.log('tide heights: ', heights);\n      const tides = predictions.map(tide => getTide(tide));\n      const checkTide = hour => {\n        if (hour >= time[0].hours) {\n          //console.log(`checkTide =>\\nhours: ${hours}\\nhour: ${hour}\\ncurrent time.hour: ${time[0].hours}`)\n          if (hour === time[0].hours) {\n            if (minutes > time[0].minutes) {\n              return true;\n            }\n          } else if (hour > time[0].hours) {\n            return true;\n          }\n        }\n        ;\n        return false;\n      };\n      //const nextTideIndex = hours.findIndex(checkTide);\n      const nextTideIndex = hours.findIndex(checkTide);\n      const nextIndexExtra = () => hours[nextTideIndex - 1] === time[0].hours && minutes[nextTideIndex - 1] > time[0].minutes ? 1 : 0;\n      const getNextIndex = () => nextTideIndex + nextIndexExtra();\n      const pastLastTide = Number(time[0].hours - hours[getNextIndex() - 1]);\n      const untilNextTide = Number(hours[getNextIndex()] - time[0].hours);\n      // eslint-disable-next-line\n      const untilNextTideMinutes = Number(minutes[getNextIndex()] - time[0].minutes);\n      const lessThanHour = untilNextTide === 0 ? true : false;\n      const untilTide = () => {\n        const pastTime = untilNextTideMinutes < 0 ? untilNextTideMinutes + 60 : untilNextTideMinutes;\n        //console.log(`untilTide => \\npastTime: ${pastTime}\\nuntilNextTideMinutes: ${untilNextTideMinutes}\\nuntilNextTide: ${untilNextTide}`)\n        const time = lessThanHour ? String(pastTime) + 'min' : (untilNextTideMinutes < 0 ? untilNextTide - 1 : untilNextTide) + 'hr ' + String(pastTime) + 'min';\n        const timeDisplay = time;\n        //console.log(`untilTide => timeDisplay: ${timeDisplay}`);\n        return timeDisplay;\n      };\n      // eslint-disable-next-line\n      const closerTideIndex = pastLastTide >= untilNextTide ? getNextIndex() : getNextIndex() - 1;\n      const nextTide = tides[getNextIndex()];\n      const nextHeight = heights[getNextIndex()];\n      const lastHeight = heights[getNextIndex() - 1];\n      const getNextHour = Number(times[getNextIndex() === -1 ? times.length - 1 : getNextIndex()].split(':')[0]);\n      const nextHour = getNextHour > 12 ? getNextHour - 12 : getNextHour;\n      const nextMinutes = times[getNextIndex() === -1 ? 1 : getNextIndex()].split(':')[1] < 10 ? `0${times[getNextIndex() === -1 ? times.length - 1 : getNextIndex()].split(':')[1]}` : times[getNextIndex() === -1 ? times.length - 1 : getNextIndex()].split(':')[1];\n      const nextTime = `${nextHour}:${nextMinutes}`;\n      // eslint-disable-next-line\n      const lastTide = tides[getNextIndex() - 1];\n      const convertTide = tide => {\n        const convertedTide = tide === 'H' ? 'High' : 'Low';\n        return convertedTide;\n      };\n      //console.log(`CURRENT: ${getCurrentTide}\\ngetNextIndex: ${getNextIndex()}\\nheights: ${heights}\\nlastHeight: ${lastHeight}\\nnextHeight: ${nextHeight}\\ntime: ${time[0].hours}::${time[0].minutes}\\nTIMES: ${hours}\\n next ${nextTide} \\ntide in ${untilNextTide} hours\\n previous ${lastTide} tide was ${pastLastTide} hours ago tideMinutes: ${time[0].minutes}`);\n      setStatus(prevState => ({\n        ...prevState,\n        tide: getCurrentTide,\n        tideDirection: nextTide === 'L' ? \"DOWN\" : \"UP\",\n        previousTide: lastHeight,\n        nextTide: nextHeight,\n        nextPhase: convertTide(nextTide),\n        nextTime: nextTime,\n        untilNextTide: untilTide(),\n        nextTideIndex: getNextIndex(),\n        updated: true\n      }));\n    }\n    return () => mounted = false;\n  }, [data, getCurrentTide, status.updated, time]);\n  const previousTide = () => localStorage.getItem('tide') ? Number(localStorage.getItem('tide')) : 0;\n  // eslint-disable-next-line\n  const notEqual = () => Number(previousTide()) !== Number(status.height) ? true : false;\n  // eslint-disable-next-line\n  const greaterThan = () => Number(previousTide()) > Number(status.height) ? true : false;\n  const getDownArrow = () => {\n    localStorage.setItem('tideDirection', 'DOWN');\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"arrows mb--2\",\n      src: arrowDown,\n      alt: \"tide direction down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 16\n    }, this);\n  };\n  const getUpArrow = () => {\n    localStorage.setItem('tideDirection', 'UP');\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"arrows mb--2\",\n      src: arrowUp,\n      alt: \"tide direction up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 16\n    }, this);\n  };\n  const getTideDirection = () => status.tideDirection === \"DOWN\" ? getDownArrow() : getUpArrow();\n  //getTideDirection = () => (notEqual() && greaterThan()) ? \"DOWN\" : status.tideDirection;\n  // eslint-disable-next-line\n  const setLocalTide = () => localStorage.setItem('tide', status.tide);\n  const setLocalTideDirection = () => localStorage.setItem('tideDirection', status.tideDirection);\n  // eslint-disable-next-line\n  const fixHours = () => time[0].hours > 12 ? Number(time[0].hours - 12) : time[0].hours;\n  const narrowDisplay = /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 27\n  }, this);\n  const wideDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"from: \", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"bold\",\n      children: [status.previousTide ? status.previousTide.toFixed(1) : '', \"' \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 35\n    }, this), \"to: \", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"bold\",\n      children: [status.nextTide ? status.nextTide.toFixed(1) : '', \"'\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 117\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"bold\",\n      children: [status.nextPhase, \" in \", status.untilNextTide]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 103\n    }, this), \"at: \", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"bold\",\n      children: status.nextTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 25\n  }, this);\n  const starDisplay = /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 25\n  }, this);\n  const getTideDetails = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"greet pt-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bold\",\n        children: [String(status.tide).toUpperCase(), \" tide\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bold\",\n        children: getCurrentWaterLevel()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this), \" ft.\", display === 'narrow' ? narrowDisplay : display === 'star' ? starDisplay : wideDisplay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 16\n    }, this);\n  };\n  const getHeight = () => {\n    const height = getCurrentWaterLevel();\n    localStorage.setItem('height', height);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"greet pt-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bold\",\n        children: [String(status.tide).toUpperCase(), \" tide\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bold\",\n        children: [height, \" ft.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 16\n    }, this);\n  };\n  // eslint-disable-next-line\n  const tideError = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [status.nextPhase, \" tide after midnight, tomorrows tide info will update in \", 24 - time[0].hours, \" hrs\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 29\n  }, this);\n  const tideClasses = () => {\n    if (display === 'star') {\n      return '';\n    } else {\n      return 'r-10 m-5 bg-lite white pl-15 pr-15 pt-20 pb-30';\n    }\n  };\n  const getTideDisplay = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: tideClasses(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-15 mb-5\",\n      children: getTideDirection()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }, this), status.nextTideIndex === -1 ? getHeight() : getTideDetails()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 34\n  }, this);\n  const percent = 'twentyfivePercent mt--70 mb--70';\n  // eslint-disable-next-line\n  const loading = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: percent,\n    children: /*#__PURE__*/_jsxDEV(Loader, {\n      isMotionOn: isMotionOn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 27\n  }, this);\n  setLocalTideDirection();\n  //console.log(`tide direction: ${status.tideDirection} previous height: ${previousTide()} height: ${status.height} == ${previousTide() === Number(status.height)} \\ntide: ${localStorage.getItem('tide')}`)\n  //console.log('tide status: ', status);\n  return getTideDisplay();\n};\n_s(Tide, \"ECEzeJ3GUnyQvA7z2jF0X+ld5oU=\");\n_c = Tide;\nexport default Tide;\n/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/\n\n/* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/\nvar _c;\n$RefreshReg$(_c, \"Tide\");","map":{"version":3,"names":["React","useState","useEffect","Loader","arrowDown","arrowUp","jsxDEV","_jsxDEV","Tide","_ref","_s","tideNow","data","time","setTide","display","isMotionOn","localTide","Number","JSON","parse","localStorage","getItem","length","v","toFixed","localD","d","localDr","dr","status","setStatus","tide","tideDirection","height","updated","getCurrentWaterLevel","undefined","waterLevel","setItem","getCurrentTide","mounted","predictions","stringify","getTideHour","t","split","getTideMinutes","getTideTime","getTideHeight","getTide","type","console","log","hours","map","minutes","times","heights","tides","checkTide","hour","nextTideIndex","findIndex","nextIndexExtra","getNextIndex","pastLastTide","untilNextTide","untilNextTideMinutes","lessThanHour","untilTide","pastTime","String","timeDisplay","closerTideIndex","nextTide","nextHeight","lastHeight","getNextHour","nextHour","nextMinutes","nextTime","lastTide","convertTide","convertedTide","prevState","previousTide","nextPhase","notEqual","greaterThan","getDownArrow","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","getUpArrow","getTideDirection","setLocalTide","setLocalTideDirection","fixHours","narrowDisplay","Fragment","wideDisplay","children","starDisplay","getTideDetails","toUpperCase","getHeight","tideError","tideClasses","getTideDisplay","percent","loading","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/Tide.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Loader from '../utils/Loader.js';\n//import tide from '../../assets/images/tide.png'\nimport arrowDown from '../../assets/images/ArrowDown.png';\nimport arrowUp from '../../assets/images/ArrowUp.png';\n//import config from '../../apis/config';\n\nconst Tide = ({tideNow, data, time, setTide, display, isMotionOn}) => {\n\n    let localTide = Number(JSON.parse(localStorage.getItem(\"tideData\")).data[JSON.parse(localStorage.getItem(\"tideData\")).data.length-1].v).toFixed(1);\n    let localD = JSON.parse(localStorage.getItem(\"tideData\")).data[JSON.parse(localStorage.getItem(\"tideData\")).data.length-1].d;\n    let localDr = JSON.parse(localStorage.getItem(\"tideData\")).data[JSON.parse(localStorage.getItem(\"tideData\")).data.length-1].dr;\n    \n    //console.log('Tide => tideNow: ', tideNow);\n    //console.log('Tide => tideNOW!!!: ', localTide);\n    //console.log('Tide => D!!!: ', localD);\n    //console.log('Tide => Dr!!!: ', localDr);\n    //console.log('Tide => data: ', data);\n    //console.log('Tide => display: ', display);\n    //console.log('Tide => time: ', time[0].year);\n\n    //const KEY = 'Client-ID '+config.unsplashAPI_KEY;\n    //const api = config.tideAPI_BASE_URL;\n    //const uriMLL = `https://tidesandcurrents.noaa.gov/api/datagetter?begin_date=${startTime}&end_date=${endTime}&station=9410230&product=water_level&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n    \n    const [status, setStatus] = useState({\n        tide: '',\n        tideDirection: localStorage.getItem('tideDirection') || \"?\",\n        height: null,\n        updated: false\n    })\n    const getCurrentWaterLevel = () => {\n        //console.log('getCurrentWaterLevel - status: ', status);\n        if (tideNow.data !== undefined) { \n            const waterLevel = Number(tideNow.data[tideNow.data.length - 1].v).toFixed(1);\n            localStorage.setItem('height', waterLevel);\n            //console.log(`Tide => getCurrentWaterLevel => waterLevel: ${waterLevel}`)\n            return waterLevel;\n        }\n        localStorage.setItem('height', localTide);\n        return localTide;\n    }\n    const getCurrentTide = (getCurrentWaterLevel() > 3) ? \"high\" : (getCurrentWaterLevel() < 2) ? \"low\" : \"medium\";\n    useEffect(() => {\n        let mounted = true;\n        if ((tideNow.data !== undefined) && mounted === true) {\n            const tide = getCurrentTide;\n            const height = localStorage.getItem('height');\n            //console.log(`tideNowData => \\nurl: ${tideNowLink}\\nstartTime: ${startTime}\\nendTime: ${endTime}`)\n            //console.log(`tideData => data: ${JSON.stringify(data, null, 2)}`)\n            setTide(tide, height);\n        }\n        return () => mounted = false;\n    },[tideNow.data, getCurrentTide, setTide]);\n    useEffect(() => {\n        let mounted = true;\n        const predictions = data[0].predictions;\n        if ((predictions !== undefined && status.updated !== true) && mounted) {\n            localStorage.setItem('tides', JSON.stringify(data));\n            const getTideHour = (tide) => Number(tide.t.split(\" \")[1].split(\":\")[0]);\n            const getTideMinutes = (tide) => Number(tide.t.split(\" \")[1].split(\":\")[1]);const getTideTime = (tide) => `${getTideHour(tide)}:${getTideMinutes(tide)}`;\n            const getTideHeight = (tide) => Number(tide.v);\n            const getTide = (tide) => tide.type;\n            console.log(`Tide - getDirection => data: ${JSON.stringify(data, null, 2)}`)\n            const hours = predictions.map((tide) => getTideHour(tide));\n            const minutes = predictions.map((tide) => getTideMinutes(tide));\n            const times = predictions.map((tide) => getTideTime(tide));\n            const heights = predictions.map((tide) => getTideHeight(tide));\n            //console.log('tide heights: ', heights);\n            const tides = predictions.map((tide) => getTide(tide));\n            const checkTide = (hour) => {\n                if (hour >= time[0].hours) {\n                    //console.log(`checkTide =>\\nhours: ${hours}\\nhour: ${hour}\\ncurrent time.hour: ${time[0].hours}`)\n                    if (hour === time[0].hours) {\n                        if (minutes > time[0].minutes) {\n                            return true;\n                        }\n                    } else if (hour > time[0].hours) {\n                        return true;\n                    }\n                };\n                return false;\n            }\n            //const nextTideIndex = hours.findIndex(checkTide);\n            const nextTideIndex = hours.findIndex(checkTide);\n            const nextIndexExtra = () => ((hours[nextTideIndex-1] === time[0].hours) && (minutes[nextTideIndex-1] > time[0].minutes)) ? 1 : 0;\n            const getNextIndex = () => nextTideIndex + nextIndexExtra();\n            const pastLastTide = Number(time[0].hours-hours[getNextIndex()-1]);\n            const untilNextTide = Number(hours[getNextIndex()]-time[0].hours);\n            // eslint-disable-next-line\n            const untilNextTideMinutes = Number(minutes[getNextIndex()]-time[0].minutes);\n            const lessThanHour = (untilNextTide === 0) ? true : false;\n            const untilTide = () => {\n                const pastTime = (untilNextTideMinutes < 0) ? (untilNextTideMinutes+60) : untilNextTideMinutes;\n                //console.log(`untilTide => \\npastTime: ${pastTime}\\nuntilNextTideMinutes: ${untilNextTideMinutes}\\nuntilNextTide: ${untilNextTide}`)\n                const time = (lessThanHour) ? (String(pastTime) + 'min') : ((untilNextTideMinutes < 0) ? (untilNextTide-1) : untilNextTide) + 'hr ' + String(pastTime) + 'min';\n                const timeDisplay = time;\n                //console.log(`untilTide => timeDisplay: ${timeDisplay}`);\n                return timeDisplay;\n            }\n            // eslint-disable-next-line\n            const closerTideIndex = (pastLastTide >= untilNextTide) ? getNextIndex() : (getNextIndex()-1);\n            \n            const nextTide = tides[getNextIndex()];\n            const nextHeight = heights[getNextIndex()];\n            const lastHeight = heights[getNextIndex()-1];\n            const getNextHour = Number(times[(getNextIndex() === -1) ? (times.length-1) : getNextIndex()].split(':')[0]);\n            const nextHour = (getNextHour>12) ? (getNextHour-12) : getNextHour;\n            const nextMinutes = (times[(getNextIndex() === -1) ? 1 : getNextIndex()].split(':')[1] < 10) ? `0${times[(getNextIndex() === -1) ? (times.length-1) : getNextIndex()].split(':')[1]}` : times[(getNextIndex() === -1) ? (times.length-1) : getNextIndex()].split(':')[1];\n            const nextTime = `${nextHour}:${nextMinutes}`;\n            // eslint-disable-next-line\n            const lastTide = tides[getNextIndex()-1];\n            const convertTide = (tide) => {\n                const convertedTide = (tide === 'H') ? 'High' : 'Low';\n                return convertedTide;\n            };\n            //console.log(`CURRENT: ${getCurrentTide}\\ngetNextIndex: ${getNextIndex()}\\nheights: ${heights}\\nlastHeight: ${lastHeight}\\nnextHeight: ${nextHeight}\\ntime: ${time[0].hours}::${time[0].minutes}\\nTIMES: ${hours}\\n next ${nextTide} \\ntide in ${untilNextTide} hours\\n previous ${lastTide} tide was ${pastLastTide} hours ago tideMinutes: ${time[0].minutes}`);\n            setStatus(prevState => ({\n                ...prevState,\n                tide: getCurrentTide,\n                tideDirection: (nextTide === 'L') ? \"DOWN\" : \"UP\",\n                previousTide: lastHeight,\n                nextTide: nextHeight,\n                nextPhase: convertTide(nextTide),\n                nextTime: nextTime,\n                untilNextTide: untilTide(),\n                nextTideIndex: getNextIndex(),\n                updated: true\n            }))\n        }\n        return () => mounted = false;\n    },[data, getCurrentTide, status.updated, time]);\n    const previousTide = () => (localStorage.getItem('tide')) ? Number(localStorage.getItem('tide')) : 0;\n    // eslint-disable-next-line\n    const notEqual = () => (Number(previousTide()) !== Number(status.height)) ? true : false;\n    // eslint-disable-next-line\n    const greaterThan = () => (Number(previousTide()) > Number(status.height)) ? true : false;\n    const getDownArrow = () => {\n        localStorage.setItem('tideDirection', 'DOWN')\n        return <img className='arrows mb--2' src={arrowDown} alt='tide direction down' />\n    }\n    const getUpArrow = () => { \n        localStorage.setItem('tideDirection', 'UP')\n        return <img className='arrows mb--2' src={arrowUp}  alt='tide direction up' />\n    }\n    const getTideDirection = () => (status.tideDirection === \"DOWN\") ? getDownArrow() : getUpArrow();\n    //getTideDirection = () => (notEqual() && greaterThan()) ? \"DOWN\" : status.tideDirection;\n    // eslint-disable-next-line\n    const setLocalTide = () => localStorage.setItem('tide', status.tide);\n    const setLocalTideDirection = () => localStorage.setItem('tideDirection', status.tideDirection);\n    // eslint-disable-next-line\n    const fixHours = () => (time[0].hours>12) ? Number(time[0].hours - 12) : time[0].hours;\n    const narrowDisplay = <React.Fragment></React.Fragment>;\n    const wideDisplay = <div>\n                            from: <span className='bold'>{(status.previousTide) ? status.previousTide.toFixed(1) : ''}' </span>\n                            to: <span className='bold'>{(status.nextTide) ? status.nextTide.toFixed(1) : ''}'</span><br/>\n                            <span className='bold'>{status.nextPhase} in {status.untilNextTide}</span><br/>\n                            at: <span className='bold'>{status.nextTime}</span>\n                        </div>\n    const starDisplay = <React.Fragment></React.Fragment>\n    const getTideDetails = () => {\n        return <div className='greet pt-10'>\n                    <div className='bold'>{String(status.tide).toUpperCase()} tide</div>\n                    <span className='bold'>{getCurrentWaterLevel()}</span> ft.\n                    {(display === 'narrow') \n                        ? narrowDisplay \n                        : (display === 'star') \n                            ? starDisplay \n                            : wideDisplay\n                    }\n                </div>\n    }\n    const getHeight = () => {\n        const height = getCurrentWaterLevel();\n        localStorage.setItem('height', height);\n        return <div className='greet pt-10'>\n                    <div className='bold'>{String(status.tide).toUpperCase()} tide</div>\n                    <div className='bold'>{height} ft.</div>\n                </div>\n    }\n    // eslint-disable-next-line\n    const tideError = () => <React.Fragment>\n            {status.nextPhase} tide after midnight, tomorrows tide info will update in {24-time[0].hours} hrs\n        </React.Fragment>\n    const tideClasses = () => {\n        if (display === 'star') {\n            return ''\n        } else {\n            return 'r-10 m-5 bg-lite white pl-15 pr-15 pt-20 pb-30'\n        }\n        \n    }\n    const getTideDisplay = () => <div className={tideClasses()}>\n                            <div className='mt-15 mb-5'>{getTideDirection()}</div>\n                            {(status.nextTideIndex === -1) ? getHeight() : getTideDetails()}  \n                        </div>;\n\n    const percent = 'twentyfivePercent mt--70 mb--70';\n    // eslint-disable-next-line\n    const loading = () => <div className={percent}>\n                        <Loader isMotionOn={isMotionOn}/>\n                    </div>;\n\n    setLocalTideDirection();\n    //console.log(`tide direction: ${status.tideDirection} previous height: ${previousTide()} height: ${status.height} == ${previousTide() === Number(status.height)} \\ntide: ${localStorage.getItem('tide')}`)\n    //console.log('tide status: ', status);\n    return getTideDisplay()\n}\n\nexport default Tide;\n/*   sample url data\n{\n    \"metadata\": {\n        \"id\":\"8454000\",\n        \"name\":\"Providence\",\n        \"lat\":\"41.8071\",\n        \"lon\":\"-71.4012\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2013-01-01 10:00\", \n            \"v\":\"0.072\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:06\", \n            \"v\":\"0.095\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:12\", \n            \"v\":\"0.115\", \n            \"s\":\"0.003\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:18\", \n            \"v\":\"0.138\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        },\n        {\n            \"t\":\"2013-01-01 10:24\", \n            \"v\":\"0.167\", \n            \"s\":\"0.004\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"v\"\n        }\n    ]\n}\n*/\n\n/* Sample temp data\nmetadata\":{\n    \"id\":\"8454000\",\n    \"name\":\"Providence\",\n    \"lat\":\"41.8071\",\n    \"lon\":\"-71.4012\"\n}, \n\"data\": [\n    {\n        \"t\":\"2013-08-08 15:00\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    },\n    {\n        \"t\":\"2013-08-08 15:06\", \n        \"v\":\"72.5\", \n        \"f\":\"0,0,0\"\n    }\n]\n}\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:46&\nend_date=20200520%2018:46&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\nhttps://tidesandcurrents.noaa.gov/api/datagetter?\nbegin_date=20200520%2018:24&\nend_date=20200520%2018:24&\nstation=9410230&\nproduct=water_level&\ndatum=mllw&\nunits=english&\ntime_zone=gmt&\napplication=web_services&\nformat=json\n\n{\n    \"metadata\":{\n        \"id\":\"9410230\",\n        \"name\":\"La Jolla\",\n        \"lat\":\"32.8669\",\n        \"lon\":\"-117.2571\"\n    }, \n    \"data\": [\n        {\n            \"t\":\"2020-05-20 18:24\", \n            \"v\":\"2.494\", \n            \"s\":\"0.459\", \n            \"f\":\"0,0,0,0\", \n            \"q\":\"p\"\n        }\n    ]\n}\n*/\n"],"mappings":"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},"metadata":{},"sourceType":"module"}