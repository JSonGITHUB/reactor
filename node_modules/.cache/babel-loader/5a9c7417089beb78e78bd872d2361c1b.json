{"ast":null,"code":"import _classCallCheck from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/js/Dev/my-first-reactor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import LogEntry from'./LogEntry.js';import Loader from'../utils/Loader.js';import LogId from'./LogId.js';var Logger=/*#__PURE__*/function(_React$Component){_inherits(Logger,_React$Component);var _super=_createSuper(Logger);function Logger(props){var _this;_classCallCheck(this,Logger);_this=_super.call(this,props);//        console.log(`Logger => constructor -> props.logId: ${this.logIdComponent.getLogId()}`)\n//        console.log(`Logger => constructor -> localStorage.getItem: ${this.logIdComponent.getLogId()} ====> ${localStorage.getItem(this.logIdComponent.getLogId())}`)\n_this.logIdComponent=new LogId(_this.props.logId);_this.getSpot=function(){return localStorage.getItem(\"spot\");};_this.getStateLog=function(){return _this.state.log;};if(localStorage.getItem(_this.logIdComponent.getLogId())===null){_this.log=_this.logIdComponent.templateData;_this.lodId=_this.logIdComponent.generateNewLogId();}else{_this.log=JSON.parse(localStorage.getItem(_this.logIdComponent.getLogId()));_this.logId=_this.logIdComponent.getLogId();}//        console.log(`Logger => constructor -> log: ${JSON.stringify(this.log,null,2)}`)\n_this.state={date:new Date(),log:_this.log,items:[],isLoaded:false,logId:_this.logId};_this.updateLog=_this.updateLog.bind(_assertThisInitialized(_this));_this.getStateLog=_this.getStateLog.bind(_assertThisInitialized(_this));return _this;}//getSpot = () => (this.state.spot) ? this.state.spot : this.log.Location.Break;\n_createClass(Logger,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//const logId = (this.props.location.state === undefined) ? this.logIdComponent.getLastRecordId() : this.props.location.state.logId.item;\nvar state=this.props.location.state;console.log(\"Logger => componentDidMount -> SPOT: \".concat(this.getSpot()));var logId=state===undefined?this.logIdComponent.getLogId():state.logId.item;//console.log(`Logger => componentDidMount -> logId: ${logId}`)\nif(localStorage.getItem(this.logIdComponent.getLogId())===null){this.log=this.logIdComponent.templateData;this.lodId=this.logIdComponent.generateNewLogId();}else{this.log=JSON.parse(localStorage.getItem(this.logIdComponent.getLogId()));this.logId=this.logIdComponent.getLogId();}console.log(\"logId$$$$$$$$$$: \".concat(this.logIdComponent.getLogId(),\" --- localStorage.\").concat(this.logIdComponent.getLogId(),\" ==== \").concat(JSON.stringify(this.log,null,2),\" AND logId::::: \").concat(logId));//      console.log(`Logger => constructor -> log: ${JSON.stringify(this.log,null,2)}`)\nvar data;//localStorage.setItem('spot', this.getSpot());\nvar returnJSON=function returnJSON(response){return response.json();};var returnRejection=function returnRejection(response){return Promise.reject({status:response.status,data:data});};var validate=function validate(response){return response.ok?returnJSON(response):returnRejection(response);};/*\n        const requestInit = {\n            method:'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            cache: 'default'\n        };\n        */ //const uri = new Request('https://jsongithub.github.io/portfolio/assets/data/appData.json', requestInit);\n//GOOD const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\nvar uri='https://jsongithub.github.io/portfolio/assets/data/appData.json';//const uri = 'localhost:8080/writeSurfLog.json';\nfetch(uri).then(function(response){return validate(response);}).then(function(data){_this2.setState({isLoaded:true,items:data,//logId: this.logIdComponent.getLogId()\nlogId:logId});}).catch(function(err){return console.log(\"Something went wrong!\\nuri: \".concat(uri,\" \\npath: \").concat(window.location.pathname,\"\\n\"),err);});}},{key:\"updateLog\",value:function updateLog(groupTitle,label,selected,set){this.log[groupTitle][label]=selected;if(groupTitle!==undefined&&groupTitle!==1&&selected!==undefined&&set){this.setState({log:this.log});}}},{key:\"render\",value:function render(){var _this$state=this.state,isLoaded=_this$state.isLoaded,items=_this$state.items;//        console.log(`Logger ===> ${JSON.stringify(items[0].group.selections, null, 2)}`);\nvar appInterface=/*#__PURE__*/React.createElement(\"div\",{className:\"App-content fadeIn\"},/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"},/*#__PURE__*/React.createElement(Loader,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"}));if(isLoaded){appInterface=/*#__PURE__*/React.createElement(\"div\",{className:\"App-content fadeIn\"},/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"},/*#__PURE__*/React.createElement(LogEntry// logId={this.logIdComponent.getLogId()}\n,{logId:this.state.logId,onChange:this.updateLog,getStateLog:this.getStateLog,title:\"Session Log\",message:\"Add your session data\",buttonLabel:\"submit\",items:items})),/*#__PURE__*/React.createElement(\"div\",{className:\"flex3Column\"}));}return appInterface;}}]);return Logger;}(React.Component);export default Logger;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/Logger.js"],"names":["React","LogEntry","Loader","LogId","Logger","props","logIdComponent","logId","getSpot","localStorage","getItem","getStateLog","state","log","getLogId","templateData","lodId","generateNewLogId","JSON","parse","date","Date","items","isLoaded","updateLog","bind","location","console","undefined","item","stringify","data","returnJSON","response","json","returnRejection","Promise","reject","status","validate","ok","uri","fetch","then","setState","catch","err","window","pathname","groupTitle","label","selected","set","appInterface","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport LogEntry from './LogEntry.js';\nimport Loader from '../utils/Loader.js';\nimport LogId from './LogId.js';\nclass Logger extends React.Component {\n\n    logIdComponent = new LogId(this.props.logId);\n    \n    constructor(props) {\n        super(props);\n//        console.log(`Logger => constructor -> props.logId: ${this.logIdComponent.getLogId()}`)\n//        console.log(`Logger => constructor -> localStorage.getItem: ${this.logIdComponent.getLogId()} ====> ${localStorage.getItem(this.logIdComponent.getLogId())}`)\n        if (localStorage.getItem(this.logIdComponent.getLogId()) === null) {\n            this.log = this.logIdComponent.templateData;\n            this.lodId = this.logIdComponent.generateNewLogId();\n        } else {\n            this.log = JSON.parse(localStorage.getItem(this.logIdComponent.getLogId()));\n            this.logId = this.logIdComponent.getLogId()\n        }\n//        console.log(`Logger => constructor -> log: ${JSON.stringify(this.log,null,2)}`)\n        this.state = {\n            date: new Date(),\n            log: this.log,\n            items: [],\n            isLoaded: false,\n            logId: this.logId\n        };\n        this.updateLog = this.updateLog.bind(this);\n        this.getStateLog = this.getStateLog.bind(this);\n    }\n    //getSpot = () => (this.state.spot) ? this.state.spot : this.log.Location.Break;\n    getSpot = () => localStorage.getItem(\"spot\");\n    componentDidMount() {\n        //const logId = (this.props.location.state === undefined) ? this.logIdComponent.getLastRecordId() : this.props.location.state.logId.item;\n        const { state } = this.props.location;\n        console.log(`Logger => componentDidMount -> SPOT: ${this.getSpot()}`); \n        const logId = (state === undefined) ? this.logIdComponent.getLogId() : state.logId.item;\n        //console.log(`Logger => componentDidMount -> logId: ${logId}`)\n        if (localStorage.getItem(this.logIdComponent.getLogId()) === null) {\n            this.log = this.logIdComponent.templateData;\n            this.lodId = this.logIdComponent.generateNewLogId();\n        } else {\n            this.log = JSON.parse(localStorage.getItem(this.logIdComponent.getLogId()));\n            this.logId = this.logIdComponent.getLogId()\n        }\n        console.log(`logId$$$$$$$$$$: ${this.logIdComponent.getLogId()} --- localStorage.${this.logIdComponent.getLogId()} ==== ${JSON.stringify(this.log,null,2)} AND logId::::: ${logId}`)\n//      console.log(`Logger => constructor -> log: ${JSON.stringify(this.log,null,2)}`)\n        let data;\n        //localStorage.setItem('spot', this.getSpot());\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        /*\n        const requestInit = {\n            method:'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            mode: 'cors',\n            cache: 'default'\n        };\n        */\n        //const uri = new Request('https://jsongithub.github.io/portfolio/assets/data/appData.json', requestInit);\n        //GOOD const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n        const uri = 'https://jsongithub.github.io/portfolio/assets/data/appData.json';\n        //const uri = 'localhost:8080/writeSurfLog.json';\n        fetch(uri)\n            .then(response => validate(response))\n            .then(data => {\n                this.setState({\n                    isLoaded: true,\n                    items: data,\n                    //logId: this.logIdComponent.getLogId()\n                    logId: logId\n                })\n            })\n            .catch(err => console.log(`Something went wrong!\\nuri: ${uri} \\npath: ${window.location.pathname}\\n`, err));\n       \n    }\n\n    updateLog(groupTitle, label, selected, set) {\n        this.log[groupTitle][label] = selected;\n        if (groupTitle !== undefined && groupTitle !== 1 && selected !== undefined && set) {\n            this.setState({log: this.log});\n        }\n    }\n    getStateLog = () => this.state.log;\n    \n    render() {      \n        let {isLoaded, items} = this.state;\n//        console.log(`Logger ===> ${JSON.stringify(items[0].group.selections, null, 2)}`);\n        let appInterface = <div className=\"App-content fadeIn\">\n                                <div className=\"flex3Column\"></div>\n                                <div className=\"flex3Column\">\n                                    <Loader />\n                                </div>\n                                <div className=\"flex3Column\"></div>\n                            </div>;\n        if (isLoaded) {\n            appInterface = <div className=\"App-content fadeIn\">\n                <div className=\"flex3Column\"></div>\n                <div className=\"flex3Column\">\n                    <LogEntry\n                       // logId={this.logIdComponent.getLogId()}\n                        logId={this.state.logId}\n                        onChange={this.updateLog} \n                        getStateLog={this.getStateLog} \n                        title=\"Session Log\" \n                        message=\"Add your session data\"  \n                        buttonLabel=\"submit\" \n                        items={items}\n                    />\n                </div>\n                <div className=\"flex3Column\"></div>\n            </div>\n            \n        }\n        return (\n            appInterface            \n        )\n    }\n    \n}\nexport default Logger;"]},"metadata":{},"sourceType":"module"}