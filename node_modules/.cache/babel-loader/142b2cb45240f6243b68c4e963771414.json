{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js\";\nimport React, { useState } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport { openweatherAPI_KEY, openweatherAPI_BASE_URL } from '../../apis/config';\nimport N from '../../assets/images/windN.png';\nimport NE from '../../assets/images/windNE.png';\nimport E from '../../assets/images/windE.png';\nimport SE from '../../assets/images/windSE.png';\nimport S from '../../assets/images/windS.png';\nimport SW from '../../assets/images/windSW.png';\nimport W from '../../assets/images/windW.png';\nimport NW from '../../assets/images/windNW.png';\n\nconst CitySelector = () => {\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n  //Metric\n  //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n  //Image Source\n  //http://openweathermap.org/img/wn/10d@2x.png\n  const key = openweatherAPI_KEY;\n  const baseUrl = openweatherAPI_BASE_URL;\n  const [city, setCity] = useState('Carlsbad, CA');\n  const [results, setResults] = useState('');\n  const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n\n  const displayResults = results => {\n    const list = results.list.map(item => {\n      const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n      const getWeekdayIndex = day => weekdays.findIndex(weekDay => weekDay.includes(day));\n\n      const main = item.main;\n      const temp = main.temp.toFixed(1);\n      const temp_min = main.temp_min.toFixed(1);\n      const temp_max = main.temp_max.toFixed(1);\n      const feels_like = `feels like: ${main.feels_like}Â°`;\n      const temperature = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow bold mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }\n      }, \"temperature: \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 p-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }\n      }, temp, \"\\xB0\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"copyright\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }\n      }, temp_min, \"\\xB0\")));\n      const humidity = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 30\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow bold mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      }, \"humidity: \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 p-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      }, main.humidity));\n      const weather = item.weather[0];\n      const mainDescription = weather.main;\n      const description = weather.description;\n      const icon = weather.icon;\n      const wind = item.wind;\n\n      const windSpeed = () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }\n      }, wind.speed.toFixed(0), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"copyright\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 41\n        }\n      }, \" mph\"));\n\n      const angleArray = [0, 25, 45, 65, 90, 115, 135, 160, 180, 205, 225, 250, 270, 295, 315, 340];\n      const directionArray = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'];\n\n      const getWindDirection = direction => {\n        const windAngle = direction.toFixed(0);\n        const angleIndex = angleArray.findIndex(angle => angle >= windAngle);\n        return directionArray[angleIndex];\n      };\n\n      const windDirection = () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 41\n        }\n      }, wind.deg, \"\\xB0\");\n\n      const windDisplay = () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow bold mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 45\n        }\n      }, \"wind: \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 p-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 45\n        }\n      }, getWindDirection(wind.deg), windDirection(), windSpeed()));\n\n      const visibility = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow bold mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }, \"visibility: \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"r-5 p-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }\n      }, item.visibility, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"copyright\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 41\n        }\n      }, \" ft\")));\n      const period = item.dt_txt;\n      const momentArray = period.split(' ');\n      const date = Date(String(momentArray[0]));\n      const dateArray = date.split(' ');\n      const weekday = weekdays[getWeekdayIndex(dateArray[0])];\n      const month = dateArray[1];\n      const day = dateArray[2];\n      const year = dateArray[3];\n      const timeArray = dateArray[4].split(':');\n      const hour = timeArray[0];\n      const getHour = hour > 12 ? hour - 12 : hour;\n      const timeOfDay = hour > 12 ? 'pm' : 'am';\n      const minutes = timeArray[1];\n      const getTime = `${getHour}:${minutes}`;\n      const time = getTime;\n      const displayDate = `${month} ${day} ${year}`;\n      const cards = [temperature, windDisplay(), humidity, visibility];\n\n      const card = matchKind => /*#__PURE__*/React.createElement(\"div\", {\n        key: getKey('card'),\n        className: \"flex4Column bg-lite mr-5 ml-5 p-10 r-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }, matchKind));\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"width100Percant p-20 m-20 r-10 bg-dkGreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bg-green r-10 p-20 ml-5 mr-5 mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-yellow p-10 size25 bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, weekday), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greet color-neogreen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, displayDate), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greet color-neogreen mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }\n      }, time, \" \", timeOfDay)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"white size25 bold p-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, mainDescription), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"greet color-neogreen p-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, description), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"width100Percent flexContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, cards.map(item => card(item))));\n    });\n    console.log(`display: ${JSON.stringify(results, null, 2)}`);\n    const display = list;\n    console.log(`display: ${display}`);\n    setResults(display);\n  };\n\n  const onSearch = () => {\n    fetch(`${baseUrl}${urlEnd}${key}`).then(response => response.json()) //        .then((result) => console.log(`${JSON.stringify(result,null, 2)}`))\n    .then(results => displayResults(results));\n  };\n\n  const onKeyDown = event => {\n    if (event.keyCode === 13) {\n      onSearch();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"navBranding color-yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Search your city\"), /*#__PURE__*/React.createElement(\"input\", {\n    onKeyDown: onKeyDown,\n    value: city,\n    placeholder: \"Enter city\",\n    onChange: event => setCity(event.target.value),\n    className: \"greet p-20 r-10 w-200 brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: onSearch,\n    className: \"ml-5 greet p-20 r-10 w-200 bg-green brdr-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"Check Weather\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"color-neogreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, results));\n};\n\nexport default CitySelector;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js"],"names":["React","useState","getKey","openweatherAPI_KEY","openweatherAPI_BASE_URL","N","NE","E","SE","S","SW","W","NW","CitySelector","key","baseUrl","city","setCity","results","setResults","urlEnd","displayResults","list","map","item","weekdays","getWeekdayIndex","day","findIndex","weekDay","includes","main","temp","toFixed","temp_min","temp_max","feels_like","temperature","humidity","weather","mainDescription","description","icon","wind","windSpeed","speed","angleArray","directionArray","getWindDirection","direction","windAngle","angleIndex","angle","windDirection","deg","windDisplay","visibility","period","dt_txt","momentArray","split","date","Date","String","dateArray","weekday","month","year","timeArray","hour","getHour","timeOfDay","minutes","getTime","time","displayDate","cards","card","matchKind","console","log","JSON","stringify","display","onSearch","fetch","then","response","json","onKeyDown","event","keyCode","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport { openweatherAPI_KEY, openweatherAPI_BASE_URL } from '../../apis/config';\nimport N from '../../assets/images/windN.png'\nimport NE from '../../assets/images/windNE.png'\nimport E from '../../assets/images/windE.png'\nimport SE from '../../assets/images/windSE.png'\nimport S from '../../assets/images/windS.png'\nimport SW from '../../assets/images/windSW.png'\nimport W from '../../assets/images/windW.png'\nimport NW from '../../assets/images/windNW.png'\n\nconst CitySelector = () => {\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}\n    //Metric\n    //api.openweathermap.org/data/2.5/forecast?q=London,us&appid={APIKEY}&units=metric\n    //Image Source\n    //http://openweathermap.org/img/wn/10d@2x.png\n    const key = openweatherAPI_KEY;\n    const baseUrl = openweatherAPI_BASE_URL;\n\n    const [city, setCity] = useState('Carlsbad, CA');\n    const [results, setResults] = useState('');\n    const urlEnd = `/data/2.5/forecast?q=${city},us&appid=`;\n\n    const displayResults = (results) => {\n        const list = results.list.map((item) => {\n            const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n            const getWeekdayIndex = (day) => weekdays.findIndex(weekDay => weekDay.includes(day));\n            const main = item.main;\n            const temp = main.temp.toFixed(1);\n            const temp_min = main.temp_min.toFixed(1);\n            const temp_max = main.temp_max.toFixed(1);\n            const feels_like = `feels like: ${main.feels_like}Â°`;\n            const temperature = <div>\n                            <div className='color-yellow bold mb-10'>temperature: </div>\n                            <div className='r-5 p-10 bg-dkGreen'>\n                                {temp}Â°<br/>\n                                <span className='copyright'>{temp_min}Â°</span>\n                            </div>\n                        </div>;\n            \n            const humidity = <div>\n                                <div className='color-yellow bold mb-10'>humidity: </div>\n                                <div className='r-5 p-10 bg-dkGreen'>\n                                    {main.humidity}\n                                </div>\n                            </div>\n            const weather = item.weather[0];\n            const mainDescription = weather.main;\n            const description = weather.description;\n            const icon = weather.icon;\n            const wind = item.wind;\n            const windSpeed = () => <div>\n                                        {wind.speed.toFixed(0)}\n                                        <span className='copyright'> mph</span>\n                                    </div>;\n            const angleArray = [ 0, 25, 45, 65, 90, 115, 135, 160, 180, 205, 225, 250, 270, 295, 315, 340]\n            const directionArray = ['N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'];\n            const getWindDirection = (direction) => {\n               const windAngle = direction.toFixed(0);\n               const angleIndex = angleArray.findIndex(angle => angle >= windAngle);\n               return directionArray[angleIndex];\n            }\n            const windDirection = () => <div>{wind.deg}Â°</div>;\n            const windDisplay = () => <div>\n                                            <div className='color-yellow bold mb-10'>wind: </div>\n                                            <div className='r-5 p-10 bg-dkGreen'>\n                                                {getWindDirection(wind.deg)}\n                                                {windDirection()}\n                                                {windSpeed()}\n                                            </div>\n                                        </div>\n            const visibility = <div>\n                                    <div className='color-yellow bold mb-10'>visibility: </div>\n                                    <div className='r-5 p-10 bg-dkGreen'>\n                                        {item.visibility}\n                                        <span className='copyright'> ft</span>\n                                    </div>\n                            </div>;\n            const period = item.dt_txt;\n            const momentArray = period.split(' ');\n            const date = Date(String(momentArray[0]));\n            const dateArray = date.split(' ');\n\n            const weekday = weekdays[getWeekdayIndex(dateArray[0])];\n            const month = dateArray[1];\n            const day = dateArray[2];\n            const year = dateArray[3];\n            const timeArray = dateArray[4].split(':');\n            const hour = timeArray[0];\n            const getHour = (hour>12) ? (hour-12) : hour;\n            const timeOfDay = (hour>12) ? 'pm' : 'am';\n            const minutes = timeArray[1];\n            const getTime = `${getHour}:${minutes}`;\n            const time = getTime;\n            const displayDate = `${month} ${day} ${year}`\n            const cards = [temperature, windDisplay(), humidity, visibility]\n\n            const card = (matchKind) => <div key={getKey('card')} className='flex4Column bg-lite mr-5 ml-5 p-10 r-10'>\n                            {/*this.getMatchIcon(matchKind)*/}\n                            <div className='greet'>{matchKind}</div>\n                        </div>;\n            return (\n                <div className='width100Percant p-20 m-20 r-10 bg-dkGreen'>\n                    <div className='bg-green r-10 p-20 ml-5 mr-5 mb-10'>\n                        <div className='color-yellow p-10 size25 bold'>{weekday}</div>\n                        <div className='greet color-neogreen'>{displayDate}</div>\n                        <div className='greet color-neogreen mb-20'>{time} {timeOfDay}</div>\n                    </div>\n                    <div className='white size25 bold p-5'>{mainDescription}</div>\n                    <div className='greet color-neogreen p-5'>{description}</div>\n                    <div className='width100Percent flexContainer'>\n                        {cards.map((item) => card(item))}\n                    </div>\n                </div>\n            )\n        })\n        console.log(`display: ${JSON.stringify(results, null, 2)}`)\n        const display = list;\n        console.log(`display: ${display}`)\n        setResults(display)\n    }\n\n    const onSearch = () => {\n        fetch(`${baseUrl}${urlEnd}${key}`)\n        .then((response) => response.json())\n//        .then((result) => console.log(`${JSON.stringify(result,null, 2)}`))\n        .then((results) => displayResults(results));\n    };\n    const onKeyDown = (event) => {\n        if (event.keyCode === 13) {\n            onSearch();\n        }\n    };\n    return (\n        <div>\n            <h1 className='navBranding color-yellow'>Search your city</h1>\n            <input onKeyDown={onKeyDown} value={city} placeholder='Enter city'\n                    onChange={(event) => setCity(event.target.value)} className='greet p-20 r-10 w-200 brdr-green'/>\n            <button onClick={onSearch} className='ml-5 greet p-20 r-10 w-200 bg-green brdr-green'>\n                Check Weather\n            </button>\n            <div className='color-neogreen'>{results}</div>\n        </div>\n    );\n};\n\nexport default CitySelector;"]},"metadata":{},"sourceType":"module"}