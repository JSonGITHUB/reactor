{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst currentTime = new Date();\nconst getDaysInMonth = () => {\n  const month = currentTime.getMonth() + 1;\n  const year = currentTime.getYear();\n  const daysInMonth = new Date(year, month, 0).getDate();\n  return daysInMonth;\n};\nconst getNextDay = currentDate => {\n  currentDate = Number(currentDate) + 1;\n  if (currentDate >= getDaysInMonth()) {\n    //console.log(`getNextDay =>\\nnextDay: 01\\nDaysInMont: ${getDaysInMonth()}`);\n    return '01';\n  }\n  currentDate = currentDate < 10 ? `0${currentDate}` : currentDate;\n  //console.log(`getNextDay =>\\nnextDay: ${currentDate}\\nDaysInMont: ${getDaysInMonth()}`);\n  return currentDate;\n  //((currentTime.getMonth()+1 === 2) &&)\n};\n\nconst getNextMonth = currentMonth => {\n  // eslint-disable-next-line\n  let endOfMonth = false;\n  if (currentTime.getDate() === getDaysInMonth()) {\n    currentMonth = currentMonth + 1;\n  }\n  const month = currentMonth < 10 ? `0${currentMonth}` : currentMonth;\n  return month;\n  //((currentTime.getMonth()+1 === 2) &&)\n};\n\nconst useCurrentTime = () => {\n  _s();\n  let getCurrentTime = new Date();\n  const year = getCurrentTime.getFullYear();\n  const currentMonth = getCurrentTime.getMonth() + 1;\n  const month = currentMonth < 10 ? `0${currentMonth}` : currentMonth;\n  const currentDate = getCurrentTime.getDate();\n  const date = currentDate < 10 ? `0${currentDate}` : currentDate;\n  const currentHour = getCurrentTime.getHours();\n  const hours = currentHour < 10 ? `0${currentHour < 0 ? 0 : currentHour}` : currentHour;\n  const startHour = currentHour - 7 < 10 ? `0${currentHour - 7 < 0 ? 0 : currentHour - 7}` : currentHour - 7;\n  const currentMinutes = getCurrentTime.getMinutes();\n  const minutes = currentMinutes < 10 ? `0${currentMinutes}` : currentMinutes;\n  //const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n  const getEndTime = `${year}${getNextMonth(currentMonth)}${getNextDay(currentDate)}%20${hours}:${minutes}`;\n  const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n  getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n  //console.log(`useCurrentTime - getStartTime: ${getStartTime} => getEndTime: ${getEndTime}`)\n  // eslint-disable-next-line\n  const [startTime, setStartTime] = useState(getStartTime);\n  // eslint-disable-next-line\n  const [endTime, setEndTime] = useState(getEndTime);\n  const currentTime = new Date();\n  /*\n      https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?\n      product=predictions&\n      application=NOS.COOPS.TAC.WL&\n      begin_date=20210330%2003:00&\n        end_date=20210330%2010:33&\n      datum=MLLW&\n      station=9410230&\n      time_zone=lst_ldt&\n      units=english&\n      interval=hilo&\n      format=json\n  */\n  const time = {\n    hours,\n    minutes,\n    date,\n    month,\n    year,\n    currentTime,\n    startTime,\n    endTime\n  };\n  return [time];\n};\n_s(useCurrentTime, \"CjIDmigVejKj4IHPMnb0e7BUMEo=\");\nexport default useCurrentTime;","map":{"version":3,"names":["useState","currentTime","Date","getDaysInMonth","month","getMonth","year","getYear","daysInMonth","getDate","getNextDay","currentDate","Number","getNextMonth","currentMonth","endOfMonth","useCurrentTime","_s","getCurrentTime","getFullYear","date","currentHour","getHours","hours","startHour","currentMinutes","getMinutes","minutes","getEndTime","getStartTime","startTime","setStartTime","endTime","setEndTime","time"],"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/useCurrentTime.js"],"sourcesContent":["import { useState } from 'react';\n\nconst currentTime = new Date();\nconst getDaysInMonth = () => {\n    const month = currentTime.getMonth()+1;\n    const year = currentTime.getYear();\n    const daysInMonth = new Date(year, month, 0).getDate();\n    return daysInMonth;\n}\nconst getNextDay = (currentDate) => {\n    currentDate = Number(currentDate)+1;\n    if (currentDate >= getDaysInMonth()) {\n        //console.log(`getNextDay =>\\nnextDay: 01\\nDaysInMont: ${getDaysInMonth()}`);\n        return '01'\n    }\n    currentDate = (currentDate<10) ? `0${currentDate}` : currentDate;\n    //console.log(`getNextDay =>\\nnextDay: ${currentDate}\\nDaysInMont: ${getDaysInMonth()}`);\n    return currentDate;\n    //((currentTime.getMonth()+1 === 2) &&)\n}\nconst getNextMonth = (currentMonth) => {\n    // eslint-disable-next-line\n    let endOfMonth = false;\n    if (currentTime.getDate() === getDaysInMonth()) {\n        currentMonth = currentMonth + 1;\n    }\n    const month = ((currentMonth)<10) ? `0${(currentMonth)}` : currentMonth;\n    \n    return month\n    //((currentTime.getMonth()+1 === 2) &&)\n}\n\nconst useCurrentTime = () => {\n\n    let getCurrentTime = new Date();\n    const year = getCurrentTime.getFullYear();\n    const currentMonth = getCurrentTime.getMonth()+1;\n    const month = ((currentMonth)<10) ? `0${(currentMonth)}` : currentMonth;\n    const currentDate = getCurrentTime.getDate();\n    const date = (currentDate<10) ? `0${currentDate}` : currentDate;\n    const currentHour = getCurrentTime.getHours();\n    const hours = (currentHour<10) ? `0${(currentHour<0) ? 0 : currentHour}` : currentHour;\n    const startHour = ((currentHour-7)<10) ? `0${((currentHour-7)<0)?0:(currentHour-7)}` : (currentHour-7);\n    const currentMinutes = getCurrentTime.getMinutes();\n    const minutes = (currentMinutes<10) ? `0${currentMinutes}` : currentMinutes;\n    //const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n    const getEndTime = `${year}${getNextMonth(currentMonth)}${getNextDay(currentDate)}%20${hours}:${minutes}`;\n    const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n    getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n    //console.log(`useCurrentTime - getStartTime: ${getStartTime} => getEndTime: ${getEndTime}`)\n    // eslint-disable-next-line\n    const [startTime, setStartTime] = useState(getStartTime);\n    // eslint-disable-next-line\n    const [endTime, setEndTime] = useState(getEndTime);\n    const currentTime = new Date();\n/*\n    https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?\n    product=predictions&\n    application=NOS.COOPS.TAC.WL&\n    begin_date=20210330%2003:00&\n      end_date=20210330%2010:33&\n    datum=MLLW&\n    station=9410230&\n    time_zone=lst_ldt&\n    units=english&\n    interval=hilo&\n    format=json\n*/   \n    const time = {   \n        hours,\n        minutes,\n        date,\n        month,\n        year,\n        currentTime,\n        startTime,\n        endTime\n    }\n\n    return [ time ]; \n            \n\n}\nexport default useCurrentTime;"],"mappings":"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"},"metadata":{},"sourceType":"module"}