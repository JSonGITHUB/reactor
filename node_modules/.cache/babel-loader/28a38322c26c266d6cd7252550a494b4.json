{"ast":null,"code":"import _objectSpread from\"/Users/js/Dev/my-first-reactor/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/js/Dev/my-first-reactor/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useRef,useEffect}from'react';import videoFile from'../../assets/1.MP4';import VideoNavigation from'./VideoNavigation';import{TextField}from'@material-ui/core';//const VideoPlayer = ({ src, startTime, endTime, onTimeUpdate }) => {\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var VideoPlayer=/*#__PURE__*/React.forwardRef(function(props,ref){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentTime=_useState2[0],setCurrentTime=_useState2[1];var _useState3=useState({videoRef:ref,isPlaying:false,isSlow:false,isMedium:false,isSlowRewind:false,isMediumRewind:false,playbackRate:1,endTime:props.endTime,startTime:props.startTime,currentTime:'00:00:00'}),_useState4=_slicedToArray(_useState3,2),playerStatus=_useState4[0],setPlayerStatus=_useState4[1];//const videoRef = useRef(playerStatus.videoRef);\nvar time=playerStatus.videoRef.current!==null?playerStatus.videoRef.current.currentTime:'00:00:00';console.log('props: ',props);useEffect(function(){var updateCurrentTime=function updateCurrentTime(){if(playerStatus.videoRef.current.currentTime>=playerStatus.endTime){setPlayerStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isPlaying:false,isRewind:false,isFast:false,isSlow:false,isMedium:false,isSlowRewind:false,isMediumRewind:false});});}/*\n      if (playerStatus.endTime > playerStatus.videoRef.current.duration) {\n        alert(`playerStatus.endTime(${playerStatus.endTime}) > playerStatus.videoRef.current.duration (${playerStatus.videoRef.current.duration})`)\n        endChange(playerStatus.videoRef.current.duration)\n        setPlayerStatus(prevState => ({\n          ...prevState,\n          endTime: playerStatus.videoRef.current.duration\n        }));\n      }\n      */setCurrentTime(playerStatus.videoRef.current.currentTime);};// Attach the time update event listener\nplayerStatus.videoRef.current.addEventListener('timeupdate',updateCurrentTime);// Clean up the event listener on component unmount\nreturn function(){playerStatus.videoRef.current.removeEventListener('timeupdate',updateCurrentTime);};},[]);useEffect(function(){var speed=playerStatus.isMediumRewind?250:80;var interval=playerStatus.isSlowRewind?300:speed;var intervalId=setInterval(function(){var currentTime=playerStatus.videoRef.current.currentTime;var time=currentTime-0.05;if((playerStatus.isSlowRewind||playerStatus.isMediumRewind||playerStatus.isRewind)&&playerStatus.isPlaying&&time>playerStatus.startTime){playerStatus.videoRef.current.currentTime=time;}else{clearInterval(intervalId);}},interval);return function(){clearInterval(intervalId);};},[playerStatus.isPlaying,playerStatus.isSlowRewind,playerStatus.isMediumRewind,playerStatus.isRewind,playerStatus.startTime,playerStatus.videoRef]);/*\n  const handlePlayPause = () => {\n    console.log(\"handlePlayPause\");\n    if (playerStatus.isPlaying) {\n      console.log(\"handlePlayPause => pause\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    } else {\n      console.log(\"handlePlayPause => play\");\n      playerStatus.videoRef.current.playbackRate = 1;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false\n      }));\n    }\n  };\n\n  const handleRewind = () => {\n    if (playerStatus.videoRef.current && playerStatus.isRewind === false) {\n      console.log(\"handleRewind\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: true,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n  const handleMinusOne = () => {\n    if (playerStatus.videoRef.current) {\n      console.log(\"handleMinusOne\");\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime -= 0.05;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n  const handleAddOne = () => {\n    if (playerStatus.videoRef.current) {\n      console.log(\"handlePlusOne\");\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime += 0.05;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n  \n  const handleSlowRewind = () => {\n    if (playerStatus.videoRef.current && playerStatus.isSlowRewind === false) {\n      console.log(\"handleSlowMotionRewind\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: true,\n        isMediumRewind: false,\n        isFast: false\n      }));\n    }\n  };\n\n  const handleMediumRewind = () => {\n    if (playerStatus.videoRef.current && playerStatus.isMediumRewind === false) {\n      console.log(\"handleMediumMotionRewind\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: true,\n        isFast: false\n      }));\n    }\n  };\n\n  const handleSlowMotion = () => {\n    if (playerStatus.videoRef.current && playerStatus.isSlow === false) {\n      console.log(\"handleSlowMotion\");\n      playerStatus.videoRef.current.playbackRate = .2;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: true,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false,\n        playbackRate: 0.2\n      }));\n    } \n  };\n  const handleMediumMotion = () => {\n    if (playerStatus.videoRef.current && playerStatus.isMedium === false) {\n      console.log(\"handleMediumMotion\");\n      playerStatus.videoRef.current.playbackRate = .5;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: false,\n        isMedium: true,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false,\n        playbackRate: 0.5\n      }));\n    } \n  };\n\n  const handleFastForward = () => {\n    if (playerStatus.videoRef.current && playerStatus.isFast === false) {\n      console.log(\"handleFastMotion\");\n      playerStatus.videoRef.current.playbackRate = 2;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isFast: true,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        playbackRate: 0.5\n      }));\n    } \n  };\n  const handleTimeUpdate = () => {\n    props.onTimeUpdate(time);\n    if (time >= playerStatus.endTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.endTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false\n      }));\n    } else if (time <= playerStatus.startTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.startTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false\n      }));\n    }\n  };\n\n*/var handleScrub=function handleScrub(e){var x=e.nativeEvent.offsetX;var width=e.currentTarget.offsetWidth;var duration=playerStatus.videoRef.current.duration;var scrubTime=x/width*duration;playerStatus.videoRef.current.currentTime=scrubTime;};var startChange=function startChange(value){props.onStartTimeUpdate(value);setPlayerStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{startTime:value,currentTime:playerStatus.videoRef.current.currentTime});});};var endChange=function endChange(value){props.onStartTimeUpdate(value);setPlayerStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{endTime:value,currentTime:playerStatus.videoRef.current.currentTime});});};var handleStartChange=function handleStartChange(event){var value=event.target.value;props.onStartTimeUpdate(value);setPlayerStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{startTime:value,currentTime:playerStatus.videoRef.current.currentTime});});};function handleEndChange(event){var value=event.target.value;props.onEndTimeUpdate(value);setPlayerStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{endTime:value,currentTime:playerStatus.videoRef.current.currentTime});});}var timeDisplay=function timeDisplay(){console.log(\"timeDisplay: \".concat(time,\" of \").concat(playerStatus.videoRef.current.duration));return/*#__PURE__*/_jsxs(\"div\",{className:\"timerBox\",children:[playerStatus.videoRef.current.currentTime,\" of \",playerStatus.videoRef.current.duration]});};var handleVideoUpdate=function handleVideoUpdate(event){var currentTime=event.target.currentTime;if(currentTime>playerStatus.endTime){playerStatus.videoRef.current.pause();playerStatus.videoRef.current.currentTime=playerStatus.endTime;setPlayerStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isPlaying:false,isRewind:false,isFast:false,isSlow:false,isMedium:false,isSlowRewind:false,isMediumRewind:false,currentTime:currentTime});});}else if(currentTime<=playerStatus.startTime){playerStatus.videoRef.current.pause();playerStatus.videoRef.current.currentTime=playerStatus.startTime;setPlayerStatus(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isPlaying:false,isRewind:false,isFast:false,isSlow:false,isMedium:false,isSlowRewind:false,isMediumRewind:false,currentTime:playerStatus.videoRef.current.currentTime});});}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"video\",{ref:playerStatus.videoRef//src={props.src}\n,src:videoFile,onTimeUpdate:handleVideoUpdate,style:{width:\"100%\",height:\"auto\"},onLoadedMetadata:function onLoadedMetadata(){if(time!==null){time=props.startTime;playerStatus.videoRef.current.playbackRate=1;}}}),/*#__PURE__*/_jsx(\"div\",{className:\"videoNavigation\",children:/*#__PURE__*/_jsx(VideoNavigation,{handleJumpToStart:function handleJumpToStart(){return props.handleJumpToStart(props.id);},handleMinusOne:function handleMinusOne(){return props.handleMinusOne(props.id);},handleRewind:function handleRewind(){return props.handleRewind(props.id);},handleMediumRewind:function handleMediumRewind(){return props.handleMediumRewind(props.id);},handleSlowRewind:function handleSlowRewind(){return props.handleSlowRewind(props.id);},handlePlayPause:function handlePlayPause(){return props.handlePlayPause(props.id);},handleSlowMotion:function handleSlowMotion(){return props.handleSlowMotion(props.id);},handleMediumMotion:function handleMediumMotion(){return props.handleMediumMotion(props.id);},handleFastForward:function handleFastForward(){return props.handleFastForward(props.id);},handleAddOne:function handleAddOne(){return props.handleAddOne(props.id);},handleJumpToEnd:function handleJumpToEnd(){return props.handleJumpToEnd(props.id);},playerStatus:playerStatus})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"p-20\",children:playerStatus.startTime}),/*#__PURE__*/_jsx(\"span\",{className:\"p-20\",children:currentTime}),/*#__PURE__*/_jsx(\"span\",{className:\"p-20\",children:playerStatus.endTime})]})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return startChange(currentTime);},children:\"Start Mark\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:playerStatus.startTime,onChange:handleStartChange}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return endChange(currentTime);},children:\"End Mark\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:playerStatus.endTime,onChange:handleEndChange}),/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative'},children:[/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:0,left:0,height:'100%',//width: `${((playerStatus.videoRef.current?.currentTime || 0) / playerStatus.videoRef.current?.duration) * 100}%`,\nwidth:'100px',backgroundColor:'blue',opacity:0.5}}),/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',backgroundColor:'00FF00',top:0,left:0,height:'100%',width:'100%',zIndex:1},onClick:handleScrub})]})]});});export default VideoPlayer;","map":{"version":3,"names":["React","useState","useRef","useEffect","videoFile","VideoNavigation","TextField","jsxs","_jsxs","jsx","_jsx","VideoPlayer","forwardRef","props","ref","_useState","_useState2","_slicedToArray","currentTime","setCurrentTime","_useState3","videoRef","isPlaying","isSlow","isMedium","isSlowRewind","isMediumRewind","playbackRate","endTime","startTime","_useState4","playerStatus","setPlayerStatus","time","current","console","log","updateCurrentTime","prevState","_objectSpread","isRewind","isFast","addEventListener","removeEventListener","speed","interval","intervalId","setInterval","clearInterval","handleScrub","e","x","nativeEvent","offsetX","width","currentTarget","offsetWidth","duration","scrubTime","startChange","value","onStartTimeUpdate","endChange","handleStartChange","event","target","handleEndChange","onEndTimeUpdate","timeDisplay","concat","className","children","handleVideoUpdate","pause","src","onTimeUpdate","style","height","onLoadedMetadata","handleJumpToStart","id","handleMinusOne","handleRewind","handleMediumRewind","handleSlowRewind","handlePlayPause","handleSlowMotion","handleMediumMotion","handleFastForward","handleAddOne","handleJumpToEnd","onClick","type","onChange","position","top","left","backgroundColor","opacity","zIndex"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/VideoPlayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport videoFile from '../../assets/1.MP4';\nimport VideoNavigation from './VideoNavigation';\nimport { TextField } from '@material-ui/core';\n//const VideoPlayer = ({ src, startTime, endTime, onTimeUpdate }) => {\nconst VideoPlayer = React.forwardRef((props, ref) => { \n  const [currentTime, setCurrentTime] = useState(0);\n  const [playerStatus, setPlayerStatus] = useState({\n    videoRef: ref,\n    isPlaying: false,\n    isSlow: false,\n    isMedium: false,\n    isSlowRewind: false,\n    isMediumRewind: false,\n    playbackRate: 1,\n    endTime: props.endTime,\n    startTime: props.startTime,\n    currentTime: '00:00:00'\n  });\n  //const videoRef = useRef(playerStatus.videoRef);\n  let time = (playerStatus.videoRef.current !== null) ? playerStatus.videoRef.current.currentTime : '00:00:00' ;\n  console.log('props: ', props)\n\n  useEffect(() => {\n    const updateCurrentTime = () => {\n      if (playerStatus.videoRef.current.currentTime >= playerStatus.endTime) {\n        setPlayerStatus(prevState => ({\n          ...prevState,\n          isPlaying: false,\n          isRewind: false,\n          isFast: false,\n          isSlow: false,\n          isMedium: false,\n          isSlowRewind: false,\n          isMediumRewind: false\n        }));\n      }\n      /*\n      if (playerStatus.endTime > playerStatus.videoRef.current.duration) {\n        alert(`playerStatus.endTime(${playerStatus.endTime}) > playerStatus.videoRef.current.duration (${playerStatus.videoRef.current.duration})`)\n        endChange(playerStatus.videoRef.current.duration)\n        setPlayerStatus(prevState => ({\n          ...prevState,\n          endTime: playerStatus.videoRef.current.duration\n        }));\n      }\n      */\n      setCurrentTime(playerStatus.videoRef.current.currentTime);\n    };\n    // Attach the time update event listener\n    playerStatus.videoRef.current.addEventListener('timeupdate', updateCurrentTime);\n    // Clean up the event listener on component unmount\n    return () => {\n      playerStatus.videoRef.current.removeEventListener('timeupdate', updateCurrentTime);\n    };\n  }, []);\n\n  useEffect(() => {\n    const speed = (playerStatus.isMediumRewind) ? 250 : 80;\n    const interval = (playerStatus.isSlowRewind) ? 300 : speed;\n    const intervalId = setInterval(() => {\n      const currentTime = playerStatus.videoRef.current.currentTime;\n      const time = currentTime - 0.05;\n      if ((playerStatus.isSlowRewind || playerStatus.isMediumRewind || playerStatus.isRewind) && playerStatus.isPlaying && (time > (playerStatus.startTime))) {\n        playerStatus.videoRef.current.currentTime = time;\n      } else {\n        clearInterval(intervalId);\n      }\n    }, interval);\n    \n    return () => {\n      clearInterval(intervalId);\n    }\n  }, [\n    playerStatus.isPlaying, \n    playerStatus.isSlowRewind, \n    playerStatus.isMediumRewind, \n    playerStatus.isRewind, \n    playerStatus.startTime, \n    playerStatus.videoRef\n  ]);\n/*\n  const handlePlayPause = () => {\n    console.log(\"handlePlayPause\");\n    if (playerStatus.isPlaying) {\n      console.log(\"handlePlayPause => pause\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    } else {\n      console.log(\"handlePlayPause => play\");\n      playerStatus.videoRef.current.playbackRate = 1;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false\n      }));\n    }\n  };\n\n  const handleRewind = () => {\n    if (playerStatus.videoRef.current && playerStatus.isRewind === false) {\n      console.log(\"handleRewind\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: true,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n  const handleMinusOne = () => {\n    if (playerStatus.videoRef.current) {\n      console.log(\"handleMinusOne\");\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime -= 0.05;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n  const handleAddOne = () => {\n    if (playerStatus.videoRef.current) {\n      console.log(\"handlePlusOne\");\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime += 0.05;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n  \n  const handleSlowRewind = () => {\n    if (playerStatus.videoRef.current && playerStatus.isSlowRewind === false) {\n      console.log(\"handleSlowMotionRewind\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: true,\n        isMediumRewind: false,\n        isFast: false\n      }));\n    }\n  };\n\n  const handleMediumRewind = () => {\n    if (playerStatus.videoRef.current && playerStatus.isMediumRewind === false) {\n      console.log(\"handleMediumMotionRewind\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: true,\n        isFast: false\n      }));\n    }\n  };\n\n  const handleSlowMotion = () => {\n    if (playerStatus.videoRef.current && playerStatus.isSlow === false) {\n      console.log(\"handleSlowMotion\");\n      playerStatus.videoRef.current.playbackRate = .2;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: true,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false,\n        playbackRate: 0.2\n      }));\n    } \n  };\n  const handleMediumMotion = () => {\n    if (playerStatus.videoRef.current && playerStatus.isMedium === false) {\n      console.log(\"handleMediumMotion\");\n      playerStatus.videoRef.current.playbackRate = .5;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: false,\n        isMedium: true,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false,\n        playbackRate: 0.5\n      }));\n    } \n  };\n\n  const handleFastForward = () => {\n    if (playerStatus.videoRef.current && playerStatus.isFast === false) {\n      console.log(\"handleFastMotion\");\n      playerStatus.videoRef.current.playbackRate = 2;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isFast: true,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        playbackRate: 0.5\n      }));\n    } \n  };\n  const handleTimeUpdate = () => {\n    props.onTimeUpdate(time);\n    if (time >= playerStatus.endTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.endTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false\n      }));\n    } else if (time <= playerStatus.startTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.startTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false\n      }));\n    }\n  };\n\n*/\n  const handleScrub = e => {\n    const x = e.nativeEvent.offsetX;\n    const width = e.currentTarget.offsetWidth;\n    const duration = playerStatus.videoRef.current.duration;\n    const scrubTime = (x / width) * duration;\n    playerStatus.videoRef.current.currentTime = scrubTime;\n  };\n  const startChange = (value) => {\n    props.onStartTimeUpdate(value);\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      startTime: value,\n      currentTime: playerStatus.videoRef.current.currentTime\n    }));\n  }\n  const endChange = (value) => {\n    props.onStartTimeUpdate(value);\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      endTime: value,\n      currentTime: playerStatus.videoRef.current.currentTime\n    }));\n  }\n\n  const handleStartChange = (event) => {\n    const { value } = event.target;\n    props.onStartTimeUpdate(value);\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      startTime: value,\n      currentTime: playerStatus.videoRef.current.currentTime\n    }));\n  }\n  \n  function handleEndChange(event) {\n    const { value } = event.target;\n    props.onEndTimeUpdate(value);\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      endTime: value,\n      currentTime: playerStatus.videoRef.current.currentTime\n    }));\n  }\n  const timeDisplay = () => {\n    console.log(`timeDisplay: ${time} of ${playerStatus.videoRef.current.duration}`)\n    return <div className='timerBox'>\n              {playerStatus.videoRef.current.currentTime} of {playerStatus.videoRef.current.duration}\n            </div>\n  }\n  const handleVideoUpdate = (event) => {\n    const { currentTime } = event.target;\n    if (currentTime > playerStatus.endTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.endTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        currentTime: currentTime\n      }));\n    } else if (currentTime <= playerStatus.startTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.startTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        currentTime: playerStatus.videoRef.current.currentTime\n      }));\n    }\n  };\n\n  return (\n    <div>\n      <video\n        ref={playerStatus.videoRef}\n        //src={props.src}\n        src={videoFile}\n        onTimeUpdate={handleVideoUpdate}\n        style={{\n            width: `100%`,\n            height: `auto`,\n        }}\n\n        onLoadedMetadata={() => {\n          if (time !== null) {\n            time = props.startTime;\n            playerStatus.videoRef.current.playbackRate = 1;\n          }\n        }}\n      />\n      <div className='videoNavigation'>\n        <VideoNavigation \n          handleJumpToStart={() => props.handleJumpToStart(props.id)}\n          handleMinusOne={() => props.handleMinusOne(props.id)}\n          handleRewind={() => props.handleRewind(props.id)}\n          handleMediumRewind={() => props.handleMediumRewind(props.id)}\n          handleSlowRewind={() => props.handleSlowRewind(props.id)}\n          handlePlayPause={() => props.handlePlayPause(props.id)}\n          handleSlowMotion={() => props.handleSlowMotion(props.id)}\n          handleMediumMotion={() => props.handleMediumMotion(props.id)}\n          handleFastForward={() => props.handleFastForward(props.id)}\n          handleAddOne={() => props.handleAddOne(props.id)}\n          handleJumpToEnd={() => props.handleJumpToEnd(props.id)}\n          playerStatus={playerStatus}\n        />\n      </div>\n      <div>\n        <div><span className='p-20'>{playerStatus.startTime}</span><span className='p-20'>{currentTime}</span><span className='p-20'>{playerStatus.endTime}</span></div>\n      </div>\n      <button onClick={() => startChange(currentTime)}>Start Mark</button><input type=\"text\" value={playerStatus.startTime} onChange={handleStartChange} />\n      <button onClick={() => endChange(currentTime)}>End Mark</button><input type=\"text\" value={playerStatus.endTime} onChange={handleEndChange}/>\n      <div style={{ position: 'relative' }}>\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            //width: `${((playerStatus.videoRef.current?.currentTime || 0) / playerStatus.videoRef.current?.duration) * 100}%`,\n            width: '100px',\n            backgroundColor: 'blue',\n            opacity: 0.5,\n          }}\n        />\n        <div\n          style={{\n            position: 'absolute',\n            backgroundColor: '00FF00',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: '100%',\n            zIndex: 1,\n          }}\n          onClick={handleScrub}\n        />\n      </div>\n    </div>\n  );\n});\n\nexport default VideoPlayer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}