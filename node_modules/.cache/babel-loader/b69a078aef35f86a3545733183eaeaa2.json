{"ast":null,"code":"import getNotes from'./GetNotes.js';import PostDirectory from'./PostDirectory.js';import getWaveHeight from'./GetWaveHeight.js';import getWindOrientation from'./GetWindOrientation.js';import getWindMPH from'./GetWindMPH.js';import getSurface from'./GetSurface.js';var createLog=function createLog(item,status){var posts=new PostDirectory();console.log(\"createLog =>\\nstatus: \".concat(JSON.stringify(status,null,2)));localStorage.setItem('spot',item.name);var goToLog=function goToLog(){return window.location.pathname=\"/reactor/SurfLog\";};var generateNewLogId=function generateNewLogId(){var date=new Date();var st=date.toDateString().replace(/ /g,'');var nd=date.toLocaleTimeString().replace(/ /g,'');localStorage.setItem('lastPostId',\"\".concat(st).concat(nd));var newId=\"\".concat(st).concat(nd);console.log(\"LogId: generateNewLogId => status.logId: \".concat(newId));return newId;};var recordId=generateNewLogId();var getCurrentTime=new Date();var year=getCurrentTime.getFullYear();var currentMonth=getCurrentTime.getMonth()+1;var month=currentMonth<10?\"0\".concat(currentMonth):currentMonth;var currentDate=getCurrentTime.getDate();var date=currentDate<10?\"0\".concat(currentDate):currentDate;var currentHour=getCurrentTime.getHours();var hours=currentHour<10?\"0\".concat(currentHour):currentHour;var startHour=currentHour-1<10?\"0\".concat(currentHour-1):currentHour-1;var currentMinutes=getCurrentTime.getMinutes();var minutes=currentMinutes<10?\"0\".concat(currentMinutes):currentMinutes;// eslint-disable-next-line\nvar getEndTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(hours,\":\").concat(minutes);// eslint-disable-next-line\nvar getStartTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(startHour,\":00\");getCurrentTime=\"\".concat(year).concat(month).concat(date,\"%20\").concat(hours,\":\").concat(minutes);var getWaveSize=function getWaveSize(height){height=height.split('.')[0];height=height.includes(\"FT\")?height.replace(\"FT\",\"ft\"):height;height=!height.includes(\"ft\")?String(height+\"ft\"):height;return height;};var logObj={Day:{Date:\"\".concat(year,\"-\").concat(month,\"-\").concat(date,\"T\").concat(hours,\":\").concat(minutes,\":00.000Z\"),Day:date,Month:month,Year:year},Location:{Break:item.name},Surf:{Height:getWaveHeight(status.swell1Height),Report:getWaveSize(status.swell1Height),Shape:'peaky'},Swell1:{Height:getWaveHeight(status.swell1Height),Direction:status.swell1Direction,Angle:status.swell1Angle,Interval:status.swell1Interval},Swell2:{Height:getWaveHeight(status.swell2Height),Direction:status.swell2Direction,Angle:status.swell2Angle,Interval:status.swell2Interval},Swell3:{Height:'1ft',Direction:'NW',Angle:'180',Interval:'6 seconds'},Tide:{Phase:status.tide,Height:Number(status.height).toFixed(0)+'ft'},Wind:{Direction:status.windDirection,Orientation:getWindOrientation(status.windDirection),MPH:getWindMPH(status.windGusts),Surface:getSurface(status.windGusts)},Conditions:{Conditions:'Good'},Comments:{'notes':getNotes(status)}};//return logObj;\nvar postDirectory=posts.getDirectory();var post='';var logIt=function logIt(){postDirectory.push(recordId);postDirectory=JSON.stringify(postDirectory);console.log(\"postDirectory: \".concat(postDirectory));post=JSON.stringify(logObj,null,2);console.log(\"post: \".concat(post));localStorage.setItem('logId',recordId);localStorage.setItem('spot',item.name);localStorage.setItem(recordId,post);//localStorage.setItem('postDirectory', postDirectory);\nposts.add(recordId);};logIt();goToLog();/*\n    this.setState({\n        recordId: recordId,\n        logged: true\n    })\n    */};export default createLog;","map":{"version":3,"names":["getNotes","PostDirectory","getWaveHeight","getWindOrientation","getWindMPH","getSurface","createLog","item","status","posts","console","log","concat","JSON","stringify","localStorage","setItem","name","goToLog","window","location","pathname","generateNewLogId","date","Date","st","toDateString","replace","nd","toLocaleTimeString","newId","recordId","getCurrentTime","year","getFullYear","currentMonth","getMonth","month","currentDate","getDate","currentHour","getHours","hours","startHour","currentMinutes","getMinutes","minutes","getEndTime","getStartTime","getWaveSize","height","split","includes","String","logObj","Day","Month","Year","Location","Break","Surf","Height","swell1Height","Report","Shape","Swell1","Direction","swell1Direction","Angle","swell1Angle","Interval","swell1Interval","Swell2","swell2Height","swell2Direction","swell2Angle","swell2Interval","Swell3","Tide","Phase","tide","Number","toFixed","Wind","windDirection","Orientation","MPH","windGusts","Surface","Conditions","Comments","postDirectory","getDirectory","post","logIt","push","add"],"sources":["/Users/js/Dev/my-first-reactor/src/components/waves/CreateLog.js"],"sourcesContent":["import getNotes from './GetNotes.js';\nimport PostDirectory from './PostDirectory.js';\nimport getWaveHeight from './GetWaveHeight.js';\nimport getWindOrientation from './GetWindOrientation.js';\nimport getWindMPH from './GetWindMPH.js';\nimport getSurface from './GetSurface.js';\nconst createLog = (item, status) => {\n    const posts = new PostDirectory();\n    console.log(`createLog =>\\nstatus: ${JSON.stringify(status, null, 2)}`);\n    localStorage.setItem('spot', item.name);\n    const goToLog = () => window.location.pathname = `/reactor/SurfLog`;\n    const generateNewLogId = () => {\n        const date = new Date()\n        const st = date.toDateString().replace(/ /g,'');\n        const nd = date.toLocaleTimeString().replace(/ /g,'');\n        localStorage.setItem('lastPostId', `${st}${nd}`);\n        const newId = `${st}${nd}`;\n        console.log(`LogId: generateNewLogId => status.logId: ${newId}`);\n        return newId;\n    }\n    const recordId = generateNewLogId();\n    let getCurrentTime = new Date();\n    const year = getCurrentTime.getFullYear();\n    const currentMonth = getCurrentTime.getMonth()+1;\n    const month = ((currentMonth)<10) ? `0${(currentMonth)}` : currentMonth;\n    const currentDate = getCurrentTime.getDate();\n    const date = (currentDate<10) ? `0${currentDate}` : currentDate;\n    const currentHour = getCurrentTime.getHours();\n    const hours = (currentHour<10) ? `0${currentHour}` : currentHour;\n    const startHour = ((currentHour-1)<10) ? `0${(currentHour-1)}` : (currentHour-1);\n    const currentMinutes = getCurrentTime.getMinutes();\n    const minutes = (currentMinutes<10) ? `0${currentMinutes}` : currentMinutes;\n    // eslint-disable-next-line\n    const getEndTime = `${year}${month}${date}%20${hours}:${minutes}`;\n    // eslint-disable-next-line\n    const getStartTime = `${year}${month}${date}%20${startHour}:00`;\n    getCurrentTime = `${year}${month}${date}%20${hours}:${minutes}`;\n    const getWaveSize = (height) => {\n        height = height.split('.')[0];     \n        height = (height.includes(\"FT\")) ? height.replace(\"FT\",\"ft\") : height;\n        height = (!height.includes(\"ft\")) ? String(height+\"ft\") : height;\n        return height;     \n    }\n    const logObj = {\n        Day: {\n            Date: `${year}-${month}-${date}T${hours}:${minutes}:00.000Z`,\n            Day: date,\n            Month: month,\n            Year: year\n        },\n        Location: {\n            Break: item.name\n        },\n        Surf: {\n            Height: getWaveHeight(status.swell1Height),\n            Report: getWaveSize(status.swell1Height),\n            Shape: 'peaky'\n        },\n        Swell1: {\n            Height: getWaveHeight(status.swell1Height),\n            Direction: status.swell1Direction,\n            Angle: status.swell1Angle,\n            Interval: status.swell1Interval,\n        },\n        Swell2: {\n            Height: getWaveHeight(status.swell2Height),\n            Direction: status.swell2Direction,\n            Angle: status.swell2Angle,\n            Interval: status.swell2Interval,\n        },\n        Swell3: {\n            Height: '1ft',\n            Direction: 'NW',\n            Angle: '180',\n            Interval: '6 seconds',\n        },\n        Tide: {\n            Phase: status.tide,\n            Height: Number(status.height).toFixed(0)+'ft'\n        },\n        Wind: {\n            Direction: status.windDirection,\n            Orientation: getWindOrientation(status.windDirection),\n            MPH: getWindMPH(status.windGusts),\n            Surface: getSurface(status.windGusts)\n        },\n        Conditions: {\n            Conditions: 'Good'\n        },\n        Comments: {\n            'notes': getNotes(status)\n        }\n    }\n    //return logObj;\n    let postDirectory = posts.getDirectory();\n    let post = '';\n    const logIt = () => {\n        postDirectory.push(recordId);\n        postDirectory = JSON.stringify(postDirectory);\n        console.log(`postDirectory: ${postDirectory}`)\n        post = JSON.stringify(logObj, null, 2);\n        console.log(`post: ${post}`)\n        localStorage.setItem('logId', recordId)\n        localStorage.setItem('spot', item.name)\n        localStorage.setItem(recordId, post);\n        //localStorage.setItem('postDirectory', postDirectory);\n        posts.add(recordId);\n    }   \n    logIt();\n    goToLog();\n    /*\n    this.setState({\n        recordId: recordId,\n        logged: true\n    })\n    */\n};\nexport default createLog;"],"mappings":"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"},"metadata":{},"sourceType":"module"}