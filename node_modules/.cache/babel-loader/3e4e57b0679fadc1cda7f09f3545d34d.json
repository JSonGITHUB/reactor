{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreKeeper = () => {\n  _s();\n  const surfScoring = ['', '', '', '', '', '', '', '', '', ''];\n  const initPlayers = [{\n    name: 'You',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: ['', '', '', '', '', '', '', '', '', ''],\n    surfJerseyColor: 0,\n    surfPriority: 0,\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }, {\n    name: 'Me',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: ['', '', '', '', '', '', '', '', '', ''],\n    surfJerseyColor: 0,\n    surfPriority: 0,\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }];\n  const initNewPlayer = [{\n    name: 'You',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: ['', '', '', '', '', '', '', '', '', ''],\n    surfJerseyColor: 0,\n    surfPriority: 0,\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }];\n  const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n  const winners = [5, 10, 11, 15, 20, 21];\n  const dominoWinners = [50, 100, 150, 200];\n  const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n  const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n  const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n  const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n  const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n  const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n  const [heatLength, setHeatLength] = useState(60 * 60);\n  const [waveCount, setWaveCount] = useState(['', '', '', '', '', '', '', '', '', '']);\n  const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || []);\n  const darts = game !== 'darts' ? false : true;\n  const dominos = game !== 'dominos' ? false : true;\n  const surf = game !== 'surf' ? false : true;\n  const golf = game !== 'golf' ? false : true;\n  const cricketKey = (player, index) => `${player.player || player.name}Cricket${index}`;\n  const golfKey = (player, index) => `${player.player || player.name}Golf${index}`;\n  const surfKey = (player, index) => `${player.player || player.name}Surf${index}`;\n  const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n  const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n  const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n  const dominoScoring = [50, 100, 150, 200];\n  const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n  const [surferData, setSurferData] = useState([]);\n  const getScoreTotal = index => {\n    const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n    const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n    const score = highestScore + secondHighestScore;\n    console.log(`getScore => player: ${index} score: ${score}`);\n    return score;\n  };\n  const findTwoHighestIndices = scores => {\n    let highestIndex = -1;\n    let secondHighestIndex = -1;\n    let highestScore = -Infinity;\n    let secondHighestScore = -Infinity;\n    for (let i = 0; i < scores.length; i++) {\n      if (scores[i] > highestScore) {\n        secondHighestIndex = highestIndex;\n        secondHighestScore = highestScore;\n        highestIndex = i;\n        highestScore = scores[i];\n      } else if (scores[i] > secondHighestScore) {\n        secondHighestIndex = i;\n        secondHighestScore = scores[i];\n      }\n    }\n    return [highestIndex, secondHighestIndex];\n  };\n  const getTwoHighestScores = playerIndex => {\n    const player = players[playerIndex];\n    const scores = player.surfScores;\n    const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n    //console.log(`${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n    return {\n      highScoreIndex: highestIndex,\n      secondHighScoreIndex: secondHighestIndex\n    };\n  };\n  const floatDecimalOneDigit = number => {\n    if (Number.isInteger(number) && number >= 10 && number <= 99) {\n      return `${number / 10}.00`;\n    } else {\n      return `${number}.00`;\n    }\n  };\n  const scoreTotal = (playerIndex, playersArray) => Number(playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).highScoreIndex]) + Number(playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).secondHighScoreIndex]);\n  const getSurfScore = index => {\n    if (surf) {\n      const surfScore = scoreTotal(index, players);\n      const newPlayers = [...players];\n      if (players[index].surfScores === undefined) {\n        newPlayers[index].surfScores = players[index].surfScores;\n        newPlayers[index].score = surfScore;\n        newPlayers[index].surfScore = surfScore;\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n      } else if (players[index].surfScores === undefined) {\n        newPlayers[index].surfScore = surfScore;\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n      }\n      return surfScore;\n    }\n    return;\n  };\n  useEffect(() => {\n    if (JSON.stringify(players, null, 2) !== '[]') {\n      const surfersScores = [];\n      localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n      localStorage.setItem('players', JSON.stringify(players));\n    }\n  }, [players]);\n  useEffect(() => {\n    const surfersScores = [];\n    localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n    localStorage.setItem('players', JSON.stringify(players));\n  }, [players]);\n  useEffect(() => {\n    localStorage.setItem('golfPars', JSON.stringify(golfPars));\n  }, [golfPars]);\n  useEffect(() => {\n    if (!localStorage.getItem('players') || localStorage.getItem('players') === '[]') {\n      const playersValue = localStorage.getItem('players');\n      alert(`localStorage.players: ${playersValue}`);\n      alert('Length:', playersValue.length);\n    }\n    const newPlayers = [...players];\n    if (!players[0].cricketScores || !players[1].cricketScores) {\n      if (!players[0].cricketScores) {\n        newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n        newPlayers[0].dartsScore = 0;\n      }\n      if (!players[1].cricketScores) {\n        newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n        newPlayers[1].dartsScore = 0;\n      }\n    }\n    const initGolfStats = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n    if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n      newPlayers[0].golfPutts = golfScoring;\n      newPlayers[0].golfFW = initGolfStats;\n      newPlayers[0].golfGIR = initGolfStats;\n    }\n    if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n      newPlayers[1].golfPutts = golfScoring;\n      newPlayers[1].golfFW = initGolfStats;\n      newPlayers[1].golfGIR = initGolfStats;\n    }\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  }, []);\n  const setGameInProgress = playerIndex => {\n    if (playerIndex > 0) {\n      if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n        localStorage.setItem('gameStatus', 'inProgress');\n      }\n    }\n    localStorage.setItem(`player${playerIndex}`, 'loser');\n    return false;\n  };\n  const isWinner = playerIndex => getDartTotal(players[playerIndex]) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n  const playerScores = [{\n    name: 'Player 1',\n    scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88]\n  }, {\n    name: 'Player 2',\n    scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81]\n  }, {\n    name: 'Player 3',\n    scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89]\n  }];\n  const setGameOver = playerIndex => {\n    localStorage.setItem('gameStatus', 'gameOver');\n    localStorage.setItem(`player${playerIndex}`, 'winner');\n    return true;\n  };\n  const setTimer = (groupTitle, label, selected) => {\n    localStorage.setItem('timer', selected);\n    setTime(selected * 60);\n    setHeatLength(selected * 60);\n  };\n  if (darts && winner !== 21) {\n    localStorage.setItem('winner', 21);\n    setWinner(Number(localStorage.getItem('winner')));\n  }\n  const getDartTotal = player => {\n    const cricketScores = String(player.cricketScores).split(',');\n    let total = 0;\n    const addToTotal = value => total = total + value;\n    cricketScores.map((score, index) => addToTotal(Number(score)));\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const getGolfTotal = player => {\n    if (!golf) return;\n    let total = 0;\n    const newPlayers = JSON.parse(localStorage.getItem('players'));\n    const addToTotal = value => total = total + Number(value);\n    newPlayers.map(player => {\n      player.golfScores.map(score => addToTotal(score));\n      player.golfScore = total;\n    });\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    return total;\n  };\n  const getDominoTotal = index => {\n    const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n    const total = newScores[index];\n    console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`);\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const updateScores = () => {\n    const newPlayers = JSON.parse(localStorage.getItem('players'));\n    setPlayers(newPlayers);\n  };\n  const set21 = () => {\n    if (darts) {\n      localStorage.setItem('winner', 21);\n      setWinner(Number(localStorage.getItem('winner')));\n    }\n  };\n  const selectGame = (groupTitle, label, selected) => {\n    localStorage.setItem('game', selected);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setGame(localStorage.getItem('game'));\n    set21();\n  };\n  const selectWinner = (groupTitle, label, selected) => {\n    localStorage.setItem('winner', selected);\n    setWinner(Number(localStorage.getItem('winner')));\n  };\n  const clear = event => {\n    alert('Note was cleared: ' + event.value);\n    localStorage.setItem('players', JSON.stringify(initPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const getSurfTotal = (player, index) => {\n    let total = 0;\n    const score = index => player.surfScores[index];\n    const addToTotal = value => total = total + value;\n    surfScoring.map((target, index) => {\n      console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`);\n      addToTotal(Number(score(index)));\n    });\n    return total;\n  };\n  const reset = event => {\n    let newPlayers = JSON.parse(localStorage.getItem('players'));\n    const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n    const id = (player, index) => {\n      if (darts) {\n        return cricketKey(player, index);\n      } else if (dominos) {\n        return getDominoKey(player, index);\n      } else if (golf) {\n        return golfKey(player, index);\n      } else if (surf) {\n        return surfKey(player, index);\n      }\n      return player.player || player.name;\n    };\n    const initValue = 0;\n    if (darts) {\n      newPlayers.map(player => {\n        player.dartsScore = 0;\n        player.cricketScores = [0, 0, 0, 0, 0, 0, 0];\n      });\n    } else if (golf) {\n      newPlayers.map(player => {\n        player.golfScore = 0;\n        player.golfScores = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n        player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n        player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      });\n    } else if (dominos) {\n      newPlayers[0].dominoScore = 0;\n      newPlayers[1].dominoScore = 0;\n    } else if (surf) {\n      newPlayers.map((player, index) => {\n        player.surfScores = surfScoring;\n        player.surfScore = 0;\n        player.surfPriority = 0;\n      });\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n      newPlayers = [...sortedPlayers];\n    } else {\n      newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n    }\n    localStorage.setItem('gameStatus', 'inProgress');\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n    getScore();\n  };\n  const addPlayer = event => {\n    const newPlayer = prompt('Enter new name', '');\n    const initializedNewPlayer = initNewPlayer;\n    initializedNewPlayer.name = newPlayer;\n    let newPlayers = [...players];\n    if (newPlayer !== null) {\n      newPlayers.push(initializedNewPlayer);\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n  };\n  const editPlayer = index => {\n    const newPlayer = prompt('Enter new name', players[index]);\n    if (newPlayer !== null) {\n      let newPlayers = [...players];\n      newPlayers[index] = newPlayer;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n      getScore();\n    }\n  };\n  const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n  const deletePlayer = index => {\n    console.log(`deletePlayer => ${index}`);\n    const newPlayers = [...players].slice();\n    newPlayers.splice(index, 1);\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const scorecards = () => {\n    const scorecard = (playerIndex, scoreIndex, score) => {\n      const player = players[playerIndex];\n      if (darts) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`);\n        return /*#__PURE__*/_jsxDEV(CricketScore, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateScores: updateScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 24\n        }, this);\n      }\n      if (dominos) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(Dominos, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          scoreTotal: player.dominoScore || 0,\n          treeTotal: score,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          getDominoTotal: getDominoTotal,\n          updateScores: updateScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 24\n        }, this);\n      }\n      if (golf) {\n        console.log(`${game} - scorecard => player:${player.player || player.name}`);\n        console.log(`scoreIndex: ${scoreIndex}`);\n        console.log(`score: ${player.golfScores[scoreIndex]}`);\n        console.log(`scorecards => par: ${score}`);\n        return /*#__PURE__*/_jsxDEV(ScoreCard, {\n          game: game,\n          players: players,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateScores: updateScores,\n          winner: golfPars[scoreIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 24\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(ScoreCard, {\n        game: game,\n        players: players,\n        playerIndex: playerIndex,\n        scoreIndex: scoreIndex,\n        editPlayer: editPlayer,\n        deletePlayer: deletePlayer,\n        updateScores: updateScores,\n        winner: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 20\n      }, this);\n    };\n    const rankStatus = (player, index, score) => {\n      const isPlayer1Winner = players[0].surfScore > players[1].surfScore ? true : false;\n      const scoreDifference = isPlayer1Winner ? players[0].surfScore - players[1].surfScore : players[1].surfScore - players[0].surfScore;\n      const need = isPlayer1Winner ? get2ndHighestScore(1) + (scoreDifference + .1) : get2ndHighestScore(0) + (scoreDifference + .1);\n      const winsBy = `Wins by ${scoreDifference}`;\n      const needs = `Needs ${need}`;\n      if (index === 0) {\n        return winsBy;\n      }\n      return needs;\n    };\n    const surfScoresDisplay = () => surfScoring.map((wave, index) => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer width-100-percent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3Column p-5\",\n          children: scorecard(players[0], 0, index, players[0].surfScores[index])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 r-5 font50 color-yellow m-auto\",\n          children: wave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex3Column p-5\",\n          children: scorecard(players[1], 1, index, players[1].surfScores[index])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 17\n        }, this)]\n      }, getKey(`wave${wave}`), true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 13\n      }, this);\n    });\n    const setSurfScore = (playerId, index, score) => {\n      const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, score || '');\n      const newPlayers = [...players];\n      newPlayers[playerId].surfScores[index] = Number(newScore);\n      newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n      if (newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) {\n        newPlayers.map((player, index) => {\n          if (index === playerId) {\n            player.surfPriority = players.length;\n          } else if (player.surfPriority != 0) {\n            player.surfPriority = player.surfPriority - 1;\n          }\n        });\n      }\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n      console.log('setSurfScore => sortedPlayers: ', sortedPlayers);\n      localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n      setPlayers(sortedPlayers);\n    };\n    const getWave = (playerId, index, score) => {\n      const player = players[playerId];\n      const theScore = player.surfScores[index];\n      const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n      const highestId = highestScores[0];\n      const secondHighestId = highestScores[1];\n      const firstScore = index === highestId ? true : false;\n      const secondScore = index === secondHighestId ? true : false;\n      const getClasses = firstScore || secondScore ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n      const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        onClick: () => setSurfScore(playerId, index, score),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"size30 bold color-yellow bg-dkYellow w-100 p-10\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ht-40 ${getClasses}`,\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 17\n        }, this)]\n      }, getKey(`wave${playerId}${index}${score}`), true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 26\n      }, this);\n      return wave;\n    };\n    const get2ndHighestScore = playerId => {\n      const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n      const secondHighestId = highestScores[1];\n      return players[playerId].surfScores[secondHighestId];\n    };\n    const isTieScore = (playerIndex, score) => {\n      if (playerIndex !== 0) {\n        if (score === scoreTotal(playerIndex - 1, players)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const jerseyColors = ['white', 'yellow', 'neogreen', 'black', 'blue', 'orange', 'pink', 'red'];\n    const selectJersey = index => {\n      const newPlayers = [...players];\n      newPlayers[index].surfJerseyColor = Number(newPlayers[index].surfJerseyColor) + 1;\n      newPlayers[index].surfJerseyColor = newPlayers[index].surfJerseyColor > jerseyColors.length - 1 ? 0 : newPlayers[index].surfJerseyColor;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      setPlayers(newPlayers);\n    };\n    const surfingScores = (player, index, score) => {\n      if (surf) {\n        const surferScores = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flexContainer pl-5 pr-5 pb-5 r-10 pt-15 ml-5 mr-5 mt--10 mb--10 color-dark text-outline-light`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `r-5-lft m-1 w-75 size40 p-25 bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`,\n              children: isTieScore(index, score) && index !== 0 ? index : index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex3Column contentLeft m-1 size40 p-25 contentCenter bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`,\n              onClick: () => selectJersey(index),\n              children: player.player || player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `r-5-rt flex3Column contentRight m-1 mr-10 pb-10 pl-10 pr-10 pt-15 bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"size40 bold\",\n                children: score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-10 bold\",\n                children: rankStatus(player, index, score)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 25\n            }, this)]\n          }, getKey(`${index}${player.player || player.name}`), true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-scroll color-white copyright m-10\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"container mt-10\",\n                  children: players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 21\n          }, this)]\n        }, getKey(`${score}${index}${player.player || player.name}`), true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 38\n        }, this);\n        return surferScores;\n      }\n      return;\n    };\n    const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n    const dartScores = () => dartScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(0, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(1, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 68\n    }, this));\n    const editGolfPar = hole => {\n      const newPars = [...golfPars];\n      const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n      newPars[hole] = newPar;\n      setGolfPars(newPars);\n    };\n    const golfScores = () => golfScoring.map((hole, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentCenter bg-dark r-10 m-5 mt-35\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"copyright greet color-yellow\",\n            children: \"Hole:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size40 bold pt-5 pl-15 pr-15 bg-dark r-10\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"copyright greet color-yellow\",\n            children: \"Par:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size20 bold color-lite mt--5\",\n            children: golfPars[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex2Column p-5\",\n            children: scorecard(0, index, golfPars[index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex2Column p-5\",\n            children: scorecard(1, index, golfPars[index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 13\n      }, this)\n    }, getKey(hole), false, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 67\n    }, this));\n    const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n    const dominoScores = () => dominoScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent contentCenter p-5\",\n        children: scorecard(0, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"r-5 font50 color-yellow m-auto w-100\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent contentCenter p-5\",\n        children: scorecard(1, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 72\n    }, this));\n    const isDominoWinner = playerIndex => getDominoTotal(playerIndex) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const dartClass = playerIndex => 'color-yellow flex3Column p-20 size25 bold' + (isWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dominoClass = playerIndex => 'color-yellow flex3Column p-20 size25 bold' + (isDominoWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dartScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDartTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDartTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 13\n      }, this), dartScores()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 38\n    }, this);\n    const golfScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy m-5 mb-20 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: players[0].golfScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10  size40 white\",\n            children: players[1].golfScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollHeight500\",\n        children: golfScores()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 38\n    }, this);\n    const dominoScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDominoTotal(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDominoTotal(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 13\n      }, this), dominoScores()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 40\n    }, this);\n    if (darts) return dartScoreboard();\n    if (dominos) return dominoScoreboard();\n    if (golf) return golfScoreboard();\n    //if (surf) return surfScoreboard\n    if (surf) return surfingScoreboard();else return renderedItems();\n  };\n  const updatePlayers = () => {\n    // Update the parent state to trigger a re-render\n    console.log();\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n    console.log(`updatePlayers=>`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fadeIn mt--30\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-20\",\n      children: [/*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"game\",\n        label: \"item.description\",\n        items: games,\n        selected: game,\n        onChange: selectGame,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: darts || dominos ? '98%' : '65%'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 17\n      }, this), darts || golf ? /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Selector, {\n        className: \"fl-left\",\n        groupTitle: \"winner\",\n        label: \"i.description\",\n        items: dominos ? dominoWinners : surf ? heatLengths : winners,\n        selected: surf ? time / 60 : winner,\n        onChange: surf ? setTimer : selectWinner,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: \"30%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 27\n      }, this), surf ? /*#__PURE__*/_jsxDEV(SurfScores, {\n        players: players,\n        time: time,\n        setTime: setTime,\n        heatLength: heatLength,\n        isWinner: isWinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: scorecards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow\",\n          onClick: () => addPlayer(),\n          children: \"add player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black\",\n          onClick: () => reset(),\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow\",\n          onClick: () => clear(),\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 686,\n    columnNumber: 9\n  }, this);\n};\n_s(ScoreKeeper, \"018u19vuQLHvwUSJhrDk2s9eFTI=\");\n_c = ScoreKeeper;\nexport default ScoreKeeper;\nvar _c;\n$RefreshReg$(_c, \"ScoreKeeper\");","map":{"version":3,"names":["React","useState","useEffect","ScoreCard","CricketScore","Dominos","SurfScores","Selector","getKey","jsxDEV","_jsxDEV","ScoreKeeper","_s","surfScoring","initPlayers","name","score","dominoScore","golfScores","golfGIR","golfFW","golfPutts","surfScores","surfJerseyColor","surfPriority","cricketScores","initNewPlayer","games","winners","dominoWinners","heatLengths","players","setPlayers","JSON","parse","localStorage","getItem","game","setGame","initScores","winner","setWinner","Number","time","setTime","heatLength","setHeatLength","waveCount","setWaveCount","surfersScores","setSurfersScores","darts","dominos","surf","golf","cricketKey","player","index","golfKey","surfKey","parsDefault","dartScoring","golfScoring","golfPars","setGolfPars","dominoScoring","gameStatus","setGameStatus","surferData","setSurferData","getScoreTotal","highestScore","getTwoHighestScores","highScoreIndex","secondHighestScore","secondHighScoreIndex","console","log","findTwoHighestIndices","scores","highestIndex","secondHighestIndex","Infinity","i","length","playerIndex","floatDecimalOneDigit","number","isInteger","scoreTotal","playersArray","getSurfScore","surfScore","newPlayers","undefined","setItem","stringify","playersValue","alert","dartsScore","initGolfStats","setGameInProgress","isWinner","getDartTotal","setGameOver","playerScores","setTimer","groupTitle","label","selected","String","split","total","addToTotal","value","map","getGolfTotal","golfScore","getDominoTotal","newScores","updateScores","set21","selectGame","selectWinner","clear","event","getSurfTotal","target","reset","getDominoKey","id","initValue","sortedPlayers","sort","a","b","getScore","addPlayer","newPlayer","prompt","initializedNewPlayer","push","editPlayer","window","location","pathname","deletePlayer","slice","splice","scorecards","scorecard","scoreIndex","fileName","_jsxFileName","lineNumber","columnNumber","treeTotal","rankStatus","isPlayer1Winner","scoreDifference","need","get2ndHighestScore","winsBy","needs","surfScoresDisplay","wave","className","children","setSurfScore","playerId","newScore","getWave","theScore","highestScores","highestId","secondHighestId","firstScore","secondScore","getClasses","onClick","isTieScore","jerseyColors","selectJersey","surfingScores","surferScores","renderedItems","dartScores","editGolfPar","hole","newPars","newPar","surfingScoreboard","dominoScores","isDominoWinner","dartClass","dominoClass","dartScoreboard","Fragment","golfScoreboard","dominoScoreboard","updatePlayers","items","onChange","fontSize","padding","width","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\n\nconst ScoreKeeper = () => {\n\n    const surfScoring = ['', '', '', '', '', '', '', '', '', ''];\n    const initPlayers = [\n        {\n            name: 'You',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        },\n        {\n            name: 'Me',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n    ];\n    const initNewPlayer = [\n        {\n            name: 'You',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n    ];\n    const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n    const winners = [5, 10, 11, 15, 20, 21];\n    const dominoWinners = [50, 100, 150, 200];\n    const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n    const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n    const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n    const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n    const [time, setTime] = useState(60 * 60); // Initial time in seconds (e.g., 1 hour)\n    const [heatLength, setHeatLength] = useState(60 * 60);\n    const [waveCount, setWaveCount] = useState(['', '', '', '', '', '', '', '', '', '']);\n    const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n    const darts = (game !== 'darts') ? false : true;\n    const dominos = (game !== 'dominos') ? false : true;\n    const surf = (game !== 'surf') ? false : true;\n    const golf = (game !== 'golf') ? false : true;\n    const cricketKey = (player, index) => `${(player.player || player.name)}Cricket${index}`;\n    const golfKey = (player, index) => `${(player.player || player.name)}Golf${index}`;\n    const surfKey = (player, index) => `${(player.player || player.name)}Surf${index}`;\n    const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n    const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n    const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n    const dominoScoring = [50, 100, 150, 200];\n    const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n    const [surferData, setSurferData] = useState([]);\n\n    const getScoreTotal = (index) => {\n        const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n        const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n        const score = (highestScore + secondHighestScore);\n        console.log(`getScore => player: ${index} score: ${score}`);\n        return score;\n    }\n\n    const findTwoHighestIndices = (scores) => {\n        let highestIndex = -1;\n        let secondHighestIndex = -1;\n        let highestScore = -Infinity;\n        let secondHighestScore = -Infinity;\n\n        for (let i = 0; i < scores.length; i++) {\n            if (scores[i] > highestScore) {\n                secondHighestIndex = highestIndex;\n                secondHighestScore = highestScore;\n                highestIndex = i;\n                highestScore = scores[i];\n            } else if (scores[i] > secondHighestScore) {\n                secondHighestIndex = i;\n                secondHighestScore = scores[i];\n            }\n        }\n\n        return [highestIndex, secondHighestIndex];\n    };\n\n    const getTwoHighestScores = (playerIndex) => {\n        const player = players[playerIndex];\n        const scores = player.surfScores;\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n        //console.log(`${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            highScoreIndex: highestIndex,\n            secondHighScoreIndex: secondHighestIndex\n        };\n    };\n\n\n    const floatDecimalOneDigit = (number) => {\n        if (Number.isInteger(number) && number >= 10 && number <= 99) {\n            return `${number / 10}.00`;\n        } else {\n            return `${number}.00`;\n        }\n    };\n\n    const scoreTotal = (playerIndex, playersArray) => Number(playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).highScoreIndex]) + Number(playersArray[playerIndex].surfScores[getTwoHighestScores(playerIndex).secondHighScoreIndex]);\n\n    const getSurfScore = (index) => {\n        if (surf) {\n            const surfScore = scoreTotal(index, players);\n            const newPlayers = [...players];\n\n            if (players[index].surfScores === undefined) {\n                newPlayers[index].surfScores = players[index].surfScores;\n                newPlayers[index].score = surfScore;\n                newPlayers[index].surfScore = surfScore;\n                localStorage.setItem('players', JSON.stringify(newPlayers));\n            } else if (players[index].surfScores === undefined) {\n                newPlayers[index].surfScore = surfScore;\n                localStorage.setItem('players', JSON.stringify(newPlayers));\n            }\n            return surfScore;\n        }\n        return\n    };\n    useEffect(() => {\n        if (JSON.stringify(players, null, 2) !== '[]') {\n            const surfersScores = [];\n            localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n            localStorage.setItem('players', JSON.stringify(players));\n        }\n    }, [players]);\n\n\n    useEffect(() => {\n        const surfersScores = [];\n        localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n        localStorage.setItem('players', JSON.stringify(players));\n    }, [players]);\n    \n    useEffect(() => {\n        localStorage.setItem('golfPars', JSON.stringify(golfPars));\n    }, [golfPars]);\n\n    useEffect(() => {\n        if (!localStorage.getItem('players') || (localStorage.getItem('players') === '[]')) {\n            const playersValue = localStorage.getItem('players');\n            alert(`localStorage.players: ${playersValue}`)\n            alert('Length:', playersValue.length);\n        }\n        const newPlayers = [...players];\n        if (!players[0].cricketScores || !players[1].cricketScores) {\n            if (!players[0].cricketScores) {\n                newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[0].dartsScore = 0;\n            }\n            if (!players[1].cricketScores) {\n                newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[1].dartsScore = 0;\n            }\n        }\n        const initGolfStats = [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]\n        if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n            newPlayers[0].golfPutts = golfScoring;\n            newPlayers[0].golfFW = initGolfStats;\n            newPlayers[0].golfGIR = initGolfStats;\n        }\n        if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n            newPlayers[1].golfPutts = golfScoring;\n            newPlayers[1].golfFW = initGolfStats;\n            newPlayers[1].golfGIR = initGolfStats;\n        }\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }, []);\n\n    const setGameInProgress = (playerIndex) => {\n        if (playerIndex > 0) {\n            if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n                localStorage.setItem('gameStatus', 'inProgress')\n            }\n        }\n        localStorage.setItem(`player${playerIndex}`, 'loser');\n        return false;\n    }\n    const isWinner = (playerIndex) => (getDartTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const playerScores = [\n        { name: 'Player 1', scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88] },\n        { name: 'Player 2', scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81] },\n        { name: 'Player 3', scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89] },\n    ];\n    const setGameOver = (playerIndex) => {\n        localStorage.setItem('gameStatus', 'gameOver');\n        localStorage.setItem(`player${playerIndex}`, 'winner');\n        return true;\n    }\n    const setTimer = (groupTitle, label, selected) => {\n        localStorage.setItem('timer', selected);\n        setTime(selected * 60);\n        setHeatLength(selected * 60);\n    }\n\n    if (darts && winner !== 21) {\n        localStorage.setItem('winner', 21);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const getDartTotal = (player) => {\n        const cricketScores = String(player.cricketScores).split(',');\n        let total = 0;\n        const addToTotal = (value) => total = total + value;\n        cricketScores.map((score, index) => addToTotal(Number(score)));\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const getGolfTotal = (player) => {\n        if (!golf) return;\n        let total = 0;\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        const addToTotal = (value) => total = total + Number(value);\n        newPlayers.map((player) => { \n            player.golfScores.map((score) => addToTotal(score))\n            player.golfScore = total;\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        return total;\n    }\n    const getDominoTotal = (index) => {\n        const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n        const total = newScores[index];\n        console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    \n    const updateScores = () => {\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        setPlayers(newPlayers);\n    }\n    const set21 = () => {\n        if (darts) {\n            localStorage.setItem('winner', 21);\n            setWinner(Number(localStorage.getItem('winner')));\n        }\n    }\n    const selectGame = (groupTitle, label, selected) => {\n        localStorage.setItem('game', selected)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setGame(localStorage.getItem('game'));\n        set21();\n    }\n    const selectWinner = (groupTitle, label, selected) => {\n        localStorage.setItem('winner', selected)\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const clear = (event) => {\n        alert('Note was cleared: ' + event.value);\n        localStorage.setItem('players', JSON.stringify(initPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n\n    const getSurfTotal = (player, index) => {\n        let total = 0;\n        const score = (index) => player.surfScores[index];\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n            console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        return total;\n    }\n\n    const reset = (event) => {\n        let newPlayers = JSON.parse(localStorage.getItem('players'));\n        const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n\n        const id = (player, index) => {\n            if (darts) {\n                return cricketKey(player, index);\n            } else if (dominos) {\n                return getDominoKey(player, index);\n            } else if (golf) {\n                return golfKey(player, index);\n            } else if (surf) {\n                return surfKey(player, index);\n            }\n            return (player.player || player.name);\n        }\n\n        const initValue = 0;\n        if (darts) {\n            newPlayers.map((player) => {\n                player.dartsScore = 0;\n                player.cricketScores = [0,0,0,0,0,0,0];\n            });\n        } else if (golf) {\n            newPlayers.map((player) => {\n                player.golfScore = 0;\n                player.golfScores = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n                player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            });\n        } else if (dominos) {\n            newPlayers[0].dominoScore = 0;\n            newPlayers[1].dominoScore = 0;\n        } else if (surf) {\n            newPlayers.map((player, index) => {\n                player.surfScores = surfScoring;\n                player.surfScore = 0;\n                player.surfPriority = 0;\n            });\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n            newPlayers = [...sortedPlayers];\n        } else {\n            newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n        }\n        localStorage.setItem('gameStatus', 'inProgress');\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        getScore();\n    }\n    const addPlayer = (event) => {\n        const newPlayer = prompt('Enter new name', '');\n        const initializedNewPlayer = initNewPlayer;\n        initializedNewPlayer.name = newPlayer;\n        let newPlayers = [...players];\n        if (newPlayer !== null) {\n            newPlayers.push(initializedNewPlayer);\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n    }\n\n    const editPlayer = (index) => {\n        const newPlayer = prompt('Enter new name', players[index]);\n        if (newPlayer !== null) {\n            let newPlayers = [...players];\n            newPlayers[index] = newPlayer;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n            getScore();\n        }\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n\n    const deletePlayer = (index) => {\n        console.log(`deletePlayer => ${index}`)\n        const newPlayers = [...players].slice();\n        newPlayers.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    };\n\n    const scorecards = () => {\n        const scorecard = (playerIndex, scoreIndex, score) => {\n            const player = players[playerIndex];\n            if (darts) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`)\n                return <CricketScore\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (dominos) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`)\n                return <Dominos\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    scoreTotal={player.dominoScore || 0}\n                    treeTotal={score}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    getDominoTotal={getDominoTotal}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (golf) {\n                console.log(`${game} - scorecard => player:${player.player || player.name}`);\n                console.log(`scoreIndex: ${scoreIndex}`);\n                console.log(`score: ${player.golfScores[scoreIndex]}`);\n                console.log(`scorecards => par: ${score}`);\n                return <ScoreCard\n                    game={game}\n                    players={players}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={golfPars[scoreIndex]}\n                />\n            }\n            return <ScoreCard\n                game={game}\n                players={players}\n                playerIndex={playerIndex}\n                scoreIndex={scoreIndex}\n                editPlayer={editPlayer}\n                deletePlayer={deletePlayer}\n                updateScores={updateScores}\n                winner={winner}\n            />\n        }\n        const rankStatus = (player, index, score) => {\n            const isPlayer1Winner = (players[0].surfScore > players[1].surfScore) ? true : false;\n            const scoreDifference = (isPlayer1Winner) ? (players[0].surfScore-players[1].surfScore) : (players[1].surfScore-players[0].surfScore);\n            const need = (isPlayer1Winner) ? (get2ndHighestScore(1) + (scoreDifference + .1)) : (get2ndHighestScore(0) + (scoreDifference + .1));\n            const winsBy = `Wins by ${scoreDifference}`;\n            const needs = `Needs ${need}`;\n            if (index === 0) {\n                return winsBy\n            }\n            return needs\n        }\n\n        const surfScoresDisplay = () => surfScoring.map((wave, index) => {\n            <div className='flexContainer width-100-percent' key={getKey(`wave${wave}`)}>\n                <div className='flex3Column p-5'>\n                    {scorecard(players[0], 0, index, players[0].surfScores[index])}\n                </div>\n                <div className='p-20 r-5 font50 color-yellow m-auto'>\n                    {wave}\n                </div>\n                <div className='flex3Column p-5'>\n                    {scorecard(players[1], 1, index, players[1].surfScores[index])}\n                </div>\n            </div>\n        });\n\n        const setSurfScore = (playerId, index, score) => {\n\n            const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, (score || ''));\n            const newPlayers = [...players];\n            newPlayers[playerId].surfScores[index] = Number(newScore);\n            newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n            if (newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) {\n                newPlayers.map((player, index)=>{\n                    if (index === playerId) {\n                        player.surfPriority = players.length;\n                    } else if (player.surfPriority != 0) {\n                        player.surfPriority = player.surfPriority-1;\n                    }\n                });\n            }\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => getSurfTotal(b, 0) - getSurfTotal(a, 0));\n\n            console.log('setSurfScore => sortedPlayers: ', sortedPlayers)\n\n            localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n            setPlayers(sortedPlayers);\n        }\n\n        const getWave = (playerId, index, score) => {\n            const player = players[playerId];\n            const theScore = player.surfScores[index];\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const highestId = highestScores[0];\n            const secondHighestId = highestScores[1];\n            const firstScore = (index === highestId) ? true : false;\n            const secondScore = (index === secondHighestId) ? true : false;\n            const getClasses = (firstScore || secondScore) ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n            const wave = <div className=\"column\" onClick={() => setSurfScore(playerId, index, score)} key={getKey(`wave${playerId}${index}${score}`)}>\n                <div className='size30 bold color-yellow bg-dkYellow w-100 p-10'>{index + 1}</div>\n                <div className={`ht-40 ${getClasses}`}>{score}</div>\n            </div>\n            return wave\n        }\n\n        const get2ndHighestScore = (playerId) => {\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const secondHighestId = highestScores[1];\n            return players[playerId].surfScores[secondHighestId];\n        }\n\n        const isTieScore = (playerIndex, score) => {\n            if (playerIndex !== 0) {\n                if (score === scoreTotal(playerIndex - 1, players)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        const jerseyColors = ['white', 'yellow', 'neogreen', 'black', 'blue', 'orange', 'pink', 'red'];\n        const selectJersey = (index) => {\n            const newPlayers = [...players];\n            newPlayers[index].surfJerseyColor = Number(newPlayers[index].surfJerseyColor)+1;\n            newPlayers[index].surfJerseyColor = (newPlayers[index].surfJerseyColor > (jerseyColors.length-1)) ? 0 : newPlayers[index].surfJerseyColor;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            setPlayers(newPlayers);\n        }\n\n        const surfingScores = (player, index, score) => {\n            if (surf) {\n                const surferScores = <div key={getKey(`${score}${index}${(player.player || player.name)}`)}>\n                    <div className={`flexContainer pl-5 pr-5 pb-5 r-10 pt-15 ml-5 mr-5 mt--10 mb--10 color-dark text-outline-light`} key={getKey(`${index}${(player.player || player.name)}`)}>\n                        <div className={`r-5-lft m-1 w-75 size40 p-25 bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`}>{(isTieScore(index, score) && (index !== 0)) ? index : (index + 1)}</div>\n                        <div className={`flex3Column contentLeft m-1 size40 p-25 contentCenter bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`} onClick={() => selectJersey(index)}>{(player.player || player.name)}</div>\n                        <div className={`r-5-rt flex3Column contentRight m-1 mr-10 pb-10 pl-10 pr-10 pt-15 bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`}>\n                            <div className='size40 bold'>{score}</div>\n                            <div className='mt-10 bold'>{rankStatus(player, index, score)}</div>\n                        </div>\n                    </div>\n                    <div>\n                        <div>\n                            <div className='h-scroll color-white copyright m-10'>\n                                <div className=\"container mt-10\">\n                                    {players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                return surferScores\n            }\n            return\n        }\n        const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n\n        const dartScores = () => dartScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex3Column p-5'>\n                {scorecard(0, index, 0)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(1, index, 0)}\n            </div>\n        </div>);\n\n        const editGolfPar = (hole) => {\n            const newPars = [...golfPars];\n            const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n            newPars[hole] = newPar;\n            setGolfPars(newPars);\n        }\n\n        const golfScores = () => golfScoring.map((hole, index) => <div key={getKey(hole)}>\n            <div className='contentCenter bg-dark r-10 m-5 mt-35'>\n                <div>\n                    <span className='copyright greet color-yellow'>\n                        Hole:\n                    </span>\n                    <span className='size40 bold pt-5 pl-15 pr-15 bg-dark r-10'>\n                        {index+1}\n                    </span>\n                    <span className='copyright greet color-yellow'>\n                        Par:\n                    </span>\n                    <span className='size20 bold color-lite mt--5'>\n                        {golfPars[index]}\n                    </span>\n                </div>\n                <div className='flexContainer'>\n                    <div className='flex2Column p-5'>\n                        {scorecard(0, index, golfPars[index])}\n                    </div>\n                    <div className='flex2Column p-5'>\n                        {scorecard(1, index, golfPars[index])}\n                    </div>\n                </div>\n            </div>\n        </div>);\n\n        const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index, getSurfScore(index)));\n\n        const dominoScores = () => dominoScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(0, index, score)}\n            </div>\n            <div className='r-5 font50 color-yellow m-auto w-100'>\n                {score}\n            </div>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(1, index, score)}\n            </div>\n        </div>);\n\n        const isDominoWinner = (playerIndex) => (getDominoTotal(playerIndex) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n\n        const dartClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        const dominoClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isDominoWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n\n        const dartScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>{players[0].player || players[0].name}:<div className='mt-10 size40 white'>{getDartTotal(players[0])}</div></div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>{players[1].player || players[1].name}:<div className='mt-10 size40 white'>{getDartTotal(players[1])}</div></div>\n            </div>\n            {dartScores()}\n        </React.Fragment>\n\n        const golfScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy m-5 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>\n                    {players[0].player || players[0].name}:<div className='mt-10 size40 white'>{players[0].golfScore}</div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>\n                    {players[1].player || players[1].name}:<div className='mt-10  size40 white'>{players[1].golfScore}</div>\n                </div>\n            </div>\n            <div className='scrollHeight500'>\n                {golfScores()}\n            </div>\n        </React.Fragment>\n\n        const dominoScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10'>\n                <div className={dominoClass(0)}>\n                    {players[0].player || players[0].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(0)}\n                    </div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dominoClass(1)}>\n                    {players[1].player || players[1].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(1)}\n                    </div>\n                </div>\n            </div>\n            {dominoScores()}\n        </React.Fragment>\n\n        if (darts) return dartScoreboard()\n        if (dominos) return dominoScoreboard()\n        if (golf) return golfScoreboard()\n        //if (surf) return surfScoreboard\n        if (surf) return surfingScoreboard()\n        else return renderedItems();\n    }\n    const updatePlayers = () => {\n        // Update the parent state to trigger a re-render\n        console.log()\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        console.log(`updatePlayers=>`)\n    };\n    \n    return (\n        <div className='fadeIn mt--30'>\n            <div className='mb-20'>\n                <Selector\n                    groupTitle='game'\n                    label='item.description'\n                    items={games}\n                    selected={game}\n                    onChange={selectGame}\n                    fontSize='25'\n                    padding='10px'\n                    width={(darts || dominos) ? '98%' : '65%'}\n                />\n                {\n                    (darts || golf)\n                        ? <React.Fragment></React.Fragment>\n                        : <Selector className='fl-left'\n                                groupTitle='winner'\n                                label='i.description'\n                                items={(dominos) ? dominoWinners : ((surf) ? heatLengths : winners)}\n                                selected={(surf) ? (time / 60) : winner}\n                                onChange={(surf) ? setTimer : selectWinner}\n                                fontSize='25'\n                                padding='10px'\n                                width='30%'\n                            />\n                }\n                {(surf) ?\n                    <SurfScores\n                        players={players}\n                        time={time}\n                        setTime={setTime}\n                        heatLength={heatLength}\n                        isWinner={isWinner}\n                    ></SurfScores>\n                    :\n                    <React.Fragment></React.Fragment>\n\n                }\n            </div>\n            <div>\n                {scorecards()}\n            </div>\n            <div className='flexContainer width-100-percent'>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow' onClick={() => addPlayer()}>add player</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black' onClick={() => reset()}>reset</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow' onClick={() => clear()}>clear</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScoreKeeper;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAMC,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAC5D,MAAMC,WAAW,GAAG,CAChB;IACIC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClEC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvIC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACtIC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjEC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACpDC,eAAe,EAAE,CAAC;IAClBC,YAAY,EAAE,CAAC;IACfC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EACvC,CAAC,EACD;IACIV,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClEC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvIC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACtIC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjEC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACpDC,eAAe,EAAE,CAAC;IAClBC,YAAY,EAAE,CAAC;IACfC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EACvC,CAAC,CACJ;EACD,MAAMC,aAAa,GAAG,CAClB;IACIX,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClEC,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvIC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACtIC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjEC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACpDC,eAAe,EAAE,CAAC;IAClBC,YAAY,EAAE,CAAC;IACfC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;EACvC,CAAC,CACJ;EACD,MAAME,KAAK,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC;EACvH,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACvC,MAAMC,aAAa,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACzC,MAAMC,WAAW,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAClD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAACgC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAItB,WAAW,CAAC;EAClG,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGrC,QAAQ,CAACkC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC;EAC5E,MAAMG,UAAU,GAAG,CAACR,OAAO,CAAC,CAAC,CAAC,CAAE,GAAEM,IAAK,OAAM,CAAC,EAAEN,OAAO,CAAC,CAAC,CAAC,CAAE,GAAEM,IAAK,OAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EACrF,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGxC,QAAQ,CAACyC,MAAM,CAACP,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;EAClF,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAG3C,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC4C,UAAU,EAAEC,aAAa,CAAC,GAAG7C,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC;EACrD,MAAM,CAAC8C,SAAS,EAAEC,YAAY,CAAC,GAAG/C,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpF,MAAM,CAACgD,aAAa,EAAEC,gBAAgB,CAAC,GAAGjD,QAAQ,CAACgC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,EAAE,CAAC;EAC3G,MAAMe,KAAK,GAAId,IAAI,KAAK,OAAO,GAAI,KAAK,GAAG,IAAI;EAC/C,MAAMe,OAAO,GAAIf,IAAI,KAAK,SAAS,GAAI,KAAK,GAAG,IAAI;EACnD,MAAMgB,IAAI,GAAIhB,IAAI,KAAK,MAAM,GAAI,KAAK,GAAG,IAAI;EAC7C,MAAMiB,IAAI,GAAIjB,IAAI,KAAK,MAAM,GAAI,KAAK,GAAG,IAAI;EAC7C,MAAMkB,UAAU,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAM,GAAGD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAACzC,IAAM,UAAS0C,KAAM,EAAC;EACxF,MAAMC,OAAO,GAAGA,CAACF,MAAM,EAAEC,KAAK,KAAM,GAAGD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAACzC,IAAM,OAAM0C,KAAM,EAAC;EAClF,MAAME,OAAO,GAAGA,CAACH,MAAM,EAAEC,KAAK,KAAM,GAAGD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAACzC,IAAM,OAAM0C,KAAM,EAAC;EAClF,MAAMG,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1E,MAAMC,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EACjD,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC1E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG/D,QAAQ,CAACgC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAIwB,WAAW,CAAC;EACrG,MAAMK,aAAa,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlE,QAAQ,CAACkC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC;EAChG,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGpE,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMqE,aAAa,GAAIb,KAAK,IAAK;IAC7B,MAAMc,YAAY,GAAGxC,OAAO,CAAC0B,KAAK,CAAC,CAACnC,UAAU,CAACkD,mBAAmB,CAACf,KAAK,CAAC,CAACgB,cAAc,CAAC;IACzF,MAAMC,kBAAkB,GAAG3C,OAAO,CAAC0B,KAAK,CAAC,CAACnC,UAAU,CAACkD,mBAAmB,CAACf,KAAK,CAAC,CAACkB,oBAAoB,CAAC;IACrG,MAAM3D,KAAK,GAAIuD,YAAY,GAAGG,kBAAmB;IACjDE,OAAO,CAACC,GAAG,CAAE,uBAAsBpB,KAAM,WAAUzC,KAAM,EAAC,CAAC;IAC3D,OAAOA,KAAK;EAChB,CAAC;EAED,MAAM8D,qBAAqB,GAAIC,MAAM,IAAK;IACtC,IAAIC,YAAY,GAAG,CAAC,CAAC;IACrB,IAAIC,kBAAkB,GAAG,CAAC,CAAC;IAC3B,IAAIV,YAAY,GAAG,CAACW,QAAQ;IAC5B,IAAIR,kBAAkB,GAAG,CAACQ,QAAQ;IAElC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;MACpC,IAAIJ,MAAM,CAACI,CAAC,CAAC,GAAGZ,YAAY,EAAE;QAC1BU,kBAAkB,GAAGD,YAAY;QACjCN,kBAAkB,GAAGH,YAAY;QACjCS,YAAY,GAAGG,CAAC;QAChBZ,YAAY,GAAGQ,MAAM,CAACI,CAAC,CAAC;MAC5B,CAAC,MAAM,IAAIJ,MAAM,CAACI,CAAC,CAAC,GAAGT,kBAAkB,EAAE;QACvCO,kBAAkB,GAAGE,CAAC;QACtBT,kBAAkB,GAAGK,MAAM,CAACI,CAAC,CAAC;MAClC;IACJ;IAEA,OAAO,CAACH,YAAY,EAAEC,kBAAkB,CAAC;EAC7C,CAAC;EAED,MAAMT,mBAAmB,GAAIa,WAAW,IAAK;IACzC,MAAM7B,MAAM,GAAGzB,OAAO,CAACsD,WAAW,CAAC;IACnC,MAAMN,MAAM,GAAGvB,MAAM,CAAClC,UAAU;IAChC,MAAM,CAAC0D,YAAY,EAAEC,kBAAkB,CAAC,GAAGH,qBAAqB,CAACC,MAAM,CAAC;IACxE;IACA,OAAO;MACHN,cAAc,EAAEO,YAAY;MAC5BL,oBAAoB,EAAEM;IAC1B,CAAC;EACL,CAAC;EAGD,MAAMK,oBAAoB,GAAIC,MAAM,IAAK;IACrC,IAAI7C,MAAM,CAAC8C,SAAS,CAACD,MAAM,CAAC,IAAIA,MAAM,IAAI,EAAE,IAAIA,MAAM,IAAI,EAAE,EAAE;MAC1D,OAAQ,GAAEA,MAAM,GAAG,EAAG,KAAI;IAC9B,CAAC,MAAM;MACH,OAAQ,GAAEA,MAAO,KAAI;IACzB;EACJ,CAAC;EAED,MAAME,UAAU,GAAGA,CAACJ,WAAW,EAAEK,YAAY,KAAKhD,MAAM,CAACgD,YAAY,CAACL,WAAW,CAAC,CAAC/D,UAAU,CAACkD,mBAAmB,CAACa,WAAW,CAAC,CAACZ,cAAc,CAAC,CAAC,GAAG/B,MAAM,CAACgD,YAAY,CAACL,WAAW,CAAC,CAAC/D,UAAU,CAACkD,mBAAmB,CAACa,WAAW,CAAC,CAACV,oBAAoB,CAAC,CAAC;EAErP,MAAMgB,YAAY,GAAIlC,KAAK,IAAK;IAC5B,IAAIJ,IAAI,EAAE;MACN,MAAMuC,SAAS,GAAGH,UAAU,CAAChC,KAAK,EAAE1B,OAAO,CAAC;MAC5C,MAAM8D,UAAU,GAAG,CAAC,GAAG9D,OAAO,CAAC;MAE/B,IAAIA,OAAO,CAAC0B,KAAK,CAAC,CAACnC,UAAU,KAAKwE,SAAS,EAAE;QACzCD,UAAU,CAACpC,KAAK,CAAC,CAACnC,UAAU,GAAGS,OAAO,CAAC0B,KAAK,CAAC,CAACnC,UAAU;QACxDuE,UAAU,CAACpC,KAAK,CAAC,CAACzC,KAAK,GAAG4E,SAAS;QACnCC,UAAU,CAACpC,KAAK,CAAC,CAACmC,SAAS,GAAGA,SAAS;QACvCzD,YAAY,CAAC4D,OAAO,CAAC,SAAS,EAAE9D,IAAI,CAAC+D,SAAS,CAACH,UAAU,CAAC,CAAC;MAC/D,CAAC,MAAM,IAAI9D,OAAO,CAAC0B,KAAK,CAAC,CAACnC,UAAU,KAAKwE,SAAS,EAAE;QAChDD,UAAU,CAACpC,KAAK,CAAC,CAACmC,SAAS,GAAGA,SAAS;QACvCzD,YAAY,CAAC4D,OAAO,CAAC,SAAS,EAAE9D,IAAI,CAAC+D,SAAS,CAACH,UAAU,CAAC,CAAC;MAC/D;MACA,OAAOD,SAAS;IACpB;IACA;EACJ,CAAC;EACD1F,SAAS,CAAC,MAAM;IACZ,IAAI+B,IAAI,CAAC+D,SAAS,CAACjE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;MAC3C,MAAMkB,aAAa,GAAG,EAAE;MACxBd,YAAY,CAAC4D,OAAO,CAAC,eAAe,EAAE9D,IAAI,CAAC+D,SAAS,CAAC/C,aAAa,CAAC,CAAC;MACpEd,YAAY,CAAC4D,OAAO,CAAC,SAAS,EAAE9D,IAAI,CAAC+D,SAAS,CAACjE,OAAO,CAAC,CAAC;IAC5D;EACJ,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAGb7B,SAAS,CAAC,MAAM;IACZ,MAAM+C,aAAa,GAAG,EAAE;IACxBd,YAAY,CAAC4D,OAAO,CAAC,eAAe,EAAE9D,IAAI,CAAC+D,SAAS,CAAC/C,aAAa,CAAC,CAAC;IACpEd,YAAY,CAAC4D,OAAO,CAAC,SAAS,EAAE9D,IAAI,CAAC+D,SAAS,CAACjE,OAAO,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb7B,SAAS,CAAC,MAAM;IACZiC,YAAY,CAAC4D,OAAO,CAAC,UAAU,EAAE9D,IAAI,CAAC+D,SAAS,CAACjC,QAAQ,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd7D,SAAS,CAAC,MAAM;IACZ,IAAI,CAACiC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAKD,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,KAAK,IAAK,EAAE;MAChF,MAAM6D,YAAY,GAAG9D,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;MACpD8D,KAAK,CAAE,yBAAwBD,YAAa,EAAC,CAAC;MAC9CC,KAAK,CAAC,SAAS,EAAED,YAAY,CAACb,MAAM,CAAC;IACzC;IACA,MAAMS,UAAU,GAAG,CAAC,GAAG9D,OAAO,CAAC;IAC/B,IAAI,CAACA,OAAO,CAAC,CAAC,CAAC,CAACN,aAAa,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAACN,aAAa,EAAE;MACxD,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAACN,aAAa,EAAE;QAC3BoE,UAAU,CAAC,CAAC,CAAC,CAACpE,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACnDoE,UAAU,CAAC,CAAC,CAAC,CAACM,UAAU,GAAG,CAAC;MAChC;MACA,IAAI,CAACpE,OAAO,CAAC,CAAC,CAAC,CAACN,aAAa,EAAE;QAC3BoE,UAAU,CAAC,CAAC,CAAC,CAACpE,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACnDoE,UAAU,CAAC,CAAC,CAAC,CAACM,UAAU,GAAG,CAAC;MAChC;IACJ;IACA,MAAMC,aAAa,GAAG,CAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAAC;IACnI,IAAI,CAACrE,OAAO,CAAC,CAAC,CAAC,CAACV,SAAS,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC,CAACX,MAAM,IAAI,CAACW,OAAO,CAAC,CAAC,CAAC,CAACZ,OAAO,EAAE;MACpE0E,UAAU,CAAC,CAAC,CAAC,CAACxE,SAAS,GAAGyC,WAAW;MACrC+B,UAAU,CAAC,CAAC,CAAC,CAACzE,MAAM,GAAGgF,aAAa;MACpCP,UAAU,CAAC,CAAC,CAAC,CAAC1E,OAAO,GAAGiF,aAAa;IACzC;IACA,IAAI,CAACrE,OAAO,CAAC,CAAC,CAAC,CAACV,SAAS,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC,CAACX,MAAM,IAAI,CAACW,OAAO,CAAC,CAAC,CAAC,CAACZ,OAAO,EAAE;MACpE0E,UAAU,CAAC,CAAC,CAAC,CAACxE,SAAS,GAAGyC,WAAW;MACrC+B,UAAU,CAAC,CAAC,CAAC,CAACzE,MAAM,GAAGgF,aAAa;MACpCP,UAAU,CAAC,CAAC,CAAC,CAAC1E,OAAO,GAAGiF,aAAa;IACzC;IACAjE,YAAY,CAAC4D,OAAO,CAAC,SAAS,EAAE9D,IAAI,CAAC+D,SAAS,CAACH,UAAU,CAAC,CAAC;IAC3D7D,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;EAC3D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiE,iBAAiB,GAAIhB,WAAW,IAAK;IACvC,IAAIA,WAAW,GAAG,CAAC,EAAE;MACjB,IAAIlD,YAAY,CAACC,OAAO,CAAE,SAAQiD,WAAW,GAAG,CAAE,EAAC,CAAC,KAAK,QAAQ,EAAE;QAC/DlD,YAAY,CAAC4D,OAAO,CAAC,YAAY,EAAE,YAAY,CAAC;MACpD;IACJ;IACA5D,YAAY,CAAC4D,OAAO,CAAE,SAAQV,WAAY,EAAC,EAAE,OAAO,CAAC;IACrD,OAAO,KAAK;EAChB,CAAC;EACD,MAAMiB,QAAQ,GAAIjB,WAAW,IAAMkB,YAAY,CAACxE,OAAO,CAACsD,WAAW,CAAC,CAAC,IAAI7C,MAAM,GAAIgE,WAAW,CAACnB,WAAW,CAAC,GAAGgB,iBAAiB,CAAChB,WAAW,CAAC;EAC5I,MAAMoB,YAAY,GAAG,CACjB;IAAE1F,IAAI,EAAE,UAAU;IAAEgE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAAE,CAAC,EACtE;IAAEhE,IAAI,EAAE,UAAU;IAAEgE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAAE,CAAC,EACtE;IAAEhE,IAAI,EAAE,UAAU;IAAEgE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAAE,CAAC,CACzE;EACD,MAAMyB,WAAW,GAAInB,WAAW,IAAK;IACjClD,YAAY,CAAC4D,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC;IAC9C5D,YAAY,CAAC4D,OAAO,CAAE,SAAQV,WAAY,EAAC,EAAE,QAAQ,CAAC;IACtD,OAAO,IAAI;EACf,CAAC;EACD,MAAMqB,QAAQ,GAAGA,CAACC,UAAU,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAC9C1E,YAAY,CAAC4D,OAAO,CAAC,OAAO,EAAEc,QAAQ,CAAC;IACvCjE,OAAO,CAACiE,QAAQ,GAAG,EAAE,CAAC;IACtB/D,aAAa,CAAC+D,QAAQ,GAAG,EAAE,CAAC;EAChC,CAAC;EAED,IAAI1D,KAAK,IAAIX,MAAM,KAAK,EAAE,EAAE;IACxBL,YAAY,CAAC4D,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IAClCtD,SAAS,CAACC,MAAM,CAACP,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;EACrD;EACA,MAAMmE,YAAY,GAAI/C,MAAM,IAAK;IAC7B,MAAM/B,aAAa,GAAGqF,MAAM,CAACtD,MAAM,CAAC/B,aAAa,CAAC,CAACsF,KAAK,CAAC,GAAG,CAAC;IAC7D,IAAIC,KAAK,GAAG,CAAC;IACb,MAAMC,UAAU,GAAIC,KAAK,IAAKF,KAAK,GAAGA,KAAK,GAAGE,KAAK;IACnDzF,aAAa,CAAC0F,GAAG,CAAC,CAACnG,KAAK,EAAEyC,KAAK,KAAKwD,UAAU,CAACvE,MAAM,CAAC1B,KAAK,CAAC,CAAC,CAAC;IAC9D,IAAIgG,KAAK,KAAKxE,MAAM,EAAEL,YAAY,CAAC4D,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC;IACpE,OAAOiB,KAAK;EAChB,CAAC;EACD,MAAMI,YAAY,GAAI5D,MAAM,IAAK;IAC7B,IAAI,CAACF,IAAI,EAAE;IACX,IAAI0D,KAAK,GAAG,CAAC;IACb,MAAMnB,UAAU,GAAG5D,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC9D,MAAM6E,UAAU,GAAIC,KAAK,IAAKF,KAAK,GAAGA,KAAK,GAAGtE,MAAM,CAACwE,KAAK,CAAC;IAC3DrB,UAAU,CAACsB,GAAG,CAAE3D,MAAM,IAAK;MACvBA,MAAM,CAACtC,UAAU,CAACiG,GAAG,CAAEnG,KAAK,IAAKiG,UAAU,CAACjG,KAAK,CAAC,CAAC;MACnDwC,MAAM,CAAC6D,SAAS,GAAGL,KAAK;IAC5B,CAAC,CAAC;IACF7E,YAAY,CAAC4D,OAAO,CAAC,SAAS,EAAE9D,IAAI,CAAC+D,SAAS,CAACH,UAAU,CAAC,CAAC;IAC3D,OAAOmB,KAAK;EAChB,CAAC;EACD,MAAMM,cAAc,GAAI7D,KAAK,IAAK;IAC9B,MAAM8D,SAAS,GAAG,CAACxF,OAAO,CAAC,CAAC,CAAC,CAACd,WAAW,EAAEc,OAAO,CAAC,CAAC,CAAC,CAACd,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5E,MAAM+F,KAAK,GAAGO,SAAS,CAAC9D,KAAK,CAAC;IAC9BmB,OAAO,CAACC,GAAG,CAAE,6BAA4B9C,OAAO,CAAC0B,KAAK,CAAC,CAAC1C,IAAK,KAAIiG,KAAM,cAAaxE,MAAO,EAAC,CAAC;IAC7F,IAAIwE,KAAK,KAAKxE,MAAM,EAAEL,YAAY,CAAC4D,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC;IACpE,OAAOiB,KAAK;EAChB,CAAC;EAED,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAM3B,UAAU,GAAG5D,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC9DJ,UAAU,CAAC6D,UAAU,CAAC;EAC1B,CAAC;EACD,MAAM4B,KAAK,GAAGA,CAAA,KAAM;IAChB,IAAItE,KAAK,EAAE;MACPhB,YAAY,CAAC4D,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;MAClCtD,SAAS,CAACC,MAAM,CAACP,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrD;EACJ,CAAC;EACD,MAAMsF,UAAU,GAAGA,CAACf,UAAU,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAChD1E,YAAY,CAAC4D,OAAO,CAAC,MAAM,EAAEc,QAAQ,CAAC;IACtC1E,YAAY,CAAC4D,OAAO,CAAC,YAAY,EAAE,YAAY,CAAC;IAChDzD,OAAO,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrCqF,KAAK,CAAC,CAAC;EACX,CAAC;EACD,MAAME,YAAY,GAAGA,CAAChB,UAAU,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAClD1E,YAAY,CAAC4D,OAAO,CAAC,QAAQ,EAAEc,QAAQ,CAAC;IACxCpE,SAAS,CAACC,MAAM,CAACP,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;EACrD,CAAC;EACD,MAAMwF,KAAK,GAAIC,KAAK,IAAK;IACrB3B,KAAK,CAAC,oBAAoB,GAAG2B,KAAK,CAACX,KAAK,CAAC;IACzC/E,YAAY,CAAC4D,OAAO,CAAC,SAAS,EAAE9D,IAAI,CAAC+D,SAAS,CAAClF,WAAW,CAAC,CAAC;IAC5D8D,OAAO,CAACC,GAAG,CAAE,sCAAqC1C,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE,EAAC,CAAC;IACpFD,YAAY,CAAC4D,OAAO,CAAC,YAAY,EAAE,YAAY,CAAC;IAChD/D,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,MAAM0F,YAAY,GAAGA,CAACtE,MAAM,EAAEC,KAAK,KAAK;IACpC,IAAIuD,KAAK,GAAG,CAAC;IACb,MAAMhG,KAAK,GAAIyC,KAAK,IAAKD,MAAM,CAAClC,UAAU,CAACmC,KAAK,CAAC;IACjD,MAAMwD,UAAU,GAAIC,KAAK,IAAKF,KAAK,GAAGA,KAAK,GAAGE,KAAK;IACnDrG,WAAW,CAACsG,GAAG,CAAC,CAACY,MAAM,EAAEtE,KAAK,KAAK;MAC/BmB,OAAO,CAACC,GAAG,CAAE,2BAA0BrB,MAAM,CAACzC,IAAK,WAAU0C,KAAM,WAAUzC,KAAK,CAACyC,KAAK,CAAE,EAAC,CAAC;MAC5FwD,UAAU,CAACvE,MAAM,CAAC1B,KAAK,CAACyC,KAAK,CAAC,CAAC,CAAC;IACpC,CACA,CAAC;IACD,OAAOuD,KAAK;EAChB,CAAC;EAED,MAAMgB,KAAK,GAAIH,KAAK,IAAK;IACrB,IAAIhC,UAAU,GAAG5D,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;IAC5D,MAAM6F,YAAY,GAAGA,CAACzE,MAAM,EAAEC,KAAK,KAAM,GAAED,MAAM,CAACzC,IAAK,SAAQ0C,KAAM,EAAC;IAEtE,MAAMyE,EAAE,GAAGA,CAAC1E,MAAM,EAAEC,KAAK,KAAK;MAC1B,IAAIN,KAAK,EAAE;QACP,OAAOI,UAAU,CAACC,MAAM,EAAEC,KAAK,CAAC;MACpC,CAAC,MAAM,IAAIL,OAAO,EAAE;QAChB,OAAO6E,YAAY,CAACzE,MAAM,EAAEC,KAAK,CAAC;MACtC,CAAC,MAAM,IAAIH,IAAI,EAAE;QACb,OAAOI,OAAO,CAACF,MAAM,EAAEC,KAAK,CAAC;MACjC,CAAC,MAAM,IAAIJ,IAAI,EAAE;QACb,OAAOM,OAAO,CAACH,MAAM,EAAEC,KAAK,CAAC;MACjC;MACA,OAAQD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAACzC,IAAI;IACxC,CAAC;IAED,MAAMoH,SAAS,GAAG,CAAC;IACnB,IAAIhF,KAAK,EAAE;MACP0C,UAAU,CAACsB,GAAG,CAAE3D,MAAM,IAAK;QACvBA,MAAM,CAAC2C,UAAU,GAAG,CAAC;QACrB3C,MAAM,CAAC/B,aAAa,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;MAC1C,CAAC,CAAC;IACN,CAAC,MAAM,IAAI6B,IAAI,EAAE;MACbuC,UAAU,CAACsB,GAAG,CAAE3D,MAAM,IAAK;QACvBA,MAAM,CAAC6D,SAAS,GAAG,CAAC;QACpB7D,MAAM,CAACtC,UAAU,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;QACzDsC,MAAM,CAACrC,OAAO,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QAC/IqC,MAAM,CAACpC,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;QAC9IoC,MAAM,CAACnC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC7E,CAAC,CAAC;IACN,CAAC,MAAM,IAAI+B,OAAO,EAAE;MAChByC,UAAU,CAAC,CAAC,CAAC,CAAC5E,WAAW,GAAG,CAAC;MAC7B4E,UAAU,CAAC,CAAC,CAAC,CAAC5E,WAAW,GAAG,CAAC;IACjC,CAAC,MAAM,IAAIoC,IAAI,EAAE;MACbwC,UAAU,CAACsB,GAAG,CAAC,CAAC3D,MAAM,EAAEC,KAAK,KAAK;QAC9BD,MAAM,CAAClC,UAAU,GAAGT,WAAW;QAC/B2C,MAAM,CAACoC,SAAS,GAAG,CAAC;QACpBpC,MAAM,CAAChC,YAAY,GAAG,CAAC;MAC3B,CAAC,CAAC;MACF,MAAM4G,aAAa,GAAG,CAAC,GAAGvC,UAAU,CAAC;MACrCuC,aAAa,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKT,YAAY,CAACS,CAAC,EAAE,CAAC,CAAC,GAAGT,YAAY,CAACQ,CAAC,EAAE,CAAC,CAAC,CAAC;MACrEzC,UAAU,GAAG,CAAC,GAAGuC,aAAa,CAAC;IACnC,CAAC,MAAM;MACHvC,UAAU,CAACsB,GAAG,CAAC,CAAC3D,MAAM,EAAEC,KAAK,KAAKoC,UAAU,CAACpC,KAAK,CAAC,CAAE,GAAEpB,IAAK,OAAM,CAAC,GAAG8F,SAAS,CAAC;IACpF;IACAhG,YAAY,CAAC4D,OAAO,CAAC,YAAY,EAAE,YAAY,CAAC;IAChD5D,YAAY,CAAC4D,OAAO,CAAC,SAAS,EAAE9D,IAAI,CAAC+D,SAAS,CAACH,UAAU,CAAC,CAAC;IAC3D7D,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IACvDoG,QAAQ,CAAC,CAAC;EACd,CAAC;EACD,MAAMC,SAAS,GAAIZ,KAAK,IAAK;IACzB,MAAMa,SAAS,GAAGC,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC;IAC9C,MAAMC,oBAAoB,GAAGlH,aAAa;IAC1CkH,oBAAoB,CAAC7H,IAAI,GAAG2H,SAAS;IACrC,IAAI7C,UAAU,GAAG,CAAC,GAAG9D,OAAO,CAAC;IAC7B,IAAI2G,SAAS,KAAK,IAAI,EAAE;MACpB7C,UAAU,CAACgD,IAAI,CAACD,oBAAoB,CAAC;MACrCzG,YAAY,CAAC4D,OAAO,CAAC,SAAS,EAAE9D,IAAI,CAAC+D,SAAS,CAACH,UAAU,CAAC,CAAC;MAC3DjB,OAAO,CAACC,GAAG,CAAE,sCAAqC1C,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE,EAAC,CAAC;MACpFJ,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IAC3D;EACJ,CAAC;EAED,MAAM0G,UAAU,GAAIrF,KAAK,IAAK;IAC1B,MAAMiF,SAAS,GAAGC,MAAM,CAAC,gBAAgB,EAAE5G,OAAO,CAAC0B,KAAK,CAAC,CAAC;IAC1D,IAAIiF,SAAS,KAAK,IAAI,EAAE;MACpB,IAAI7C,UAAU,GAAG,CAAC,GAAG9D,OAAO,CAAC;MAC7B8D,UAAU,CAACpC,KAAK,CAAC,GAAGiF,SAAS;MAC7BvG,YAAY,CAAC4D,OAAO,CAAC,SAAS,EAAE9D,IAAI,CAAC+D,SAAS,CAACH,UAAU,CAAC,CAAC;MAC3DjB,OAAO,CAACC,GAAG,CAAE,sCAAqC1C,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE,EAAC,CAAC;MACpFJ,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;MACvDoG,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC;EACD,MAAMA,QAAQ,GAAGA,CAAA,KAAMO,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,sBAAsB;EAExE,MAAMC,YAAY,GAAIzF,KAAK,IAAK;IAC5BmB,OAAO,CAACC,GAAG,CAAE,mBAAkBpB,KAAM,EAAC,CAAC;IACvC,MAAMoC,UAAU,GAAG,CAAC,GAAG9D,OAAO,CAAC,CAACoH,KAAK,CAAC,CAAC;IACvCtD,UAAU,CAACuD,MAAM,CAAC3F,KAAK,EAAE,CAAC,CAAC;IAC3BtB,YAAY,CAAC4D,OAAO,CAAC,SAAS,EAAE9D,IAAI,CAAC+D,SAAS,CAACH,UAAU,CAAC,CAAC;IAC3DjB,OAAO,CAACC,GAAG,CAAE,sCAAqC1C,YAAY,CAACC,OAAO,CAAC,SAAS,CAAE,EAAC,CAAC;IACpFJ,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMiH,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,SAAS,GAAGA,CAACjE,WAAW,EAAEkE,UAAU,EAAEvI,KAAK,KAAK;MAClD,MAAMwC,MAAM,GAAGzB,OAAO,CAACsD,WAAW,CAAC;MACnC,IAAIlC,KAAK,EAAE;QACPyB,OAAO,CAACC,GAAG,CAAE,GAAExC,IAAK,2BAA2BmB,MAAM,CAACA,MAAM,IAAIA,MAAM,CAACzC,IAAM,gBAAewI,UAAW,UAASA,UAAW,MAAK/F,MAAM,CAACxC,KAAM,EAAC,CAAC;QAC/I,oBAAON,OAAA,CAACN,YAAY;UAChBiC,IAAI,EAAEA,IAAK;UACXmB,MAAM,EAAEA,MAAO;UACf6B,WAAW,EAAEA,WAAY;UACzBkE,UAAU,EAAEA,UAAW;UACvBT,UAAU,EAAEA,UAAW;UACvBI,YAAY,EAAEA,YAAa;UAC3B1B,YAAY,EAAEA,YAAa;UAC3BhF,MAAM,EAAEA;QAAO,GACVhC,MAAM,CAAEgD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAACzC,IAAK,CAAC;UAAAyI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MACN;MACA,IAAIvG,OAAO,EAAE;QACTwB,OAAO,CAACC,GAAG,CAAE,GAAExC,IAAK,2BAA2BmB,MAAM,CAACA,MAAM,IAAIA,MAAM,CAACzC,IAAM,iBAAgBsE,WAAY,gBAAekE,UAAW,gBAAe/F,MAAM,CAACvC,WAAY,WAAUD,KAAM,EAAC,CAAC;QACvL,oBAAON,OAAA,CAACL,OAAO;UACXgC,IAAI,EAAEA,IAAK;UACXmB,MAAM,EAAEA,MAAO;UACf6B,WAAW,EAAEA,WAAY;UACzBkE,UAAU,EAAEA,UAAW;UACvB9D,UAAU,EAAEjC,MAAM,CAACvC,WAAW,IAAI,CAAE;UACpC2I,SAAS,EAAE5I,KAAM;UACjB8H,UAAU,EAAEA,UAAW;UACvBI,YAAY,EAAEA,YAAa;UAC3B5B,cAAc,EAAEA,cAAe;UAC/BE,YAAY,EAAEA,YAAa;UAC3BhF,MAAM,EAAEA;QAAO,GACVhC,MAAM,CAAEgD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAACzC,IAAK,CAAC;UAAAyI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MACN;MACA,IAAIrG,IAAI,EAAE;QACNsB,OAAO,CAACC,GAAG,CAAE,GAAExC,IAAK,0BAAyBmB,MAAM,CAACA,MAAM,IAAIA,MAAM,CAACzC,IAAK,EAAC,CAAC;QAC5E6D,OAAO,CAACC,GAAG,CAAE,eAAc0E,UAAW,EAAC,CAAC;QACxC3E,OAAO,CAACC,GAAG,CAAE,UAASrB,MAAM,CAACtC,UAAU,CAACqI,UAAU,CAAE,EAAC,CAAC;QACtD3E,OAAO,CAACC,GAAG,CAAE,sBAAqB7D,KAAM,EAAC,CAAC;QAC1C,oBAAON,OAAA,CAACP,SAAS;UACbkC,IAAI,EAAEA,IAAK;UACXN,OAAO,EAAEA,OAAQ;UACjBsD,WAAW,EAAEA,WAAY;UACzBkE,UAAU,EAAEA,UAAW;UACvBT,UAAU,EAAEA,UAAW;UACvBI,YAAY,EAAEA,YAAa;UAC3B1B,YAAY,EAAEA,YAAa;UAC3BhF,MAAM,EAAEuB,QAAQ,CAACwF,UAAU;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MACN;MACA,oBAAOjJ,OAAA,CAACP,SAAS;QACbkC,IAAI,EAAEA,IAAK;QACXN,OAAO,EAAEA,OAAQ;QACjBsD,WAAW,EAAEA,WAAY;QACzBkE,UAAU,EAAEA,UAAW;QACvBT,UAAU,EAAEA,UAAW;QACvBI,YAAY,EAAEA,YAAa;QAC3B1B,YAAY,EAAEA,YAAa;QAC3BhF,MAAM,EAAEA;MAAO;QAAAgH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IACN,CAAC;IACD,MAAME,UAAU,GAAGA,CAACrG,MAAM,EAAEC,KAAK,EAAEzC,KAAK,KAAK;MACzC,MAAM8I,eAAe,GAAI/H,OAAO,CAAC,CAAC,CAAC,CAAC6D,SAAS,GAAG7D,OAAO,CAAC,CAAC,CAAC,CAAC6D,SAAS,GAAI,IAAI,GAAG,KAAK;MACpF,MAAMmE,eAAe,GAAID,eAAe,GAAK/H,OAAO,CAAC,CAAC,CAAC,CAAC6D,SAAS,GAAC7D,OAAO,CAAC,CAAC,CAAC,CAAC6D,SAAS,GAAK7D,OAAO,CAAC,CAAC,CAAC,CAAC6D,SAAS,GAAC7D,OAAO,CAAC,CAAC,CAAC,CAAC6D,SAAU;MACrI,MAAMoE,IAAI,GAAIF,eAAe,GAAKG,kBAAkB,CAAC,CAAC,CAAC,IAAIF,eAAe,GAAG,EAAE,CAAC,GAAKE,kBAAkB,CAAC,CAAC,CAAC,IAAIF,eAAe,GAAG,EAAE,CAAE;MACpI,MAAMG,MAAM,GAAI,WAAUH,eAAgB,EAAC;MAC3C,MAAMI,KAAK,GAAI,SAAQH,IAAK,EAAC;MAC7B,IAAIvG,KAAK,KAAK,CAAC,EAAE;QACb,OAAOyG,MAAM;MACjB;MACA,OAAOC,KAAK;IAChB,CAAC;IAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAMvJ,WAAW,CAACsG,GAAG,CAAC,CAACkD,IAAI,EAAE5G,KAAK,KAAK;MAC7D,aAAA/C,OAAA;QAAK4J,SAAS,EAAC,iCAAiC;QAAAC,QAAA,gBAC5C7J,OAAA;UAAK4J,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC3BjB,SAAS,CAACvH,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE0B,KAAK,EAAE1B,OAAO,CAAC,CAAC,CAAC,CAACT,UAAU,CAACmC,KAAK,CAAC;QAAC;UAAA+F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC,eACNjJ,OAAA;UAAK4J,SAAS,EAAC,qCAAqC;UAAAC,QAAA,EAC/CF;QAAI;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNjJ,OAAA;UAAK4J,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC3BjB,SAAS,CAACvH,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE0B,KAAK,EAAE1B,OAAO,CAAC,CAAC,CAAC,CAACT,UAAU,CAACmC,KAAK,CAAC;QAAC;UAAA+F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA,GAT4CnJ,MAAM,CAAE,OAAM6J,IAAK,EAAC,CAAC;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUtE,CAAC;IACV,CAAC,CAAC;IAEF,MAAMa,YAAY,GAAGA,CAACC,QAAQ,EAAEhH,KAAK,EAAEzC,KAAK,KAAK;MAE7C,MAAM0J,QAAQ,GAAG/B,MAAM,CAAE,SAAQ5G,OAAO,CAAC0I,QAAQ,CAAC,CAACjH,MAAM,IAAIzB,OAAO,CAAC0I,QAAQ,CAAC,CAAC1J,IAAK,qBAAoB0C,KAAK,GAAG,CAAE,IAAG,EAAGzC,KAAK,IAAI,EAAG,CAAC;MACrI,MAAM6E,UAAU,GAAG,CAAC,GAAG9D,OAAO,CAAC;MAC/B8D,UAAU,CAAC4E,QAAQ,CAAC,CAACnJ,UAAU,CAACmC,KAAK,CAAC,GAAGf,MAAM,CAACgI,QAAQ,CAAC;MACzD7E,UAAU,CAAC4E,QAAQ,CAAC,CAAC7E,SAAS,GAAGH,UAAU,CAACgF,QAAQ,EAAE5E,UAAU,CAAC;MACjE,IAAIA,UAAU,CAAC4E,QAAQ,CAAC,CAACjJ,YAAY,KAAK,CAAC,IAAIqE,UAAU,CAAC4E,QAAQ,CAAC,CAACjJ,YAAY,KAAK,CAAC,EAAE;QACpFqE,UAAU,CAACsB,GAAG,CAAC,CAAC3D,MAAM,EAAEC,KAAK,KAAG;UAC5B,IAAIA,KAAK,KAAKgH,QAAQ,EAAE;YACpBjH,MAAM,CAAChC,YAAY,GAAGO,OAAO,CAACqD,MAAM;UACxC,CAAC,MAAM,IAAI5B,MAAM,CAAChC,YAAY,IAAI,CAAC,EAAE;YACjCgC,MAAM,CAAChC,YAAY,GAAGgC,MAAM,CAAChC,YAAY,GAAC,CAAC;UAC/C;QACJ,CAAC,CAAC;MACN;MACA,MAAM4G,aAAa,GAAG,CAAC,GAAGvC,UAAU,CAAC;MACrCuC,aAAa,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKT,YAAY,CAACS,CAAC,EAAE,CAAC,CAAC,GAAGT,YAAY,CAACQ,CAAC,EAAE,CAAC,CAAC,CAAC;MAErE1D,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEuD,aAAa,CAAC;MAE7DjG,YAAY,CAAC4D,OAAO,CAAC,SAAS,EAAE9D,IAAI,CAAC+D,SAAS,CAACoC,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MACvEpG,UAAU,CAACoG,aAAa,CAAC;IAC7B,CAAC;IAED,MAAMuC,OAAO,GAAGA,CAACF,QAAQ,EAAEhH,KAAK,EAAEzC,KAAK,KAAK;MACxC,MAAMwC,MAAM,GAAGzB,OAAO,CAAC0I,QAAQ,CAAC;MAChC,MAAMG,QAAQ,GAAGpH,MAAM,CAAClC,UAAU,CAACmC,KAAK,CAAC;MACzC,MAAMoH,aAAa,GAAG/F,qBAAqB,CAAC/C,OAAO,CAAC0I,QAAQ,CAAC,CAACnJ,UAAU,CAAC;MACzE,MAAMwJ,SAAS,GAAGD,aAAa,CAAC,CAAC,CAAC;MAClC,MAAME,eAAe,GAAGF,aAAa,CAAC,CAAC,CAAC;MACxC,MAAMG,UAAU,GAAIvH,KAAK,KAAKqH,SAAS,GAAI,IAAI,GAAG,KAAK;MACvD,MAAMG,WAAW,GAAIxH,KAAK,KAAKsH,eAAe,GAAI,IAAI,GAAG,KAAK;MAC9D,MAAMG,UAAU,GAAIF,UAAU,IAAIC,WAAW,GAAI,iCAAiC,GAAG,mBAAmB;MACxG,MAAMZ,IAAI,gBAAG3J,OAAA;QAAK4J,SAAS,EAAC,QAAQ;QAACa,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAACC,QAAQ,EAAEhH,KAAK,EAAEzC,KAAK,CAAE;QAAAuJ,QAAA,gBACrF7J,OAAA;UAAK4J,SAAS,EAAC,iDAAiD;UAAAC,QAAA,EAAE9G,KAAK,GAAG;QAAC;UAAA+F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAClFjJ,OAAA;UAAK4J,SAAS,EAAG,SAAQY,UAAW,EAAE;UAAAX,QAAA,EAAEvJ;QAAK;UAAAwI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAFuCnJ,MAAM,CAAE,OAAMiK,QAAS,GAAEhH,KAAM,GAAEzC,KAAM,EAAC,CAAC;QAAAwI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGnI,CAAC;MACN,OAAOU,IAAI;IACf,CAAC;IAED,MAAMJ,kBAAkB,GAAIQ,QAAQ,IAAK;MACrC,MAAMI,aAAa,GAAG/F,qBAAqB,CAAC/C,OAAO,CAAC0I,QAAQ,CAAC,CAACnJ,UAAU,CAAC;MACzE,MAAMyJ,eAAe,GAAGF,aAAa,CAAC,CAAC,CAAC;MACxC,OAAO9I,OAAO,CAAC0I,QAAQ,CAAC,CAACnJ,UAAU,CAACyJ,eAAe,CAAC;IACxD,CAAC;IAED,MAAMK,UAAU,GAAGA,CAAC/F,WAAW,EAAErE,KAAK,KAAK;MACvC,IAAIqE,WAAW,KAAK,CAAC,EAAE;QACnB,IAAIrE,KAAK,KAAKyE,UAAU,CAACJ,WAAW,GAAG,CAAC,EAAEtD,OAAO,CAAC,EAAE;UAChD,OAAO,IAAI;QACf;MACJ;MACA,OAAO,KAAK;IAChB,CAAC;IACD,MAAMsJ,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,CAAC;IAC9F,MAAMC,YAAY,GAAI7H,KAAK,IAAK;MAC5B,MAAMoC,UAAU,GAAG,CAAC,GAAG9D,OAAO,CAAC;MAC/B8D,UAAU,CAACpC,KAAK,CAAC,CAAClC,eAAe,GAAGmB,MAAM,CAACmD,UAAU,CAACpC,KAAK,CAAC,CAAClC,eAAe,CAAC,GAAC,CAAC;MAC/EsE,UAAU,CAACpC,KAAK,CAAC,CAAClC,eAAe,GAAIsE,UAAU,CAACpC,KAAK,CAAC,CAAClC,eAAe,GAAI8J,YAAY,CAACjG,MAAM,GAAC,CAAE,GAAI,CAAC,GAAGS,UAAU,CAACpC,KAAK,CAAC,CAAClC,eAAe;MACzIY,YAAY,CAAC4D,OAAO,CAAC,SAAS,EAAE9D,IAAI,CAAC+D,SAAS,CAACH,UAAU,CAAC,CAAC;MAC3D7D,UAAU,CAAC6D,UAAU,CAAC;IAC1B,CAAC;IAED,MAAM0F,aAAa,GAAGA,CAAC/H,MAAM,EAAEC,KAAK,EAAEzC,KAAK,KAAK;MAC5C,IAAIqC,IAAI,EAAE;QACN,MAAMmI,YAAY,gBAAG9K,OAAA;UAAA6J,QAAA,gBACjB7J,OAAA;YAAK4J,SAAS,EAAG,+FAA+F;YAAAC,QAAA,gBAC5G7J,OAAA;cAAK4J,SAAS,EAAG,mCAAkCe,YAAY,CAAC3I,MAAM,CAACX,OAAO,CAAC0B,KAAK,CAAC,CAAClC,eAAe,CAAC,CAAC,IAAI8J,YAAY,CAAC,CAAC,CAAE,EAAE;cAAAd,QAAA,EAAGa,UAAU,CAAC3H,KAAK,EAAEzC,KAAK,CAAC,IAAKyC,KAAK,KAAK,CAAE,GAAIA,KAAK,GAAIA,KAAK,GAAG;YAAE;cAAA+F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACvMjJ,OAAA;cAAK4J,SAAS,EAAG,4DAA2De,YAAY,CAAC3I,MAAM,CAACX,OAAO,CAAC0B,KAAK,CAAC,CAAClC,eAAe,CAAC,CAAC,IAAI8J,YAAY,CAAC,CAAC,CAAE,EAAE;cAACF,OAAO,EAAEA,CAAA,KAAMG,YAAY,CAAC7H,KAAK,CAAE;cAAA8G,QAAA,EAAG/G,MAAM,CAACA,MAAM,IAAIA,MAAM,CAACzC;YAAI;cAAAyI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjOjJ,OAAA;cAAK4J,SAAS,EAAG,wEAAuEe,YAAY,CAAC3I,MAAM,CAACX,OAAO,CAAC0B,KAAK,CAAC,CAAClC,eAAe,CAAC,CAAC,IAAI8J,YAAY,CAAC,CAAC,CAAE,EAAE;cAAAd,QAAA,gBAC9J7J,OAAA;gBAAK4J,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEvJ;cAAK;gBAAAwI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC1CjJ,OAAA;gBAAK4J,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAEV,UAAU,CAACrG,MAAM,EAAEC,KAAK,EAAEzC,KAAK;cAAC;gBAAAwI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnE,CAAC;UAAA,GAN4GnJ,MAAM,CAAE,GAAEiD,KAAM,GAAGD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAACzC,IAAM,EAAC,CAAC;YAAAyI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOpK,CAAC,eACNjJ,OAAA;YAAA6J,QAAA,eACI7J,OAAA;cAAA6J,QAAA,eACI7J,OAAA;gBAAK4J,SAAS,EAAC,qCAAqC;gBAAAC,QAAA,eAChD7J,OAAA;kBAAK4J,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,EAC3BxI,OAAO,CAAC0B,KAAK,CAAC,CAACnC,UAAU,CAAC6F,GAAG,CAAC,CAACnG,KAAK,EAAEqJ,IAAI,KAAKM,OAAO,CAAClH,KAAK,EAAE4G,IAAI,EAAEtI,OAAO,CAAC0B,KAAK,CAAC,CAACnC,UAAU,CAAC+I,IAAI,CAAC,CAAC;gBAAC;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrG;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA,GAjBqBnJ,MAAM,CAAE,GAAEQ,KAAM,GAAEyC,KAAM,GAAGD,MAAM,CAACA,MAAM,IAAIA,MAAM,CAACzC,IAAM,EAAC,CAAC;UAAAyI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBrF,CAAC;QACN,OAAO6B,YAAY;MACvB;MACA;IACJ,CAAC;IACD,MAAMC,aAAa,GAAGA,CAAA,KAAM1J,OAAO,CAACoF,GAAG,CAAC,CAAC3D,MAAM,EAAEC,KAAK,KAAK6F,SAAS,CAAC7F,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAElF,MAAMiI,UAAU,GAAGA,CAAA,KAAM7H,WAAW,CAACsD,GAAG,CAAC,CAACnG,KAAK,EAAEyC,KAAK,kBAAK/C,OAAA;MAAK4J,SAAS,EAAC,iCAAiC;MAAAC,QAAA,gBACvG7J,OAAA;QAAK4J,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3BjB,SAAS,CAAC,CAAC,EAAE7F,KAAK,EAAE,CAAC;MAAC;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACNjJ,OAAA;QAAK4J,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EAC/CvJ;MAAK;QAAAwI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNjJ,OAAA;QAAK4J,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3BjB,SAAS,CAAC,CAAC,EAAE7F,KAAK,EAAE,CAAC;MAAC;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA,GATuGnJ,MAAM,CAACQ,KAAK,CAAC;MAAAwI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUzH,CAAC,CAAC;IAEP,MAAMgC,WAAW,GAAIC,IAAI,IAAK;MAC1B,MAAMC,OAAO,GAAG,CAAC,GAAG9H,QAAQ,CAAC;MAC7B,MAAM+H,MAAM,GAAGnD,MAAM,CAAE,sBAAqBiD,IAAK,GAAE,EAAE7H,QAAQ,CAAC6H,IAAI,CAAC,CAAC;MACpEC,OAAO,CAACD,IAAI,CAAC,GAAGE,MAAM;MACtB9H,WAAW,CAAC6H,OAAO,CAAC;IACxB,CAAC;IAED,MAAM3K,UAAU,GAAGA,CAAA,KAAM4C,WAAW,CAACqD,GAAG,CAAC,CAACyE,IAAI,EAAEnI,KAAK,kBAAK/C,OAAA;MAAA6J,QAAA,eACtD7J,OAAA;QAAK4J,SAAS,EAAC,sCAAsC;QAAAC,QAAA,gBACjD7J,OAAA;UAAA6J,QAAA,gBACI7J,OAAA;YAAM4J,SAAS,EAAC,8BAA8B;YAAAC,QAAA,EAAC;UAE/C;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACPjJ,OAAA;YAAM4J,SAAS,EAAC,2CAA2C;YAAAC,QAAA,EACtD9G,KAAK,GAAC;UAAC;YAAA+F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACPjJ,OAAA;YAAM4J,SAAS,EAAC,8BAA8B;YAAAC,QAAA,EAAC;UAE/C;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACPjJ,OAAA;YAAM4J,SAAS,EAAC,8BAA8B;YAAAC,QAAA,EACzCxG,QAAQ,CAACN,KAAK;UAAC;YAAA+F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNjJ,OAAA;UAAK4J,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC1B7J,OAAA;YAAK4J,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC3BjB,SAAS,CAAC,CAAC,EAAE7F,KAAK,EAAEM,QAAQ,CAACN,KAAK,CAAC;UAAC;YAAA+F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eACNjJ,OAAA;YAAK4J,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC3BjB,SAAS,CAAC,CAAC,EAAE7F,KAAK,EAAEM,QAAQ,CAACN,KAAK,CAAC;UAAC;YAAA+F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC,GAxB0DnJ,MAAM,CAACoL,IAAI,CAAC;MAAApC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAyB3E,CAAC,CAAC;IAEP,MAAMoC,iBAAiB,GAAGA,CAAA,KAAMhK,OAAO,CAACoF,GAAG,CAAC,CAAC3D,MAAM,EAAEC,KAAK,KAAK8H,aAAa,CAAC/H,MAAM,EAAEC,KAAK,EAAEkC,YAAY,CAAClC,KAAK,CAAC,CAAC,CAAC;IAEjH,MAAMuI,YAAY,GAAGA,CAAA,KAAM/H,aAAa,CAACkD,GAAG,CAAC,CAACnG,KAAK,EAAEyC,KAAK,kBAAK/C,OAAA;MAAK4J,SAAS,EAAC,iCAAiC;MAAAC,QAAA,gBAC3G7J,OAAA;QAAK4J,SAAS,EAAC,wCAAwC;QAAAC,QAAA,EAClDjB,SAAS,CAAC,CAAC,EAAE7F,KAAK,EAAEzC,KAAK;MAAC;QAAAwI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACNjJ,OAAA;QAAK4J,SAAS,EAAC,sCAAsC;QAAAC,QAAA,EAChDvJ;MAAK;QAAAwI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNjJ,OAAA;QAAK4J,SAAS,EAAC,wCAAwC;QAAAC,QAAA,EAClDjB,SAAS,CAAC,CAAC,EAAE7F,KAAK,EAAEzC,KAAK;MAAC;QAAAwI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA,GAT2GnJ,MAAM,CAACQ,KAAK,CAAC;MAAAwI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAU7H,CAAC,CAAC;IAEP,MAAMsC,cAAc,GAAI5G,WAAW,IAAMiC,cAAc,CAACjC,WAAW,CAAC,IAAI7C,MAAM,GAAIgE,WAAW,CAACnB,WAAW,CAAC,GAAGgB,iBAAiB,CAAChB,WAAW,CAAC;IAE3I,MAAM6G,SAAS,GAAI7G,WAAW,IAAK,2CAA2C,IAAKiB,QAAQ,CAACjB,WAAW,CAAC,GAAI,oCAAoC,GAAG,EAAE,CAAC;IACtJ,MAAM8G,WAAW,GAAI9G,WAAW,IAAK,2CAA2C,IAAK4G,cAAc,CAAC5G,WAAW,CAAC,GAAI,oCAAoC,GAAG,EAAE,CAAC;IAE9J,MAAM+G,cAAc,GAAGA,CAAA,kBAAM1L,OAAA,CAACV,KAAK,CAACqM,QAAQ;MAAA9B,QAAA,gBACxC7J,OAAA;QAAK4J,SAAS,EAAC,oEAAoE;QAAAC,QAAA,gBAC/E7J,OAAA;UAAK4J,SAAS,EAAE4B,SAAS,CAAC,CAAC,CAAE;UAAA3B,QAAA,GAAExI,OAAO,CAAC,CAAC,CAAC,CAACyB,MAAM,IAAIzB,OAAO,CAAC,CAAC,CAAC,CAAChB,IAAI,EAAC,GAAC,eAAAL,OAAA;YAAK4J,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAEhE,YAAY,CAACxE,OAAO,CAAC,CAAC,CAAC;UAAC;YAAAyH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/IjJ,OAAA;UAAK4J,SAAS,EAAC,+CAA+C;UAAAC,QAAA,EAAC;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvEjJ,OAAA;UAAK4J,SAAS,EAAE4B,SAAS,CAAC,CAAC,CAAE;UAAA3B,QAAA,GAAExI,OAAO,CAAC,CAAC,CAAC,CAACyB,MAAM,IAAIzB,OAAO,CAAC,CAAC,CAAC,CAAChB,IAAI,EAAC,GAAC,eAAAL,OAAA;YAAK4J,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAEhE,YAAY,CAACxE,OAAO,CAAC,CAAC,CAAC;UAAC;YAAAyH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9I,CAAC,EACL+B,UAAU,CAAC,CAAC;IAAA;MAAAlC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;IAEjB,MAAM2C,cAAc,GAAGA,CAAA,kBAAM5L,OAAA,CAACV,KAAK,CAACqM,QAAQ;MAAA9B,QAAA,gBACxC7J,OAAA;QAAK4J,SAAS,EAAC,iDAAiD;QAAAC,QAAA,gBAC5D7J,OAAA;UAAK4J,SAAS,EAAE4B,SAAS,CAAC,CAAC,CAAE;UAAA3B,QAAA,GACxBxI,OAAO,CAAC,CAAC,CAAC,CAACyB,MAAM,IAAIzB,OAAO,CAAC,CAAC,CAAC,CAAChB,IAAI,EAAC,GAAC,eAAAL,OAAA;YAAK4J,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAExI,OAAO,CAAC,CAAC,CAAC,CAACsF;UAAS;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtG,CAAC,eACNjJ,OAAA;UAAK4J,SAAS,EAAC,+CAA+C;UAAAC,QAAA,EAAC;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvEjJ,OAAA;UAAK4J,SAAS,EAAE4B,SAAS,CAAC,CAAC,CAAE;UAAA3B,QAAA,GACxBxI,OAAO,CAAC,CAAC,CAAC,CAACyB,MAAM,IAAIzB,OAAO,CAAC,CAAC,CAAC,CAAChB,IAAI,EAAC,GAAC,eAAAL,OAAA;YAAK4J,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EAAExI,OAAO,CAAC,CAAC,CAAC,CAACsF;UAAS;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNjJ,OAAA;QAAK4J,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3BrJ,UAAU,CAAC;MAAC;QAAAsI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;IAEjB,MAAM4C,gBAAgB,GAAGA,CAAA,kBAAM7L,OAAA,CAACV,KAAK,CAACqM,QAAQ;MAAA9B,QAAA,gBAC1C7J,OAAA;QAAK4J,SAAS,EAAC,uDAAuD;QAAAC,QAAA,gBAClE7J,OAAA;UAAK4J,SAAS,EAAE6B,WAAW,CAAC,CAAC,CAAE;UAAA5B,QAAA,GAC1BxI,OAAO,CAAC,CAAC,CAAC,CAACyB,MAAM,IAAIzB,OAAO,CAAC,CAAC,CAAC,CAAChB,IAAI,EAAC,GACtC,eAAAL,OAAA;YAAK4J,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAC9BjD,cAAc,CAAC,CAAC;UAAC;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNjJ,OAAA;UAAK4J,SAAS,EAAC,+CAA+C;UAAAC,QAAA,EAAC;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvEjJ,OAAA;UAAK4J,SAAS,EAAE6B,WAAW,CAAC,CAAC,CAAE;UAAA5B,QAAA,GAC1BxI,OAAO,CAAC,CAAC,CAAC,CAACyB,MAAM,IAAIzB,OAAO,CAAC,CAAC,CAAC,CAAChB,IAAI,EAAC,GACtC,eAAAL,OAAA;YAAK4J,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAC9BjD,cAAc,CAAC,CAAC;UAAC;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EACLqC,YAAY,CAAC,CAAC;IAAA;MAAAxC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;IAEjB,IAAIxG,KAAK,EAAE,OAAOiJ,cAAc,CAAC,CAAC;IAClC,IAAIhJ,OAAO,EAAE,OAAOmJ,gBAAgB,CAAC,CAAC;IACtC,IAAIjJ,IAAI,EAAE,OAAOgJ,cAAc,CAAC,CAAC;IACjC;IACA,IAAIjJ,IAAI,EAAE,OAAO0I,iBAAiB,CAAC,CAAC,MAC/B,OAAON,aAAa,CAAC,CAAC;EAC/B,CAAC;EACD,MAAMe,aAAa,GAAGA,CAAA,KAAM;IACxB;IACA5H,OAAO,CAACC,GAAG,CAAC,CAAC;IACb7C,UAAU,CAACC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IACvDwC,OAAO,CAACC,GAAG,CAAE,iBAAgB,CAAC;EAClC,CAAC;EAED,oBACInE,OAAA;IAAK4J,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1B7J,OAAA;MAAK4J,SAAS,EAAC,OAAO;MAAAC,QAAA,gBAClB7J,OAAA,CAACH,QAAQ;QACLoG,UAAU,EAAC,MAAM;QACjBC,KAAK,EAAC,kBAAkB;QACxB6F,KAAK,EAAE9K,KAAM;QACbkF,QAAQ,EAAExE,IAAK;QACfqK,QAAQ,EAAEhF,UAAW;QACrBiF,QAAQ,EAAC,IAAI;QACbC,OAAO,EAAC,MAAM;QACdC,KAAK,EAAG1J,KAAK,IAAIC,OAAO,GAAI,KAAK,GAAG;MAAM;QAAAoG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,EAEGxG,KAAK,IAAIG,IAAI,gBACR5C,OAAA,CAACV,KAAK,CAACqM,QAAQ;QAAA7C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,gBACjCjJ,OAAA,CAACH,QAAQ;QAAC+J,SAAS,EAAC,SAAS;QACvB3D,UAAU,EAAC,QAAQ;QACnBC,KAAK,EAAC,eAAe;QACrB6F,KAAK,EAAGrJ,OAAO,GAAIvB,aAAa,GAAKwB,IAAI,GAAIvB,WAAW,GAAGF,OAAS;QACpEiF,QAAQ,EAAGxD,IAAI,GAAKV,IAAI,GAAG,EAAE,GAAIH,MAAO;QACxCkK,QAAQ,EAAGrJ,IAAI,GAAIqD,QAAQ,GAAGiB,YAAa;QAC3CgF,QAAQ,EAAC,IAAI;QACbC,OAAO,EAAC,MAAM;QACdC,KAAK,EAAC;MAAK;QAAArD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,EAEZtG,IAAI,gBACF3C,OAAA,CAACJ,UAAU;QACPyB,OAAO,EAAEA,OAAQ;QACjBY,IAAI,EAAEA,IAAK;QACXC,OAAO,EAAEA,OAAQ;QACjBC,UAAU,EAAEA,UAAW;QACvByD,QAAQ,EAAEA;MAAS;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,gBAEdjJ,OAAA,CAACV,KAAK,CAACqM,QAAQ;QAAA7C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGpC,CAAC,eACNjJ,OAAA;MAAA6J,QAAA,EACKlB,UAAU,CAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACNjJ,OAAA;MAAK4J,SAAS,EAAC,iCAAiC;MAAAC,QAAA,gBAC5C7J,OAAA;QAAK4J,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5B7J,OAAA;UAAKwG,KAAK,EAAC,QAAQ;UAACoD,SAAS,EAAC,wFAAwF;UAACa,OAAO,EAAEA,CAAA,KAAM1C,SAAS,CAAC,CAAE;UAAA8B,QAAA,EAAC;QAAU;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClK,CAAC,eACNjJ,OAAA;QAAK4J,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5B7J,OAAA;UAAKwG,KAAK,EAAC,QAAQ;UAACoD,SAAS,EAAC,+FAA+F;UAACa,OAAO,EAAEA,CAAA,KAAMnD,KAAK,CAAC,CAAE;UAAAuC,QAAA,EAAC;QAAK;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChK,CAAC,eACNjJ,OAAA;QAAK4J,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC5B7J,OAAA;UAAKwG,KAAK,EAAC,QAAQ;UAACoD,SAAS,EAAC,0FAA0F;UAACa,OAAO,EAAEA,CAAA,KAAMvD,KAAK,CAAC,CAAE;UAAA2C,QAAA,EAAC;QAAK;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3J,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAA/I,EAAA,CA5tBKD,WAAW;AAAAmM,EAAA,GAAXnM,WAAW;AA8tBjB,eAAeA,WAAW;AAAC,IAAAmM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}