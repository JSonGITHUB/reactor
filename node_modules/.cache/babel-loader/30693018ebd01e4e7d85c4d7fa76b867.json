{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport SurfingScores from './SurfingScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport jerseyColors from './JerseyColors.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreKeeper = () => {\n  _s();\n  const surfScoring = ['', '', '', '', '', '', '', '', '', ''];\n  const initPlayers = [{\n    name: 'You',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: ['', '', '', '', '', '', '', '', '', ''],\n    surfJerseyColor: 0,\n    surfPriority: 0,\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }, {\n    name: 'Me',\n    score: 0,\n    dominoScore: 0,\n    golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n    golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    surfScores: ['', '', '', '', '', '', '', '', '', ''],\n    surfJerseyColor: 0,\n    surfPriority: 0,\n    cricketScores: [0, 0, 0, 0, 0, 0, 0]\n  }];\n  const initNewPlayer = name => {\n    const newPlayer = {\n      name: name,\n      score: 0,\n      dominoScore: 0,\n      golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      surfScores: ['', '', '', '', '', '', '', '', '', ''],\n      surfJerseyColor: 0,\n      surfPriority: 0,\n      cricketScores: [0, 0, 0, 0, 0, 0, 0]\n    };\n    return newPlayer;\n  };\n  const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n  const winners = [5, 10, 11, 15, 20, 21];\n  const dominoWinners = [50, 100, 150, 200];\n  const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n  const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || []);\n  const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n  const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n  const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n  const [heatLength, setHeatLength] = useState(60 * 60);\n  const [waveCount, setWaveCount] = useState(['', '', '', '', '', '', '', '', '', '']);\n  const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || []);\n  const darts = game !== 'darts' ? false : true;\n  const dominos = game !== 'dominos' ? false : true;\n  const surf = game !== 'surf' ? false : true;\n  const golf = game !== 'golf' ? false : true;\n  const cricketKey = (player, index) => `${player.player || player.name}Cricket${index}`;\n  const golfKey = (player, index) => `${player.player || player.name}Golf${index}`;\n  const surfKey = (player, index) => `${player.player || player.name}Surf${index}`;\n  const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n  const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n  const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n  const dominoScoring = [50, 100, 150, 200];\n  const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n  const [timer, setTimer] = useState(null);\n  const [showButtons, setShowButtons] = useState(false);\n  const handleTouchStart = () => {\n    console.log(`handleTouchStart`);\n    setTimer(setTimeout(() => setShowButtons(true), 1000));\n  };\n  const handleTouchEnd = () => {\n    console.log(`handleTouchEnd`);\n    clearTimeout(timer);\n    setShowButtons(false);\n  };\n  useEffect(() => {\n    if (JSON.stringify(players, null, 2) !== '[]') {\n      const surfersScores = [];\n      localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n      localStorage.setItem('players', JSON.stringify(players));\n    }\n  }, [players]);\n  useEffect(() => {\n    const surfersScores = [];\n    localStorage.setItem('surfersScores', JSON.stringify(surfersScores));\n    localStorage.setItem('players', JSON.stringify(players));\n  }, [players]);\n  useEffect(() => {\n    localStorage.setItem('golfPars', JSON.stringify(golfPars));\n  }, [golfPars]);\n  useEffect(() => {\n    if (!localStorage.getItem('players') || localStorage.getItem('players') === '[]') {\n      //const playersValue = localStorage.getItem('players');\n      //alert(`localStorage.players: ${playersValue}`)\n      //alert('Length:', playersValue.length);\n      newPlayer();\n    }\n    const newPlayers = [...players];\n    if (!players[0].cricketScores || !players[1].cricketScores) {\n      if (!players[0].cricketScores) {\n        newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n        newPlayers[0].dartsScore = 0;\n      }\n      if (!players[1].cricketScores) {\n        newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n        newPlayers[1].dartsScore = 0;\n      }\n    }\n    const initGolfStats = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n    if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n      newPlayers[0].golfPutts = golfScoring;\n      newPlayers[0].golfFW = initGolfStats;\n      newPlayers[0].golfGIR = initGolfStats;\n    }\n    if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n      newPlayers[1].golfPutts = golfScoring;\n      newPlayers[1].golfFW = initGolfStats;\n      newPlayers[1].golfGIR = initGolfStats;\n    }\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  }, []);\n  const setGameInProgress = playerIndex => {\n    if (playerIndex > 0) {\n      if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n        localStorage.setItem('gameStatus', 'inProgress');\n      }\n    }\n    localStorage.setItem(`player${playerIndex}`, 'loser');\n    return false;\n  };\n  const isWinner = playerIndex => getDartTotal(players[playerIndex]) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n  const playerScores = [{\n    name: 'Player 1',\n    scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88]\n  }, {\n    name: 'Player 2',\n    scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81]\n  }, {\n    name: 'Player 3',\n    scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89]\n  }];\n  const setGameOver = playerIndex => {\n    localStorage.setItem('gameStatus', 'gameOver');\n    localStorage.setItem(`player${playerIndex}`, 'winner');\n    return true;\n  };\n  if (darts && winner !== 21) {\n    localStorage.setItem('winner', 21);\n    setWinner(Number(localStorage.getItem('winner')));\n  }\n  const getDartTotal = player => {\n    const cricketScores = String(player.cricketScores).split(',');\n    let total = 0;\n    const addToTotal = value => total = total + value;\n    cricketScores.map((score, index) => addToTotal(Number(score)));\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const getGolfTotal = player => {\n    if (!golf) return;\n    let total = 0;\n    const newPlayers = JSON.parse(localStorage.getItem('players'));\n    const addToTotal = value => total = total + Number(value);\n    newPlayers.map(player => {\n      player.golfScores.map(score => addToTotal(score));\n      player.golfScore = total;\n    });\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    return total;\n  };\n  const getDominoTotal = index => {\n    const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n    const total = newScores[index];\n    console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`);\n    if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n    return total;\n  };\n  const updateScores = () => {\n    const newPlayers = JSON.parse(localStorage.getItem('players'));\n    setPlayers(newPlayers);\n  };\n  const set21 = () => {\n    if (darts) {\n      localStorage.setItem('winner', 21);\n      setWinner(Number(localStorage.getItem('winner')));\n    }\n  };\n  const selectGame = (groupTitle, label, selected) => {\n    localStorage.setItem('game', selected);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setGame(localStorage.getItem('game'));\n    set21();\n  };\n  const selectWinner = (groupTitle, label, selected) => {\n    localStorage.setItem('winner', selected);\n    setWinner(Number(localStorage.getItem('winner')));\n  };\n  const clear = event => {\n    //alert('Note was cleared: ' + event.value);\n    localStorage.setItem('players', JSON.stringify(initPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    localStorage.setItem('gameStatus', 'inProgress');\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const reset = event => {\n    let newPlayers = JSON.parse(localStorage.getItem('players'));\n    const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n    const id = (player, index) => {\n      if (darts) {\n        return cricketKey(player, index);\n      } else if (dominos) {\n        return getDominoKey(player, index);\n      } else if (golf) {\n        return golfKey(player, index);\n      } else if (surf) {\n        return surfKey(player, index);\n      }\n      return player.player || player.name;\n    };\n    const initValue = 0;\n    if (darts) {\n      newPlayers.map(player => {\n        player.dartsScore = 0;\n        player.cricketScores = [0, 0, 0, 0, 0, 0, 0];\n      });\n    } else if (golf) {\n      newPlayers.map(player => {\n        player.golfScore = 0;\n        player.golfScores = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n        player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n        player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      });\n    } else if (dominos) {\n      newPlayers[0].dominoScore = 0;\n      newPlayers[1].dominoScore = 0;\n    } else if (surf) {\n      newPlayers.map((player, index) => {\n        player.surfScores = surfScoring;\n        player.surfScore = 0;\n        player.surfPriority = 0;\n      });\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => getSurfTotal(b) - getSurfTotal(a));\n      newPlayers = [...sortedPlayers];\n    } else {\n      newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n    }\n    localStorage.setItem('gameStatus', 'inProgress');\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n    getScore();\n  };\n  const newPlayer = () => {\n    const newPlayer = prompt('Enter new name', '');\n    const initializedNewPlayer = initNewPlayer(newPlayer);\n    let newPlayers = [...players];\n    if (newPlayer !== null) {\n      newPlayers.push(initializedNewPlayer);\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n  };\n  const addPlayer = event => {\n    newPlayer();\n  };\n  const editPlayer = index => {\n    const newPlayer = prompt('Enter new name', players[index]);\n    if (newPlayer !== null) {\n      let newPlayers = [...players];\n      newPlayers[index] = newPlayer;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n      setPlayers(JSON.parse(localStorage.getItem('players')));\n      getScore();\n    }\n  };\n  const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n  const deletePlayer = index => {\n    console.log(`deletePlayer => ${index}`);\n    const newPlayers = [...players].slice();\n    newPlayers.splice(index, 1);\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`);\n    setPlayers(JSON.parse(localStorage.getItem('players')));\n  };\n  const getSurferIndexWithPriority = priorityIndex => {\n    for (let i = 0; i < players.length; i++) {\n      if (Number(players[i].surfPriority) === priorityIndex) {\n        return i;\n      }\n    }\n    return null;\n  };\n  const losePriority = selectedPriority => {\n    const newPlayers = [...players];\n    newPlayers.map((player, index) => {\n      if (player.surfPriority == selectedPriority) {\n        player.surfPriority = newPlayers.length;\n      } else if (player.surfPriority != 1 && selectedPriority != newPlayers.length) {\n        const shift = player.surfPriority - 1;\n        player.surfPriority = shift > 0 ? shift : newPlayers.length;\n      }\n    });\n    localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n    setPlayers(newPlayers);\n  };\n  const shiftPriority = priorityIndex => {\n    const newPlayers = [...players];\n    newPlayers.map((player, index) => {\n      if (player.surfPriority === priorityIndex - 1) {\n        player.surfPriority = priorityIndex;\n      } else if (player.surfPriority === priorityIndex) {\n        player.surfPriority = priorityIndex - 1;\n      }\n    });\n    localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n    setPlayers(newPlayers);\n  };\n  const editSurfer = playerId => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-10 p-10 r-10 bg-neogreen\",\n    children: jerseyColors.map((player, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `bg-${jerseyColors[index]} ht-45 width50px`,\n      onClick: () => selectJersey(playerId, index)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 50\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 38\n  }, this);\n  const getSurfTotal = player => {\n    let total = 0;\n    const score = index => player.surfScores[index];\n    const addToTotal = value => total = total + value;\n    surfScoring.map((target, index) => {\n      console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`);\n      addToTotal(Number(score(index)));\n    });\n    return total;\n  };\n  const selectJersey = (playerId, selection) => {\n    const newPlayers = [...players];\n    newPlayers[playerId].surfJerseyColor = selection;\n    localStorage.setItem('players', JSON.stringify(newPlayers));\n    setPlayers(newPlayers);\n  };\n  const scorecards = () => {\n    const scorecard = (playerIndex, scoreIndex, score) => {\n      const player = players[playerIndex];\n      if (darts) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`);\n        return /*#__PURE__*/_jsxDEV(CricketScore, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateScores: updateScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 24\n        }, this);\n      }\n      if (dominos) {\n        console.log(`${game} - scorecard => player: ${player.player || player.name} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`);\n        return /*#__PURE__*/_jsxDEV(Dominos, {\n          game: game,\n          player: player,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          scoreTotal: player.dominoScore || 0,\n          treeTotal: score,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          getDominoTotal: getDominoTotal,\n          updateScores: updateScores,\n          winner: winner\n        }, getKey(player.player || player.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 24\n        }, this);\n      }\n      if (golf) {\n        console.log(`${game} - scorecard => player:${player.player || player.name}`);\n        console.log(`scoreIndex: ${scoreIndex}`);\n        console.log(`score: ${player.golfScores[scoreIndex]}`);\n        console.log(`scorecards => par: ${score}`);\n        return /*#__PURE__*/_jsxDEV(ScoreCard, {\n          game: game,\n          players: players,\n          playerIndex: playerIndex,\n          scoreIndex: scoreIndex,\n          editPlayer: editPlayer,\n          deletePlayer: deletePlayer,\n          updateScores: updateScores,\n          winner: golfPars[scoreIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 24\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(ScoreCard, {\n        game: game,\n        players: players,\n        playerIndex: playerIndex,\n        scoreIndex: scoreIndex,\n        editPlayer: editPlayer,\n        deletePlayer: deletePlayer,\n        updateScores: updateScores,\n        winner: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 20\n      }, this);\n    };\n    /////////////////////////////////\n\n    const rank = ['st', 'nd', 'rd', 'th'];\n    const rankStatus = (player, index) => {\n      const score = getSurfTotal(player);\n      const scoreDifference = Number(players[index === 0 ? 0 : index - 1].surfScore - players[index === 0 ? 1 : index].surfScore);\n      const difference = scoreDifference < 0 ? -1 * scoreDifference : scoreDifference;\n      const winningScore = Number(players[index === 0 ? 0 : index < 3 ? index - 1 : 1].surfScore);\n      const highestScoresIndices = findTwoHighestIndices(players[index].surfScores);\n      const losersHeighestScore = players[index].surfScores[highestScoresIndices[0]];\n      const need = winningScore - losersHeighestScore + .01;\n      const winsBy = `Wins by ${difference.toFixed(2)}`;\n      const needs = `Needs ${need.toFixed(2)}`;\n      if (index === 0) {\n        return winsBy;\n      }\n      return needs;\n    };\n    const findTwoHighestIndices = scores => {\n      const newScores = scores !== undefined ? scores : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      let highestIndex = -1;\n      let secondHighestIndex = -1;\n      let highestScore = -Infinity;\n      let secondHighestScore = -Infinity;\n      for (let i = 0; i < newScores.length; i++) {\n        if (newScores[i] > highestScore) {\n          secondHighestIndex = highestIndex;\n          secondHighestScore = highestScore;\n          highestIndex = i;\n          highestScore = newScores[i];\n        } else if (newScores[i] > secondHighestScore) {\n          secondHighestIndex = i;\n          secondHighestScore = newScores[i];\n        }\n      }\n      return [highestIndex, secondHighestIndex];\n    };\n    const getTwoHighestScores = index => {\n      const player = players[index];\n      const scores = player.surfScores;\n      const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n      //console.log(`getTwoHighestScores => playerIndex: ${index} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n      return {\n        highScoreIndex: highestIndex,\n        secondHighScoreIndex: secondHighestIndex\n      };\n    };\n    const getScoreTotal = index => {\n      const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n      const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n      const score = highestScore + secondHighestScore;\n      console.log(`getScore => player: ${index} score: ${score}`);\n      return score;\n    };\n    const highestScore = (index, playersArray) => {\n      console.log(`highestScore = (index: ${index}, playersArray: ${JSON.stringify(playersArray, null, 2)})`);\n      return playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n    };\n    const secondHighestScore = (index, playersArray) => playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n    const scoreTotal = (index, playersArray) => Number(highestScore(index, playersArray) + secondHighestScore(index, playersArray)).toFixed(2);\n    const setSurfScore = (playerId, index, score) => {\n      const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n      const newPlayers = [...players];\n      const currentScore = newPlayers[playerId].surfScores[index];\n      const edit = currentScore !== '' && currentScore !== 0 ? false : true;\n      newPlayers[playerId].surfScores[index] = Number(newScore);\n      newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n      if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n        newPlayers.map((player, index) => {\n          if (index === playerId) {\n            player.surfPriority = players.length;\n          } else if (player.surfPriority != 0) {\n            player.surfPriority = player.surfPriority - 1;\n          }\n        });\n      }\n      const sortedPlayers = [...newPlayers];\n      sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n      console.log('setSurfScore => sortedPlayers: ', sortedPlayers);\n      localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n      setPlayers(sortedPlayers);\n    };\n    const get2ndHighestScore = playerId => {\n      const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n      const secondHighestId = highestScores[1];\n      return players[playerId].surfScores[secondHighestId];\n    };\n    const getSurfScore = index => {\n      const newPlayers = [...players];\n      const surfScore = scoreTotal(index, newPlayers);\n      newPlayers[index].score = surfScore;\n      newPlayers[index].surfScore = surfScore;\n      localStorage.setItem('players', JSON.stringify(newPlayers));\n      return surfScore;\n    };\n    const getWave = (playerId, index, score) => {\n      const player = players[playerId];\n      const theScore = player.surfScores[index];\n      const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n      const highestId = highestScores[0];\n      const secondHighestId = highestScores[1];\n      const firstScore = index === highestId ? true : false;\n      const secondScore = index === secondHighestId ? true : false;\n      const getClasses = firstScore || secondScore ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n      const wave = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column r-10\",\n        onClick: () => setSurfScore(playerId, index, score),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"size30 bold color-yellow bg-dkYellow w-100 p-10\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ht-40 ${getClasses}`,\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 17\n        }, this)]\n      }, getKey(`wave${playerId}${index}${score}`), true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 26\n      }, this);\n      return wave;\n    };\n    const isTieScore = index => {\n      const score = scoreTotal(index, players);\n      if (index !== 0) {\n        if (score === scoreTotal(index - 1, players)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    const surferScores = (player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`,\n        onTouchStart: handleTouchStart,\n        onTouchEnd: handleTouchEnd /*onClick={() => selectJersey(index)}*/,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex2Column contentLeft r-10-lft m-0 w-75 p-10`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"size25 mt--10\",\n              children: isTieScore(index) && index !== 0 ? index : index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"size15 mt--10\",\n              children: rank[isTieScore(index) && index !== 0 ? index - 1 : index > 2 ? 3 : index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"size30 mt-5 mb-5\",\n            children: (player.player || player.name).split(' ')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"size20\",\n            children: (player.player || player.name).split(' ')[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"size40 bold\",\n            children: getScoreTotal(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 bold\",\n            children: rankStatus(player, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 17\n        }, this)]\n      }, getKey(`${index}${player.player || player.name}`), true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showButtons && editSurfer(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-scroll color-white copyright ml-10 mr-10 mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container mt-10\",\n              children: players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 13\n      }, this)]\n    }, getKey(`${index}${player.player || player.name}`), true, {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 49\n    }, this);\n\n    /////////////////////////////////\n    const surfingScores = (player, index) => {\n      console.log(`surfingScores => player: ${JSON.stringify(player, null, 2)} index: ${index} players: ${JSON.stringify(players, null, 2)}`);\n      return surferScores(player, index);\n      /*if (players != undefined && index != undefined && player != undefined) {\n          return <SurfingScores\n              players={players}\n              player={player}\n              index={index}\n              surfScoring={surfScoring}\n              setPlayers={setPlayers}\n              key={getKey(index)}\n          >\n          </SurfingScores>\n      } \n      */\n    };\n\n    const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n    const dartScores = () => dartScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(0, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-20 r-5 font50 color-yellow m-auto\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column p-5\",\n        children: scorecard(1, index, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 68\n    }, this));\n    const editGolfPar = hole => {\n      const newPars = [...golfPars];\n      const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n      newPars[hole] = newPar;\n      setGolfPars(newPars);\n    };\n    const golfScores = () => golfScoring.map((hole, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentCenter bg-dark r-10 m-5 mt-35\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"copyright greet color-yellow\",\n            children: \"Hole:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size40 bold pt-5 pl-15 pr-15 bg-dark r-10\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"copyright greet color-yellow\",\n            children: \"Par:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"size20 bold color-lite mt--5\",\n            children: golfPars[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex2Column p-5\",\n            children: scorecard(0, index, golfPars[index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex2Column p-5\",\n            children: scorecard(1, index, golfPars[index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 13\n      }, this)\n    }, getKey(hole), false, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 67\n    }, this));\n    const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index));\n    const dominoScores = () => dominoScoring.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent contentCenter p-5\",\n        children: scorecard(0, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"r-5 font50 color-yellow m-auto w-100\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex2Column10Percent contentCenter p-5\",\n        children: scorecard(1, index, score)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 13\n      }, this)]\n    }, getKey(score), true, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 72\n    }, this));\n    const isDominoWinner = playerIndex => getDominoTotal(playerIndex) >= winner ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const dartClass = playerIndex => 'color-yellow flex3Column p-20 size25 bold' + (isWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dominoClass = playerIndex => 'color-yellow flex3Column p-20 size25 bold' + (isDominoWinner(playerIndex) ? ' color-neogreen shakingShaka mt-20' : '');\n    const dartScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDartTotal(players[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDartTotal(players[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 13\n      }, this), dartScores()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 38\n    }, this);\n    const golfScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy m-5 mb-20 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: players[0].golfScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dartClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10  size40 white\",\n            children: players[1].golfScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollHeight500\",\n        children: golfScores()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 38\n    }, this);\n    const dominoScoreboard = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(0),\n          children: [players[0].player || players[0].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDominoTotal(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-20 bg-tinted navBranding w-200 color-yellow\",\n          children: \"vs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: dominoClass(1),\n          children: [players[1].player || players[1].name, \":\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-10 size40 white\",\n            children: getDominoTotal(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 13\n      }, this), dominoScores()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 40\n    }, this);\n    if (darts) return dartScoreboard();\n    if (dominos) return dominoScoreboard();\n    if (golf) return golfScoreboard();\n    //if (surf) return surfScoreboard\n    if (surf) return surfingScoreboard();else return renderedItems();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fadeIn mt--30\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-10\",\n      children: [/*#__PURE__*/_jsxDEV(Selector, {\n        groupTitle: \"game\",\n        label: \"item.description\",\n        items: games,\n        selected: game,\n        onChange: selectGame,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: darts || dominos ? '98%' : '65%'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 17\n      }, this), darts || golf ? /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(Selector, {\n        className: \"fl-left\",\n        groupTitle: \"winner\",\n        label: \"i.description\",\n        items: dominos ? dominoWinners : surf ? heatLengths : winners,\n        selected: winner,\n        onChange: selectWinner,\n        fontSize: \"25\",\n        padding: \"10px\",\n        width: \"30%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 27\n      }, this), surf ? /*#__PURE__*/_jsxDEV(SurfScores, {\n        players: players,\n        heatLength: heatLength,\n        isWinner: isWinner,\n        getSurferIndexWithPriority: getSurferIndexWithPriority,\n        shiftPriority: shiftPriority,\n        losePriority: losePriority\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrollHeight450\",\n      children: scorecards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexContainer width-100-percent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow\",\n          onClick: () => addPlayer(),\n          children: \"add player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black\",\n          onClick: () => reset(),\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex3Column m-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          value: \"Submit\",\n          className: \"glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow\",\n          onClick: () => clear(),\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 729,\n    columnNumber: 9\n  }, this);\n};\n_s(ScoreKeeper, \"eCtopJ3fnTacTM2ZMCLX+66Zck0=\");\n_c = ScoreKeeper;\nexport default ScoreKeeper;\nvar _c;\n$RefreshReg$(_c, \"ScoreKeeper\");","map":{"version":3,"names":["React","useState","useEffect","ScoreCard","CricketScore","Dominos","SurfScores","SurfingScores","Selector","getKey","jerseyColors","jsxDEV","_jsxDEV","ScoreKeeper","_s","surfScoring","initPlayers","name","score","dominoScore","golfScores","golfGIR","golfFW","golfPutts","surfScores","surfJerseyColor","surfPriority","cricketScores","initNewPlayer","newPlayer","games","winners","dominoWinners","heatLengths","players","setPlayers","JSON","parse","localStorage","getItem","game","setGame","initScores","winner","setWinner","Number","heatLength","setHeatLength","waveCount","setWaveCount","surfersScores","setSurfersScores","darts","dominos","surf","golf","cricketKey","player","index","golfKey","surfKey","parsDefault","dartScoring","golfScoring","golfPars","setGolfPars","dominoScoring","gameStatus","setGameStatus","timer","setTimer","showButtons","setShowButtons","handleTouchStart","console","log","setTimeout","handleTouchEnd","clearTimeout","stringify","setItem","newPlayers","dartsScore","initGolfStats","setGameInProgress","playerIndex","isWinner","getDartTotal","setGameOver","playerScores","scores","String","split","total","addToTotal","value","map","getGolfTotal","golfScore","getDominoTotal","newScores","updateScores","set21","selectGame","groupTitle","label","selected","selectWinner","clear","event","reset","getDominoKey","id","initValue","surfScore","sortedPlayers","sort","a","b","getSurfTotal","getScore","prompt","initializedNewPlayer","push","addPlayer","editPlayer","window","location","pathname","deletePlayer","slice","splice","getSurferIndexWithPriority","priorityIndex","i","length","losePriority","selectedPriority","shift","shiftPriority","editSurfer","playerId","className","children","onClick","selectJersey","fileName","_jsxFileName","lineNumber","columnNumber","target","selection","scorecards","scorecard","scoreIndex","scoreTotal","treeTotal","rank","rankStatus","scoreDifference","difference","winningScore","highestScoresIndices","findTwoHighestIndices","losersHeighestScore","need","winsBy","toFixed","needs","undefined","highestIndex","secondHighestIndex","highestScore","Infinity","secondHighestScore","getTwoHighestScores","highScoreIndex","secondHighScoreIndex","getScoreTotal","playersArray","setSurfScore","newScore","currentScore","edit","get2ndHighestScore","highestScores","secondHighestId","getSurfScore","getWave","theScore","highestId","firstScore","secondScore","getClasses","wave","isTieScore","surferScores","onTouchStart","onTouchEnd","surfingScores","renderedItems","dartScores","editGolfPar","hole","newPars","newPar","surfingScoreboard","dominoScores","isDominoWinner","dartClass","dominoClass","dartScoreboard","Fragment","golfScoreboard","dominoScoreboard","items","onChange","fontSize","padding","width","_c","$RefreshReg$"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport SurfingScores from './SurfingScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport jerseyColors from './JerseyColors.js';\n\nconst ScoreKeeper = () => {\n\n    const surfScoring = ['', '', '', '', '', '', '', '', '', ''];\n    const initPlayers = [\n        {\n            name: 'You',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        },\n        {\n            name: 'Me',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n    ];\n    const initNewPlayer = (name) => {\n        const newPlayer = {\n            name: name,\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n        return newPlayer;\n    };\n    const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n    const winners = [5, 10, 11, 15, 20, 21];\n    const dominoWinners = [50, 100, 150, 200];\n    const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || []);\n    const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n    const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n    const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n    const [heatLength, setHeatLength] = useState(60 * 60);\n    const [waveCount, setWaveCount] = useState(['', '', '', '', '', '', '', '', '', '']);\n    const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n    const darts = (game !== 'darts') ? false : true;\n    const dominos = (game !== 'dominos') ? false : true;\n    const surf = (game !== 'surf') ? false : true;\n    const golf = (game !== 'golf') ? false : true;\n    const cricketKey = (player, index) => `${(player.player || player.name)}Cricket${index}`;\n    const golfKey = (player, index) => `${(player.player || player.name)}Golf${index}`;\n    const surfKey = (player, index) => `${(player.player || player.name)}Surf${index}`;\n    const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n    const dartScoring = [20, 19, 18, 17, 16, 15, 'B'];\n    const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n    const dominoScoring = [50, 100, 150, 200];\n    const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n    const [timer, setTimer] = useState(null);\n    const [showButtons, setShowButtons] = useState(false);\n\n            const handleTouchStart = () => {\n                console.log(`handleTouchStart`)\n                setTimer(setTimeout(() => setShowButtons(true), 1000));\n            };\n\n            const handleTouchEnd = () => {\n                console.log(`handleTouchEnd`)\n                clearTimeout(timer);\n                setShowButtons(false);\n            };\n\n    useEffect(() => {\n        if (JSON.stringify(players, null, 2) !== '[]') {\n            const surfersScores = [];\n            localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n            localStorage.setItem('players', JSON.stringify(players));\n        }\n    }, [players]);\n\n    useEffect(() => {\n        const surfersScores = [];\n        localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n        localStorage.setItem('players', JSON.stringify(players));\n    }, [players]);\n\n    useEffect(() => {\n        localStorage.setItem('golfPars', JSON.stringify(golfPars));\n    }, [golfPars]);\n\n    useEffect(() => {\n        if (!localStorage.getItem('players') || (localStorage.getItem('players') === '[]')) {\n            //const playersValue = localStorage.getItem('players');\n            //alert(`localStorage.players: ${playersValue}`)\n            //alert('Length:', playersValue.length);\n            newPlayer();\n        }\n        const newPlayers = [...players];\n        if (!players[0].cricketScores || !players[1].cricketScores) {\n            if (!players[0].cricketScores) {\n                newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[0].dartsScore = 0;\n            }\n            if (!players[1].cricketScores) {\n                newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[1].dartsScore = 0;\n            }\n        }\n        const initGolfStats = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n        if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n            newPlayers[0].golfPutts = golfScoring;\n            newPlayers[0].golfFW = initGolfStats;\n            newPlayers[0].golfGIR = initGolfStats;\n        }\n        if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n            newPlayers[1].golfPutts = golfScoring;\n            newPlayers[1].golfFW = initGolfStats;\n            newPlayers[1].golfGIR = initGolfStats;\n        }\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }, []);\n\n    const setGameInProgress = (playerIndex) => {\n        if (playerIndex > 0) {\n            if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n                localStorage.setItem('gameStatus', 'inProgress')\n            }\n        }\n        localStorage.setItem(`player${playerIndex}`, 'loser');\n        return false;\n    }\n    const isWinner = (playerIndex) => (getDartTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const playerScores = [\n        { name: 'Player 1', scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88] },\n        { name: 'Player 2', scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81] },\n        { name: 'Player 3', scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89] },\n    ];\n    const setGameOver = (playerIndex) => {\n        localStorage.setItem('gameStatus', 'gameOver');\n        localStorage.setItem(`player${playerIndex}`, 'winner');\n        return true;\n    }\n\n    if (darts && winner !== 21) {\n        localStorage.setItem('winner', 21);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const getDartTotal = (player) => {\n        const cricketScores = String(player.cricketScores).split(',');\n        let total = 0;\n        const addToTotal = (value) => total = total + value;\n        cricketScores.map((score, index) => addToTotal(Number(score)));\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const getGolfTotal = (player) => {\n        if (!golf) return;\n        let total = 0;\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        const addToTotal = (value) => total = total + Number(value);\n        newPlayers.map((player) => {\n            player.golfScores.map((score) => addToTotal(score))\n            player.golfScore = total;\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        return total;\n    }\n    const getDominoTotal = (index) => {\n        const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n        const total = newScores[index];\n        console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n\n    const updateScores = () => {\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        setPlayers(newPlayers);\n    }\n    const set21 = () => {\n        if (darts) {\n            localStorage.setItem('winner', 21);\n            setWinner(Number(localStorage.getItem('winner')));\n        }\n    }\n    const selectGame = (groupTitle, label, selected) => {\n        localStorage.setItem('game', selected)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setGame(localStorage.getItem('game'));\n        set21();\n    }\n    const selectWinner = (groupTitle, label, selected) => {\n        localStorage.setItem('winner', selected)\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const clear = (event) => {\n        //alert('Note was cleared: ' + event.value);\n        localStorage.setItem('players', JSON.stringify(initPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n\n    const reset = (event) => {\n        let newPlayers = JSON.parse(localStorage.getItem('players'));\n        const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n\n        const id = (player, index) => {\n            if (darts) {\n                return cricketKey(player, index);\n            } else if (dominos) {\n                return getDominoKey(player, index);\n            } else if (golf) {\n                return golfKey(player, index);\n            } else if (surf) {\n                return surfKey(player, index);\n            }\n            return (player.player || player.name);\n        }\n\n        const initValue = 0;\n        if (darts) {\n            newPlayers.map((player) => {\n                player.dartsScore = 0;\n                player.cricketScores = [0, 0, 0, 0, 0, 0, 0];\n            });\n        } else if (golf) {\n            newPlayers.map((player) => {\n                player.golfScore = 0;\n                player.golfScores = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n                player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            });\n        } else if (dominos) {\n            newPlayers[0].dominoScore = 0;\n            newPlayers[1].dominoScore = 0;\n        } else if (surf) {\n            newPlayers.map((player, index) => {\n                player.surfScores = surfScoring;\n                player.surfScore = 0;\n                player.surfPriority = 0;\n            });\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => getSurfTotal(b) - getSurfTotal(a));\n            newPlayers = [...sortedPlayers];\n        } else {\n            newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n        }\n        localStorage.setItem('gameStatus', 'inProgress');\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        getScore();\n    }\n    const newPlayer = () => {\n        const newPlayer = prompt('Enter new name', '');\n        const initializedNewPlayer = initNewPlayer(newPlayer);\n        let newPlayers = [...players];\n        if (newPlayer !== null) {\n            newPlayers.push(initializedNewPlayer);\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n    }\n    const addPlayer = (event) => {\n        newPlayer();\n    }\n    const editPlayer = (index) => {\n        const newPlayer = prompt('Enter new name', players[index]);\n        if (newPlayer !== null) {\n            let newPlayers = [...players];\n            newPlayers[index] = newPlayer;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n            getScore();\n        }\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n\n    const deletePlayer = (index) => {\n        console.log(`deletePlayer => ${index}`)\n        const newPlayers = [...players].slice();\n        newPlayers.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    };\n    const getSurferIndexWithPriority = (priorityIndex) => {\n        for (let i = 0; i < players.length; i++) {\n            if (Number(players[i].surfPriority) === priorityIndex) {\n                return i;\n            }\n        }\n        return null;\n    }\n    const losePriority = (selectedPriority) => {\n        const newPlayers = [...players];\n        newPlayers.map((player, index) => {\n            if (player.surfPriority == selectedPriority) {\n                player.surfPriority = newPlayers.length;\n            } else if (player.surfPriority != 1 && selectedPriority != newPlayers.length) {\n                const shift = player.surfPriority - 1;\n                player.surfPriority = (shift > 0) ? shift : newPlayers.length;\n            }\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n        setPlayers(newPlayers);\n    }\n    const shiftPriority = (priorityIndex) => {\n        const newPlayers = [...players];\n        newPlayers.map((player, index) => {\n            if (player.surfPriority === (priorityIndex - 1)) {\n                player.surfPriority = priorityIndex;\n            } else if (player.surfPriority === priorityIndex) {\n                player.surfPriority = (priorityIndex - 1);\n            }\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n        setPlayers(newPlayers);\n    }\n    const editSurfer = (playerId) => <div className='m-10 p-10 r-10 bg-neogreen'>\n            {jerseyColors.map((player, index) => <button className={`bg-${jerseyColors[index]} ht-45 width50px`} onClick={() => selectJersey(playerId, index)}></button>)}\n        </div>\n    const getSurfTotal = (player) => {\n        let total = 0;\n        const score = (index) => player.surfScores[index];\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n            console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        return total;\n    }\n    const selectJersey = (playerId, selection) => {\n        const newPlayers = [...players];\n        newPlayers[playerId].surfJerseyColor = (selection);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(newPlayers);\n    }\n    const scorecards = () => {\n        const scorecard = (playerIndex, scoreIndex, score) => {\n            const player = players[playerIndex];\n            if (darts) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`)\n                return <CricketScore\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (dominos) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`)\n                return <Dominos\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    scoreTotal={player.dominoScore || 0}\n                    treeTotal={score}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    getDominoTotal={getDominoTotal}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (golf) {\n                console.log(`${game} - scorecard => player:${player.player || player.name}`);\n                console.log(`scoreIndex: ${scoreIndex}`);\n                console.log(`score: ${player.golfScores[scoreIndex]}`);\n                console.log(`scorecards => par: ${score}`);\n                return <ScoreCard\n                    game={game}\n                    players={players}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={golfPars[scoreIndex]}\n                />\n            }\n            return <ScoreCard\n                game={game}\n                players={players}\n                playerIndex={playerIndex}\n                scoreIndex={scoreIndex}\n                editPlayer={editPlayer}\n                deletePlayer={deletePlayer}\n                updateScores={updateScores}\n                winner={winner}\n            />\n        }\n        /////////////////////////////////\n\n        const rank = ['st', 'nd', 'rd', 'th'];\n\n        const rankStatus = (player, index) => {\n            const score = getSurfTotal(player);\n            const scoreDifference = Number(players[(index === 0) ? 0 : (index - 1)].surfScore - players[(index === 0) ? 1 : (index)].surfScore);\n            const difference = (scoreDifference < 0) ? (-1 * scoreDifference) : scoreDifference;\n            const winningScore = Number(players[(index === 0) ? 0 : ((index < 3) ? (index - 1) : 1)].surfScore);\n            const highestScoresIndices = findTwoHighestIndices(players[index].surfScores);\n            const losersHeighestScore = players[index].surfScores[highestScoresIndices[0]];\n            const need = (winningScore - losersHeighestScore) + .01;\n            const winsBy = `Wins by ${difference.toFixed(2)}`;\n            const needs = `Needs ${need.toFixed(2)}`;\n            if (index === 0) {\n                return winsBy;\n            }\n            return needs;\n        }\n        const findTwoHighestIndices = (scores) => {\n            const newScores = (scores !== undefined) ? scores : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            let highestIndex = -1;\n            let secondHighestIndex = -1;\n            let highestScore = -Infinity;\n            let secondHighestScore = -Infinity;\n            for (let i = 0; i < newScores.length; i++) {\n                if (newScores[i] > highestScore) {\n                    secondHighestIndex = highestIndex;\n                    secondHighestScore = highestScore;\n                    highestIndex = i;\n                    highestScore = newScores[i];\n                } else if (newScores[i] > secondHighestScore) {\n                    secondHighestIndex = i;\n                    secondHighestScore = newScores[i];\n                }\n            }\n            return [highestIndex, secondHighestIndex];\n        };\n        const getTwoHighestScores = (index) => {\n            const player = players[index];\n            const scores = player.surfScores;\n            const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n            //console.log(`getTwoHighestScores => playerIndex: ${index} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n            return {\n                highScoreIndex: highestIndex,\n                secondHighScoreIndex: secondHighestIndex\n            };\n        };\n        const getScoreTotal = (index) => {\n            const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n            const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n            const score = (highestScore + secondHighestScore);\n            console.log(`getScore => player: ${index} score: ${score}`);\n            return score;\n        }\n        const highestScore = (index, playersArray) => {\n            console.log(`highestScore = (index: ${index}, playersArray: ${JSON.stringify(playersArray, null, 2)})`)\n            return playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n        }\n        const secondHighestScore = (index, playersArray) => playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n        const scoreTotal = (index, playersArray) => Number(highestScore(index, playersArray) + secondHighestScore(index, playersArray)).toFixed(2);\n\n        const setSurfScore = (playerId, index, score) => {\n\n            const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n            const newPlayers = [...players];\n            const currentScore = newPlayers[playerId].surfScores[index];\n            const edit = (currentScore !== '' && currentScore !== 0) ? false : true;\n            newPlayers[playerId].surfScores[index] = Number(newScore);\n            newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n            if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n                newPlayers.map((player, index) => {\n                    if (index === playerId) {\n                        player.surfPriority = players.length;\n                    } else if (player.surfPriority != 0) {\n                        player.surfPriority = player.surfPriority - 1;\n                    }\n                });\n            }\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n\n            console.log('setSurfScore => sortedPlayers: ', sortedPlayers)\n\n            localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n            setPlayers(sortedPlayers);\n        }\n        const get2ndHighestScore = (playerId) => {\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const secondHighestId = highestScores[1];\n            return players[playerId].surfScores[secondHighestId];\n        }\n        const getSurfScore = (index) => {\n            const newPlayers = [...players];\n            const surfScore = scoreTotal(index, newPlayers);\n\n            newPlayers[index].score = surfScore;\n            newPlayers[index].surfScore = surfScore;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            return surfScore;\n        };\n        const getWave = (playerId, index, score) => {\n            const player = players[playerId];\n            const theScore = player.surfScores[index];\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const highestId = highestScores[0];\n            const secondHighestId = highestScores[1];\n            const firstScore = (index === highestId) ? true : false;\n            const secondScore = (index === secondHighestId) ? true : false;\n            const getClasses = (firstScore || secondScore) ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n            const wave = <div className=\"column r-10\" onClick={() => setSurfScore(playerId, index, score)} key={getKey(`wave${playerId}${index}${score}`)}>\n                <div className='size30 bold color-yellow bg-dkYellow w-100 p-10'>{index + 1}</div>\n                <div className={`ht-40 ${getClasses}`}>{score}</div>\n            </div>\n            return wave\n        }\n        const isTieScore = (index) => {\n            const score = scoreTotal(index, players);\n            if (index !== 0) {\n                if (score === scoreTotal(index - 1, players)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        const surferScores = (player, index) => <div className='button' key={getKey(`${index}${(player.player || player.name)}`)}>\n            <div className={`flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`} key={getKey(`${index}${(player.player || player.name)}`)}  onTouchStart={handleTouchStart} onTouchEnd={handleTouchEnd} /*onClick={() => selectJersey(index)}*/>\n                <div className={`flex2Column contentLeft r-10-lft m-0 w-75 p-10`}>\n                    <div>\n                        <span className='size25 mt--10'>\n                            {(isTieScore(index) && (index !== 0)) ? index : (index + 1)}\n                        </span>\n                        <span className='size15 mt--10'>\n                            {rank[(isTieScore(index) && (index !== 0)) ? (index-1) : (index > 2) ? 3 : (index)]}\n                        </span>\n                    </div>\n                    <div className='size30 mt-5 mb-5'>\n                        {(player.player || player.name).split(' ')[0]}\n                    </div>\n                    <div className='size20'>\n                        {(player.player || player.name).split(' ')[1]}\n                    </div>\n                </div>\n                <div className={`r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`}>\n                    <div className='size40 bold'>{getScoreTotal(index)}</div>\n                    <div className='mt-10 bold'>{rankStatus(player, index)}</div>\n                </div>\n            </div>\n            <div>\n                {showButtons && (\n                editSurfer(index)\n            )}\n            </div>\n            <div>\n                <div>\n                    <div className='h-scroll color-white copyright ml-10 mr-10 mt-5'>\n                        <div className=\"container mt-10\">\n                            {players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        /////////////////////////////////\n        const surfingScores = (player, index) => {\n            console.log(`surfingScores => player: ${JSON.stringify(player, null, 2)} index: ${index} players: ${JSON.stringify(players, null, 2)}`);\n            return surferScores(player, index);\n            /*if (players != undefined && index != undefined && player != undefined) {\n                return <SurfingScores\n                    players={players}\n                    player={player}\n                    index={index}\n                    surfScoring={surfScoring}\n                    setPlayers={setPlayers}\n                    key={getKey(index)}\n                >\n                </SurfingScores>\n            } \n            */\n        }\n\n        const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n\n        const dartScores = () => dartScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex3Column p-5'>\n                {scorecard(0, index, 0)}\n            </div>\n            <div className='p-20 r-5 font50 color-yellow m-auto'>\n                {score}\n            </div>\n            <div className='flex3Column p-5'>\n                {scorecard(1, index, 0)}\n            </div>\n        </div>);\n\n        const editGolfPar = (hole) => {\n            const newPars = [...golfPars];\n            const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n            newPars[hole] = newPar;\n            setGolfPars(newPars);\n        }\n\n        const golfScores = () => golfScoring.map((hole, index) => <div key={getKey(hole)}>\n            <div className='contentCenter bg-dark r-10 m-5 mt-35'>\n                <div>\n                    <span className='copyright greet color-yellow'>\n                        Hole:\n                    </span>\n                    <span className='size40 bold pt-5 pl-15 pr-15 bg-dark r-10'>\n                        {index + 1}\n                    </span>\n                    <span className='copyright greet color-yellow'>\n                        Par:\n                    </span>\n                    <span className='size20 bold color-lite mt--5'>\n                        {golfPars[index]}\n                    </span>\n                </div>\n                <div className='flexContainer'>\n                    <div className='flex2Column p-5'>\n                        {scorecard(0, index, golfPars[index])}\n                    </div>\n                    <div className='flex2Column p-5'>\n                        {scorecard(1, index, golfPars[index])}\n                    </div>\n                </div>\n            </div>\n        </div>);\n\n        const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index));\n\n        const dominoScores = () => dominoScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(0, index, score)}\n            </div>\n            <div className='r-5 font50 color-yellow m-auto w-100'>\n                {score}\n            </div>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(1, index, score)}\n            </div>\n        </div>);\n\n        const isDominoWinner = (playerIndex) => (getDominoTotal(playerIndex) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n\n        const dartClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        const dominoClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isDominoWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n\n        const dartScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy width-100-percent m-10 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>{players[0].player || players[0].name}:<div className='mt-10 size40 white'>{getDartTotal(players[0])}</div></div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>{players[1].player || players[1].name}:<div className='mt-10 size40 white'>{getDartTotal(players[1])}</div></div>\n            </div>\n            {dartScores()}\n        </React.Fragment>\n\n        const golfScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy m-5 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>\n                    {players[0].player || players[0].name}:<div className='mt-10 size40 white'>{players[0].golfScore}</div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>\n                    {players[1].player || players[1].name}:<div className='mt-10  size40 white'>{players[1].golfScore}</div>\n                </div>\n            </div>\n            <div className='scrollHeight500'>\n                {golfScores()}\n            </div>\n        </React.Fragment>\n\n        const dominoScoreboard = () => <React.Fragment>\n            <div className='flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10'>\n                <div className={dominoClass(0)}>\n                    {players[0].player || players[0].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(0)}\n                    </div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dominoClass(1)}>\n                    {players[1].player || players[1].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(1)}\n                    </div>\n                </div>\n            </div>\n            {dominoScores()}\n        </React.Fragment>\n\n        if (darts) return dartScoreboard()\n        if (dominos) return dominoScoreboard()\n        if (golf) return golfScoreboard()\n        //if (surf) return surfScoreboard\n        if (surf) return surfingScoreboard()\n        else return renderedItems();\n    }\n\n    return (\n        <div className='fadeIn mt--30'>\n            <div className='mb-10'>\n                <Selector\n                    groupTitle='game'\n                    label='item.description'\n                    items={games}\n                    selected={game}\n                    onChange={selectGame}\n                    fontSize='25'\n                    padding='10px'\n                    width={(darts || dominos) ? '98%' : '65%'}\n                />\n                {\n                    (darts || golf)\n                        ? <React.Fragment></React.Fragment>\n                        : <Selector className='fl-left'\n                            groupTitle='winner'\n                            label='i.description'\n                            items={(dominos) ? dominoWinners : ((surf) ? heatLengths : winners)}\n                            selected={winner}\n                            onChange={selectWinner}\n                            fontSize='25'\n                            padding='10px'\n                            width='30%'\n                        />\n                }\n                {(surf) ?\n                    <SurfScores\n                        players={players}\n                        heatLength={heatLength}\n                        isWinner={isWinner}\n                        getSurferIndexWithPriority={getSurferIndexWithPriority}\n                        shiftPriority={shiftPriority}\n                        losePriority={losePriority}\n                    ></SurfScores>\n                    :\n                    <React.Fragment></React.Fragment>\n\n                }\n            </div>\n            <div className='scrollHeight450'>\n                {scorecards()}\n            </div>\n            <div className='flexContainer width-100-percent'>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow' onClick={() => addPlayer()}>add player</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black' onClick={() => reset()}>reset</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow' onClick={() => clear()}>clear</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScoreKeeper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}