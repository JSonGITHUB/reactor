{"ast":null,"code":"import _toConsumableArray from\"/Users/js/Dev/my-first-reactor/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/js/Dev/my-first-reactor/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import getKey from'../utils/KeyGenerator.js';import jerseyColors from'./JerseyColors.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SurfingScores=function SurfingScores(players,player,index,surfScoring,setPlayers){var _useState=useState({editIndex:null,showButtons:false}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),timer=_useState4[0],setTimer=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showButtons=_useState6[0],setShowButtons=_useState6[1];var handleTouchStart=function handleTouchStart(){console.log(\"handleTouchStart\");setTimer(setTimeout(function(){return setShowButtons(true);},1000));};var handleTouchEnd=function handleTouchEnd(){clearTimeout(timer);//setShowButtons(false);\n};var rank=['st','nd','rd','th'];var rankStatus=function rankStatus(player,index){var score=getSurfTotal(player);var scoreDifference=Number(players[index===0?0:index-1].surfScore-players[index===0?1:index].surfScore);var difference=scoreDifference<0?-1*scoreDifference:scoreDifference;var winningScore=Number(players[index===0?0:index<3?index-1:1].surfScore);var highestScoresIndices=findTwoHighestIndices(players[index].surfScores);var losersHeighestScore=players[index].surfScores[highestScoresIndices[0]];var need=winningScore-losersHeighestScore+.01;var winsBy=\"Wins by \".concat(difference.toFixed(2));var needs=\"Needs \".concat(need.toFixed(2));if(index===0){return winsBy;}return needs;};var findTwoHighestIndices=function findTwoHighestIndices(scores){var newScores=scores!==undefined?scores:[0,0,0,0,0,0,0,0,0,0];var highestIndex=-1;var secondHighestIndex=-1;var highestScore=-Infinity;var secondHighestScore=-Infinity;for(var i=0;i<newScores.length;i++){if(newScores[i]>highestScore){secondHighestIndex=highestIndex;secondHighestScore=highestScore;highestIndex=i;highestScore=newScores[i];}else if(newScores[i]>secondHighestScore){secondHighestIndex=i;secondHighestScore=newScores[i];}}return[highestIndex,secondHighestIndex];};var getTwoHighestScores=function getTwoHighestScores(){var player=players[index];var scores=player.surfScores;var _findTwoHighestIndice=findTwoHighestIndices(scores),_findTwoHighestIndice2=_slicedToArray(_findTwoHighestIndice,2),highestIndex=_findTwoHighestIndice2[0],secondHighestIndex=_findTwoHighestIndice2[1];//console.log(`getTwoHighestScores => playerIndex: ${index} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\nreturn{highScoreIndex:highestIndex,secondHighScoreIndex:secondHighestIndex};};var getScoreTotal=function getScoreTotal(index){var highestScore=players[index].surfScores[getTwoHighestScores(index).highScoreIndex];var secondHighestScore=players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];var score=highestScore+secondHighestScore;console.log(\"getScore => player: \".concat(index,\" score: \").concat(score));return score;};var highestScore=function highestScore(playersArray){console.log(\"highestScore = (index: \".concat(index,\", playersArray: \").concat(JSON.stringify(playersArray,null,2),\")\"));return playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];};var secondHighestScore=function secondHighestScore(playersArray){return playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];};var scoreTotal=function scoreTotal(playersArray){return Number(highestScore(playersArray)+secondHighestScore(playersArray)).toFixed(2);};var setSurfScore=function setSurfScore(playerId,index,score){var newScore=prompt(\"Enter \".concat(players[playerId].player||players[playerId].name,\"'s score for wave \").concat(index+1,\": \"),Number(score||''));var newPlayers=_toConsumableArray(players);var currentScore=newPlayers[playerId].surfScores[index];var edit=currentScore!==''&&currentScore!==0?false:true;newPlayers[playerId].surfScores[index]=Number(newScore);newPlayers[playerId].surfScore=scoreTotal(playerId,newPlayers);if((newPlayers[playerId].surfPriority===1||newPlayers[playerId].surfPriority===0)&&edit){newPlayers.map(function(player,index){if(index===playerId){player.surfPriority=players.length;}else if(player.surfPriority!=0){player.surfPriority=player.surfPriority-1;}});}var sortedPlayers=_toConsumableArray(newPlayers);sortedPlayers.sort(function(a,b){return b.surfScore-a.surfScore;});console.log('setSurfScore => sortedPlayers: ',sortedPlayers);localStorage.setItem('players',JSON.stringify(sortedPlayers,null,2));setPlayers(sortedPlayers);};var get2ndHighestScore=function get2ndHighestScore(playerId){var highestScores=findTwoHighestIndices(players[playerId].surfScores);var secondHighestId=highestScores[1];return players[playerId].surfScores[secondHighestId];};var getSurfScore=function getSurfScore(index){var newPlayers=_toConsumableArray(players);var surfScore=scoreTotal(index,newPlayers);newPlayers[index].score=surfScore;newPlayers[index].surfScore=surfScore;localStorage.setItem('players',JSON.stringify(newPlayers));return surfScore;};var getWave=function getWave(playerId,index,score){var player=players[playerId];var theScore=player.surfScores[index];var highestScores=findTwoHighestIndices(players[playerId].surfScores);var highestId=highestScores[0];var secondHighestId=highestScores[1];var firstScore=index===highestId?true:false;var secondScore=index===secondHighestId?true:false;var getClasses=firstScore||secondScore?'size30 bold color-neogreen p-10':'size30 white p-10';var wave=/*#__PURE__*/_jsxs(\"div\",{className:\"column r-10\",onClick:function onClick(){return setSurfScore(playerId,index,score);},children:[/*#__PURE__*/_jsx(\"div\",{className:\"size30 bold color-yellow bg-dkYellow w-100 p-10\",children:index+1}),/*#__PURE__*/_jsx(\"div\",{className:\"ht-40 \".concat(getClasses),children:score})]},getKey(\"wave\".concat(playerId).concat(index).concat(score)));return wave;};var selectJersey=function selectJersey(index){var newPlayers=_toConsumableArray(players);newPlayers[index].surfJerseyColor=Number(newPlayers[index].surfJerseyColor)+1;newPlayers[index].surfJerseyColor=newPlayers[index].surfJerseyColor>jerseyColors.length-1?0:newPlayers[index].surfJerseyColor;localStorage.setItem('players',JSON.stringify(newPlayers));setPlayers(newPlayers);};var isTieScore=function isTieScore(index){var score=scoreTotal(index,players);if(index!==0){if(score===scoreTotal(index-1,players)){return true;}}return false;};var editSurfer=function editSurfer(index){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:alert(\"Subtract \".concat(index)),children:\"-\"}),/*#__PURE__*/_jsx(\"button\",{onClick:alert(\"Add \".concat(index)),children:\"+\"})]});};var getSurfTotal=function getSurfTotal(player){var total=0;var score=function score(index){return player.surfScores[index];};var addToTotal=function addToTotal(value){return total=total+value;};surfScoring.map(function(target,index){console.log(\"getSurfTotal => player: \".concat(player.name,\" index: \").concat(index,\" score: \").concat(score(index)));addToTotal(Number(score(index)));});return total;};var surferScores=function surferScores(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-\".concat(jerseyColors[0]||jerseyColors[0]),onTouchStart:function onTouchStart(){return handleTouchStart(index);},onTouchEnd:handleTouchEnd,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex2Column contentLeft r-10-lft m-0 w-75 p-10\",onClick:function onClick(){return selectJersey(index);},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"size25 mt--10\",children:isTieScore(index)&&index!==0?index:index+1}),/*#__PURE__*/_jsx(\"span\",{className:\"size15 mt--10\",children:rank[isTieScore(index)&&index!==0?index:index>2?3:index]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"size30 mt-5 mb-5\",children:(player.player||player.name).split(' ')[0]}),/*#__PURE__*/_jsx(\"div\",{className:\"size20\",children:(player.player||player.name).split(' ')[1]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"size40 bold\",children:getSurfTotal(player)}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-10 bold\",children:rankStatus(player,index)})]})]},getKey(\"\".concat(index).concat(player.player||player.name))),/*#__PURE__*/_jsx(\"div\",{children:showButtons&&editSurfer(index)}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"h-scroll color-white copyright ml-10 mr-10 mt-5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container mt-10\",children:players[index].surfScores.map(function(score,wave){return getWave(index,wave,players[index].surfScores[wave]);})})})})})]},getKey(\"\".concat(index).concat(player.player||player.name)));};return surferScores();};export default SurfingScores;","map":{"version":3,"names":["React","useState","useEffect","getKey","jerseyColors","jsx","_jsx","jsxs","_jsxs","SurfingScores","players","player","index","surfScoring","setPlayers","_useState","editIndex","showButtons","_useState2","_slicedToArray","state","setState","_useState3","_useState4","timer","setTimer","_useState5","_useState6","setShowButtons","handleTouchStart","console","log","setTimeout","handleTouchEnd","clearTimeout","rank","rankStatus","score","getSurfTotal","scoreDifference","Number","surfScore","difference","winningScore","highestScoresIndices","findTwoHighestIndices","surfScores","losersHeighestScore","need","winsBy","concat","toFixed","needs","scores","newScores","undefined","highestIndex","secondHighestIndex","highestScore","Infinity","secondHighestScore","i","length","getTwoHighestScores","_findTwoHighestIndice","_findTwoHighestIndice2","highScoreIndex","secondHighScoreIndex","getScoreTotal","playersArray","JSON","stringify","scoreTotal","setSurfScore","playerId","newScore","prompt","name","newPlayers","_toConsumableArray","currentScore","edit","surfPriority","map","sortedPlayers","sort","a","b","localStorage","setItem","get2ndHighestScore","highestScores","secondHighestId","getSurfScore","getWave","theScore","highestId","firstScore","secondScore","getClasses","wave","className","onClick","children","selectJersey","surfJerseyColor","isTieScore","editSurfer","alert","total","addToTotal","value","target","surferScores","onTouchStart","onTouchEnd","split"],"sources":["/Users/js/Dev/my-first-reactor/src/components/utils/SurfingScores.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport jerseyColors from './JerseyColors.js';\n\nconst SurfingScores = (players, player, index, surfScoring, setPlayers) => {\n        const [state, setState] = useState({\n            editIndex: null,\n            showButtons: false\n        });\n        const [timer, setTimer] = useState(null);\n        const [showButtons, setShowButtons] = useState(false);\n        const handleTouchStart = () => {\n            console.log(`handleTouchStart`)\n            setTimer(setTimeout(() => setShowButtons(true), 1000));\n        };\n    \n        const handleTouchEnd = () => {\n            clearTimeout(timer);\n            //setShowButtons(false);\n        };\n        const rank = ['st', 'nd', 'rd', 'th'];\n        const rankStatus = (player, index) => {\n            const score = getSurfTotal(player);\n            const scoreDifference = Number(players[(index === 0) ? 0 : (index - 1)].surfScore - players[(index === 0) ? 1 : (index)].surfScore);\n            const difference = (scoreDifference < 0) ? (-1 * scoreDifference) : scoreDifference;\n            const winningScore = Number(players[(index === 0) ? 0 : ((index < 3) ? (index - 1) : 1)].surfScore);\n            const highestScoresIndices = findTwoHighestIndices(players[index].surfScores);\n            const losersHeighestScore = players[index].surfScores[highestScoresIndices[0]];\n            const need = (winningScore - losersHeighestScore) + .01;\n            const winsBy = `Wins by ${difference.toFixed(2)}`;\n            const needs = `Needs ${need.toFixed(2)}`;\n            if (index === 0) {\n                return winsBy;\n            }\n            return needs;\n        }\n        const findTwoHighestIndices = (scores) => {\n            const newScores = (scores !== undefined) ? scores : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            let highestIndex = -1;\n            let secondHighestIndex = -1;\n            let highestScore = -Infinity;\n            let secondHighestScore = -Infinity;\n            for (let i = 0; i < newScores.length; i++) {\n                if (newScores[i] > highestScore) {\n                    secondHighestIndex = highestIndex;\n                    secondHighestScore = highestScore;\n                    highestIndex = i;\n                    highestScore = newScores[i];\n                } else if (newScores[i] > secondHighestScore) {\n                    secondHighestIndex = i;\n                    secondHighestScore = newScores[i];\n                }\n            }\n            return [highestIndex, secondHighestIndex];\n        };\n        const getTwoHighestScores = () => {\n            const player = players[index];\n            const scores = player.surfScores;\n            const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n            //console.log(`getTwoHighestScores => playerIndex: ${index} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n            return {\n                highScoreIndex: highestIndex,\n                secondHighScoreIndex: secondHighestIndex\n            };\n        };\n        const getScoreTotal = (index) => {\n            const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n            const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n            const score = (highestScore + secondHighestScore);\n            console.log(`getScore => player: ${index} score: ${score}`);\n            return score;\n        }\n        const highestScore = (playersArray) => {\n            console.log(`highestScore = (index: ${index}, playersArray: ${JSON.stringify(playersArray, null, 2)})`)\n            return playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n        }\n        const secondHighestScore = (playersArray) => playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n        const scoreTotal = (playersArray) => Number(highestScore(playersArray) + secondHighestScore(playersArray)).toFixed(2);\n        \n        const setSurfScore = (playerId, index, score) => {\n\n            const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n            const newPlayers = [...players];\n            const currentScore = newPlayers[playerId].surfScores[index];\n            const edit = (currentScore !== '' && currentScore !== 0) ? false : true;\n            newPlayers[playerId].surfScores[index] = Number(newScore);\n            newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n            if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n                newPlayers.map((player, index) => {\n                    if (index === playerId) {\n                        player.surfPriority = players.length;\n                    } else if (player.surfPriority != 0) {\n                        player.surfPriority = player.surfPriority - 1;\n                    }\n                });\n            }\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n\n            console.log('setSurfScore => sortedPlayers: ', sortedPlayers)\n\n            localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n            setPlayers(sortedPlayers);\n        }\n        const get2ndHighestScore = (playerId) => {\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const secondHighestId = highestScores[1];\n            return players[playerId].surfScores[secondHighestId];\n        }\n        const getSurfScore = (index) => {\n            const newPlayers = [...players];\n            const surfScore = scoreTotal(index, newPlayers);\n    \n            newPlayers[index].score = surfScore;\n            newPlayers[index].surfScore = surfScore;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            return surfScore;\n        };\n        const getWave = (playerId, index, score) => {\n            const player = players[playerId];\n            const theScore = player.surfScores[index];\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const highestId = highestScores[0];\n            const secondHighestId = highestScores[1];\n            const firstScore = (index === highestId) ? true : false;\n            const secondScore = (index === secondHighestId) ? true : false;\n            const getClasses = (firstScore || secondScore) ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n            const wave = <div className=\"column r-10\" onClick={() => setSurfScore(playerId, index, score)} key={getKey(`wave${playerId}${index}${score}`)}>\n                <div className='size30 bold color-yellow bg-dkYellow w-100 p-10'>{index + 1}</div>\n                <div className={`ht-40 ${getClasses}`}>{score}</div>\n            </div>\n            return wave\n        }\n        const selectJersey = (index) => {\n            const newPlayers = [...players];\n            newPlayers[index].surfJerseyColor = Number(newPlayers[index].surfJerseyColor) + 1;\n            newPlayers[index].surfJerseyColor = (newPlayers[index].surfJerseyColor > (jerseyColors.length - 1)) ? 0 : newPlayers[index].surfJerseyColor;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            setPlayers(newPlayers);\n        }\n        const isTieScore = (index) => {\n            const score = scoreTotal(index, players);\n            if (index !== 0) {\n                if (score === scoreTotal(index - 1, players)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        const editSurfer = (index) => <div>\n                <button onClick={alert(`Subtract ${index}`)}>-</button>\n                <button onClick={alert(`Add ${index}`)}>+</button>\n            </div>\n        const getSurfTotal = (player) => {\n            let total = 0;\n            const score = (index) => player.surfScores[index];\n            const addToTotal = (value) => total = total + value;\n            surfScoring.map((target, index) => {\n                console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`)\n                addToTotal(Number(score(index)))\n            }\n            );\n            return total;\n        }\n            \n        const surferScores = () => <div key={getKey(`${index}${(player.player || player.name)}`)}>\n            {/*<div className={`flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`} key={getKey(`${index}${(player.player || player.name)}`)}  onTouchStart={() => handleTouchStart(index)} onTouchEnd={handleTouchEnd}>*/}\n            <div className={`flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[0] || jerseyColors[0]}`} key={getKey(`${index}${(player.player || player.name)}`)}  onTouchStart={() => handleTouchStart(index)} onTouchEnd={handleTouchEnd}>\n                <div className={`flex2Column contentLeft r-10-lft m-0 w-75 p-10`} onClick={() => selectJersey(index)}>\n                    <div>\n                        <span className='size25 mt--10'>\n                            {(isTieScore(index) && (index !== 0)) ? index : (index + 1)}\n                        </span>\n                        <span className='size15 mt--10'>\n                            {rank[(isTieScore(index) && (index !== 0)) ? index : (index > 2) ? 3 : (index)]}\n                        </span>\n                    </div>\n                    <div className='size30 mt-5 mb-5'>\n                        {(player.player || player.name).split(' ')[0]}\n                    </div>\n                    <div className='size20'>\n                        {(player.player || player.name).split(' ')[1]}\n                    </div>\n                </div>\n                <div className={`r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`}>\n                    <div className='size40 bold'>{getSurfTotal(player)}</div>\n                    <div className='mt-10 bold'>{rankStatus(player, index)}</div>\n                </div>\n            </div>\n            <div>\n            {showButtons && (\n                editSurfer(index)\n            )}\n            </div>\n            <div>\n                <div>\n                    <div className='h-scroll color-white copyright ml-10 mr-10 mt-5'>\n                        <div className=\"container mt-10\">\n                            {players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        return surferScores()\n}\nexport default SurfingScores;"],"mappings":"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"},"metadata":{},"sourceType":"module"}