{"ast":null,"code":"var _jsxFileName = \"/Users/js/Dev/my-first-reactor/src/components/Home.js\";\nimport React from 'react';\nimport Timer from './Timer.js';\nimport Geolocator from './utils/Geolocator.js';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.calculateDistance = () => {\n      const {\n        markedLatitude,\n        latitude,\n        markedLongitude,\n        longitude,\n        tracking,\n        distance\n      } = this.state;\n      const lat1 = markedLatitude;\n      const lat2 = latitude;\n      const lon1 = markedLongitude;\n      const lon2 = longitude;\n      let unit = \"feet\";\n      console.log(`lat1: ${lat1} === lat2: ${lat2}) && (lon1: ${lon1} === lon2: ${lon2}`);\n\n      if (lat1 === lat2 && lon1 === lon2 || !lat1 || !lat2 || !lon1 || !lon2) {\n        return 0;\n      } else if (tracking === true) {\n        const radlat1 = Math.PI * lat1 / 180;\n        const radlat2 = Math.PI * lat2 / 180;\n        const theta = lon1 - lon2;\n        const radtheta = Math.PI * theta / 180;\n\n        const feetOrYards = dist => dist * 5280 > 30 ? `${(dist * 1760).toFixed(2)} yards` : `${(dist * 5280).toFixed(2)} feet`;\n\n        let dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n\n        if (dist > 1) {\n          dist = 1;\n        }\n\n        dist = Math.acos(dist);\n        dist = dist * 180 / Math.PI;\n        dist = dist * 60 * 1.1515;\n        dist = dist < .25 ? feetOrYards(dist) : `${dist.toFixed(2)} miles`; //dist = dist.toFixed(2);\n\n        if (unit === \"Kilometers\") {\n          dist = dist * 1.609344;\n        }\n\n        if (unit === \"Nautical\") {\n          dist = dist * 0.8684;\n        }\n\n        console.log(`DISTANCE => ${dist}`);\n        return dist;\n      }\n\n      return distance;\n    };\n\n    this.updateCurrentLocation = (longitude, latitude) => {\n      console.log(`UPDATING CURRENT POSITION ======> longitude: ${longitude} latitude: ${latitude}`);\n      this.setState({\n        longitude: longitude,\n        latitude: latitude,\n        distance: this.calculateDistance()\n      });\n    };\n\n    this.startDistance = () => {\n      const {\n        latitude,\n        longitude\n      } = this.state;\n      this.setState({\n        tracking: true,\n        markedLatitude: latitude,\n        markedLongitude: longitude\n      });\n    };\n\n    this.stopTracking = () => {\n      this.setState({\n        tracking: false\n      });\n    };\n\n    this.getDistance = () => this.state.distance;\n\n    this.getTracker = () => {\n      const tracker = this.state.tracking === true ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-neogreen p-20 bold bigFont100 bg-dkGreen r-5 m-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, this.getDistance()), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"button p-20 r-5 m-20 bg-red incompletedSelector color-yellow\",\n        onClick: this.stopTracking,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, \"Stop Tracking\")) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"color-neogreen p-20 bold bigFont100 bg-dkGreen r-5 m-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, this.state.distance), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"button p-20 r-5 m-20 bg-neogreen completedSelector color-black\",\n        onClick: this.startDistance,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, \"Start Tracking\"));\n      return tracker;\n    };\n\n    this.state = {\n      longitude: null,\n      latitude: null,\n      distance: 0,\n      tracking: false,\n      markedLongitude: null,\n      markedLatitude: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App fadeIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"App-link bold greet p-20 r-10 w-200 bg-green brdr-green noUnderline\",\n      href: \"https://jsongithub.github.io/portfolio/\",\n      target: \"_self\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"portfolio\"), /*#__PURE__*/React.createElement(Timer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }), \"Current position:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 38\n      }\n    }), /*#__PURE__*/React.createElement(Geolocator, {\n      currentPositionExists: \"false\",\n      returnCurrentPosition: this.updateCurrentLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 115\n      }\n    }), this.getTracker()));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/js/Dev/my-first-reactor/src/components/Home.js"],"names":["React","Timer","Geolocator","Home","Component","constructor","props","calculateDistance","markedLatitude","latitude","markedLongitude","longitude","tracking","distance","state","lat1","lat2","lon1","lon2","unit","console","log","radlat1","Math","PI","radlat2","theta","radtheta","feetOrYards","dist","toFixed","sin","cos","acos","updateCurrentLocation","setState","startDistance","stopTracking","getDistance","getTracker","tracker","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Timer from './Timer.js';\nimport Geolocator from './utils/Geolocator.js';\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            longitude: null,\n            latitude: null,\n            distance: 0,\n            tracking: false,\n            markedLongitude: null,\n            markedLatitude: null\n        }\n    }\n    calculateDistance = () => {\n        const { markedLatitude, latitude, markedLongitude, longitude, tracking, distance } = this.state;\n        const lat1 = markedLatitude;\n        const lat2 = latitude;\n        const lon1 = markedLongitude;\n        const lon2 = longitude;\n        let unit = \"feet\"\n        console.log(`lat1: ${lat1} === lat2: ${lat2}) && (lon1: ${lon1} === lon2: ${lon2}`)\n        if (((lat1 === lat2) && (lon1 === lon2)) || (!lat1 || !lat2 || !lon1 || !lon2)) {\n            return 0;\n        } else if (tracking === true) {\n            const radlat1 = Math.PI * lat1/180;\n            const radlat2 = Math.PI * lat2/180;\n            const theta = lon1-lon2;\n            const radtheta = Math.PI * theta/180;\n            const feetOrYards = (dist) => ((dist*5280)>30) ? `${(dist*1760).toFixed(2)} yards` : `${(dist*5280).toFixed(2)} feet`;\n            let dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n            if (dist > 1) {\n                dist = 1;\n            }\n            dist = Math.acos(dist);\n            dist = dist * 180/Math.PI;\n            dist = dist * 60 * 1.1515;\n            dist = (dist<.25) ? feetOrYards(dist) : `${dist.toFixed(2)} miles`;\n            //dist = dist.toFixed(2);\n            if (unit===\"Kilometers\") { dist = dist * 1.609344 }\n            if (unit===\"Nautical\") { dist = dist * 0.8684 }\n            console.log(`DISTANCE => ${dist}`)\n            return dist;\n        }\n        return distance;\n    }\n    updateCurrentLocation = (longitude, latitude) => {\n        console.log(`UPDATING CURRENT POSITION ======> longitude: ${longitude} latitude: ${latitude}`)\n        this.setState({\n            longitude: longitude,\n            latitude: latitude,\n            distance: this.calculateDistance()\n        })\n    }\n    startDistance = () => {\n        const {latitude, longitude} = this.state;\n        this.setState({\n            tracking: true,\n            markedLatitude: latitude,\n            markedLongitude: longitude\n        })\n    }\n    stopTracking = () => {\n        this.setState({\n            tracking: false,\n        })\n    }\n    getDistance = () => this.state.distance;\n    getTracker = () => {\n        const tracker = (this.state.tracking === true) \n        ? <div>\n            <div className=\"color-neogreen p-20 bold bigFont100 bg-dkGreen r-5 m-20\">{this.getDistance()}</div>\n            <div className=\"button p-20 r-5 m-20 bg-red incompletedSelector color-yellow\" onClick={this.stopTracking}>Stop Tracking</div>\n        </div>\n        : <div>\n            <div className=\"color-neogreen p-20 bold bigFont100 bg-dkGreen r-5 m-20\">{this.state.distance}</div>\n            <div className=\"button p-20 r-5 m-20 bg-neogreen completedSelector color-black\" onClick={this.startDistance}>Start Tracking</div>\n        </div>\n\n        return tracker;\n    }\n                    \n    render() {\n        return (\n            <div className=\"App fadeIn\">\n                <header className=\"App-content\">\n                    <a className=\"App-link bold greet p-20 r-10 w-200 bg-green brdr-green noUnderline\"\n                    href=\"https://jsongithub.github.io/portfolio/\"\n                    target=\"_self\"\n                    rel=\"noopener noreferrer\"\n                    >\n                        portfolio\n                    </a>\n                    {/*<Lister items={[1,2,3]} />*/}\n                    <Timer/>\n                    Current position:<br/>\n                    <Geolocator currentPositionExists=\"false\" returnCurrentPosition={this.updateCurrentLocation}/><br/>\n                    {this.getTracker()}\n                </header>\n            </div>\n        );\n    };\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}