[{"/Users/js/Dev/my-first-reactor/src/index.js":"1","/Users/js/Dev/my-first-reactor/src/reducers/SitewideReducers.js":"2","/Users/js/Dev/my-first-reactor/src/App.js":"3","/Users/js/Dev/my-first-reactor/src/serviceWorker.js":"4","/Users/js/Dev/my-first-reactor/src/components/music/songReducer.js":"5","/Users/js/Dev/my-first-reactor/src/components/blog/postsReducer.js":"6","/Users/js/Dev/my-first-reactor/src/components/music/selectedSongReducer.js":"7","/Users/js/Dev/my-first-reactor/src/components/waves/WavesReducer.js":"8","/Users/js/Dev/my-first-reactor/src/components/streams/streamReducer.js":"9","/Users/js/Dev/my-first-reactor/src/components/blog/usersReducer.js":"10","/Users/js/Dev/my-first-reactor/src/components/blog/Blog.js":"11","/Users/js/Dev/my-first-reactor/src/components/waves/LogDirectory.js":"12","/Users/js/Dev/my-first-reactor/src/components/waves/SurfReports.js":"13","/Users/js/Dev/my-first-reactor/src/components/waves/LoggerFunctional.js":"14","/Users/js/Dev/my-first-reactor/src/components/Home.js":"15","/Users/js/Dev/my-first-reactor/src/components/Reducer.js":"16","/Users/js/Dev/my-first-reactor/src/components/waves/WaveFinder.js":"17","/Users/js/Dev/my-first-reactor/src/components/blog/PhotoBlog.js":"18","/Users/js/Dev/my-first-reactor/src/components/music/Player.js":"19","/Users/js/Dev/my-first-reactor/src/reducers/authReducer.js":"20","/Users/js/Dev/my-first-reactor/src/components/utils/Debouncer.js":"21","/Users/js/Dev/my-first-reactor/src/components/forms/FormEssay.js":"22","/Users/js/Dev/my-first-reactor/src/components/utils/SlideShow.js":"23","/Users/js/Dev/my-first-reactor/src/components/utils/Photos.js":"24","/Users/js/Dev/my-first-reactor/src/components/utils/PhotoSequence.js":"25","/Users/js/Dev/my-first-reactor/src/components/utils/Videos.js":"26","/Users/js/Dev/my-first-reactor/src/components/utils/WikiSearch.js":"27","/Users/js/Dev/my-first-reactor/src/components/site/Header.js":"28","/Users/js/Dev/my-first-reactor/src/components/site/Footer.js":"29","/Users/js/Dev/my-first-reactor/src/components/utils/Accordion.js":"30","/Users/js/Dev/my-first-reactor/src/components/utils/ScrollToTop.js":"31","/Users/js/Dev/my-first-reactor/src/components/hooks/Todos.js":"32","/Users/js/Dev/my-first-reactor/src/components/utils/history.js":"33","/Users/js/Dev/my-first-reactor/src/components/hooks/Counter.js":"34","/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js":"35","/Users/js/Dev/my-first-reactor/src/components/hooks/Adder.js":"36","/Users/js/Dev/my-first-reactor/src/components/converter/Calculator.js":"37","/Users/js/Dev/my-first-reactor/src/components/weather/Weather.js":"38","/Users/js/Dev/my-first-reactor/src/components/context/CountryContext.js":"39","/Users/js/Dev/my-first-reactor/src/components/shop/Shop.js":"40","/Users/js/Dev/my-first-reactor/src/components/translator/Translator.js":"41","/Users/js/Dev/my-first-reactor/src/components/streams/StreamShow.js":"42","/Users/js/Dev/my-first-reactor/src/components/streams/StreamDelete.js":"43","/Users/js/Dev/my-first-reactor/src/components/streams/StreamCreate.js":"44","/Users/js/Dev/my-first-reactor/src/components/streams/StreamList.js":"45","/Users/js/Dev/my-first-reactor/src/components/streams/StreamEdit.js":"46","/Users/js/Dev/my-first-reactor/src/actions/types.js":"47","/Users/js/Dev/my-first-reactor/src/components/blog/PostList.js":"48","/Users/js/Dev/my-first-reactor/src/components/utils/KeyGenerator.js":"49","/Users/js/Dev/my-first-reactor/src/components/waves/InterfaceData.js":"50","/Users/js/Dev/my-first-reactor/src/components/waves/LogTemplateData.js":"51","/Users/js/Dev/my-first-reactor/src/components/utils/Timer.js":"52","/Users/js/Dev/my-first-reactor/src/components/waves/GenerateLogId.js":"53","/Users/js/Dev/my-first-reactor/src/components/waves/ConditionsDashboard.js":"54","/Users/js/Dev/my-first-reactor/src/components/utils/Geolocator.js":"55","/Users/js/Dev/my-first-reactor/src/components/utils/WaveUtils.js":"56","/Users/js/Dev/my-first-reactor/src/components/waves/Tide.js":"57","/Users/js/Dev/my-first-reactor/src/components/waves/DirectionObject.js":"58","/Users/js/Dev/my-first-reactor/src/components/waves/ConditionsSelectors.js":"59","/Users/js/Dev/my-first-reactor/src/components/waves/Locations.js":"60","/Users/js/Dev/my-first-reactor/src/components/waves/useOceanData.js":"61","/Users/js/Dev/my-first-reactor/src/components/waves/GetMatchIcon.js":"62","/Users/js/Dev/my-first-reactor/src/components/context/ConditionsContext.js":"63","/Users/js/Dev/my-first-reactor/src/components/waves/SurfLocation.js":"64","/Users/js/Dev/my-first-reactor/src/components/utils/CalculateDistance.js":"65","/Users/js/Dev/my-first-reactor/src/components/waves/PostDirectory.js":"66","/Users/js/Dev/my-first-reactor/src/components/waves/LogEntryFunctional.js":"67","/Users/js/Dev/my-first-reactor/src/components/utils/Loader.js":"68","/Users/js/Dev/my-first-reactor/src/components/blog/BlogImages.js":"69","/Users/js/Dev/my-first-reactor/src/components/music/SongList.js":"70","/Users/js/Dev/my-first-reactor/src/components/music/SongDetail.js":"71","/Users/js/Dev/my-first-reactor/src/components/utils/SequenceImages.js":"72","/Users/js/Dev/my-first-reactor/src/components/utils/DebouncerType.js":"73","/Users/js/Dev/my-first-reactor/src/components/utils/DropDown.js":"74","/Users/js/Dev/my-first-reactor/src/components/translator/Translate.js":"75","/Users/js/Dev/my-first-reactor/src/components/forms/FunctionalSelector.js":"76","/Users/js/Dev/my-first-reactor/src/components/shop/ProductEntry.js":"77","/Users/js/Dev/my-first-reactor/src/components/shop/initData.js":"78","/Users/js/Dev/my-first-reactor/src/components/shop/SettingsMenu.js":"79","/Users/js/Dev/my-first-reactor/src/components/utils/Dominos.js":"80","/Users/js/Dev/my-first-reactor/src/components/utils/CricketScore.js":"81","/Users/js/Dev/my-first-reactor/src/components/site/CountrySelector.js":"82","/Users/js/Dev/my-first-reactor/src/components/utils/ScoreCard.js":"83","/Users/js/Dev/my-first-reactor/src/components/site/GoogleAuth.js":"84","/Users/js/Dev/my-first-reactor/src/components/utils/LoginControl.js":"85","/Users/js/Dev/my-first-reactor/src/components/utils/Toggle.js":"86","/Users/js/Dev/my-first-reactor/src/components/functional/CopyrightText.js":"87","/Users/js/Dev/my-first-reactor/src/components/streams/StreamActions.js":"88","/Users/js/Dev/my-first-reactor/src/components/streams/StreamForm.js":"89","/Users/js/Dev/my-first-reactor/src/components/streams/ButtonAdmin.js":"90","/Users/js/Dev/my-first-reactor/src/components/utils/YouTube.js":"91","/Users/js/Dev/my-first-reactor/src/components/utils/SearchBar.js":"92","/Users/js/Dev/my-first-reactor/src/components/utils/VideoList.js":"93","/Users/js/Dev/my-first-reactor/src/components/utils/UnSplash.js":"94","/Users/js/Dev/my-first-reactor/src/components/utils/GridImage.js":"95","/Users/js/Dev/my-first-reactor/src/components/utils/VideoDetail.js":"96","/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js":"97","/Users/js/Dev/my-first-reactor/src/components/converter/LiquidVerdict.js":"98","/Users/js/Dev/my-first-reactor/src/components/waves/TemplateData.js":"99","/Users/js/Dev/my-first-reactor/src/components/converter/BoilingVerdict.js":"100","/Users/js/Dev/my-first-reactor/src/components/converter/TemperatureInput.js":"101","/Users/js/Dev/my-first-reactor/src/components/streams/Modal.js":"102","/Users/js/Dev/my-first-reactor/src/components/apis/config.js":"103","/Users/js/Dev/my-first-reactor/src/components/blog/UserHeader.js":"104","/Users/js/Dev/my-first-reactor/src/components/blog/BlogActions.js":"105","/Users/js/Dev/my-first-reactor/src/components/waves/Angles.js":"106","/Users/js/Dev/my-first-reactor/src/components/waves/Directions.js":"107","/Users/js/Dev/my-first-reactor/src/components/waves/Sunset.js":"108","/Users/js/Dev/my-first-reactor/src/components/waves/BuoyReport.js":"109","/Users/js/Dev/my-first-reactor/src/components/waves/WindDirection.js":"110","/Users/js/Dev/my-first-reactor/src/components/waves/GetAngle.js":"111","/Users/js/Dev/my-first-reactor/src/components/waves/CreateLog.js":"112","/Users/js/Dev/my-first-reactor/src/components/waves/SwellSelector.js":"113","/Users/js/Dev/my-first-reactor/src/components/waves/Selector.js":"114","/Users/js/Dev/my-first-reactor/src/components/utils/RandomColor.js":"115","/Users/js/Dev/my-first-reactor/src/components/music/MusicActions.js":"116","/Users/js/Dev/my-first-reactor/src/components/waves/Group.js":"117","/Users/js/Dev/my-first-reactor/src/components/utils/RandomBackgroundColor.js":"118","/Users/js/Dev/my-first-reactor/src/components/forms/FormRadio.js":"119","/Users/js/Dev/my-first-reactor/src/components/functional/Dialog.js":"120","/Users/js/Dev/my-first-reactor/src/components/waves/tide/TideSelector.js":"121","/Users/js/Dev/my-first-reactor/src/components/waves/wind/WindSelector.js":"122","/Users/js/Dev/my-first-reactor/src/components/forms/FormLogin.js":"123","/Users/js/Dev/my-first-reactor/src/components/site/Countries.js":"124","/Users/js/Dev/my-first-reactor/src/components/utils/Greeting.js":"125","/Users/js/Dev/my-first-reactor/src/components/site/LocalAuth.js":"126","/Users/js/Dev/my-first-reactor/src/apis/streams.js":"127","/Users/js/Dev/my-first-reactor/src/components/weather/Weekday.js":"128","/Users/js/Dev/my-first-reactor/src/components/weather/GetDirection.js":"129","/Users/js/Dev/my-first-reactor/src/components/weather/GetDirectionIcon.js":"130","/Users/js/Dev/my-first-reactor/src/apis/jsonPlaceholder.js":"131","/Users/js/Dev/my-first-reactor/src/components/waves/AirTemp.js":"132","/Users/js/Dev/my-first-reactor/src/components/waves/WaterTemp.js":"133","/Users/js/Dev/my-first-reactor/src/components/waves/GetSurface.js":"134","/Users/js/Dev/my-first-reactor/src/components/waves/GetWindMPH.js":"135","/Users/js/Dev/my-first-reactor/src/components/waves/WaveHeights.js":"136","/Users/js/Dev/my-first-reactor/src/components/waves/GetWindOrientation.js":"137","/Users/js/Dev/my-first-reactor/src/components/waves/GetWaveHeight.js":"138","/Users/js/Dev/my-first-reactor/src/components/waves/GetNotes.js":"139","/Users/js/Dev/my-first-reactor/src/components/utils/VideoItem.js":"140","/Users/js/Dev/my-first-reactor/src/components/site/Menu.js":"141","/Users/js/Dev/my-first-reactor/src/components/site/NavClasses.js":"142","/Users/js/Dev/my-first-reactor/src/components/utils/TextColorizer.js":"143","/Users/js/Dev/my-first-reactor/src/actions/index.js":"144","/Users/js/Dev/my-first-reactor/src/components/site/NavItems.js":"145","/Users/js/Dev/my-first-reactor/src/components/utils/useCurrentTime.js":"146","/Users/js/Dev/my-first-reactor/src/components/utils/LongPressButton.js":"147","/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRates.js":"148","/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeConverter.js":"149","/Users/js/Dev/my-first-reactor/src/components/utils/DualVideoPlayer.js":"150","/Users/js/Dev/my-first-reactor/src/components/utils/ExpenseTracker.js":"151","/Users/js/Dev/my-first-reactor/src/components/utils/Fireworks.js":"152","/Users/js/Dev/my-first-reactor/src/components/utils/TaskTracker.js":"153","/Users/js/Dev/my-first-reactor/src/components/utils/VideoPlayer.js":"154","/Users/js/Dev/my-first-reactor/src/components/forms/DropDown.js":"155","/Users/js/Dev/my-first-reactor/src/components/utils/VideoNavigation.js":"156","/Users/js/Dev/my-first-reactor/src/components/utils/PlayerNavigation.js":"157","/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRatesConfig.js":"158"},{"size":1124,"mtime":1688592105399,"results":"159","hashOfConfig":"160"},{"size":781,"mtime":1688592105399,"results":"161","hashOfConfig":"160"},{"size":11692,"mtime":1688592045559,"results":"162","hashOfConfig":"160"},{"size":5087,"mtime":1688592045569,"results":"163","hashOfConfig":"160"},{"size":399,"mtime":1688592105023,"results":"164","hashOfConfig":"160"},{"size":266,"mtime":1688592105015,"results":"165","hashOfConfig":"160"},{"size":187,"mtime":1688592105023,"results":"166","hashOfConfig":"160"},{"size":434,"mtime":1688592105232,"results":"167","hashOfConfig":"160"},{"size":919,"mtime":1688592105224,"results":"168","hashOfConfig":"160"},{"size":275,"mtime":1688592105015,"results":"169","hashOfConfig":"160"},{"size":134,"mtime":1688592105011,"results":"170","hashOfConfig":"160"},{"size":4543,"mtime":1688592105230,"results":"171","hashOfConfig":"160"},{"size":4387,"mtime":1688701711593,"results":"172","hashOfConfig":"160"},{"size":4340,"mtime":1688592105230,"results":"173","hashOfConfig":"160"},{"size":3819,"mtime":1688592105006,"results":"174","hashOfConfig":"160"},{"size":3265,"mtime":1688592105006,"results":"175","hashOfConfig":"160"},{"size":29194,"mtime":1688592105231,"results":"176","hashOfConfig":"160"},{"size":936,"mtime":1688592105015,"results":"177","hashOfConfig":"160"},{"size":278,"mtime":1688592105023,"results":"178","hashOfConfig":"160"},{"size":431,"mtime":1688592105399,"results":"179","hashOfConfig":"160"},{"size":666,"mtime":1688592105225,"results":"180","hashOfConfig":"160"},{"size":1548,"mtime":1688592105016,"results":"181","hashOfConfig":"160"},{"size":9711,"mtime":1688592105227,"results":"182","hashOfConfig":"160"},{"size":2786,"mtime":1688592105226,"results":"183","hashOfConfig":"160"},{"size":3046,"mtime":1688592105226,"results":"184","hashOfConfig":"160"},{"size":1871,"mtime":1688592105228,"results":"185","hashOfConfig":"160"},{"size":3744,"mtime":1688592105228,"results":"186","hashOfConfig":"160"},{"size":4556,"mtime":1688592105029,"results":"187","hashOfConfig":"160"},{"size":2750,"mtime":1688592105028,"results":"188","hashOfConfig":"160"},{"size":973,"mtime":1688592105224,"results":"189","hashOfConfig":"160"},{"size":863,"mtime":1684871035000,"results":"190","hashOfConfig":"160"},{"size":3038,"mtime":1688592105023,"results":"191","hashOfConfig":"160"},{"size":86,"mtime":1688592105228,"results":"192","hashOfConfig":"160"},{"size":719,"mtime":1688592105022,"results":"193","hashOfConfig":"160"},{"size":19815,"mtime":1688592105227,"results":"194","hashOfConfig":"160"},{"size":1823,"mtime":1688592105022,"results":"195","hashOfConfig":"160"},{"size":2277,"mtime":1688592105016,"results":"196","hashOfConfig":"160"},{"size":1100,"mtime":1688592105232,"results":"197","hashOfConfig":"160"},{"size":69,"mtime":1688592105015,"results":"198","hashOfConfig":"160"},{"size":27988,"mtime":1688592105028,"results":"199","hashOfConfig":"160"},{"size":1435,"mtime":1688592105224,"results":"200","hashOfConfig":"160"},{"size":1396,"mtime":1688592105033,"results":"201","hashOfConfig":"160"},{"size":1737,"mtime":1688592105033,"results":"202","hashOfConfig":"160"},{"size":743,"mtime":1688592105033,"results":"203","hashOfConfig":"160"},{"size":2333,"mtime":1688592105033,"results":"204","hashOfConfig":"160"},{"size":1281,"mtime":1688592105033,"results":"205","hashOfConfig":"160"},{"size":1191,"mtime":1688592104866,"results":"206","hashOfConfig":"160"},{"size":1718,"mtime":1688592105015,"results":"207","hashOfConfig":"160"},{"size":349,"mtime":1688592105226,"results":"208","hashOfConfig":"160"},{"size":13053,"mtime":1688592105229,"results":"209","hashOfConfig":"160"},{"size":982,"mtime":1688592105230,"results":"210","hashOfConfig":"160"},{"size":1887,"mtime":1688592105227,"results":"211","hashOfConfig":"160"},{"size":423,"mtime":1688592105229,"results":"212","hashOfConfig":"160"},{"size":1433,"mtime":1688592105228,"results":"213","hashOfConfig":"160"},{"size":3103,"mtime":1688592105226,"results":"214","hashOfConfig":"160"},{"size":7596,"mtime":1688592105228,"results":"215","hashOfConfig":"160"},{"size":14224,"mtime":1688592105231,"results":"216","hashOfConfig":"160"},{"size":360,"mtime":1688592105229,"results":"217","hashOfConfig":"160"},{"size":6610,"mtime":1688592105229,"results":"218","hashOfConfig":"160"},{"size":20953,"mtime":1688592105230,"results":"219","hashOfConfig":"160"},{"size":2047,"mtime":1688592105232,"results":"220","hashOfConfig":"160"},{"size":4332,"mtime":1688592105229,"results":"221","hashOfConfig":"160"},{"size":21283,"mtime":1688592105015,"results":"222","hashOfConfig":"160"},{"size":8805,"mtime":1688592105231,"results":"223","hashOfConfig":"160"},{"size":1123,"mtime":1688592105225,"results":"224","hashOfConfig":"160"},{"size":4271,"mtime":1688592105230,"results":"225","hashOfConfig":"160"},{"size":12085,"mtime":1688592105230,"results":"226","hashOfConfig":"160"},{"size":1670,"mtime":1688592105226,"results":"227","hashOfConfig":"160"},{"size":60510,"mtime":1688592105015,"results":"228","hashOfConfig":"160"},{"size":1114,"mtime":1688592105023,"results":"229","hashOfConfig":"160"},{"size":804,"mtime":1688592105023,"results":"230","hashOfConfig":"160"},{"size":151,"mtime":1688592105227,"results":"231","hashOfConfig":"160"},{"size":213,"mtime":1688592105225,"results":"232","hashOfConfig":"160"},{"size":1517,"mtime":1688592105225,"results":"233","hashOfConfig":"160"},{"size":2210,"mtime":1688592105224,"results":"234","hashOfConfig":"160"},{"size":1600,"mtime":1688592105016,"results":"235","hashOfConfig":"160"},{"size":5906,"mtime":1688592105028,"results":"236","hashOfConfig":"160"},{"size":43215,"mtime":1688592105028,"results":"237","hashOfConfig":"160"},{"size":2654,"mtime":1688592105028,"results":"238","hashOfConfig":"160"},{"size":6541,"mtime":1688592105225,"results":"239","hashOfConfig":"160"},{"size":3068,"mtime":1688592105225,"results":"240","hashOfConfig":"160"},{"size":1593,"mtime":1688592105028,"results":"241","hashOfConfig":"160"},{"size":4265,"mtime":1688592105227,"results":"242","hashOfConfig":"160"},{"size":2652,"mtime":1688592105029,"results":"243","hashOfConfig":"160"},{"size":846,"mtime":1688592105226,"results":"244","hashOfConfig":"160"},{"size":298,"mtime":1688592105227,"results":"245","hashOfConfig":"160"},{"size":564,"mtime":1688592105017,"results":"246","hashOfConfig":"160"},{"size":1633,"mtime":1688592105033,"results":"247","hashOfConfig":"160"},{"size":1831,"mtime":1688592105033,"results":"248","hashOfConfig":"160"},{"size":1538,"mtime":1688592105032,"results":"249","hashOfConfig":"160"},{"size":249,"mtime":1688592105228,"results":"250","hashOfConfig":"160"},{"size":748,"mtime":1688592105227,"results":"251","hashOfConfig":"160"},{"size":447,"mtime":1688592105228,"results":"252","hashOfConfig":"160"},{"size":223,"mtime":1688592105227,"results":"253","hashOfConfig":"160"},{"size":1532,"mtime":1688592105226,"results":"254","hashOfConfig":"160"},{"size":997,"mtime":1688592105228,"results":"255","hashOfConfig":"160"},{"size":7302,"mtime":1688592105232,"results":"256","hashOfConfig":"160"},{"size":410,"mtime":1688592105016,"results":"257","hashOfConfig":"160"},{"size":1010,"mtime":1688592105231,"results":"258","hashOfConfig":"160"},{"size":821,"mtime":1688592105016,"results":"259","hashOfConfig":"160"},{"size":1715,"mtime":1688592105016,"results":"260","hashOfConfig":"160"},{"size":972,"mtime":1688592105032,"results":"261","hashOfConfig":"160"},{"size":572,"mtime":1688592105011,"results":"262","hashOfConfig":"160"},{"size":468,"mtime":1688592105015,"results":"263","hashOfConfig":"160"},{"size":1279,"mtime":1688592105011,"results":"264","hashOfConfig":"160"},{"size":432,"mtime":1688592105228,"results":"265","hashOfConfig":"160"},{"size":135,"mtime":1688592105229,"results":"266","hashOfConfig":"160"},{"size":5380,"mtime":1688592105230,"results":"267","hashOfConfig":"160"},{"size":333,"mtime":1688592105228,"results":"268","hashOfConfig":"160"},{"size":4939,"mtime":1688592105232,"results":"269","hashOfConfig":"160"},{"size":303,"mtime":1688592105229,"results":"270","hashOfConfig":"160"},{"size":4415,"mtime":1688592105229,"results":"271","hashOfConfig":"160"},{"size":6285,"mtime":1688592105231,"results":"272","hashOfConfig":"160"},{"size":2163,"mtime":1688592105230,"results":"273","hashOfConfig":"160"},{"size":321,"mtime":1688592105226,"results":"274","hashOfConfig":"160"},{"size":230,"mtime":1688592105023,"results":"275","hashOfConfig":"160"},{"size":310,"mtime":1688592105229,"results":"276","hashOfConfig":"160"},{"size":353,"mtime":1688592105226,"results":"277","hashOfConfig":"160"},{"size":2535,"mtime":1688592105016,"results":"278","hashOfConfig":"160"},{"size":449,"mtime":1688592105022,"results":"279","hashOfConfig":"160"},{"size":1331,"mtime":1688592105232,"results":"280","hashOfConfig":"160"},{"size":1804,"mtime":1688592105232,"results":"281","hashOfConfig":"160"},{"size":1590,"mtime":1688592105016,"results":"282","hashOfConfig":"160"},{"size":1312,"mtime":1688592105028,"results":"283","hashOfConfig":"160"},{"size":526,"mtime":1688592105226,"results":"284","hashOfConfig":"160"},{"size":1439,"mtime":1688592105032,"results":"285","hashOfConfig":"160"},{"size":97,"mtime":1688592104869,"results":"286","hashOfConfig":"160"},{"size":325,"mtime":1688592105233,"results":"287","hashOfConfig":"160"},{"size":309,"mtime":1688592105232,"results":"288","hashOfConfig":"160"},{"size":1527,"mtime":1688592105232,"results":"289","hashOfConfig":"160"},{"size":154,"mtime":1688592104869,"results":"290","hashOfConfig":"160"},{"size":1550,"mtime":1688592105228,"results":"291","hashOfConfig":"160"},{"size":1758,"mtime":1688592105231,"results":"292","hashOfConfig":"160"},{"size":290,"mtime":1688592105229,"results":"293","hashOfConfig":"160"},{"size":137,"mtime":1688592105229,"results":"294","hashOfConfig":"160"},{"size":170,"mtime":1688592105231,"results":"295","hashOfConfig":"160"},{"size":663,"mtime":1688592105229,"results":"296","hashOfConfig":"160"},{"size":407,"mtime":1688592105229,"results":"297","hashOfConfig":"160"},{"size":973,"mtime":1688592105229,"results":"298","hashOfConfig":"160"},{"size":948,"mtime":1688592105228,"results":"299","hashOfConfig":"160"},{"size":744,"mtime":1688592105032,"results":"300","hashOfConfig":"160"},{"size":304,"mtime":1688592105032,"results":"301","hashOfConfig":"160"},{"size":831,"mtime":1688592105227,"results":"302","hashOfConfig":"160"},{"size":218,"mtime":1688592104866,"results":"303","hashOfConfig":"160"},{"size":510,"mtime":1688592105032,"results":"304","hashOfConfig":"160"},{"size":3278,"mtime":1688592105228,"results":"305","hashOfConfig":"160"},{"size":802,"mtime":1688592105226,"results":"306","hashOfConfig":"160"},{"size":1765,"mtime":1688592105225,"results":"307","hashOfConfig":"160"},{"size":3804,"mtime":1688664847494,"results":"308","hashOfConfig":"160"},{"size":15036,"mtime":1688592045563,"results":"309","hashOfConfig":"160"},{"size":7730,"mtime":1688682886369,"results":"310","hashOfConfig":"160"},{"size":956,"mtime":1688592105226,"results":"311","hashOfConfig":"160"},{"size":25753,"mtime":1688592105227,"results":"312","hashOfConfig":"160"},{"size":14225,"mtime":1688592045567,"results":"313","hashOfConfig":"160"},{"size":317,"mtime":1688592105016,"results":"314","hashOfConfig":"160"},{"size":3697,"mtime":1688592045567,"results":"315","hashOfConfig":"160"},{"size":2305,"mtime":1688248071610,"results":"316","hashOfConfig":"160"},{"size":2904,"mtime":1688665943954,"results":"317","hashOfConfig":"160"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},"fc5en8",{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"320"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"320"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"320"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"320"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"320"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"320"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"388"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"320"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"320"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"320"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"320"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"320"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"320"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"320"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"320"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"320"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"320"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"320"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"320"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"320"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"320"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"320"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"320"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"609","messages":"610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"320"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"320"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"320"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"648","usedDeprecatedRules":"320"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"320"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"320"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"320"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"320"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"665"},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"320"},"/Users/js/Dev/my-first-reactor/src/index.js",[],["669","670"],"/Users/js/Dev/my-first-reactor/src/reducers/SitewideReducers.js",[],"/Users/js/Dev/my-first-reactor/src/App.js",[],"/Users/js/Dev/my-first-reactor/src/serviceWorker.js",[],"/Users/js/Dev/my-first-reactor/src/components/music/songReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/postsReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/music/selectedSongReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/WavesReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/streamReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/usersReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/Blog.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/LogDirectory.js",["671","672","673"],"import React from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport shakaBlack from '../../assets/images/shakaBlack.png';\nimport thumbsUp from '../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../assets/images/ThumbsDown.png';\nimport { BrowserRouter as Router, Link} from 'react-router-dom';\n\nconst LogDirectory = ({ title, message }) => {\n    \n   const getLog = () => window.location.pathname = \"/reactor/SurfLog\";\n   const sessionClick = (item, spot) => {\n        localStorage.setItem('spot', spot)\n        localStorage.setItem('logId', item)\n        console.log(`sessionClick \\n${item} --> \\nSpot: ${spot}`);\n        getLog();\n    }\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"]\n    const suffix = [\"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\"];\n    const icons = [shakaBlack, thumbsUp, thumbsDown];\n    const conditions = [\"Firing\", \"Good\", \"Bad\"];\n    const items = () => JSON.parse(localStorage.getItem(\"postDirectory\"));\n    \n    const sessions = () => items().map((item) => {\n        const itemObj = JSON.parse(localStorage.getItem(item));\n        \n        if (itemObj !== null) {\n            \n            //console.log(`ITEM: ${item} ====> ${JSON.stringify(itemObj, null, 2)}`)\n            const { Conditions, Location, Day, Surf, Swell1 } = itemObj;\n            const conditionsIndex = conditions.indexOf(Conditions.Conditions);\n            const spot = Location.Break;\n            const day = Day.Day;\n            const month = months[Day.Month-1];\n            const year = Day.Year;\n            const conditionDescription = Conditions.Conditions;\n            // eslint-disable-next-line\n            const conditionHeight = Surf.Height;\n            const height = Swell1.Height;\n            const direction = Swell1.Direction;            \n            const angle = Swell1.Angle;\n            const interval = Swell1.Interval.replace('seconds', 'sec');\n            const condition = icons[conditionsIndex];\n            const classes = 'stripe color-black m-1 r-10 flexContainer m-10Percent';\n            const buttonClasses = 'button p-10 r-10 m-1 width-100-percent glassy';\n\n            return (\n                <Link \n                    onClick={() => sessionClick(item, spot)}\n                    className=\"noUnderline mobileFull m-1 stripe color-black m-1 r-10\" \n                    key={getKey(\"link\")} \n                    to={{\n                        pathname: '/SurfLog', \n                        state: {\n                            spot: {spot}, \n                            logId: {item}\n                        }\n                    }}\n                >\n                    <div className='flexContainer m-25Percent'>\n                        <div className='flexOneFourthColumnRight p-10'>\n                            <img src={condition} alt={conditionDescription} className='icon r-5' />\n                        </div>\n                        <div className='flexThreeFourthColumnLeft m-10'>\n                            <div className='description'>\n                                {month + \" \" + day + suffix[Number(String(day).slice(-1))]} {year}\n                            </div>\n                            <div className='size20'>{spot}</div>\n                            <div className='description'>\n                                <span>{height}</span>\n                                <span className='ml-5'>{direction}</span>\n                                <span className='ml-5'>{angle}</span>\n                                <span className='ml-5'>{interval}</span>\n                            </div>\n                        </div>\n                    </div>\n                </Link>\n            )\n        }\n        return \"\";\n    })\n    const logSession = () => window.location.pathname = \"/reactor/SurfLog\";\n    //console.log(`postssssss=>${JSON.stringify(posts.getDirectory(),null,2)}`)\n    return (\n        <div className=\"App-content fadeIn mt--14\">\n            {sessions()}\n            <PostDirectory/>\n            <div className=\"button p-20 r-5 m-20 bg-green completedSelector color-black glassy\" onClick={logSession}>Add Session</div>\n        </div>\n    );\n}\n\nexport default LogDirectory;\n/*\n\"ThuApr3020209:17:44PM\",\n\"ThuApr3020209:19:28PM\",\n\"FriMay0120207:10:29PM\",\n\"SunMay03202012:59:02PM\",\n\"SunMay0320201:04:32PM\",\n\"SunMay0320201:11:21PM\",\n\"SunMay0320201:12:16PM\",\n\"SunMay0320201:21:55PM\",\n\"SunMay0320201:22:13PM\",\n\"SunMay0320201:22:29PM\"\n*/","/Users/js/Dev/my-first-reactor/src/components/waves/SurfReports.js",["674","675"],"import React, { useState } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\n//import cheerio from 'cheerio';\n//import got from 'got';\n\nconst SurfReports = () => {\n    // eslint-disable-next-line\n    const [oSideBuoyData, setOSideBuoyData] = useState({});\n    // eslint-disable-next-line\n    const getSwellData = () => {\n        const unirest = require(\"unirest\");\n        const req = unirest(\"GET\", \"https://stormglass.p.rapidapi.com/forecast\");\n        req.headers({\n            \"x-rapidapi-host\": \"stormglass.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"cd590b7832msheb65a284b1083a6p112e16jsn24ac4a11b813\",\n            \"useQueryString\": true\n        });\n        req.end(function (res) {\n            if (res.error) throw new Error(res.error);\n            console.log(`getSwellData => ${res.body}`);\n        });\n\n    }\n    // eslint-disable-next-line\n    const getRapidData = () => {\n        const settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": \"https://community-open-weather-map.p.rapidapi.com/weather?q=san%20francisco%2Cus\",\n            \"method\": \"GET\",\n            \"headers\": {\n              \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n              \"x-rapidapi-key\": \"SIGN-UP-FOR-KEY\"\n            }\n          }\n          \n        const xhttp = new XMLHttpRequest();\n        xhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                console.log(`getRapidData: ${this.responseText}`);\n            } else {\n                console.log(`getRapidData: ${this.status}`)\n            }\n        };\n        xhttp.open(\"GET\", settings, true);\n        xhttp.send();\n          /*\n          $.ajax(settings).done(function (response) {\n            console.log(`getRapidData: ${response}`);\n          });\n          */\n    }\n        //this.getSwellData();\n        //this.getRapidData();\n    \n    const bouys = [\n        {\n           title: 'Oceanside Offshore',\n           src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=46224'\n        },\n        {\n            title: 'Torrey Pines Outer',\n            src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=46225'\n        },\n        {\n            title: 'Del Mar Nearshore',\n            src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=46266'\n        },\n        {\n            title: 'SCRIPPS Nearshore',\n            src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=46254'\n        },\n        {\n            title: 'La Jolla LJAC1',\n            src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=LJAC1'\n        },\n        {\n            title: 'La Jolla LJPC1',\n            src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=LJPC1'\n        },\n        {\n            title: 'Point Loma South',\n            src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=46232'\n        }\n    ];\n    const menu = () => {\n        const classes = 'maxWidth400 m-10 r-5 glassy height400 horizontalItem';\n        const portraitButton = (item, index) => <iframe src={item.src} title={item.title} key={getKey(`index${index}`)} className={classes}></iframe>;\n        const menuItems = bouys.map((item) => portraitButton(item));\n        return menuItems;\n    }\n    return (\n        <div className='m-10'>\n            <link href=\"//www.surf-forecast.com/stylesheets/widget.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" /><div class=\"wf-width-cont surf-fc-widget\"><div class=\"widget-container\"><div class=\"external-cont\"><iframe class=\"surf-fc-i\" allowtransparency=\"true\" src=\"//www.surf-forecast.com/breaks/Uluwatu/forecasts/widget/a\" scrolling=\"no\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\"></iframe><div class=\"footer\"><a class=\"logo\" href=\"//www.surf-forecast.com/\"><img src=\"//www.surf-forecast.com/images/widget.png\" width=\"1\" height=\"1\" /></a><div class=\"about\" id=\"cmt\">View detailed surf forecast for <a href=\"//www.surf-forecast.com/breaks/Uluwatu\">Uluwatu</a>. Visit <a href=\"//www.surf-forecast.com/breaks/Uluwatu\">surf-forecast.com</a> for more details, long range forecasts, surf reports, swell and weather maps.</div></div></div></div></div>\n            \n            <div className='width-100-percent h-scroll'>\n                {menu()}\n            </div>\n        </div>\n    )\n}\n\nexport default SurfReports;","/Users/js/Dev/my-first-reactor/src/components/waves/LoggerFunctional.js",["676"],"import React, {useState, useEffect} from 'react';\nimport LogEntry from './LogEntryFunctional.js';\nimport Loader from '../utils/Loader.js';\nimport interfaceData from './InterfaceData.js'\nimport templateData from './LogTemplateData.js';\nimport generateNewLogId from './GenerateLogId.js';\n\nconst Logger = ({logId, location}) => { \n    console.log(`Logger => logId: ${logId}\\nlocalStorage.getItem('logId'): ${localStorage.getItem('logId')}`); \n    const logExists = () => (localStorage.getItem(logId) === null) ? false : true;\n    // eslint-disable-next-line\n    const initLogId = () => (logExists()) ? logId : generateNewLogId();\n    const initLog = () => (logExists()) ? JSON.parse(localStorage.getItem(logId)) : templateData;\n    const [status, setStatus] = useState({\n        //logID: initLogId(),\n        logID: localStorage.getItem('logId'),\n        log: initLog(),\n        isLoaded: false,\n        items: []\n    })\n    // eslint-disable-next-line\n    const getSpot = () => localStorage.getItem(\"spot\");\n    useEffect(() => {\n        // eslint-disable-next-line\n        const { state } = location;\n        const logId = localStorage.getItem('logId');\n        console.log(`LoggerFunctional => componentDidMount -> SPOT: ${getSpot()}\\ngetLogId: ${localStorage.getItem('logId')}\\nlogId: ${logId}`); \n        \n        if (localStorage.getItem(logId) === null) {\n            setStatus(prevState => ({\n                ...prevState,\n                log: templateData,\n                logID:generateNewLogId()\n            }));\n            console.log(`LoggerFunctional => componentDidMount -> 1\\nSPOT: ${getSpot()}\\nlogID: ${logId}\\nlog: ${JSON.stringify(status.log, null, 2)}`); \n        \n        } else {\n            setStatus(prevState => ({\n                ...prevState,\n                log: JSON.parse(localStorage.getItem(logId)),\n                logID: logId\n            }));\n            //console.log(`LoggerFunctional => componentDidMount -> 2\\nSPOT: ${getSpot()}\\nlogID: ${logId}\\nlog: ${JSON.stringify(status.log, null, 2)}`); \n        }\n        \n        let data = interfaceData;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        // eslint-disable-next-line\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        setStatus({\n            log: JSON.parse(localStorage.getItem(logId)),\n            logID: logId,\n            items: data,\n            isLoaded: true\n        });\n    }, [])\n\n    const updateLog = (groupTitle, label, selected, set) => {\n        const log = (status.log !== null) ? status.log : templateData;\n        //console.log(`updateLog => \\ngroupTitle: ${groupTitle} \\nlabel: ${label}\\nselected: ${selected}\\nset: ${set}\\nlog: ${JSON.stringify(log, null, 2)}`)\n        log[groupTitle][label] = selected;\n        if (groupTitle !== undefined && groupTitle !== 1 && selected !== undefined && set) {\n            setStatus(prevState => ({\n                ...prevState,\n                log: log\n            }));\n        }\n    }\n    const getStateLog = () => status.log;\n          \n    //console.log(`LoggerFunctional ===> ${JSON.stringify(status.items, null, 2)}`);\n    let appInterface = <div className=\"App-content fadeIn\">\n                            <div className=\"flex3Column\"></div>\n                            <div className=\"flex3Column\">\n                                <Loader />\n                            </div>\n                            <div className=\"flex3Column\"></div>\n                        </div>;\n                        \n    if (status.isLoaded) {\n        appInterface = <div className=\"App-content fadeIn\">\n            <div className=\"flex3Column\"></div>\n            <div className=\"flex3Column\">\n                <LogEntry\n                    logId={status.logID}\n                    onChange={updateLog} \n                    getStateLog={getStateLog} \n                    title=\"Session Log\" \n                    message=\"Add your session data\"  \n                    buttonLabel=\"submit\" \n                    items={status.items}\n                />\n            </div>\n            <div className=\"flex3Column\"></div>\n        </div>\n        \n    }\n    return (\n        appInterface            \n    )\n    \n}\nexport default Logger;","/Users/js/Dev/my-first-reactor/src/components/Home.js",[],"/Users/js/Dev/my-first-reactor/src/components/Reducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/WaveFinder.js",["677","678","679","680","681","682","683","684","685","686","687"],"import React, { useState, useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport getKey from '../utils/KeyGenerator.js';\nimport WaveUtils from '../utils/WaveUtils.js';\nimport calculateDistance from '../utils/CalculateDistance.js';\nimport Tide from './Tide.js';\nimport ConditionsDashboard from './ConditionsDashboard.js';\n// eslint-disable-next-line\nimport tide from '../../assets/images/tide.png';\nimport GetMatchIcon from './GetMatchIcon.js';\nimport SurfLocation from './SurfLocation.js';\nimport Sunset from './Sunset.js';\nimport locations from './Locations.js';\nimport directionObject from './DirectionObject.js';\nimport ConditionsSelectors from './ConditionsSelectors.js';\nimport Geolocator from '../utils/Geolocator.js';\n// eslint-disable-next-line\nimport useOceanData from './useOceanData.js';\nimport useCurrentTime from '../utils/useCurrentTime.js';\nimport ConditionsContext from '../context/ConditionsContext.js';\n\nconst WaveFinder = () => {\n    const getLocal = (item) => localStorage.getItem(item);\n    const getProps = (item) => item;\n\n    const getDefault = (item) => (getLocal(item) === null) \n                                    ? getProps(item) \n                                    : getLocal(item);\n\n    const getSwell1Direction = () => localStorage.getItem('swell1Direction') ? localStorage.getItem('swell1Direction') : 'SSW';\n    const getSwell2Direction = () => localStorage.getItem('swell2Direction') ? localStorage.getItem('swell2Direction') : 'SSW';\n    const getLocalLocations = () => (localStorage.getItem('locations')) ? JSON.parse(localStorage.getItem('locations')) : locations();\n    const getLocations = () => getLocalLocations() || locations();\n    \n    const [status, setStatus] = useState({            \n        module: 'WaveFinder',\n        pause: true,\n        date: new Date(),\n        edit: false,\n        tide: getDefault('tide'),\n        stars: getDefault('stars'),\n        waterTemp: '66.2',\n        swell1Height: '2.0',\n        swell1Interval: '17 seconds',\n        swell1Direction: getSwell1Direction(),\n        swell2Height: '2.0',\n        swell2Interval: '9 seconds',\n        swell2Direction: getSwell2Direction(),\n        swell1Angle: directionObject[getSwell1Direction()],\n        swell2Angle: directionObject[getSwell2Direction()],\n        //swell1Direction: getDefault('swell1Direction'),\n        //swell2Direction: getDefault('swell2Direction'),\n        //swell1Angle: getDefault('swell1Angle'),\n        //swell2Angle: getDefault('swell2Angle'),\n        //swell1Height: getDefault('swell1Height'),\n        //swell2Height: getDefault('swell2Height'),\n        //swell1Interval: getDefault('swell1Interval'),\n        //swell2Interval: getDefault('swell2Interval'),\n        windDirection: getDefault('windDirection'),\n        distance: getDefault('distance'),\n        isSwell1: (localStorage.getItem('isSwell1') === 'true') ? true : false,\n        isSwell2: (localStorage.getItem('isSwell2') === 'true') ? true : false,\n        isTide: (localStorage.getItem('isTide') === 'true') ? true : false,\n        isWind: (localStorage.getItem('isWind') === 'true') ? true : false,\n        locations: getLocations(),\n        matches: [],\n        init: false\n    });\n    //console.log(`WaveFinder => status:\\n${JSON.stringify(status, null, 2)}`);\n    //setIt = setIt.bind(this);\n    const time = useCurrentTime();\n    const startTime = time[0].startTime;\n    const endTime = time[0].endTime;\n    //console.log(`WaveFinder => time: ${JSON.stringify(time, null, 2)}\\nstartTime: ${startTime} \\nendTime: ${endTime}`);\n    const tideNowLink = `https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?begin_date=${startTime}&end_date=${endTime}&station=9410660&product=water_level&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n    const uriMLL = `https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?product=predictions&application=NOS.COOPS.TAC.WL&begin_date=${startTime}&end_date=${endTime}&datum=MLLW&station=9410230&time_zone=lst_ldt&units=english&interval=hilo&format=json`;\n    // eslint-disable-next-line\n    const data = useOceanData('tides', uriMLL);\n    // eslint-disable-next-line\n    console.log(`$$$$$$$$$$$$$$$$$$$$$$$$$$$TIDE: ${tideNowLink}`);\n    const tideNow = useOceanData('tide', tideNowLink);\n    \n    //console.log(`isWind: ${getDefault('isWind')}`)\n    \n    const tick = () => {\n        console.log(`tick => pause: ${status.pause}`)\n        if (status.pause === false) {\n            setStatus(prevState => ({\n                ...prevState,\n                date: new Date(),\n                pause: true\n            }));\n        }\n    }\n    useEffect(() => {\t\t\n        const timerID = setInterval(\n            () => tick(),\n            3000000\n        );\n        return function cleanUp () {\n            clearInterval(timerID);\n        }\n    },[]);\n    \n    useEffect(() => {\n        setScroll();\n    },[]);\n\n    const currentPositionExists = () => (status.longitude) ? true : false;\n    const updateCurrentLocation = (longitude, latitude) => {\n//      console.log(`UPDATING CURRENT POSITION ======> longitude: ${longitude} latitude: ${latitude}`)\n        if (currentPositionExists()) {\n\n            if ((Math.abs(status.longitude - longitude)>.0001) || (Math.abs(status.latitude - latitude)>.0001) || (status.init === false)) {\n                console.log(`updateCurrentLocation => satus coords ^^^^^^^^^^^ ${longitude}, ${latitude}`)\n                localStorage.setItem('longitude', longitude);\n                localStorage.setItem('latitude', latitude);\n                setStatus(prevState => ({\n                    ...prevState,\n                    longitude,\n                    latitude,\n                    init: true\n                }));\n            }\n        } else if ((Math.abs(Number(localStorage.getItem('longitude')) - longitude)>.000003) || (Math.abs(localStorage.getItem('latitude') - latitude)>.000003)) {\n            console.log(`updateCurrentLocation => local coords ^^^^^^^^^^^ ${longitude}, ${latitude}`)\n            localStorage.setItem('longitude', longitude);\n            localStorage.setItem('latitude', latitude);\n            setStatus(prevState => ({\n                ...prevState,\n                longitude,\n                latitude,\n                init: true\n            }));\n        }\n    }\n    const updateLocations = () => {\n        console.log(`updateLocations =>`);\n        setStatus(prevState => ({\n            ...prevState,\n            locations: getLocations(),\n            edit: false\n        }));\n    }; \n    const getDefaultHeights = (tideSelected) => {\n        if (tideSelected === 'high') {\n            return 5;\n        } else if (tideSelected === 'medium') {\n            return 3;\n        }\n        return 0;\n    }\n    const handleWindCheck = () => {\n        localStorage.setItem('isWind', !status.isWind);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            isWind: localStorage.getItem('isWind')\n        }));\n    }\n    const handleTideCheck = () => {\n        localStorage.setItem('isTide', !status.isTide);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            isTide: localStorage.getItem('isTide')\n        }));\n    }\n    const handleSwellCheck = (id) => {\n        if (id === '1') {\n            localStorage.setItem('isSwell1', !status.isSwell1);\n            setStatus(prevState => ({\n                ...prevState,\n                pause: true,\n                isSwell1: localStorage.getItem('isSwell1')\n            }));\n        } else {\n            localStorage.setItem('isSwell2', !status.isSwell2);\n            setStatus(prevState => ({\n                ...prevState,\n                pause: true,\n                isSwell2: localStorage.getItem('isSwell2')\n            }));\n        }\n    }\n    // eslint-disable-next-line\n    const handleSwellSelection = (id, groupTitle, label, selected) => {\n        // eslint-disable-next-line\n        const swellAngle = directionObject[selected];\n        //console.log(`handleSwellSelection => \\nselected: ${selected} \\nswellAngle: ${swellAngle}\\n directionObject: ${JSON.stringify(directionObject, null, 2)}`)\n        if(id === '1') {\n            localStorage.setItem('swell1Angle', swellAngle);\n            localStorage.setItem('swell1Direction', selected);\n            setStatus(prevState => ({\n                ...prevState,\n                pause: true,\n                swell1Direction: selected,\n                swell1Angle: swellAngle\n            }));\n        } else {\n            //console.log(`${selected} swell2Angle: ${swell2Angle}`)\n            localStorage.setItem('swell2Angle', swellAngle);\n            localStorage.setItem('swell2Direction', selected);\n            setStatus(prevState => ({\n                ...prevState,\n                pause: true,\n                swell2Direction: selected,\n                swell2Angle: swellAngle\n            }));\n        }\n    }\n    const handleSwell1Selection = (groupTitle, label, selected) => {\n        const swell1Angle = directionObject[selected];\n        //console.log(`handleSwell1Selection => \\nselected: ${selected} \\nswell1Angle: ${swell1Angle}\\n directionObject: ${JSON.stringify(directionObject, null, 2)}`)\n        localStorage.setItem('swell1Angle', swell1Angle);\n        localStorage.setItem('swell1Direction', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell1Direction: selected,\n            swell1Angle: swell1Angle\n        }));\n    }\n    const handleSwell2Selection = (groupTitle, label, selected) => {\n        const swell2Angle = directionObject[selected];\n        //console.log(`${selected} swell2Angle: ${swell2Angle}`)\n        localStorage.setItem('swell2Angle', swell2Angle);\n        localStorage.setItem('swell2Direction', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell2Direction: selected,\n            swell2Angle: swell2Angle\n        }));\n    }\n    const handleSwell1Angle = (groupTitle, label, selected) => {\n        localStorage.setItem('swell1Angle', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell1Angle: selected\n        }));\n    }\n    const handleSwell2Angle = (groupTitle, label, selected) => {\n        localStorage.setItem('swell2Angle', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell2Angle: selected\n        }));\n    }\n    const handleSwell1Height = (groupTitle, label, selected) => {\n        localStorage.setItem('swell1Height', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell1Height: selected\n        }));\n    }\n    const handleSwell2Height = (groupTitle, label, selected) => {\n        localStorage.setItem('swell2Height', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell2Height: selected\n        }));\n    }\n    const handleSwell1Interval = (groupTitle, label, selected) => {\n        localStorage.setItem('swell1Interval', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell1Interval: selected\n        }));\n    }\n    const handleSwell2Interval = (groupTitle, label, selected) => {\n        localStorage.setItem('swell2Interval', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell2Interval: selected\n        }));\n    }\n    const handleStarSelection = (groupTitle, label, selected) => {\n        localStorage.setItem('stars', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            stars: selected\n        }));\n    }\n    const handleDistanceSelection = (event) => {\n        const target = event.target;\n        localStorage.setItem('distance', target.value);\n        setStatus(prevState => ({\n            ...prevState,\n            distance: target.value\n        }));\n    }\n    const pause = (event) => {\n        //console.log('PAUSE');\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true\n        }));\n    }\n    // eslint-disable-next-line\n    const unpause = () => {\n        //console.log('UNPAUSE');\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true\n        }));\n    };\n    const setTide = (tide, height) => {\n        console.log(`WaveFinder = > setTide ${tide}`)\n        //let currentTide = (Number(tide)>2) ? 'medium' : 'low';\n        //console.log(`WaveFinder = > ${tide} currentTide(${currentTide})`)\n        //currentTide = (Number(tide)>4) ? 'high' : currentTide;\n        //console.log(`WaveFinder = > ${tide} currentTide(${currentTide})`)\n        if (localStorage.getItem('tide') !== tide) {\n            localStorage.setItem('height', height);\n            localStorage.setItem('tide', tide);\n            setStatus(prevState => ({\n                ...prevState,\n                tide: tide,\n                height: height\n            }));\n        }\n    }\n    const tideDisplay = (display) => <Tide \n                                    tideNow={tideNow} \n                                    data={data} \n                                    time={time} \n                                    setTide={setTide} \n                                    display={`${display}`}\n                                />\n\n    // eslint-disable-next-line\n    const getState = (kind) => {\n        const { swell1Direction, swell2Direction, tide, windDirection } = status;\n        if (kind === 'swell1') {\n            return swell1Direction;\n        } else if (kind === 'swell2') {\n            return swell2Direction;\n        } else if (kind === 'tide') {\n            return tide;\n        } else if (kind === 'wind') {\n            return windDirection;\n        }\n    }\n    // eslint-disable-next-line\n    const getStarDetails = (kind) => {\n        let details = '';\n        const { height, windSpeed, windGusts } = status;\n        details = (kind === 'tide') ? <div className='bold color-neogreen'>{localStorage.getItem('height')}'</div> : details;\n        details = (kind === 'wind') ? <div className='bold color-neogreen'>{windSpeed * 1.15078}-{windGusts * 1.15078}mph</div> : details;\n        return details\n    }\n    // eslint-disable-next-line\n    /*\n    const star = (matchKind) => <div className='flex3Column bg-lite mr-5 ml-5 p-10 r-10'>\n                            <GetMatchIcon kind={matchKind} status={status}/>\n                            <div className='greet'>{getState(matchKind)}{getStarDetails(matchKind)}</div>\n                        </div>;\n    */\n    \n    const handleTideSelection = (groupTitle, label, selected) => {\n        const height = getDefaultHeights(selected);\n        setTide(selected, height);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            tide: selected,\n            height: height\n        }));\n    }\n    const setWind = (direction, angle, speed, gusts) => {\n        //console.log(`setWind =>\\ndirection: ${direction}\\nspeed: ${speed}`)\n        setStatus(prevState => ({\n            ...prevState,\n            windDirection: direction,\n            windAngle: Number(angle).toFixed(0),\n            windSpeed: Number(speed).toFixed(0),\n            windGusts: Number(gusts).toFixed(0)\n        }));\n    }\n\n    //console.log(`currentPositionExists: ${currentPositionExists()}`);\n    const swell1Match = (item) => (item.swell.indexOf(status.swell1Direction)>-1) ? true : false;\n    const swell2Match = (item) => (item.swell.indexOf(status.swell2Direction)>-1) ? true : false;\n    const windMatch = (item) => (item.wind.indexOf(status.windDirection)>-1) ? true : false;\n    const tideMatch = (item) => (item.tide.indexOf(status.tide)>-1) ? true : false;\n    //const swell1DirectionMatch = (direction) => (direction.swell===status.swell1Direction) ? true : false;\n    //const swell2DirectionMatch = (direction) => (direction===status.swell2Direction) ? true : false;\n    //const windDirectionMatch = (direction) => (direction.wind === windDirection) ? true : false;\n    //const tideDirectionMatch = (direction) => (direction.tide === status.tide) ? true : false;\n    const getDistance = (item) => calculateDistance(status, item);\n    //Math.abs(item.latitude - status.latitude)+Math.abs(item.longitude - status.longitude);\n    //.01 - 1 mile\n    const distanceRange = Number(status.distance);\n    const regionMatch = (item) => ((getDistance(item)<distanceRange) || (distanceRange > 999999999999)) ? getDistance(item) : false;\n    let count = 0;\n    const match = (item) => {\n        const matches = [];\n        // eslint-disable-next-line\n        let matchesCount = (swell1Match(item)) ? matches.push('swell1') : matches;\n        matchesCount = (swell2Match(item)) ? matches.push('swell2') : matches;\n        matchesCount = (windMatch(item)) ? matches.push('wind') : matches;\n        // eslint-disable-next-line\n        matchesCount = (tideMatch(item)) ? matches.push('tide') : matches;\n        //console.log(`matches => ${item.name} - ${matches}`)\n        return matches;\n    }\n    // eslint-disable-next-line\n    const statusClass = (status) => (status === true) ? 'color-neogreen' : 'color-yellow'; \n    // eslint-disable-next-line\n    const subStatusClass = (status) => (status === true) ? 'color-orange' : 'color-yellow'; \n    const swell1Confirm = (matches) => ((status.isSwell1 && matches.includes('swell1')) || status.isSwell1 === false) ? true : false;\n    const swell2Confirm = (matches) => ((status.isSwell2 && matches.includes('swell2')) || status.isSwell2 === false) ? true : false;\n    const tideConfirm = (matches) => ((status.isTide && matches.includes('tide')) || status.isTide === false) ? true : false;\n    const windConfirm = (matches) => ((status.isWind && matches.includes('wind')) || status.isWind === false) ? true : false;\n    const showAll = false;\n    const getCount = () => count;\n    const getMatchingLocation = (item) => {\n        const matches = match(item);\n        const inRegion = regionMatch(item);\n        if ((swell1Confirm(matches) && swell2Confirm(matches) && tideConfirm(matches) && windConfirm(matches)) || showAll) {\n            if (inRegion !== false) {\n                if (matches.length >= Number(status.stars)) {\n                    //console.log(`STARS ==================> Matches: ${matches.length} status stars:${status.stars}`)\n                    count = count + 1;\n                    return <SurfLocation \n                                key={getKey('link')} \n                                state={status} \n                                item={item} \n                                matches={matches} \n                                calculateDistance={calculateDistance} \n                                regionMatch={inRegion} \n                                tideDisplay={tideDisplay} \n                                updateLocations={updateLocations}\n                            >\n                            </SurfLocation>\n                }\n            }\n        }\n    }\n    const setScroll = () => {\n        const body = document.body; // For Safari\n        const html = document.documentElement; // Chrome, Firefox, IE and Opera places the overflow at the html level, unless else is specified. Therefore, we use the documentElement property for these browsers\n        const height = document.getElementById('north').clientHeight;\n        body.scrollLeft = 0;\n        body.scrollTop = height+1700;\n        html.scrollLeft = 0;\n        html.scrollTop = height+1700;\n    }\n    const currentConditions = () => {\n        const body = document.body; // For Safari\n        const html = document.documentElement; // Chrome, Firefox, IE and Opera places the overflow at the html level, unless else is specified. Therefore, we use the documentElement property for these browsers\n        body.scrollLeft = 0;\n        body.scrollTop = 25;\n        html.scrollLeft = 0;\n        html.scrollTop = 25;\n        const localTide = Number(JSON.parse(localStorage.getItem(\"tideData\")).data[JSON.parse(localStorage.getItem(\"tideData\")).data.length-1].v).toFixed(1);\n        const waterLevel = (tideNow.data !== undefined) ? Number(tideNow.data[tideNow.data.length - 1].v).toFixed(1) : localTide;\n        const getCurrentTide = (waterLevel > 3) ? \"high\" : (waterLevel < 2) ? \"low\" : \"medium\";\n        //localStorage.setItem('tide', getCurrentTide);\n        localStorage.setItem('height', waterLevel);\n        setTide(getCurrentTide);\n        setWindStatus(localStorage.getItem(\"wind\"))\n    }\n    const conditionsEntry = () => {\n        const body = document.body; // For Safari\n        const html = document.documentElement; // Chrome, Firefox, IE and Opera places the overflow at the html level, unless else is specified. Therefore, we use the documentElement property for these browsers\n        body.scrollLeft = 0;\n        body.scrollTop = 740;\n        html.scrollLeft = 0;\n        html.scrollTop = 740;\n    }\n    const sortedNorthSpots = () => {\n        const latitude = (status.latitude !== undefined) ? status.latitude : 33.079940;\n        const north = [];\n        locations().forEach((item) => {\n            if (latitude < item.latitude) {\n                north.push(item);\n            }\n        });\n        localStorage.setItem('scrollIndex', north.length)\n        const northLocations = () => north.map((item) => getMatchingLocation(item));\n        return northLocations;\n    }\n    const sortedSouthSpots = () => {\n        const latitude = (status.latitude !== undefined) ? status.latitude : 33.079940;\n        const south = [];\n        locations().forEach((item) => {\n            if (latitude > item.latitude) {\n                south.push(item);\n            }\n        });\n        const southLocations = () => south.map((item) => getMatchingLocation(item));\n        return southLocations;\n    }\n    // eslint-disable-next-line\n    const sortedSpots = () => {\n        const latitude = (status.latitude !== undefined) ? status.latitude : 33.079940;\n        const north = [];\n        const south = [];\n        locations().forEach((item) => {\n            //console.log(`${item.name} current ${latitude} > item: ${item.latitude}`)\n            if (latitude > item.latitude) {\n                south.push(item);\n            } else {\n                north.push(item);\n            }\n        });\n        localStorage.setItem('scrollIndex', north.length)\n        /*\n        setStatus(prevState => ({\n            ...prevState,\n            scrollIndex: localStorage.getItem('scrollIndex')\n        }));\n        */\n        const northLocations = north.map((item) => getMatchingLocation(item));\n        const southLocations = south.map((item) => getMatchingLocation(item))\n        const sorted = north.concat(south);\n        //console.log(`sortedSpots =>\\nsortedNorth: ${JSON.stringify(north,null,2)}`)\n        //console.log(`sortedSpots =>\\nsortedSouth: ${JSON.stringify(south,null,2)}`)\n        const sortedLocations = sorted.map((item) => getMatchingLocation(item));\n        return <div>\n                <div id='north' className='p-10 r-10 glassy mb-1'>\n                    {northLocations}<br/>north\n                </div>\n                <div className='p-10 r-10 glassy'>\n                    south<br/>\n                    {southLocations}\n                </div>\n            </div>;\n    }\n    const matchingLocations = locations().map((item) => getMatchingLocation(item));\n    //localStorage.setItem('locations', JSON.stringify(locations()))\n    //console.log(`WaveFinder => \\nlocations: ${JSON.stringify(locations(), null, 2)}`)\n    // eslint-disable-next-line\n    const setWindStatus = (selected) => {\n        localStorage.setItem('windDirection', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            windDirection: selected\n        }));\n    }\n    const tideButton = () => {\n        return (\n            <div className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                <GetMatchIcon kind='tide' status={status}/>\n                Tide\n            </div>\n        )\n    }\n    const windButton = () => {\n        return (\n            <div className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                <GetMatchIcon kind='wind' status={status}/>\n                Wind\n            </div>\n        )\n    }\n    const swell1Button = () => {\n        return (\n            <div className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                <GetMatchIcon kind='swell1' status={status}/>\n                Swell1\n            </div>\n        )\n    }\n    const swell2Button = () => {\n        return (\n            <div className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                <GetMatchIcon kind='swell2' status={status}/>\n                Swell2\n            </div>\n        )\n    }\n    const repositionButton = () => {\n        return (\n            <div onClick={() => setScroll()} className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                Reposition\n            </div>\n        )\n    }\n    const conditionsButton = () => {\n        return (\n            <div onClick={() => conditionsEntry()} className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                Conditions\n            </div>\n        )\n    }\n    const currentButton = () => {\n        return (\n            <div onClick={() => currentConditions()} className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                Current\n            </div>\n        )\n    }\n    return (\n        <div className='App-content fadeIn mt--30'>\n            <Geolocator currentPositionExists={currentPositionExists} returnCurrentPosition={updateCurrentLocation}/>\n            <div className='white'>\n                <ConditionsDashboard tideDisplay={tideDisplay} setWind={setWind} />\n                <ConditionsContext.Provider value={status}>\n                    <ConditionsSelectors \n                        setTide={setTide}\n                        setWind={setWind}\n                        setWindStatus={setWindStatus}\n                        handleTideCheck={handleTideCheck}\n                        handleTideSelection={handleTideSelection}\n                        handleWindCheck={handleWindCheck} \n                        handleSwellCheck={handleSwellCheck}\n                        handleSwell1Selection={handleSwell1Selection}\n                        handleSwell2Selection={handleSwell2Selection}\n                        handleSwell1Angle={handleSwell1Angle}\n                        handleSwell2Angle={handleSwell2Angle}\n                        handleSwell1Height={handleSwell1Height}\n                        handleSwell2Height={handleSwell2Height}\n                        handleSwell1Interval={handleSwell1Interval}\n                        handleSwell2Interval={handleSwell2Interval}\n                        handleStarSelection={handleStarSelection}\n                        handleDistanceSelection={handleDistanceSelection}\n                        pause={pause}\n                        setStatus={setStatus}\n                        tideNow={tideNow}\n                        data={data} \n                        tideDisplay={tideDisplay}\n                    />\n                </ConditionsContext.Provider>\n                <div className='mt-10 mb-20'>\n                    <div className='m-5'><span className='color-neogreen bold'>{(getCount() === 1) ? `1 wave` : `${count} waves`}</span> out of {locations().length}</div>\n                    <div className='m-5'>are in a <span className='color-neogreen bold'>{status.distance}</span> mile radius</div>\n                    <div className='m-5'>and prefer <span className='color-neogreen bold'>{status.swell1Direction} </span>and <span className='color-orange bold '>{status.swell2Direction} </span>swell </div>\n                    <div className='m-5'>with a <span className='color-neogreen bold'>{localStorage.getItem('height')}' {localStorage.getItem('tide')} </span>tide and {localStorage.getItem('windDirection')} winds.</div>\n                </div>\n                <Sunset view='simple'/>\n                {sortedSpots()}\n                <WaveUtils status={status} item={status} updateLocations={updateLocations}></WaveUtils>\n                <div className='flexContainer bt-15'>\n                    <div className='flex3Column'>{currentButton()}</div>\n                    <div className='flex3Column'>{conditionsButton()}</div>\n                    <div className='flex3Column'>{repositionButton()}</div>\n                </div>\n                {/*\n                    <div className='flexContainer t-50 mt-10'>\n                        <div className='flex4Column'>{swell1Button()}</div>\n                        <div className='flex4Column'>{swell2Button()}</div>\n                        <div className='flex4Column'>{tideButton()}</div>\n                        <div className='flex4Column'>{windButton()}</div>\n                    </div>\n                */}\n            </div> \n        </div>  \n    )\n}\nexport default WaveFinder;","/Users/js/Dev/my-first-reactor/src/components/blog/PhotoBlog.js",[],"/Users/js/Dev/my-first-reactor/src/components/music/Player.js",[],"/Users/js/Dev/my-first-reactor/src/reducers/authReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/Debouncer.js",[],"/Users/js/Dev/my-first-reactor/src/components/forms/FormEssay.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/SlideShow.js",["688","689","690"],"import React, { useEffect, useState } from 'react';\n\nimport useCurrentTime from './useCurrentTime.js';\n\nconst SlideShow = () => {\n    const [ time ] = useCurrentTime();\n    const times = [0, 6, 12, 18];\n    const getHourIndex = (hour) => {\n        const sortedTimes = times.sort((a, b) => a - b);\n        let hourIndex = sortedTimes.findIndex((time) => time > hour+1);\n        if (hourIndex === -1) hourIndex = sortedTimes.length;\n        \n        return hourIndex-1;\n    };\n    const getDaysInMonth = () => {\n        const year = time.year;\n        const month = time.month + 1; // Adding 1 because months are zero-based\n        const firstDayOfNextMonth = new Date(year, month, 1);\n        const lastDayOfCurrentMonth = new Date(firstDayOfNextMonth - 1);\n        return lastDayOfCurrentMonth.getDate();\n    };\n    const getDaysInLastMonth = () => {\n        const year = time.year;\n        const month = time.month-1; // Adding 1 because months are zero-based\n        const firstDayOfLastMonth = new Date(year, month, 1);\n        const lastDayOfLastMonth = new Date(firstDayOfLastMonth - 1);\n        return lastDayOfLastMonth.getDate();\n    };\n                                \n    console.log(`SlideShow => time.hours: ${time.hours} \\nmonth long: ${time.monthLong} \\nmonth: ${time.month} \\nday: ${time.date} \\ndays this month: ${getDaysInMonth()} \\ndays last month: ${getDaysInLastMonth()}`);\n    const images = [];\n    for (let x=1;x<=90;x++) {\n        if (x<31) {\n            images.push({ \"image\": \"http://slcharts01.cdn-surfline.com/charts/socal/local/socal_large_\"+x+\".png\" });\n        } else if (x < 61) {\n            images.push({ \"image\": \"http://slcharts01.cdn-surfline.com/charts/nbaja/puntabaja/nearshore/puntabaja_large_\"+(x-30)+\".png\" });\n        } else {\n            images.push({ \"image\": \"http://slcharts01.cdn-surfline.com/charts/sbaja/local/sbaja_large_\"+(x-60)+\".png\" });\n        }\n    };\n    const [status, setStatus] = useState({\n        nextMonthStatus: false,\n        day: time.date,\n        month: time.month,\n        hourIndex: getHourIndex(time.hours),\n        monthLong: time.monthLong,\n        slideShow: true,\n        index: 0,\n        images: images,\n        url1: images[0].image,\n        url2: images[30].image,\n        url3: images[60].image\n    });\n    useEffect(() => {\n       const getImage = () => {\n            //console.log(`status.index: ${status.index} slideShow: ${status.slideShow}`)\n            if (status.slideShow) {\n                const i = (status.index === 29) ? 1 : status.index+1; \n                const isBack = () => ((i === status.index+1) || (status.index === 29)) ? false : true;        \n                const indexMinusOne = () => (status.hourIndex - 1);\n                const indexPlusOne = () => (status.hourIndex + 1); \n                const goBackIndex = () => ((indexMinusOne() > 0) ? indexMinusOne() : 3);\n                const goFowardIndex = () => ((indexPlusOne() <= 3) ? indexPlusOne() : 0)\n                const goBackDay = () => ((status.day === 1) ? getDaysInLastMonth() : status.day-1);\n                const getHourIndex = () => (isBack()) ? goBackIndex() : goFowardIndex();\n                //console.log(`getImage => imgArray[${i}].image: ${status.images[i].image}`)\n                console.log(`(status.day: ${status.day} === getDaysInMonth(): ${getDaysInMonth()})`)\n                let thisDay = (getHourIndex() > status.hourIndex) ? status.day : ((isBack()) ? goBackDay() : ((status.day === getDaysInMonth()) ? 1 : status.day+1));\n                thisDay = (i === 1) ? ((time.hours >= 18) ? (time.date+1) : time.date) : thisDay;\n                const nextMonthStatus = ((i>1) && ((status.nextMonthStatus && ((thisDay === (status.day+1))||(thisDay === 1)||(thisDay === status.day))) || (!status.nextMonthStatus && (thisDay === 1)))) ? true : false;\n                //((status.nextMonthStatus && (thisDay === (status.day+1))) || (!status.nextMonthStatus && (thisDay === 1))) ? true : false,\n        \n                console.log(`thisDay: ${thisDay}`)\n                setStatus(prevState => ({\n                    ...prevState,\n                    day: thisDay,\n                    nextMonthStatus: nextMonthStatus,\n                    month: (!status.nextMonthStatus && (status.day > getDaysInMonth())) ? `0${Number(status.month)+1}` : status.month,\n                    monthLong: time.monthLong,\n                    //monthLong: (status.day === getDaysInMonth()) ? time.monthNextLong : time.monthLong,\n                    monthNextLong: time.monthNextLong,\n                    hourIndex: getHourIndex(),\n                    index: i,\n                    url1: status.images[i].image,\n                    url2: status.images[i+30].image,\n                    url3: status.images[i+60].image\n                }))\n            }\n        }   \t\t\n        const timerID = setInterval(\n            () => getImage(),\n            700\n        );\n        return function cleanUp () {\n            clearInterval(timerID);\n        }\n    },[status]);\n    const toggleSlideShow = (e) => {\n        e.persist();\n        const position = () => e.clientX;\n        const width = () => window.innerWidth;\n        const back = () => width()/3;\n        const halfway = () => width()/2;\n        const next = () => width() - back();\n        const getDirection = () => (position() > next()) ? 'next' : 'back';\n        const isNext = () => (position() > next()) ? true : false;\n        const isBack = () => (position() < back()) ? true : false;\n        const isCenter = () => ((position() > back()) && (position() < next())) ? true : false;\n        console.log(`$click\\nwidth: ${width()}\\nhalfway: ${halfway()}\\nxpos: ${position()}\\ndirection: ${getDirection()}\\nback: ${back()}\\nnext: ${next()}`)\n        const updateStatus = () => ((isNext() || isBack()) && !isCenter() ) ? false : !status.slideShow;\n        const getIndex = () => (isBack()) ? (status.index - 1) : (status.index + 1);\n        const i = (getIndex() === 30) ? 1 : (getIndex() === 0) ? 29 : getIndex();\n        const previousIndex = () => (status.hourIndex - 1);\n        const nextIndex = () => (status.hourIndex + 1);\n        const isPreviousIndexGreaterThanOne = () => (previousIndex > 0);\n        let getHourIndex = () => (isBack()) ? (isPreviousIndexGreaterThanOne() ? previousIndex : 3) : ((nextIndex() <= 3) ? nextIndex() : 0);\n        const goBackDay = () => ((status.day === 1) ? getDaysInLastMonth() : status.day-1);\n        const isHourIndexGreater = () => (getHourIndex() > status.hourIndex);\n        const addDay = () => ((status.day === getDaysInMonth()) ? 1 : status.day+1);\n        let thisDay = isHourIndexGreater() ? status.day : ((isBack()) ? goBackDay() : addDay());\n        //let thisDay = (getHourIndex() > status.hourIndex) ? status.day : ((isBack()) ? goBackDay() : ((status.day === getDaysInMonth()) ? 1 : status.day+1));\n        thisDay = (i === 1) ? ((time.hours >= 18) ? (time.date+1) : time.date) : thisDay;\n        const nextMonthStatus = ((i>1) && ((status.nextMonthStatus && ((thisDay === (status.day+1))||(thisDay === 1)||(thisDay === status.day))) || (!status.nextMonthStatus && (thisDay === 1)))) ? true : false;\n        //console.log(`getImage => imgArray[${i}].image: ${status.images[i].image}`)\n        setStatus(prevState => ({\n            ...prevState,\n            index: i,\n            hourIndex: getHourIndex(),\n            slideShow: updateStatus(),\n            nextMonth: ((i>1) && (status.day === getDaysInMonth())) ? true : false,\n            monthLong: (nextMonthStatus) ? time.monthNextLong : time.monthLong,\n            monthNextLong: time.monthNextLong,\n            nextMonthStatus: nextMonthStatus,\n            day: thisDay,\n            month: (!status.nextMonthStatus && (status.day > getDaysInMonth())) ? `0${Number(status.month)+1}` : status.month,\n            url1: status.images[i].image,\n            url2: status.images[i+30].image,\n            url3: status.images[i+60].image\n        }))\n    }\n    const displayHour = Number(times[Number(status.hourIndex)]);\n    const displayDebug = () => <div className=\"color-dark p-20 bold bigHeader bg-dkGreen r-5 m-20 glassy\">{time.hours} -- {times[Number(status.hourIndex)]}Z{status.day}{String(status.monthLong).substring(0,3).toUpperCase()}{time.year}</div>\n    const displayDayDebug = () => <div className=\"mt-100 color-dark p-20 bold bigHeader bg-dkGreen r-5 m-20 glassy\">{status.index} - {String(status.nextMonthStatus)} - {String(status.monthLong).substring(0,3).toUpperCase()} {status.day} {(displayHour > 12) ? (displayHour-12) : displayHour}:00{(displayHour >= 12) ? 'PM' : 'AM'}</div>    \n    const displayDay = () => <div className=\"mt-100 color-dark p-20 bold bigHeader bg-dkGreen r-5 m-20 glassy\">\n                                <div className=\"p-5\">{String(status.monthLong).substring(0,3).toUpperCase()} {status.day}</div>\n                                <div className=\"p-5\">{(displayHour > 12) ? (displayHour-12) : displayHour}:00{(displayHour >= 12) ? 'PM' : 'AM'}</div>\n                            </div>    \n    return (\n        <div className='mt--30'>\n            <div className='fixed lt-0 top-100'>            \n                {displayDay()}\n            </div>\n            <img id=\"slideshow1\" className=\"width-100-percent\" src={status.url1} onClick={(e) => toggleSlideShow(e)} alt=\"California Sur Swell\" />\n            <br/>\n            <img id=\"slideshow1\" className=\"width-100-percent\" src={status.url2} onClick={(e) => toggleSlideShow(e)} alt=\"Baja Norte Swell\" />\n            <br/>\n            <img id=\"slideshow1\" className=\"width-100-percent\" src={status.url3} onClick={(e) => toggleSlideShow(e)} alt=\"Baja Sur Swell\" />\n        </div>\n    )\n}\n\nexport default SlideShow;","/Users/js/Dev/my-first-reactor/src/components/utils/Photos.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/PhotoSequence.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/Videos.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/WikiSearch.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/Header.js",["691"],"import React, { useState } from 'react';\nimport Loader from '../utils/Loader.js';\nimport TextColorizer from '../utils/TextColorizer.js';\nimport close from '../../assets/images/menuClose.png';\nimport getKey from '../utils/KeyGenerator.js';\n// eslint-disable-next-line\nimport { Link } from 'react-router-dom';\nimport { navClassesClosed, navClassesOpen, navClassesClose } from './NavClasses.js';\nimport { CgMenuGridO } from \"react-icons/cg\";\nimport Menu from './Menu.js';\nimport GoogleAuth from './GoogleAuth.js';\n\nconst Header = ({company, width, isMotionOn, isSignedIn, setSignIn}) => {\n    //console.log(`Header => width: ${width}`)\n    //console.log(`Header => isSignedIn: ${isSignedIn}`)\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [initialized, setInitialized] = useState(false);\n    const initialize = () => setInitialized(true);\n    const goHome = () => window.location.pathname = \"/reactor/Home\";\n    const toggleMenu = () => setMenuOpen(!menuOpen);\n    const displayMenu = (event) => {\n        toggleMenu();\n        initialize();\n    }\n    const closeMenu = (event) => {\n        setMenuOpen(false);\n    }\n    const menuClick = (event) => (event.target.nodeName === \"SPAN\") ? goHome() : displayMenu();\n    const logoButton = (label) => <Link key={getKey(\"link\")} to=\"Home\"><div className=\"navButton logoButton\">{label}</div></Link>;\n    const closeButton = <button className=\"navButton menuPad\" onClick={menuClick}><img src={close} alt=\"close menu\" /></button>;\n    const burgerButton = <button className=\"navButton menuPad mt-2 p-10 mr-20\" onClick={menuClick}><h2 className='hover'><CgMenuGridO alt=\"open menu\"/></h2></button>;\n    const mobileLogo = <TextColorizer class='navBranding mt-7' text={company}/>;\n    const closedClasses = (initialized) ? navClassesClose : navClassesClosed;\n    const navClasses = (menuOpen) ? navClassesOpen : closedClasses;\n    const getMenuButton = (menuOpen) ? closeButton : burgerButton;\n    const path = window.location.pathname.toLocaleLowerCase();\n    const isHomePage = (path === '/reactor/home' || path === '/reactor/') ? true : false;\n    const homepageHeader = <div className=\"pt-70\">\n                        <Loader isMotionOn={isMotionOn}/>\n                        <TextColorizer class='bigHeader' text={company}/>\n                    </div>;\n    const Branding = () => {\n        if (isHomePage === true) { return homepageHeader }\n        return <div className='mt-88'></div>\n    };\n    const backgroundClass = (isMotionOn) ? 'rgb-stripe' : 'rgb-stripeStopped';\n    const Background = () => <div className={backgroundClass}></div>;\n    const hamburgerOpen = <div>\n                            <div className=\"flexContainer width-100-percent\">\n                                <div className=\"flex3ColumnLeft\">{logoButton(mobileLogo)}</div>\n                                <div className=\"flex3Column\"></div>\n                                <div className=\"flex3ColumnRight\">{getMenuButton}</div>\n                            </div>\n                            <div className=\"t-50 lowerBorder bg-dark width-100-percent h-scroll\">\n                                <Menu closeMenu={closeMenu} />\n                            </div>\n                        </div>\n    const hamburgerClosed = <div>\n                                <div className=\"flexContainer width-100-percent\">\n                                    <div className=\"flex3ColumnLeft\">{logoButton(mobileLogo)}</div>\n                                    <div className=\"flex3Column centeredContent pb-3\"></div>\n                                    <div className=\"flex3ColumnRight\">{burgerButton}</div>\n                                </div>\n                                <div className=\"t-collapse t-50 lowerBorder bg-dark width-100-percent h-scroll\">\n                                    <Menu closeMenu={closeMenu}/>\n                                </div>\n                        </div>\n                            \n    const hamburgerNav = (menuOpen === true) ? hamburgerOpen : hamburgerClosed;\n        \n    //console.log(`menuOpen: ${menuOpen}`);\n        \n    return (\n        <div className=\"App-header\">\n            <div className={navClasses}>{hamburgerNav}</div>\n            <Background />\n            <div className=\"flexContainer header width-100-percent\">\n                <div className=\"flex3Column bg-green\" />\n                <div className=\"flex3Column bg-yellow\"></div>\n                <div className=\"flex3Column bg-red\" />\n            </div>\n            <Branding />\n        </div>\n    );\n}\n\nexport default Header;","/Users/js/Dev/my-first-reactor/src/components/site/Footer.js",["692"],"import React, { useEffect, useState } from 'react';\nimport Toggle from '../utils/Toggle.js';\nimport LoginControl from '../utils/LoginControl.js';\nimport CopyrightText from '../functional/CopyrightText.js';\nimport js from '../../assets/images/js.png';\nimport Loader from '../utils/Loader.js';\nimport GoogleAuth from './GoogleAuth.js';\nimport CountrySelector from './CountrySelector.js';\n\nconst Footer = ({ isSignedIn, isMotionOn, setMotion, setSignIn, setCountry }) => {\n    \n    const [signedIn, setSignedIn] = useState(\n        isSignedIn !== null ? isSignedIn : false || false\n    );\n    \n    const percent =\n        window.innerWidth < 700\n        ? 'twentyfivePercent mt--70 mb--70'\n        : 'fiftyPercent mt--30 mb--40';\n    \n        const loaderTag = (\n        <div className={percent}>\n        <Loader isMotionOn={isMotionOn} />\n        </div>\n    );\n\n    useEffect(() => {\n        console.log(`Footer => useEffect => isSignedIn: ${isSignedIn}`);\n        setSignedIn(isSignedIn !== null ? isSignedIn : false);\n    }, [isSignedIn]);\n\n    const path = window.location.pathname.toLocaleLowerCase();\n    const isPageSurfLog =\n        path.includes('surflog') || window.innerHeight < 600 ? true : false;\n    const isPageHome =\n        path.includes('home') || path === '/reactor' || path === '/reactor/'\n        ? true\n        : console.log(`path: ${path}`);\n    const bottom = isPageSurfLog || !isPageHome ? 'b-collapse' : 'bt-0';\n    const footerClasses =\n        bottom +\n        ' fixed subfooter flexContainer width-100-percent responsive height200';\n    console.log(`Footer 2 =>\\nisSignedIn: ${isSignedIn}\\nsignedIn: ${signedIn}`);\n   return (\n        <div>\n            <div id='footer' className={footerClasses}>\n                <div className='flex3Column responsive bg-dkGreen m-1 color-neogreen centeredContent'>\n                <CountrySelector setCountry={setCountry} />\n                <GoogleAuth isSignedIn={signedIn} setSignIn={setSignIn} />\n                </div>\n                <div className='flex3Column responsive bg-dkYellow m-1 color-yellow'>\n                {loaderTag}\n                <img className='mb-1' src={js} alt='js' />\n                <CopyrightText />\n                </div>\n                <div className='flex3Column responsive bg-dkRed m-1 color-red centeredContent'>\n                <Toggle isMotionOn={isMotionOn} setMotion={setMotion} id='toggle' />\n                </div>\n            </div>\n            <div className='flexContainer width-100-percent footer fixed'>\n                <div className='flex3Column bg-green' />\n                <div className='flex3Column bg-yellow' />\n                <div className='flex3Column bg-red' />\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;\n","/Users/js/Dev/my-first-reactor/src/components/utils/Accordion.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/ScrollToTop.js",[],["693","694"],"/Users/js/Dev/my-first-reactor/src/components/hooks/Todos.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/history.js",[],"/Users/js/Dev/my-first-reactor/src/components/hooks/Counter.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js",["695","696","697"],"import React, { useState } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\n\nconst ScoreKeeper = () => {\n    \n    const initPlayers = [];\n    const initScores = localStorage.getItem('twoPlayerScores') || [0,0];\n    const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci'];\n    const winners = [5, 10, 11, 15, 20, 21];\n    const dominoWinners = [50, 100, 150, 200];\n    const [ players, setPlayers ] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n    //const [ editStatus, setEdit ] = useState(false);\n    const [ game, setGame ] = useState( localStorage.getItem('game') || 'standard');\n    const [ winner, setWinner ] = useState( Number(localStorage.getItem('winner')) || 21);\n    const [ twoPlayerScores, setTwoPlayerScores ] = useState(initScores);\n    //const [ twoPlayerWinner, setTwoPlayerWinner ] = useState(null);\n    const darts = (game !== 'darts') ? false : true;\n    const dominos = (game !== 'dominos') ? false : true;\n    const golf = (game !== 'golf') ? false : true;\n    const cricketKey = (player, index) => `${player}Cricket${index}`;\n    const golfKey = (player, index) => `${player}Golf${index}`;\n    const dominoKey = (player, index) => `${player}Domino${index}`;\n    //const dartsScores = ['-','/', 'X', 'O'];\n    const dartScoring = [20,19,18,17,16,15,'B'];\n    const golfScoring = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18];\n    const golfPars = [4,3,3,5,4,4,3,3,5,5,4,5,4,5,4,4,4,5];\n    const dominoScoring = [50,100,150,200];\n    const [ gameStatus, setGameStatus ] = useState( localStorage.getItem('gameStatus') || 'inProgress');\n    \n    if (darts && winner !== 21) {\n        localStorage.setItem('winner', 21);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    /*\n    if (dominos && winner !== 200) {\n        localStorage.setItem('winner', 200);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    */\n    const getDartTotal = (player) => {\n        let total = 0;\n        const score = (index) => localStorage.getItem(cricketKey(player,index));\n        const addToTotal = (value) => total = total + value;\n        dartScoring.map((target,index) => addToTotal(Number(score(index))));\n        console.log(`getDartTotalplayer=> ${player}: ${total}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const getGolfTotal = (player) => {\n        if (!golf) return;\n        let total = 0;\n        const score = (index) => localStorage.getItem(golfKey(player,index));\n        const addToTotal = (value) => total = total + value;\n        golfScoring.map((target,index) => {\n                console.log(`getGolfTotal=> ${golfKey(player,index)} ${index}: ${total}`)\n                addToTotal(Number(score(index)))\n            }\n        );\n        //console.log(`getGolfTotalplayer=> ${player}: ${total}`)\n        return total;\n    }\n    const getDominoTotal = (player) => {\n        let total = 0;\n        const score = (index) => localStorage.getItem(dominoKey(player,index));\n        const addToTotal = (value) => total = total + value;\n        dominoScoring.map((target,index) => addToTotal(Number(score(index))));\n        //console.log(`getDominoTotalplayer=> ${player}: ${total}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const updateTwoPlayerScores = (player, index, score) => {\n        const newScores = [];\n        players.map((player,index) => newScores.push(getDartTotal(player)));\n        //console.log(`updateTwoPlayerScores=>\\nplayer: ${player}\\nindex: ${index}\\nscore: ${score}\\nnewScore: ${JSON.stringify(newScores)}`)\n        //console.log(`${players[0]}: ${twoPlayerScores[0]}\\n${players[1]}: ${twoPlayerScores[1]}`)\n        //const isWinner = (score) => (score >= winner) ? true : false;\n        //players.map((player, index) => (isWinner(newScores[index])) ? setTwoPlayerWinner(index) : setTwoPlayerWinner(3));\n        localStorage.setItem('winner', twoPlayerScores);\n        localStorage.setItem('twoPlayerScores', twoPlayerScores);\n        setTwoPlayerScores(newScores);\n    }\n    //console.log(`players: ${players}`)\n    const set21 = () => {\n        if (darts) {\n            localStorage.setItem('winner', 21);\n            setWinner(Number(localStorage.getItem('winner')));\n        }\n    }\n    const selectGame = (groupTitle, label, selected) => {\n        localStorage.setItem('game', selected)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setGame(localStorage.getItem('game'));\n        set21();\n    }\n    const selectWinner = (groupTitle, label, selected) => {\n        localStorage.setItem('winner', selected)\n        localStorage.setItem('gameStatus', 'gameOver');\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const clear = (event) => {\n        alert('Note was cleared: ' + event.value);\n        localStorage.setItem('players', JSON.stringify(initPlayers));\n        localStorage.setItem('gameStatus', 'inProgress');\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n    const reset = (event) => {\n        //alert('Note was cleared: ');\n        //const cricketKey = (player,index) => `${player}Cricket${index}`;\n        //const golfKey = (player,index) => `${player}Golf${index}`;\n        //const dominoKey = (player,index) => `${player}Domino${index}`;\n        let id = (player,index) => (darts) ? cricketKey(player,index) : player;\n        id = (player,index) => (dominos) ? dominoKey(player,index) : player;\n        id = (player,index) => (golf) ? golfKey(player,index) : player;\n        const initValue = 0;\n        if (darts) {\n            players.map((player) => dartScoring.map((target,index) => localStorage.setItem(id(player, index), initValue)));\n        } else if (dominos) {\n            //players.map((player) => dominoScoring.map((target,index) => localStorage.setItem(id(player, index), initValue)));\n            players.map((player) => dominoScoring.map((target,index) => localStorage.setItem(dominoKey(player, index), initValue)));\n        } else {\n            players.map((player, index) => localStorage.setItem(id(player, index), initValue));\n        }\n        localStorage.setItem('gameStatus', 'inProgress');\n        getScore();\n    }\n    const addPlayer = (event) => {\n        //alert('Note was cleared: ' + value);\n        const newPlayer = prompt('Enter new name', '');\n        let newPlayers = players;\n        newPlayers.push(newPlayer)\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        //getScore();\n    }\n    /*\n    const edit = (event) => {\n        setEdit(!editStatus);\n    }\n    */\n    const editPlayer = (index) => {\n        //console.log(`edit: ${index}`);\n        const newPlayer = prompt('Enter new name', players[index]);\n        let newPlayers = players;\n        newPlayers[index] = newPlayer;\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        getScore();\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n    const deletePlayer = (index) => {\n        //console.log(`state: ${JSON.stringify(state,null,2)}`)\n        //console.log(`delete at: ${index}`)\n        let newPlayers = players;\n        newPlayers.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        //getScore();\n    }\n    const scorecards = () => {\n        //console.log(`build Scorecards`)\n        const scorecard = (player, index, score) => {\n            if (darts) {\n                console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n                return <CricketScore \n                        game={game} \n                        player={player} \n                        index={index} \n                        editPlayer={editPlayer} \n                        deletePlayer={deletePlayer}\n                        updateTwoPlayerScores={updateTwoPlayerScores}\n                        winner={winner}\n                        key={getKey(player)}\n                    />\n            }\n            if (dominos) {\n                console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n                return <Dominos \n                        game={game} \n                        player={player} \n                        index={index}\n                        scoreTotal={score}\n                        editPlayer={editPlayer} \n                        deletePlayer={deletePlayer}\n                        getDominoTotal={getDominoTotal}\n                        updateTwoPlayerScores={updateTwoPlayerScores}\n                        winner={winner}\n                        key={getKey(player)}\n                    />\n            }\n            if (golf) {\n                console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n                return <ScoreCard \n                        game={game} \n                        player={golfPars[index]} \n                        index={index} \n                        editPlayer={editPlayer} \n                        deletePlayer={deletePlayer}\n                        updateTwoPlayerScores={updateTwoPlayerScores}\n                        winner={winner}\n                        key={getKey(player)}\n                    />\n            }\n            console.log(`${game} - scorecard => player:${player} index: ${index} score: ${score}`)\n            return <ScoreCard \n                        game={game} \n                        player={player} \n                        index={index} \n                        editPlayer={editPlayer} \n                        deletePlayer={deletePlayer}\n                        updateTwoPlayerScores={updateTwoPlayerScores}\n                        winner={winner}\n                        key={getKey(player)}\n                    />\n        }\n        const renderedItems = players.map((player, index) => scorecard(player, index));\n\n        const dartScores = dartScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n                                                                    <div className='flex3Column p-5'>\n                                                                        {scorecard(players[0], index)}\n                                                                    </div>\n                                                                    <div className='p-20 r-5 font50 color-yellow m-auto'>\n                                                                        {score}\n                                                                    </div>\n                                                                    <div className='flex3Column p-5'>\n                                                                        {scorecard(players[1], index)}\n                                                                    </div>\n                                                                </div>);\n        \n        const golfScores = golfScoring.map((hole, index) => <div className='flexContainer width-100-percent' key={getKey(hole)}>\n                                                                <div className='flex3Column p-5'>\n                                                                    {scorecard(golfPars[index], index)}\n                                                                </div>\n                                                                <div className='p-20 r-5 font50 color-yellow m-auto'>\n                                                                    {hole}\n                                                                </div>\n                                                                <div className='flex3Column p-5'>\n                                                                    {scorecard(golfPars[index], index)}\n                                                                </div>\n                                                            </div>);\n\n\n        const dominoScores = dominoScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n                                                                    <div className='flex2Column10Percent p-5'>\n                                                                        {scorecard(players[0], index, score)}\n                                                                    </div>\n                                                                    <div className='p-20 r-5 font50 color-yellow m-auto'>\n                                                                        {score}\n                                                                    </div>\n                                                                    <div className='flex2Column10Percent p-5'>\n                                                                        {scorecard(players[1], index, score)}\n                                                                    </div>\n                                                                </div>);\n\n        const setGameOver = (playerIndex) => {\n            localStorage.setItem('gameStatus', 'gameOver');\n            localStorage.setItem(`player${playerIndex}`, 'winner');\n            //setGameStatus('gameOver');\n            return true;\n        }\n        const setGameInProgress = (playerIndex) => {\n            if (playerIndex>0) {\n                if (localStorage.getItem(`player${playerIndex-1}`) !== 'winner') {\n                    localStorage.setItem('gameStatus', 'inProgress')\n                }\n            }\n            localStorage.setItem(`player${playerIndex}`, 'loser');\n            //setGameStatus('inProgress');\n            return false;\n        }\n        const isWinner = (playerIndex) => (getDartTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n        const isDominoWinner = (playerIndex) => (getDominoTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    \n        const dartClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        const dominoClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isDominoWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n\n        const dartScoreboard = <React.Fragment>\n                                    <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                                        <div className={dartClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getDartTotal(players[0])}</div></div>\n                                        <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                                        <div className={dartClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getDartTotal(players[1])}</div></div>\n                                    </div>\n                                    {dartScores}\n                                </React.Fragment>\n        \n        const golfScoreboard = <React.Fragment>\n                                    <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                                        <div className={dartClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getGolfTotal(players[0])}</div></div>\n                                        <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                                        <div className={dartClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getGolfTotal(players[1])}</div></div>\n                                    </div>\n                                    {golfScores}\n                                </React.Fragment>\n        \n        const dominoScoreboard = <React.Fragment>\n                                    <div className='flexContainer glassy width-100-percent mb-20 bg-green r-10'>\n                                        <div className={dominoClass(0)}>{players[0]}:<div className='color-yellow mt-10'>{getDominoTotal(players[0])}</div></div>\n                                        <div className='p-20 bg-yellow navBranding w-200'>vs</div>\n                                        <div className={dominoClass(1)}>{players[1]}:<div className='color-yellow mt-10'>{getDominoTotal(players[1])}</div></div>\n                                    </div>\n                                    {dominoScores}\n                                </React.Fragment>\n                    \n        if (darts) return dartScoreboard\n        if (dominos) return dominoScoreboard\n        if (golf) return golfScoreboard\n        else return renderedItems;\n    }\n    console.log(`localStorage => game: ${localStorage.getItem('game')}`)\n    console.log(`localStorage => gameStatus: ${localStorage.getItem('gameStatus')}`)\n    console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n    console.log(`localStorage => winner: ${localStorage.getItem('winner')}`)\n    console.log(`localStorage => twoPlayerScores: ${localStorage.getItem('twoPlayerScores')}`)\n    console.log(`localStorage => players: ${localStorage.getItem('players')}`)\n    console.log(`localStorage => player1: ${localStorage.getItem('players1')}`)\n    console.log(`localStorage => player2: ${localStorage.getItem('players2')}`)\n    \n    return (\n        <div className='fadeIn mt--30'>\n            <div className='mb-20'>\n                <Selector \n                    groupTitle='game'  \n                    label='item.description' \n                    items={games}\n                    selected={game}\n                    onChange={selectGame}\n                    fontSize='25'\n                    padding='10px'\n                    width={(darts || dominos) ? '98%' : '65%'}\n                />\n                {\n                    (darts || golf) \n                        ? <React.Fragment></React.Fragment> \n                        : <Selector \n                            groupTitle='winner'  \n                            label='i.description' \n                            items={ (dominos) ? dominoWinners : winners }\n                            selected={winner}\n                            onChange={selectWinner}\n                            fontSize='25'\n                            padding='10px'\n                            width='30%'\n                        />\n                }\n            </div>\n            {scorecards()}\n            <div className='flexContainer width-100-percent'>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 width-100-percent bg-green brdr-green color-yellow' onClick={() => addPlayer()}>add player</div>  \n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-yellow brdr-yellow color-black' onClick={() => reset()}>reset</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mt-20 mb-20 width-100-percent bg-red brdr-red color-yellow' onClick={() => clear()}>clear</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScoreKeeper;","/Users/js/Dev/my-first-reactor/src/components/hooks/Adder.js",[],"/Users/js/Dev/my-first-reactor/src/components/converter/Calculator.js",[],"/Users/js/Dev/my-first-reactor/src/components/weather/Weather.js",[],"/Users/js/Dev/my-first-reactor/src/components/context/CountryContext.js",[],"/Users/js/Dev/my-first-reactor/src/components/shop/Shop.js",["698","699","700","701"],"import React, { useState, useEffect } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport menu from '../../assets/images/menuYellow.png';\n// eslint-disable-next-line\nimport { BsFillGearFill } from \"react-icons/bs\";\nimport Selected from '../../assets/images/cart.png';\nimport Select from '../../assets/images/addToCart.png';\nimport SettingsMenu from './SettingsMenu.js';\nimport ProductEntry from './ProductEntry.js';\nimport SearchBar from '../utils/SearchBar';\nimport '../../assets/css/shop.css';\nimport debounceType from '../utils/DebouncerType.js';\nimport initData from './initData.js';\nimport InCart from '../../assets/images/inCart.png';\nimport PutInCart from '../../assets/images/putInCart.png';\nimport Selector from '../forms/FunctionalSelector.js';\n\nconst Shop = () => {\n    const [ itemEntry, setItemEntry ] = useState('');\n    const today = new Date();\n    const itemMenuDefault = ['', 'ADD INDEX', 'EDIT', 'PRICE', 'DELETE'];\n    const getTodos = () => (localStorage.getItem('vueTodos')) \n        ? JSON.parse(localStorage.getItem('vueTodos')) \n        : initData;\n    const aislesInit = ['Vons', 'Sprouts', 'Smart and Final'];\n    const getAisles = () => (localStorage.getItem('aisles') !== null) \n        ? JSON.parse(localStorage.getItem('aisles')) \n        : aislesInit;\n    const pad = (n, width, z) => {\n        //pad(10, 4) => 0010\n        z = z || '0';\n        n = n + '';\n        return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n    }\n    const getColors = (aisles) => {\n        const colors = [];\n        let aisleColor = '';\n        aisles = (aisles !== null) ? aisles : aislesInit;\n        //console.log(`getColors() => \\naisles: ${aisles}`);\n        aisles.forEach(aisle => {\n            aisleColor = Math.floor(Math.random()*16777215).toString(16).toUpperCase();\n            aisleColor = pad(aisleColor, 6);\n            //console.log(`getColors => \\naisleColor: ${aisleColor}\\naisleColorLength: ${aisleColor.length}`)\n            colors.push(`#${aisleColor}`);\n        });\n        //console.log(`getColors => colors: ${colors}`)\n        return colors;\n    }\n    const [ status, setStatus ] = useState({\n        displaySettings: false,\n        displayProductEntry: false,\n        search: '',\n        list: <div></div>,\n        fontSize: 25,\n        tax: 8.75,\n        todos: getTodos(),\n        aisles: getAisles(),\n        colors: getColors(getAisles()),\n        retrievedData: getTodos(),\n        ogTitle: '',\n        newTodoText: '',\n        total: 0, \n        taxTotal: 0, \n        items: 0, \n        totalItems: 0,\n        sortByIndex: true,\n        item: ''\n    });\n    //console.log(`todos: ${JSON.stringify(status.todos, null, 2)}`)\n    localStorage.setItem('vueTodosSaved', JSON.stringify(status.todos));\n    localStorage.setItem('vueTodos', JSON.stringify(status.todos));\n    //console.log(`vueTodosSaved(1): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`);\n    const aisleIndex = (aisle) => (status.aisles === undefined) ? 0 : status.aisles.indexOf(aisle);\n    const getColor = (aisle) => {\n        //const index = aisleIndex(aisle);\n        //console.log(`getColor => \\nindex: ${index}\\naisle: ${aisle}\\ncolors: ${status.colors}\\ncolor: ${status.colors[aisleIndex(aisle)]}`)\n        return status.colors[aisleIndex(aisle)];\n    }\n    const getInCartButton = (index) => {\n        //console.log(`getInCartButton =>\\nindex: ${index}\\ntodo: ${JSON.stringify(status.todos[index],null,2)}`)\n        return (\n            <img \n                className='inCartIcon' \n                alt='in cart' \n                src={(status.todos[index].cart) ? InCart : PutInCart} \n                onClick={() => toggleCart(index)}\n            />\n        )\n    }\n    const quantities = [0,1,2,3,4,5,6,7,8,9,10];\n    const toggleTax = (index) => {          \n        const newTodos = status.todos;   \n        newTodos.forEach(item => {\n            if (item.title === status.todos[index].title) {\n                item.tax = !status.todos[index].tax;\n            }\n        });\n        localStorage.setItem('vueTodos', JSON.stringify(newTodos));\n        localStorage.setItem('vueTodosSaved', JSON.stringify(newTodos));\n        //console.log(`vueTodosSaved(8): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`)\n        setStatus(prevState => ({\n            ...prevState,\n            todos: JSON.parse(localStorage.getItem('vueTodos')),\n            retrievedData: JSON.parse(localStorage.getItem('vueTodosSaved'))\n        }));\n        getTotal();\n    };\n    const toggleCart = (index) => {\n        const newTodos = status.todos;\n        if (newTodos[index].cart) {\n            newTodos[index].cart = false;\n        } else {\n            newTodos[index].cart = true;\n        }\n        setStatus(prevState => ({\n            ...prevState,\n            todos: newTodos\n        }));\n        getTotal();\n    };\n    const getTaxCheckBox = (todo, index) => {\n        if (todo.tax) {\n            return <input className='regular-checkbox button glassy' checked type='checkbox' id='tax' onChange={() => toggleTax(index)} />\n        } else {\n            return <input className='regular-checkbox button glassy' type='checkbox' id='tax' onChange={() => toggleTax(index)} />\n        }\n    }\n    const updateQuantity = (groupTitle, id, selected) => {\n        //console.log(`updateQuantity =>\\ngroupTitle: ${groupTitle}\\n, \\nindex: ${id}, \\nselected: ${selected}`);\n        const updatedTodos = status.todos;\n        updatedTodos.forEach((item, index) => {\n            if (id === index) {\n                item.quantity = Number(selected);\n            } else if (typeof item.quantity === 'undefined') {\n                item.quantity = quantities[1];\n            }\n        });\n        setStatus(prevState => ({\n            ...prevState,\n            todos: updatedTodos\n        }));\n        getTotal();\n        //window.location.pathname = \"/reactor/Shop\";\n    \n    };\n    const reIndex = (groupTitle, index, selectedAisle) => {\n        //console.log(`REINDEX => \\nselectedAisle: ${selectedAisle}\\nindex: ${index}`);\n        const updatedTodos = status.todos;\n        const updatedRetrievedData = JSON.parse(localStorage.getItem('vueTodosSaved'));\n        let newAisles = status.aisles || aislesInit;   \n        if (selectedAisle === 'DELETE') {\n            updatedRetrievedData.forEach(item => {\n                if (item.title === status.todos[index].title) {\n                    updatedRetrievedData.splice(index, 1);\n                }\n            })\n            localStorage.setItem('vueTodosSaved', JSON.stringify(updatedRetrievedData));\n            //console.log(`vueTodosSaved(4): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`)\n            updatedTodos.splice(index, 1);\n        } else if (selectedAisle === 'PRICE') {\n            const newPrice = prompt('Enter price:', updatedTodos[index].price);\n            updatedTodos[index].price = (newPrice !== null) ? Number(newPrice).toFixed(2) : updatedTodos[index].price;\n            updatedRetrievedData.forEach(item => {\n                if (item.title === updatedTodos[index].title) {\n                    item.price = updatedTodos[index].price;\n                    updatedTodos[index].aisle = item.aisle;\n                };\n            });\n            localStorage.setItem('vueTodosSaved', JSON.stringify(updatedRetrievedData));\n            //console.log(`vueTodosSaved(5): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')))}`);\n        } else if (selectedAisle === 'EDIT') {\n            let updatedOgTitle = status.ogTitle;\n            updatedOgTitle = updatedTodos[index].title;\n            \n            const newLabel = prompt('Enter new label:', updatedTodos[index].title);\n            updatedTodos[index].title = (newLabel !== null) ? newLabel : updatedTodos[index].title;\n            updatedRetrievedData.forEach(item => {\n                if (item.title === updatedOgTitle) {\n                    item.title = updatedTodos[index].title;\n                    selectedAisle = item.aisle;\n                };\n            });\n            updatedTodos[index].aisle = selectedAisle;\n            //updateAisles();\n            localStorage.setItem('vueTodosSaved', JSON.stringify(updatedRetrievedData));\n            //console.log(`vueTodosSaved(6): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`)\n        } else {\n            newAisles = status.aisles || aislesInit;\n            if (selectedAisle === 'ADD INDEX') {\n\n                const newAisle = prompt('Enter aisle number:', '');\n                selectedAisle = (newAisle !== null) ? newAisle : 'New';\n\n                if(newAisles.indexOf(selectedAisle) < 0){\n                    newAisles.push(selectedAisle);\n                }\n            }\n            updatedTodos[index].aisle = selectedAisle;\n            updatedRetrievedData.forEach(item => {\n                if (item.title === updatedTodos[index].title) {\n                    item.aisle = selectedAisle;  \n                }\n            });\n            localStorage.setItem('aisles', JSON.stringify(newAisles));\n            localStorage.setItem('vueTodosSaved', JSON.stringify(updatedRetrievedData));\n            localStorage.setItem('vueTodos', JSON.stringify(updatedRetrievedData));\n            //console.log(`vueTodosSaved(7): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`)\n            getTotal();\n            updateAisles(); \n            //window.location.pathname = \"/reactor/Shop\";\n        }\n        updateAisles();\n        localStorage.setItem('vueTodos', JSON.stringify(updatedTodos));\n        setStatus(prevState => ({\n            ...prevState,\n            todos: updatedTodos,\n            aisles: newAisles,\n            retrievedData: JSON.parse(localStorage.getItem('vueTodosSaved')),\n            ogTitle: (selectedAisle === 'EDIT') ? '' : status.ogTitle\n        }));\n\n    }\n    const getSelectors = (todo, index, aisleColor) => {\n        return (\n            <div className='itemSelectors' style={{backgroundColor: aisleColor}}>\n                <div className='flex-container'>\n                    <div>\n                        <div className='button'>\n                            {getInCartButton(index)}\n                        </div>\n                        <div className='size20 m-10'> \n                            ${ todo.price }\n                        </div>\n                    </div>\n                    <div>\n                        <div>Days</div>\n                        <div className='lastPurchaseDays flexOneFifthColumn'>{todo.days}</div>\n                    </div>\n                    <div>\n                        <div className='mb-5'>Tax</div>\n                        {getTaxCheckBox(todo, index)}\n                    </div>\n                    <div>\n                        <div className='mb-5 button'>Count</div> \n                        <Selector\n                            groupTitle='Count'\n                            //selected={todo.quantity} \n                            selected={status.todos[index].quantity} \n                            label={index}\n                            items={quantities}\n                            onChange={updateQuantity}\n                            padding='5px'\n                            fontSize='15'\n                        />\n                    </div>\n                    <div id='aisle flexTwoFourthColumn' >\n                        <div className='mb-5'>Aisle</div>\n                        <Selector\n                            groupTitle='Aisle'\n                            selected={todo.aisle} \n                            label={index} \n                            items={itemMenuDefault.concat(status.aisles) || itemMenuDefault.concat(aislesInit)}\n                            onChange={reIndex}\n                            padding='5px'\n                            fontSize='15' \n                            maxWidth='115px'\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    const daItem = (todo, index) => {\n        //console.log(`daItem =>\\ntodo: ${JSON.stringify(todo, null, 2)}\\nindex: ${index}`);\n        \n        const shopNavClasses = () => (todo.select) ? 'itemRemove glassyShopNav' : 'itemRemove';\n        const titleClasses = () => (todo.select) ? 'title white' : 'title';\n        const aisleColor = getColor(todo.aisle);\n        if (todo !== undefined) {\n            return (\n                <div key={getKey(status.todos[index].title)}>\n                    <div className='height1px' style={{backgroundColor: aisleColor}}></div>\n                    <div className={shopNavClasses()} onClick={() => toggleSelect(index)}>\n                        <span className={titleClasses()}>{ status.todos[index].title }</span>\n                        {getSelectIcon(index)}\n                    </div>                 \n                    {getSelectors(todo,index, aisleColor)}\n                </div>\n            )\n        } else {\n            return (\n                <div key={getKey(status.todos[index].title)}>\n                    <div className='height1px' style={{backgroundColor: aisleColor}}></div>\n                    <div className={shopNavClasses()} onClick={() => toggleSelect(index)}>\n                        <span className={titleClasses()}>{ status.todos[index].title }</span>\n                        {getSelectIcon(index)}\n                    </div>\n                    {getSelectors(todo,index, aisleColor)}\n                </div>\n            )\n        }    \n    }\n    const getItems = (context) => {\n        const newAisles = (status.aisles !== undefined) ? status.aisles : aislesInit;\n        let newList = <React.Fragment></React.Fragment>;\n        //console.log(`daList => todos: ${JSON.stringify(status.todos, null,2)}`);\n        const pushNewAisle = (aisle) => (newAisles.indexOf(aisle) > -1) ? '' : newAisles.push(aisle);\n        /*\n        status.todos.forEach((todo,index) => {\n            pushNewAisle(todo.aisle);\n            //console.log(`daList =>\\nnewAisles: ${newAisles}\\nquantities: ${todo.quantity}\\ntitle: ${todo.title}\\ndays: ${todo.days}\\nprice: ${todo.price}\\ntax: ${todo.tax}\\nquantity: ${todo.quantity}`)\n            newList = <div>\n                    {newList}\n                    {daItem(todo, index)}\n                </div>;\n        })\n        */\n        const filteredTodos = status.todos.filter(todo => {\n            return todo.title.toLowerCase().includes(status.search.toLowerCase());\n        });\n\n        filteredTodos.forEach((todo, index) => {\n            pushNewAisle(todo.aisle);\n            newList = <div>\n                {newList}\n                {daItem(todo, index)}\n            </div>;\n        });\n\n        //console.log(`daList => newList: ${JSON.stringify(newList,null,2)}`)\n        localStorage.setItem('aisles', JSON.stringify(newAisles));\n        if (context === 'display') {\n            return newList;\n        } else if (context === 'effect') {\n            //console.log(`useEffect => newAisles: ${newAisles}`)\n            setStatus(prevState => ({\n                ...prevState,\n                list: newList,\n                aisles: newAisles\n            }));\n        }\n    };\n    \n    useEffect(() => {\n        getItems('effect');\n        getTotal();\n    },[status.todos]);\n    \n    useEffect(() => {\n        updateAisles();\n    },[]);\n    useEffect(() => {\n        getTotal();\n    },[status.tax]);\n    const sortArray = (array) => {\n        const filtered = array.filter(function (el) {\n            return el != null;\n        });\n        //console.log(`sortArray => filtered: ${filtered}`)\n\n        const alphabetic = [];\n        const numeric = [];\n        filtered.forEach(item => {\n            if (Number(item.substring(0,1)) > 0) {\n                numeric.push(item);\n            } else {\n                alphabetic.push(item);\n            }\n        });\n        alphabetic.sort();\n        numeric.sort(function(a, b){return a - b});\n        array = [];\n        alphabetic.forEach(item => {\n            if (array.indexOf(item) < 0){\n                array.push(item);\n            }\n        });\n        numeric.forEach(item => array.push(item));  \n        return array;\n    };\n    const getTotal = () => {\n        let newTotal = 0;\n        let subtotal = 0;\n        let newTax = 0;\n        let newTaxTotal = 0;\n        let updatedTodos = status.todos;\n        let updatesItems = 0;\n        let updatedTotalItems = 0;\n        updatedTodos.forEach(item => {\n            if (typeof item.price !== 'undefined' && item.cart) {\n                updatesItems++;\n                updatedTotalItems = Number(updatedTotalItems) + Number(item.quantity);\n                subtotal = parseFloat(Number(item.price)) * Number(item.quantity);\n                if (item.tax) {\n                    newTax = subtotal * (Number(status.tax) * .01);\n                    newTaxTotal = newTaxTotal + newTax;\n                    subtotal = subtotal + newTax;\n                }\n                newTotal = parseFloat(Number(newTotal)) + subtotal;\n            }\n        })\n        //localStorage.setItem('vueTodos', JSON.stringify(status.todos));\n        newTotal = Math.round( newTotal * 100 ) / 100;\n        newTotal = newTotal.toFixed(2);\n        newTaxTotal = newTaxTotal.toFixed(2)\n        setStatus(prevState => ({\n            ...prevState,\n            totalItems: updatedTotalItems,\n            items: updatesItems,\n            total: newTotal,\n            taxTotal: newTaxTotal,\n            //tax: newTax\n        }));\n    };\n    const sortName = () => {\n        let sortedTodos = status.todos;\n        sortedTodos.sort(function(a, b){\n            let x = a.title.toLowerCase();\n            let y = b.title.toLowerCase();\n            if (x < y) {return -1;}\n            if (x > y) {return 1;}\n            return 0;\n        });\n        setStatus(prevState => ({\n            ...prevState,\n            todos: sortedTodos\n        }));\n    };\n    const updateItem = (item) => {\n        setStatus(prevState => ({\n            ...prevState,\n            item: item\n        }));\n    }\n    const updateAisles = () => {\n        let colors = [];\n        let todoSort = [];\n        let inactiveTodos = [];\n        let newAisles = status.aisles || aislesInit;\n        const updatedTodos = status.todos;\n        updatedTodos.forEach(todo => {\n            if (newAisles.indexOf(todo.aisle) < 0) {\n                newAisles.push(todo.aisle);\n            }\n        });\n        newAisles = sortArray(newAisles);\n        localStorage.setItem('aisles', JSON.stringify(newAisles));\n        colors = getColors(newAisles);\n        newAisles.forEach(aisle => {\n            updatedTodos.forEach(todo => {\n                if (todo.aisle === aisle && todo.select) {\n                    todoSort.push(todo);\n                } else if (todo.aisle === aisle && !todo.select) {\n                    inactiveTodos.push(todo);\n                }\n            });\n        });\n        //console.log(`updateAisles => !!!!!!!!!!\\ntodoSort: ${JSON.stringify(todoSort, null,2)}\\ninactiveTodos: ${inactiveTodos}`)\n        inactiveTodos.forEach(todo => todoSort.push(todo));\n        setStatus(prevState => ({\n            ...prevState,\n            todos: todoSort,\n            aisles: newAisles,\n            colors: colors\n        }));\n    };\n    const setEntry = (value) => {\n        console.log(`setEntry ${value}`);\n        debounceType(setItemEntry, value);\n        setStatus(prevState => ({\n            ...prevState,\n            displayProductEntry: false,\n            displaySettings: false,\n            search: value,\n            item: value\n        }));\n    }\n    const addTodo = () => {\n        //e.preventDefault();\n        console.log(`addTodo =>\\nitemEntry: ${itemEntry}`);\n        const updatedTodos = status.todos;\n        let updatedRetrievedData = status.retrievedData;\n        const updatedAisles = status.aisles || aislesInit;\n        let newPriceUpdate = 0;\n        let newItem = {};\n        if (itemEntry) {\n            //onClick={() => toggleProductEntry()}\n            //const newAisle = prompt('Enter aisle number:', '');\n            const newAisle = 'Walmart';\n            if (updatedAisles.indexOf(newAisle) < 0) {\n                updatedAisles.push(newAisle);\n            }\n            //newPriceUpdate = prompt('Enter price:', '');\n            \n            newItem = {\n                title: itemEntry, \n                aisle: newAisle, \n                price: Number(newPriceUpdate).toFixed(2),\n                quantity: 1, \n                tax: false, \n                cart: true, \n                select: true, \n                lastPurchase: today, \n                days: 0\n            };\n            updatedTodos.push(newItem);\n            updatedRetrievedData.push(newItem);\n            localStorage.setItem('vueTodos', JSON.stringify(updatedRetrievedData));\n            if (!localStorage.getItem('vueTodosSaved')) {\n                localStorage.setItem('vueTodosSaved', JSON.stringify(updatedTodos));\n                //console.log(`vueTodosSaved(2): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`);                \n            } else {\n                updatedRetrievedData = JSON.parse(localStorage.getItem('vueTodosSaved'));\n                updatedRetrievedData.push(newItem);\n                localStorage.setItem('vueTodosSaved', JSON.stringify(updatedRetrievedData));\n                //console.log(`vueTodosSaved(3): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`);\n            }\n            const newTodos = JSON.parse(localStorage.getItem('vueTodosSaved'));\n            const newRetrievedData = (localStorage.getItem('vueTodosSaved')) ? JSON.parse(localStorage.getItem('vueTodosSaved')) : JSON.parse(localStorage.getItem('vueTodos'))\n            setStatus(prevState => ({\n                ...prevState,\n                newTodoText: itemEntry,\n                aisles: updatedAisles,\n                retrievedData: newRetrievedData,\n                todos: newTodos,\n            }));\n            //updateAisles();\n            //setNewTodoText('');\n            getTotal();\n            //setItemEntry('');\n        }\n    };\n    const toggleSelect = (id) => { \n        const updatedTodos = status.todos; \n        updatedTodos.forEach((item, index) => {\n            if (item.title === updatedTodos[id].title) {\n                if (updatedTodos[id].select) {\n                    updatedTodos[index].select = false;\n                    updatedTodos[index].cart = false;\n                } else {\n                    updatedTodos[index].lastPurchase = today;\n                    updatedTodos[index].days = 1;\n                    updatedTodos[index].select = true;\n                }\n            }\n        });       \n        localStorage.setItem('vueTodos', JSON.stringify(updatedTodos));\n        setStatus(prevState => ({\n            ...prevState,\n            todos: JSON.parse(localStorage.getItem('vueTodos'))\n        }));\n        getTotal();\n        updateAisles();   \n    };\n    const revert = () => {\n        const revertData = JSON.parse(localStorage.getItem('vueTodosRevert'));\n        \n        //console.log(`revertData: ${JSON.stringify(revertData, null, 2)}`)\n        localStorage.setItem('vueTodos', JSON.stringify(revertData));\n        setStatus(prevState => ({\n            ...prevState,\n            todos: revertData,\n            retrievedData: revertData,\n            displaySettings: false,\n            displayProductEntry: false\n\n        }));\n        //itemMenuDefault.forEach(aisle => newAisles.push(aisle));\n        //setAisles(newAisles);\n        //updateAisles();\n        getTotal();\n    };\n    const save = () => {\n        localStorage.setItem('vueTodosSaved', JSON.stringify(status.todos));\n        //console.log(`vueTodosSaved(9): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`)\n        setStatus(prevState => ({\n            ...prevState,\n            displaySettings: false,\n            displayProductEntry: false\n        }));\n    };\n    const restore = () => {\n        const newAisles = status.aisles || aislesInit;\n        itemMenuDefault.forEach(aisle => newAisles.push(aisle));\n        updateAisles();\n        localStorage.setItem('vueTodos', JSON.stringify(status.retrievedData));\n        setStatus(prevState => ({\n            ...prevState,\n            todos: status.retrievedData,\n            aisles: newAisles,\n            retrievedData: JSON.parse(localStorage.getItem('vueTodosSaved')),\n            displaySettings: false,\n            displayProductEntry: false\n        }));        \n    };    \n    const getSelectIcon = (index) => <img \n                                        className='cart' \n                                        alt='select' \n                                        src={(status.todos[index].select) ? Selected : Select}\n                                    />\n    const setTax = () => {\n        setStatus(prevState => ({\n            ...prevState,\n            tax: localStorage.getItem('tax')\n        }));\n    }\n    const toggleSettings = () => {\n        //console.log(`toggleSettings => displaySettings: ${status.displaySettings}`)\n        setStatus(prevState => ({\n            ...prevState,\n            displaySettings: !status.displaySettings\n        }));\n    };\n    const toggleProductEntry = () => {\n        //console.log(`toggleProductEntry => displayProductEntry: ${status.displayProductEntry}`)\n        setStatus(prevState => ({\n            ...prevState,\n            displayProductEntry: !status.displayProductEntry\n        }));\n    };\n    const clear = () => {\n        localStorage.setItem('vueTodosRevert', JSON.stringify(status.todos));\n        localStorage.removeItem('aisles', '');\n        localStorage.removeItem('vueTodos', '');\n        setStatus(prevState => ({\n            ...prevState,\n            todos: [],\n            aisles: []\n        }));\n        getTotal();\n    };\n    const totals = <div className='total '>\n                        <div className='totalItems'>\n                            Items: { status.items }<br />\n                            total: { status.totalItems }\n                        </div>\n                        <div className='totalDollars'>\n                            Tax: $ { status.taxTotal }<br />\n                            Total: $ { status.total }\n                        </div>\n                    </div>\n    const getMenuHeight = (status.displaySettings) ? 'mt-180 visible bottomPadding' : 'mt-850 visible bottomPadding';\n    const menuClasses = (!status.displaySettings && !status.displayProductEntry) ? 'mt-60 visible bottomPadding' : getMenuHeight;\n    console.log(`Shop ==> REFRESH\n                    displaySettings: ${status.displaySettings}\n                    displayProductEntry: ${status.displayProductEntry}\n                `);\n    \n    return (\n        <div className='mt--7'>\n            <div className='input'>\n                <SearchBar onSubmit={addTodo} onChange={setEntry} label='Add items' term=''/>\n                <img className='settings' src={menu} alt=\"open menu\" onClick={() => toggleSettings()}/>\n            </div>\n            <div className={menuClasses}>\n                {getItems('display')}\n            </div>\n            {totals}\n            <ProductEntry\n                state={status} \n                updateAisles={updateAisles} \n                save={save} \n                displayProductEntry={status.displayProductEntry}\n                Item={status.search}\n                updateItem={updateItem} \n            />\n            <SettingsMenu \n                state={status} \n                updateAisles={updateAisles} \n                sortName={sortName} \n                revert={revert} \n                save={save} \n                restore={restore} \n                getTotal={getTotal} \n                setTax={setTax} \n                clear={clear}\n            />\n        </div>\n    )\n}\n\nexport default Shop;","/Users/js/Dev/my-first-reactor/src/components/translator/Translator.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/StreamShow.js",["702"],"import { render } from '@testing-library/react';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteStream, fetchStream } from './StreamActions.js';\n\nclass StreamShow extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n    onDeleteClick() {\n        const { id } = this.props.match.params;\n        this.props.deletePost(id);\n    }\n    render() {\n        if (!this.props.stream) {\n            return <div>Loading...</div>\n        }\n        const { title, description } = this.props.stream;\n        return (\n            <div className='ml-10 mr-10'>\n                <h1>{title}</h1>\n                <h5>{description}</h5>\n                <br/>\n                <div className='r-5 p-10 m-1 button glassy bg-lite'>\n                    <Link to={`/streams/`} className='color-lite bold'>back</Link>\n                </div>\n                <div \n                    className='r-5 p-10 bg-dkRed color-lite bold m-1 button glassy' \n                    onClick={this.onDeleteClick.bind(this)}\n                >delete</div>\n            </div>\n        ) \n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] };\n}\nexport default connect (\n    mapStateToProps,\n    { fetchStream, deleteStream }\n)(StreamShow);\n","/Users/js/Dev/my-first-reactor/src/components/streams/StreamDelete.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/StreamCreate.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/StreamList.js",["703"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport  { Link } from 'react-router-dom';\nimport { fetchStreams } from './StreamActions.js';\nimport ButtonAdmin from './ButtonAdmin.js';\n\nclass StreamList extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n    streamList = () => this.props.streams.map((stream) => {\n        let match = false;\n        if (stream.userId === this.props.currentUserId) {\n            //console.log(`Stream => \\n${stream.userId}\\n${this.props.currentUserId}`)\n            match = true;\n        }\n        if (match) {\n            return (\n                <div \n                    className='item glassy r-5 p-10 flexContainer' \n                    key={stream.id}\n                    onClick={() => console.log(stream.title)}\n                >\n                    {/*<i className='large middle pr-5 aligned icon camera width50px'/>*/}\n                    <div className='pt-5 flex2Column'>\n                        <Link to={`/streams/${stream.id}`} className='size25 color-lite'>{stream.title}</Link>\n                        <div className='description color-soft bold'>{stream.description}</div>\n                    </div>\n                    <ButtonAdmin stream={stream} currentUserId={this.props.currentUserId}/>\n                </div>\n            )\n        }\n    });\n    renderCreate() {\n        if (this.props.isSignedIn) {\n            return (\n                <div \n                    className='bt-20 rt-10' \n                    style={{ textAlign: 'right' }}\n                >\n                    <Link to='/streams/new' className='p-10 button r-5 color-lite bold bg-green glassy'>\n                        Create Stream\n                    </Link>\n                </div>\n            )\n        }\n    }\n    render() {\n        return (\n            <div className='pb-200'>\n                <div className='ml-20 mr-20 mt--30 columnLeft'>\n                    {this.streamList()}\n                </div>\n                {this.renderCreate()}\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn\n    };\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n","/Users/js/Dev/my-first-reactor/src/components/streams/StreamEdit.js",[],"/Users/js/Dev/my-first-reactor/src/actions/types.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/PostList.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/KeyGenerator.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/InterfaceData.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/LogTemplateData.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/Timer.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GenerateLogId.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/ConditionsDashboard.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/Geolocator.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/WaveUtils.js",["704"],"import React, {useState} from 'react';\n\nconst WaveUtils = ({item, state, logLocation, updateLocations}) => {\n   //console.log(`WaveUtils => \\nstate: \\n${JSON.stringify(state,null,2)}\\nlogLocation: \\n${JSON.stringify(logLocation,null,2)}`)\n    // eslint-disable-next-line\n    //console.log(`WaveUtils => state: ${state}`);\n    const locationsInit = [{\n        \"name\": \"Seaside Reef\",\n        \"latitude\": 33.001613,\n        \"longitude\": -117.278393,\n        \"swell\": [\"NW\",\"W\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\", \"medium\"]\n    }];\n    const [status, setStatus] = useState(state);\n    const [locations, setLocations] = useState((status !== undefined) ? status.locations : locationsInit)\n    const addWave = () => {\n        const swells = [];\n        const winds = [];\n        const tides = [];\n        const waveLocations = locations;\n        let i=0;\n        let wave = prompt('wave: ', '');\n        const latitude = prompt('lat: ', localStorage.getItem('latitude'));\n        const longitude = prompt('long: ', localStorage.getItem('longitude'));\n        \n        const swellCount = prompt('swell count: ', '');\n        for (i=0; i<swellCount; i++) {\n            swells[i] = prompt('swell direction', '').toLocaleUpperCase();\n        }\n        const windCount = prompt('wind count: ', '');\n        for (i=0; i<windCount; i++) {\n            winds[i] = prompt('wind direction', '').toLocaleUpperCase();\n        }\n        const tideCount = prompt('tide count: ', '');\n        for (i=0; i<tideCount; i++) {\n            tides[i] = prompt('tide direction', '').toLocaleLowerCase();\n        }\n        const getObj = () => {\n            //console.log(`getObj => state: ${JSON.stringify(status,null,2)}`)\n            return {\n                name: wave,\n                latitude: latitude,\n                longitude: longitude,\n                swell: swells,\n                wind: winds,\n                tide: tides\n            }\n        }\n        waveLocations.push(getObj());\n        //console.log(`add a wave... ${JSON.stringify(getObj(), null, 2)}`);\n        localStorage.setItem('locations', JSON.stringify(waveLocations));\n        setLocations(waveLocations);\n        updateLocations();\n    }\n    const deleteWave = (props) => {\n        let waveLocations = JSON.parse(localStorage.getItem('locations'));\n        //console.log(`Props: ${JSON.stringify(props, null, 2)}`)\n        let index = 0;\n        /*\n        const result = waveLocations.find(obj => {\n            index++\n            return obj.name === props.name\n        })\n        console.log(`delete 1 => index: ${index-1} result: ${JSON.stringify(result, null, 2)}`)\n        console.log(`delete 2 => locations: [${index-1}]: ${JSON.stringify(waveLocations[index-1], null, 2)}`)\n        */\n        ///////////////\n        waveLocations.splice(index-1, 1);\n        localStorage.setItem('locations', JSON.stringify(waveLocations))\n        //console.log(`delete 3 => locations: [${index-1}]: ${waveLocations.map((location, index) => `${index} ${location.name}`)}`)\n        setLocations(localStorage.getItem('locations'));\n        updateLocations();\n    }\n    const editWaveSave = (location, index) => {\n        //console.log(`editWaveSave() => ${JSON.stringify(location,null,2)}`)\n        let waveLocations = JSON.parse(localStorage.getItem('locations'));\n        let swells = location.swell;\n        let winds = location.wind;\n        let tides = location.tide;\n        let i=0;\n        let wave = prompt('wave: ', location.name);\n        let latitude = prompt('lat: ', location.latitude);\n        let longitude = prompt('long: ', location.longitude);\n        const swellCount = prompt('swell count: ', swells.length);\n        for (i=0; i<swellCount; i++) {\n            swells[i] = prompt('edit swell direction', swells[i]).toLocaleUpperCase();\n        }\n        swells = swells.slice(0, swellCount);\n        const windCount = prompt('wind count: ', winds.length);\n        for (i=0; i<windCount; i++) {\n            winds[i] = prompt('edit wind direction', winds[i]).toLocaleUpperCase();\n        }\n        winds = winds.slice(0, windCount);\n        const tideCount = prompt('tide count: ', tides.length);\n        for (i=0; i<tideCount; i++) {\n            tides[i] = prompt('edit tide direction', tides[i]).toLocaleLowerCase();\n        }\n        tides = tides.slice(0, tideCount);\n        const getObj = () => {\n            return {\n                name: wave,\n                latitude: latitude,\n                longitude: longitude,\n                swell: swells,\n                wind: winds,\n                tide: tides\n            }\n        }\n        //console.log(`locations: ${JSON.stringify(waveLocations[index],null,2)} => will be ${JSON.stringify(getObj(),null,2)}`)\n        waveLocations[index] = getObj();\n        //console.log(`edit a wave saving... ${JSON.stringify(waveLocations[index], null, 2)}`)\n        localStorage.setItem('locations', JSON.stringify(waveLocations))\n        setLocations(localStorage.getItem('locations'));\n        updateLocations();\n    }\n   \n    const editWave = (props) => {\n\n        console.log(`editWave =>\\nprops: ${JSON.stringify(props, null, 2)}`);\n        const waveLocations = JSON.parse(localStorage.getItem('locations'));\n        \n        if (props.name === 'button') {\n            //console.log(`edit(${localStorage.getItem('edit')}) toggle... ${JSON.stringify(props, null, 2)}`);\n            handleEditToggle()\n        } else if (props.name === 'edit') {\n            //console.log(`edit a wave... ${JSON.stringify(item, null, 2)}`);\n            //console.log(`Props: ${JSON.stringify(props, null, 2)}`)\n            let index = 0;\n            const result = waveLocations.find(obj => {\n                index++\n                return obj.name === item.name\n            })\n            //console.log(`index: ${index} result: ${JSON.stringify(result, null, 2)}`)\n            //console.log(`locations: [${index}]: ${JSON.stringify(waveLocations[index-1], null, 2)}`)\n            editWaveSave(result, index-1);\n        }\n    }\n    const handleEditToggle = () => {\n        const edit = (localStorage.getItem('edit') === 'true') ? false : true;\n        localStorage.setItem('edit', edit);\n        updateLocations();\n        //console.log(`handleEditToggle => EDIT: ${edit}`)\n        /*\n        this.setState({\n            edit: edit\n        })\n        */\n    }\n    const menu = <div>\n                    <div className='glassy button m-5 r-10 p-10 bg-green ' onClick={() => addWave()}>\n                        Add wave\n                    </div>\n                    <div className='glassy button m-5 r-10 p-10 bg-green' onClick={() => editWave({'name':'button'})}>\n                        {(localStorage.getItem('edit') === 'true') ? 'Save' : 'Edit wave'}\n                    </div>\n                </div>;\n    const itemContainer = <div>\n                    <div className='App button bg-yellow color-black p-10 r-10 mt-20' onClick={() => logLocation(item)}>\n                        Log Session\n                    </div>\n                    <div className='App button bg-red color-black p-10 r-10 mt-20' onClick={() => editWave({'name':'edit'})}>\n                        Edit Location\n                    </div>\n                    <div className='App button bg-red color-black p-10 r-10 mt-20' onClick={() => deleteWave(item)}>\n                        Delete Location\n                    </div>\n                </div>\n    //console.log(`status.module: ${status.module}`)\n    return ((status !== undefined && status.module) === 'WaveFinder') ? menu : itemContainer;\n}\nexport default WaveUtils","/Users/js/Dev/my-first-reactor/src/components/waves/Tide.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/DirectionObject.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/ConditionsSelectors.js",["705"],"import React from 'react';\nimport WindSelector from './wind/WindSelector.js';\nimport TideSelector from './tide/TideSelector.js';\nimport SwellSelector from './SwellSelector.js';\nimport ConditionsContext from '../context/ConditionsContext.js';\nimport Selector from '../forms/FunctionalSelector.js';\n\nclass ConditionsSelectors extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setWindStatus = props.setWindStatus;\n        this.setTide = props.setTide;\n        this.setWind = props.setWind;\n        this.setWindStatus = props.setWindStatus;\n        this.handleWindCheck = props.handleWindCheck;\n        this.handleTideCheck = props.handleTideCheck;\n        this.handleTideSelection = props.handleTideSelection;\n        this.handleSwellCheck = props.handleSwellCheck;\n        this.handleSwell1Selection = props.handleSwell1Selection;\n        this.handleSwell2Selection = props.handleSwell2Selection;\n        this.handleSwell1Angle = props.handleSwell1Angle;\n        this.handleSwell2Angle = props.handleSwell2Angle;\n        this.handleSwell1Height = props.handleSwell1Height;\n        this.handleSwell2Height = props.handleSwell2Height;\n        this.handleSwell1Interval = props.handleSwell1Interval;\n        this.handleSwell2Interval = props.handleSwell2Interval;\n        this.handleStarSelection = props.handleStarSelection;\n        this.handleDistanceSelection = props.handleDistanceSelection;\n        this.pause = props.pause;\n        this.setStatus = props.setStatus;\n        this.data = props.data;\n        this.tideDisplay = props.tideDisplay;\n    }\n\n    static contextType = ConditionsContext;\n\n    refresh = () => window.location.pathname = \"/reactor/WaveFinder\";\n    \n    starSelector = (stars) => <div \n                                className=\"flex2Column glassy r-10 m-5 p-15\" \n                                onMouseDown={this.pause}\n                                >\n                                    Match<br/>\n                                    <Selector\n                                        groupTitle=\"Matches\" \n                                        selected={stars} \n                                        label=\"Quality\"\n                                        items={[0,1,2,3,4,5]}\n                                        onChange={this.handleStarSelection}\n                                        fontSize='20'\n                                        padding='5px'\n                                        width='93%'\n                                    />\n                                </div>\n    milesInput = (distance) => <div className=\"flex2Column glassy r-10 m-5 p-10\">\n                                <label>\n                                    Miles<br/>\n                                    <input className=\"mt-10 p-10 r-10\"\n                                        name=\"distance\"\n                                        type=\"number\"\n                                        value={(distance=='' ? 100 : distance)}\n                                        onChange={this.handleDistanceSelection}\n                                    />\n                                </label>\n                            </div>\n    render() {\n        //console.log('ConditionsSelectors => render => this.context: ', this.context);\n        return (\n            <div className=\"p-5 r-10 m-5\">\n                <div className='p-10 color-yellow'>select current conditions:</div>\n                <div className=\"flexContainer\">\n                    <SwellSelector \n                        id='1' \n                        swellDirection={this.context.swell1Direction} \n                        status={this.context} \n                        handleSwell1Selection={this.handleSwell1Selection} \n                        handleSwell2Selection={this.handleSwell2Selection} \n                        handleSwell1Angle={this.handleSwell1Angle} \n                        handleSwell2Angle={this.handleSwell2Angle} \n                        handleSwell1Height={this.handleSwell1Height} \n                        handleSwell2Height={this.handleSwell2Height} \n                        handleSwell1Interval={this.handleSwell1Interval} \n                        handleSwell2Interval={this.handleSwell2Interval} \n                        handleSwellCheck={this.handleSwellCheck}  \n                        pause={this.pause}>\n                    </SwellSelector>\n                    <SwellSelector \n                        id='2' \n                        swellDirection={this.context.swell2Direction} \n                        status={this.context} \n                        handleSwell1Selection={this.handleSwell1Selection} \n                        handleSwell2Selection={this.handleSwell2Selection} \n                        handleSwell1Angle={this.handleSwell1Angle} \n                        handleSwell2Angle={this.handleSwell2Angle} \n                        handleSwell1Height={this.handleSwell1Height} \n                        handleSwell2Height={this.handleSwell2Height} \n                        handleSwell1Interval={this.handleSwell1Interval} \n                        handleSwell2Interval={this.handleSwell2Interval} \n                        handleSwellCheck={this.handleSwellCheck} \n                        pause={this.pause}>\n                    </SwellSelector>\n                </div>\n                <div className=\"flexContainer\">\n                    <TideSelector \n                        tideNow={this.tideNow} \n                        data={this.data} \n                        status={this.context}\n                        pause={this.pause} \n                        tideDisplay={this.tideDisplay} \n                        handleTideCheck={this.handleTideCheck} \n                        handleTideSelection={this.handleTideSelection}\n                    />\n                    <WindSelector \n                        windDirection={this.context.windDirection} \n                        pause={this.pause} \n                        setWind={this.setWind} \n                        isWind={this.context.isWind} \n                        setStatus={this.setWindStatus} \n                        handleWindCheck={this.handleWindCheck}\n                    />\n                </div>\n                <div className=\"flexContainer\">\n                    {this.milesInput(this.context.distance)}\n                    {this.starSelector(this.context.stars)} \n                </div>\n                <div className=\"button bg-neogreen r-10 m-5 p-15 color-black bold glassy\" onClick={this.refresh}>Refresh</div>\n            </div>\n        ) \n    }\n    \n}\nexport default ConditionsSelectors;\n","/Users/js/Dev/my-first-reactor/src/components/waves/Locations.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/useOceanData.js",["706"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport useCurrentTime from \"../utils/useCurrentTime.js\";\n\nconst useOceanData = (component, uri) => {\n  const [status, setStatus] = useState({\n    oceanData: {},\n    updated: false,\n  });\n  const date = useCurrentTime()[0].startTime.split(\"%\")[0];\n  const getOceanData = async () => {\n    console.log(`getOceanData => SERVER: ${component}`);\n    //console.log(`getOceanData => SERVER: ${component}\\nuri: ${uri}`);\n    const { data } = await axios.get(uri, {\n      params: {\n        origin: \"*\",\n        format: \"json\",\n        mode: \"cors\",\n      },\n    });\n    //console.log(`getOceanData => SERVER: ${component}: \\nstatus.updated: ${status.updated}\\nuri: ${uri}\\noceanData: ${JSON.stringify(data, null, 2)}`)\n    //console.log(`getOceanData => data.data: ${JSON.stringify(data.data, null, 2)}`)\n    //const lastElement = data.data[data.data.length-1];\n    //console.log(`getOceanData => data.data[last]: ${JSON.stringify(lastElement)}`)\n    //console.log(`getOceanData => data.data[last].v: ${lastElement.v}`)\n    //console.log(`getOceanData => data.data[last].dr: ${lastElement.dr}`)\n    //console.log(`getOceanData => data.data[last].t: ${lastElement.t}`)\n    //console.log(`getOceanData => data.data[last].d: ${lastElement.d}`)\n    //console.log(`getOceanData => data.data[last].g: ${lastElement.g}`)\n\n    localStorage.setItem(`${component}Data`, JSON.stringify(data));\n    localStorage.setItem(`${component}Date`, date);\n    setStatus((prevState) => ({\n      ...prevState,\n      oceanData: data,\n      update: true,\n    }));\n  };\n  useEffect(() => {\n    //console.log(`OceanData => ${ component }`)\n    let ignore = false;\n    //console.log(`useOceanData => CHECK\\nstatus.oceanData: ${JSON.stringify(status.oceanData,null,2)}\\ndate: ${date}`)\n    if (!ignore && JSON.stringify(status.oceanData) === \"{}\") {\n      getOceanData();\n    }\n    return () => {\n      ignore = true;\n    };\n  }, []);\n\n  return [status.oceanData, getOceanData];\n};\nexport default useOceanData;\n\n\n","/Users/js/Dev/my-first-reactor/src/components/waves/GetMatchIcon.js",["707","708","709","710","711","712","713","714"],"import React from 'react';\nimport swell1 from '../../assets/images/wavePrimary.png';\nimport swell2 from '../../assets/images/waveSecondaryB.png';\nimport N from '../../assets/images/windN.png';\nimport NE from '../../assets/images/windNE.png';\nimport E from '../../assets/images/windE.png';\nimport SE from '../../assets/images/windSE.png';\nimport S from '../../assets/images/windS.png';\nimport SW from '../../assets/images/windSW.png';\nimport W from '../../assets/images/windW.png';\nimport NW from '../../assets/images/windNW.png';\n// eslint-disable-next-line\nimport tideIcon from '../../assets/images/tide.png';\nimport tide from '../../assets/images/tide.png';\n// eslint-disable-next-line\nimport high from '../../assets/images/tide.png';\n// eslint-disable-next-line\nimport medium from '../../assets/images/tide.png';\n// eslint-disable-next-line\nimport low from '../../assets/images/tide.png';\nimport waterTemp from '../../assets/images/waterTemp.png';\nimport airTemp from '../../assets/images/airTemp.png';\n\nconst getMatchIcon = ({kind, status}) => {\n    //console.log(`getMatchIcon => kind: ${kind}\\nstatus:${JSON.stringify(status,null,2)}`)\n    const getStarMatchKind = (kind) => {\n        //let classes = \"shaka r-20 p-2\";\n        let classes = 'h50w50 p-5';\n        classes = (kind === \"wind\") ? (classes + \" r-10 bg-white mb-55\") : classes; \n        return classes;\n    }\n    // eslint-disable-next-line\n    //console.log(`status.tide: ${status.tide}`);\n    const getTideIcon = <img src={status.tide} className={`mb--5 ${getStarMatchKind(\"tide\")}`} alt=\"tide\" />;\n    // eslint-disable-next-line\n    const getWaterTempIcon = <img src={waterTemp} className={`mb--7 ${getStarMatchKind(\"tide\")}`} alt=\"water temp\" />;\n    // eslint-disable-next-line\n    const getAirTempIcon = <img src={airTemp} className={`mb--7 ${getStarMatchKind(\"tide\")}`} alt=\"air temp\" />;\n    // eslint-disable-next-line\n    let icon = (kind === \"swell1\") ? \"swell1\" : \"swell2\";\n    icon = (kind === \"wind\") ? \"wind\" : icon;\n    // eslint-disable-next-line\n    icon = (kind === \"tide\") ? \"tide\" : icon;\n    const getDirectionIcon = (direction) => {\n        if (direction === \"N\") {\n            return <img className='width50px' src={N} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if ((direction === \"NE\") || (direction === \"NNE\") || (direction === \"ENE\")) {\n            return <img className='width50px' src={NE} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if (direction === \"E\") {\n            return <img className='width50px' src={E} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if ((direction === \"SE\") || (direction === \"SSE\") || (direction === \"ESE\")) {\n            return <img className='width50px' src={SE} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if (direction === \"S\") {\n            return <img className='width50px' src={S} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if ((direction === \"SW\") || (direction === \"SSW\") || (direction === \"WSW\")) {\n            return <img className='width50px' src={SW} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if (direction === \"W\") {\n            return <img className='width50px' src={W} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if ((direction === \"NW\") || (direction === \"NNW\") || (direction === \"WNW\")) {\n            return <img className='width50px' src={NW}  alt={kind} />;\n        }\n    }\n    if (kind === \"swell1\") {\n        const swellDirection = status.swell1Direction;\n        return <React.Fragment>\n                <img src={swell1} className={getStarMatchKind(kind)} alt={kind} /><br/>\n                {getDirectionIcon(swellDirection)}\n            </React.Fragment>;\n    } else if (kind === \"swell2\") {\n        const swellDirection = status.swell2Direction;\n        return <React.Fragment>\n                <img src={swell2} className={getStarMatchKind(kind)} alt={kind} /><br/>\n                {getDirectionIcon(swellDirection)}\n            </React.Fragment>;\n    } else if (kind === \"tide\") {\n        return <img src={tide} className={getStarMatchKind(kind)} alt={kind} />;\n    } else if (kind === \"wind\") {\n        const windDirection = status.windDirection;\n        return getDirectionIcon(windDirection);\n    }\n};\nexport default getMatchIcon;","/Users/js/Dev/my-first-reactor/src/components/context/ConditionsContext.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/SurfLocation.js",["715","716","717"],"import React, {useState} from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport WaveUtils from '../utils/WaveUtils.js';\nimport { BrowserRouter as Router, Link} from 'react-router-dom';\nimport GetMatchIcon from './GetMatchIcon.js';\nimport getAngle from './GetAngle.js';\nimport createLog from './CreateLog.js';\n\nconst SurfLocation = ({state, item, matches, regionMatch, tideDisplay, updateLocations}) => {\n    //console.log(`SurfLocation: state: ${JSON.stringify(state, null, 2)}`)\n    const { edit, windDirection, windSpeed, windGusts, swell1Direction, swell2Direction, swell1Angle, swell2Angle, swell1Height, swell2Height, swell1Interval, swell2Interval, tide, height, stars } = state;\n    // eslint-disable-next-line\n    const [status, setStatus] = useState({\n        module: 'SurfLocation',\n        logged: false,\n        edit: edit,\n        windDirection: windDirection,\n        windSpeed: windSpeed, \n        windGusts: windGusts,\n        swell1Direction: swell1Direction, \n        swell2Direction: swell2Direction,\n        swell1Angle: swell1Angle,\n        swell2Angle: swell2Angle,\n        swell1Height: swell1Height,\n        swell2Height: swell2Height,\n        swell1Interval: swell1Interval,\n        swell2Interval: swell2Interval,\n        tide: tide, \n        height: swell1Height,\n        stars: stars\n    });\n    const secondsToSec = () => 'sec';\n    const getSpeed = () => `${Number(status.windSpeed).toFixed(0)}-${Number(status.windGusts).toFixed(0)}`;\n    const getStrength = () => (Number(status.speed)<2) ? 'light' : (Number(status.speed)>8) ? 'strong' : 'moderate';\n    const style = {\n        height: '50px'\n    }\n    const getCurrentWind = () => {\n        return (\n            <div className='white' style={style}>\n                <div className='m-2'>{`${getStrength()}`}</div>\n                <div className='m-2'>{`${status.windDirection} ${Number(getAngle(status.windDirection))}°`}</div>\n                <div className='m-2'>{getSpeed()} <span className=\"greet\">mph</span></div>\n            </div>\n        )\n    }\n    // eslint-disable-next-line\n    const setTide = (tide) => {\n        localStorage.setItem(\"tide\", tide);\n    }\n    const getStarDetails = (kind) => {\n        let details = '';\n        // eslint-disable-next-line\n        const {height, windSpeed, windGusts, swell1Height, swell1Angle,swell1Interval, swell2Height, swell2Angle, swell2Interval} = status;\n        // eslint-disable-next-line\n        const getWindSpeed = (((windSpeed * 1.15078)+(windGusts * 1.15078))/2).toFixed(0);\n        details = (kind === 'tide') ? tideDisplay('star') : details;\n        details = (kind === 'wind') ? getCurrentWind() : details;\n        details = (kind === 'swell1') \n            ? (<React.Fragment>\n                    <div className='bold white'>{swell1Angle}°</div>\n                    <div className='bold white'>{`${swell1Height}${(swell1Height.includes('ft')) ? '' : \"'\"}`}</div>\n                    <div className='bold white'>{swell1Interval.replace(' seconds',secondsToSec())}</div>\n                </React.Fragment>) \n            : details;\n        details = (kind === 'swell2') \n            ? (<React.Fragment>\n                    <div className='bold white'>{swell2Angle}°</div>\n                    <div className='bold white'>{`${swell2Height}${(swell2Height.includes('ft')) ? '' : \"'\"}`}</div>\n                    <div className='bold white'>{swell2Interval.replace(' seconds',secondsToSec())}</div>\n                </React.Fragment>)\n            : details;\n        return details\n    }\n    const getState = (kind) => {\n        const { swell1Direction, swell2Direction, tide, windDirection } = status;\n        if (kind === 'swell1') {\n            return swell1Direction;\n        } else if (kind === 'swell2') {\n            return swell2Direction;\n        } else if (kind === 'tide') {\n            return tide.toUpperCase();\n        } else if (kind === 'wind') {\n            return windDirection;\n        }\n    }\n    const star = (matchKind) => {\n        return (<div key={getKey('star')} className='flex3Column bg-lite glassy mr-5 ml-5 p-10 r-10'>\n            <GetMatchIcon kind={matchKind} status={status}/>\n            <div className='greet color-yellow bold'>\n                {(matchKind === 'tide') ? '' : getState(matchKind)}{getStarDetails(matchKind)}\n            </div>\n        </div>)\n    }\n    const getStars = (stars) => stars.map((currentStar) => star(currentStar));\n    const logLocation = (item) => (status.logged === true) ? alert('log already exists') : alert('log already exists');//createLog(item, status);\n    const logLocationButton = (item) => {\n        return <React.Fragment>\n                    {\n                        (localStorage.getItem('edit') === 'true') \n                        ? <WaveUtils item={item} state={status} logLocation={() => logLocation(item)} updateLocations={updateLocations}></WaveUtils>\n                        : <div className='App button bg-dkYellow color-black glassy p-10 r-10 mt-20' onClick={() => logLocation(item)}>\n                            Log Session\n                        </div>\n                    }\n                </React.Fragment>\n    }\n    // eslint-disable-next-line\n    const editLogButton = () => {\n        return (\n            <Link className='noUnderline' key={getKey('link')} to={{\n                pathname: '/SurfLog?logId=ThuApr3020209:19:28PM',\n                state: {\n                    logId: status.recordId\n                }\n            }}>\n                <div className='App button bg-yellow color-black p-10 r-10 mt-20'>\n                    Edit Log\n                </div>\n            </Link>\n        );\n    }\n    \n    const statusClass = (status) => (status === true) ? 'color-yellow mt-10' : 'white mt-10'; \n    const subStatusClass = (status) => (status === true) ? 'color-orange  mt-10' : 'white  mt-10'; \n    const swell1Match = (item) => (item.swell.indexOf(swell1Direction)>-1) ? true : false;\n    // eslint-disable-next-line\n    const swell2Match = (item) => (item.swell.indexOf(swell2Direction)>-1) ? true : false;\n    // eslint-disable-next-line\n    const windMatch = (item) => (item.wind.indexOf(windDirection)>-1) ? true : false;\n    // eslint-disable-next-line\n    const tideMatch = (item) => (item.tide.indexOf(tide)>-1) ? true : false;\n    const swell2DirectionMatch = (direction) => (direction===swell2Direction) ? true : false;\n    const windDirectionMatch = (direction) => (direction.wind === windDirection) ? true : false;\n    const tideDirectionMatch = (direction) => (direction.tide === tide) ? true : false;\n    const preferredClasses = 'white bold mt-5';\n    return (\n        <div key={getKey('loc')} /*onClick={() => this.props.editLocation()}*/>\n            <div className='r-10 m-10 p-20 glassy'>\n                    <div className='width-100-percent flexContainer'>{getStars(matches)}</div>\n                    <div className='mt-20 mb-20 navBranding color-yellow'>{item.name}</div>\n                    <div className='greet glassy color-yellow p-5 bg-lite mt-15 mb-10 r-5'>{`${regionMatch} miles`}</div>\n                <div className='flexContainer'>\n                    <div className='flexContainer m-auto'>\n                        <div className='columnRight pr-10'>\n                            <div className={preferredClasses}>Swell: </div>\n                            <div className={preferredClasses}>Wind: </div>\n                            <div className={preferredClasses}>Tide: </div>\n                        </div>\n                        <div className='columnLeft'>\n                            <div className='mt-5'>{item.swell.map((swell, i) => <span key={getKey('swell')} className={(swell === status.swell1Direction) ? statusClass(swell1Match(item)) : subStatusClass(swell2DirectionMatch(swell))}>{swell}{((i+1) === item.swell.length)? '' : ', '}</span>)}</div>\n                            <div className='mt-5'>\n                                {item.wind.map((wind, i) => <span key={getKey('wind')} className={statusClass(windDirectionMatch({wind}))}>\n                                                            {wind}{((i+1) === item.wind.length)? '' : ', '}\n                                                        </span>)}\n                            </div>\n                            <div className='mt-5'>{item.tide.map((tide,i) => <span key={getKey('tide')} className={statusClass(tideDirectionMatch({tide}))}>{tide}{((i+1) === item.tide.length)? '' : ', '}</span>)}</div>\n                        </div>\n                    </div>\n                    \n                </div>\n                {\n                    //(status.logged) ? editLogButton() : logLocationButton(item)\n                    logLocationButton(item)\n                }\n            </div>\n        </div>\n    );\n}\nexport default SurfLocation;","/Users/js/Dev/my-first-reactor/src/components/utils/CalculateDistance.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/PostDirectory.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/LogEntryFunctional.js",["718","719"],"import React, { useState } from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport RadioSelector from '../forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport { BrowserRouter as Router, Link, Route} from 'react-router-dom';\nimport Selector from './Selector.js';\nimport group from './Group.js';\nimport templateData from './TemplateData.js';\nimport generateNewLogId from './GenerateLogId.js';\n\nconst LogEntry = ({ logId, onChange, getStateLog, title, message, buttonLabel, items }) => {\n    console.log(`LogEntry => logId: ${logId}`)\n    const posts = new PostDirectory();\n    const logIdExists = () => (logId !== undefined && logId !== \"\" ) ? false : true;\n    const localLastPostIdExists = () => (localStorage.getItem(\"lastPostId\") === null) ? false : true;\n    const getLocalLastPostId = () => (localLastPostIdExists()) ? localStorage.getItem(\"lastPostId\") : posts.getLastItem(); \n    const getLastPostId = () => (logIdExists()) ? logId : getLocalLastPostId();\n    const localLogExists = () => (localStorage.getItem(logId) === null) ? false : true;\n    const getLog = () => (localLogExists()) ? JSON.parse(localStorage.getItem(logId)) : templateData;\n    //console.log(`LogEntry => logId: ${logId}\\nlog: ${JSON.stringify(getLog(), null, 2)}`)\n    // eslint-disable-next-line\n    const classes = 'stripe p-10 color-black m-10 r-10 bg-soft';\n    // eslint-disable-next-line\n    const buttonClasses = 'button p-10 r-10 m-1 width-100-percent';\n\n    const [status, setStatus] = useState({\n        logId: logId,\n        lastPostId: getLastPostId(),\n        date: new Date(),\n        log: getLog(),\n        change: false,\n        spot: localStorage.getItem('spot')\n    });\n\n    const handleSelection = (groupTitle, label, selected) => {\n        console.log(`handleSelection => \\ngroupTitle: ${groupTitle}\\nlabel: ${label}\\nselected: ${selected}`)\n        if (typeof groupTitle === \"string\") {\n            const currentLog = status.log;\n            currentLog[groupTitle][label] = selected;\n            setStatus(prevState => ({\n                ...prevState,\n                log: currentLog,\n                change: true\n            }));\n            onChange(groupTitle, label, selected, true);\n        } \n    }\n    const updateNotes = (event) => {\n        handleSelection(\"Comments\", \"notes\", event.target.value);\n    }\n    const handleSubmit = (event) => {\n        console.log(`handleSubmit: ${JSON.stringify(status.log, null, 2)}`)\n        const recordId = generateNewLogId();\n        console.log(`handleSubmit: recordId: ${recordId}`)\n        let postDirectory = posts.getDirectory();\n        let post = \"\";\n        const logIt = () => {\n            postDirectory.push(recordId);\n            postDirectory = JSON.stringify(postDirectory);\n            console.log(`postDirectory: ${postDirectory}`)\n            post = JSON.stringify(status.log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n            //localStorage.setItem(\"postDirectory\", postDirectory);\n            posts.add(recordId);\n        }\n        logIt();\n        window.location.pathname = \"/reactor/LogDirectory\";\n    }\n    const handleSave = (event) => {\n        console.log(`handleSave: ${status.log}`)\n        const recordId = logId;\n        let post = \"\";\n        const logIt = () => {\n            post = JSON.stringify(status.log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n        }\n        logIt();\n        window.location.pathname = \"/reactor/LogDirectory\";\n    }\n    const handleDelete = () => {\n        console.log(`handleDelete => `)\n        const recordId = logId;\n        console.log(`handleDelete => recordId: ${recordId}`)\n        posts.delete(recordId);\n        window.location.pathname = \"/reactor/LogDirectory\";\n    }\n    const onDateChange = (date) => {\n        const day = date.getDate();\n        const month = date.getMonth()+1;\n        const year = date.getFullYear();\n        handleSelection(\"Day\", \"Date\", date);\n        handleSelection(\"Day\", \"Day\", day);\n        handleSelection(\"Day\", \"Month\", month);\n        handleSelection(\"Day\", \"Year\", year);\n    }\n    const getItems = () => items;\n    const selected = (item, groupTitle) => ((item.selections.indexOf(status.log[groupTitle][item.description])) !== -1) ? true : false;\n    const getWaveHeight = (height) => {\n        console.log(`getWaveHeight(1) => height: ${height}`)\n        let newHeight = height;\n        const heights = ['knee high', 'waist high', 'chest high', 'shoulder high', 'head high', 'over head', 'foot over head', '2 feet over head' ,'double over head', 'triple over head']\n        const size = ['1ft', '2ft', '3ft', '4ft', '5ft', '6ft', '7ft', '8ft' ,'9ft', '10ft'];\n        const decimal = ['1.0', '2.0', '3.0', '4.0', '5.0', '6.0', '7.0', '8.0' ,'9.0', '10.0']\n        newHeight = (size.indexOf(height)<0) ? height : size[heights.indexOf(height)];\n        console.log(`getWaveHeight(2) => height: ${height}`);\n        newHeight = (decimal.indexOf(height)<0) ? height : size[decimal.indexOf(height)];\n        console.log(`getWaveHeight(3) => height: ${newHeight}`)\n        return newHeight;     \n    }\n    const getTide = (height) => {\n        const tide = Number(height.replace('ft','')).toFixed(0) + 'ft';\n        console.log(`getTide => height: ${tide}`);\n        return tide;\n    }\n    const defaultSelection = (item, groupTitle) => {\n        console.log(`defaultSelection => status.log: ${JSON.stringify(status.log,null,2)}`);\n        let selected = status.log[groupTitle][item.description];\n        console.log(`defaultSelection => \\nselected: ${selected}\\ngroupTitle: ${groupTitle}\\nitem.description: ${item.description}`);\n        \n        //selected = getWaveSize(selected);\n        if ((item.description === 'Height' && (groupTitle === 'Swell1' || groupTitle === 'Swell2')) || (item.description === 'Report' && groupTitle === 'Surf')) {\n            selected = getWaveHeight(selected);\n        }\n        if (item.description === 'Phase' && groupTitle === 'Tide') {\n            console.log(`defaultSelection => Tide(1) => Phase: ${selected}`)\n            if (selected === 'high' || selected === 'medium' || selected === 'low') {\n            } else if (selected > 3) {\n                selected = 'high';\n            } else if (selected > 2) {\n                selected = 'medium';\n            } else {\n                selected = 'low';\n            }\n            //selected = getTide(selected);\n            console.log(`defaultSelection => Tide(2) => Phase: ${selected}`)\n        }\n        if (item.description === 'Height' && groupTitle === 'Tide') {\n            if (selected === 'NaNft') {\n                selected = status.log[groupTitle]['Phase'];\n            }\n            console.log(`defaultSelection => Tide => Height: ${selected}`)\n            selected = getTide(selected);\n        }\n        if (selected === ('High => Low' || 'Low => High')) {\n            selected = 'medium';\n        }\n        let selectedIndex = item.selections.indexOf(String(selected).toLocaleLowerCase());\n        if (item.selections[selectedIndex] === undefined) {\n            selectedIndex = item.selections.indexOf(String(selected));\n        }\n        console.log(`defaultSelection => ${item.description}: ${groupTitle} - ${selected}\\nselections:${item.selections[selectedIndex]}\\nitem: ${JSON.stringify(item, null, 2)}`);\n        return selectedIndex; \n    }\n    const radioItems = (item, groupTitle) => {\n        return (\n            <RadioSelector\n                header={groupTitle}\n                groupTitle={groupTitle} \n                selected={defaultSelection(item,groupTitle)} \n                label={item.description} \n                items={item.selections} \n                onChange={handleSelection}\n            />\n        )\n    };\n\n                            \n    const radio = (item, groupTitle) => {\n        console.log('RADIO button')\n        return (\n            <div className=\"r-vw\">\n                {radioItems(item, groupTitle)}\n            </div>\n        )\n    };\n    \n    const selectionInterface = (item, groupTitle) => (item.type === 'radio') ? radio(item, groupTitle) : Selector(item, groupTitle, status.spot, defaultSelection, handleSelection, selected);\n    const groups = () => getItems().map((item) => {\n        const headerClasses = 'subHeader color-yellow p-20';\n        const selectorClasses = 'greet p-vw flex3Column';\n        const groupClasses = (window.innerWidth < 500) \n            ? \"r-vw bg-dark r-10\" \n            : \"flexContainer width-100-percent r-vw bg-dark r-10\";\n        const description = item.description;\n        //console.log(`description: ${description}`)\n       return <div key={getKey(\"groupConainer\")}>\n                <div key={getKey(\"groupHeader\")} className={headerClasses}>\n                    {description}\n                </div>\n                <div className={groupClasses} key={getKey(\"groupSubConainer\")}>\n                    {group(item).map((group) => \n                        <div key={getKey(\"selectorContainer\")} className={selectorClasses}>\n                            {selectionInterface(group, description)}\n                        </div>\n                    )}\n                </div>\n            </div>\n    });\n    const categories = () => {\n        status.selectorStatus = [];\n        return <div className='description'>{groups()}</div>;\n    }\n    const getLogObject = () => status.log;\n    const dateEntry = () => {\n        const logExists = (status.log !== undefined && status.log !== null && JSON.stringify(status.log, null, 2) !== \"{}\") ? true : false;\n        const stateLogDate = () => getLogObject().Day.Date;\n        const getDate = () => (logExists === true) ? new Date(stateLogDate()) : new Date(status.date);\n        return <React.Fragment>\n                    <div className='mb-5 subHeader color-yellow'>Date</div>\n                    <div className='flexContainer width-100-percent'>\n                        <DatePicker\n                            onChange={onDateChange}\n                            value={getDate()} \n                            className='glassy p-vw bg-lite flex3Column r-vw m-vw p-20'\n                        /><br/>\n                    </div>\n                </React.Fragment>\n    }\n    \n    return (\n        <Route>\n            <form onSubmit={handleSubmit} className='bg-lite p-20 m-5 r-10'>\n                {dateEntry()}\n                {categories()}\n                <br/>\n                <div className=\"mb-5\">Additional Comments: </div>\n                <textarea \n                    rows=\"10\" \n                    cols={window.innerWidth/15} \n                    value={status.log.Comments.notes} \n                    onChange={updateNotes} \n                    className=\"mt-10 greet p-10 r-10 brdr-green\"\n                />\n                <PostDirectory />\n                <Link className=\"noUnderline color-black\"\n                    to=\"/LogDirectory\"\n                    onClick={() => handleSubmit()}>\n                    <div onClick={handleSubmit} className=\"button m-1 greet p-20 r-10 bg-green brdr-green glassy\">\n                        {buttonLabel}\n                    </div>\n                </Link> \n                <Link className=\"noUnderline color-black\"\n                    to=\"/LogDirectory\"\n                    onClick={() => handleSave()}>\n                    <div onClick={handleSave} className=\"myButton m-1 greet p-20 r-10 bg-yellow brdr-yellow glassy\">\n                        save\n                    </div>\n                </Link>\n                <Link className=\"noUnderline\"\n                    to=\"/LogDirectory\"\n                    onClick={() => handleDelete()}>\n                    <div onClick={handleDelete} className=\"button m-1 color-black greet p-20 r-10 bg-red brdr-red glassy\">\n                        delete\n                    </div>\n                </Link>\n            </form>\n        </Route>\n    );\n}\n\nexport default LogEntry;","/Users/js/Dev/my-first-reactor/src/components/utils/Loader.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/BlogImages.js",[],"/Users/js/Dev/my-first-reactor/src/components/music/SongList.js",[],"/Users/js/Dev/my-first-reactor/src/components/music/SongDetail.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/SequenceImages.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/DebouncerType.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/DropDown.js",[],"/Users/js/Dev/my-first-reactor/src/components/translator/Translate.js",[],"/Users/js/Dev/my-first-reactor/src/components/forms/FunctionalSelector.js",[],"/Users/js/Dev/my-first-reactor/src/components/shop/ProductEntry.js",["720","721","722","723","724","725","726"],"import React, { useState, useEffect } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport debounceType from '../utils/DebouncerType.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport CurrencyInput from 'react-currency-input-field';\n\nconst ProductEntry = ({ state, updateAisles, save, displayProductEntry}) => {\n\n    console.log(`searchItem: ${state.search}`)\n\n    const listItems = [\n        'Item',\n        'Aisle',\n        'Price',\n        'Save'\n    ];\n    const [Price, setPrice] = useState('');\n    const [debouncedPrice, setDebouncedPrice] = useState(Price);\n    const [Item, setItem] = useState(state.item);\n    console.log(`ProductEntry => search: ${state.search} - Item: ${Item}`);\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // Do something with the collected price\n        console.log(Price);\n    };\n    \n    useEffect(() => {\n        const timerId = setTimeout(() => {\n            setDebouncedPrice(Price);\n        }, 1000);\n\n        return () => {\n            clearTimeout(timerId);\n        };\n       debounceType(setDebouncedPrice, Price);\n    }, [Price]);\n\n    const initState = () => {\n       \n        //const newState = state;\n        //newState.listItems = listItems;\n        const initAdd = {\n            listItems: [...listItems] // make a copy of the listItems array\n        }\n        listItems.map((item, index) => {\n            const propName = listItems[index];\n            const propValue = (listItems[index] === 'Aisle') ? 'Smart and Final' : (listItems[index] === 'Item') ? state.search : state.search;\n            initAdd[propName] = propValue;\n        })\n        initAdd[\"displayProductEntry\"] = displayProductEntry;\n        const newState = { ...state, ...initAdd };\n        return newState;\n    }\n\n    const [status, setStatus] = useState(initState());\n    \n    console.log(`status => search: ${initState().search}`)\n\n    console.log('-----=======>>>>>>>  status: ', status);\n\n    const getSetting = (index) => {\n        if (status.listItems[index] === 'Save') {\n            save();\n        } else if (status.listItems[index] === 'Price') {\n\n        }\n        //displayProductEntry = displayProductEntry\n        /*\n        setStatus(prevState => ({\n            ...prevState,\n            listItems: listItems,\n            displayProductEntry: displayProductEntry\n        }));\n        */\n    };\n    const setDisplay = (display) => {\n        setStatus(prevState => ({\n            ...prevState,\n            Price: display\n        }))\n        console.log('setDisplay: ', display);\n        /*\n        setStatus(prevState => ({\n            ...prevState,\n            displayProductEntry: displayProductEntry\n        }))\n        */\n    };\n\n    const getInputField = (index) => {\n        const itemEntry = () => {\n            const item = initState().search;\n            console.log('setItem: ', item);\n            setStatus(prevState => ({\n                ...prevState,\n                Item: item,\n                item: item,\n                search: item\n            }))\n        };\n        const setAisle = (groupTitle, label, selected) => {\n            console.log('setAisle: ', selected);\n            setStatus(prevState => ({\n                ...prevState,\n                Aisle: selected\n            }))\n        };\n        const setThePrice = (value) => {\n            console.log('setThePrice: ', value);\n            setStatus(prevState => ({\n                ...prevState,\n                Price: value\n            }))\n        };\n        if (listItems[index] === \"Price\") {\n            return <CurrencyInput\n                        id=\"price\"\n                        name=\"price\"\n                        placeholder=\"enter price...\"\n                        defaultValue={state.price}\n                        decimalsLimit={2}\n                        //onValueChange={(value, name) => setThePrice(value)}\n                        onValueChange={setPrice}\n                    />\n        } else if (listItems[index] === \"Item\") {\n            return <div className='m-20'>\n                        <form onSubmit={itemEntry}>\n                            <input\n                                className='p-10 r-5 bg-dark white size25 glassy width-100-percent'\n                                type=\"text\"\n                                value={initState().search}\n                                placeholder={'item...'}\n                                onChange={itemEntry}\n                            />\n                        </form>\n                    </div>\n        } else if (listItems[index] === \"Aisle\") {\n            return <Selector\n                    groupTitle={`Aisles`} \n                    selected={status.Aisle} \n                    label='Aisles' \n                    items={status.aisles}\n                    onChange={setAisle}\n                    fontSize='20'\n                    padding='5px'\n                    width='70%'\n                />\n        }\n        return <button>Add</button>\n\n    }\n    \n    \n    const productEntry = <div id='settingsMenu' className='bg-dark'>\n            {\n                status.listItems.map((item, index) => {\n                    return (\n                        <div \n                            key={getKey(status.listItems[index])} \n                            className='productButton' \n                            onClick={() => getSetting(index)}\n                        >\n                            { listItems[index] }: {getInputField(index)}\n                            \n                        </div>\n                    )\n                })\n            }\n        </div>\n    console.log('displayProductEntry1: ', displayProductEntry);\n    if (displayProductEntry === true) {\n        console.log('displayProductEntry2: ', displayProductEntry);\n        return productEntry\n    }\n    return <React.Fragment></React.Fragment>\n}\n\nexport default ProductEntry","/Users/js/Dev/my-first-reactor/src/components/shop/initData.js",[],"/Users/js/Dev/my-first-reactor/src/components/shop/SettingsMenu.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/Dominos.js",["727","728","729","730","731"],"import React, { useState, useEffect } from 'react';\nimport LongPressButton from './LongPressButton.js';\n\nconst Dominos = ({ player, index, scoreTotal, editPlayer, deletePlayer, getDominoTotal, updateTwoPlayerScores, winner }) => {\n    \n    const dominoKey = `${player}Domino${index}`;\n    const indexArray = [0,1,2,3]\n    const getScore = () => {\n        let newScore = 0;\n        indexArray.map(scoreBox => {\n            const dominoKey = `${player}Domino${scoreBox}`;\n            newScore = newScore + Number(localStorage.getItem(dominoKey) || 0);\n        });\n        return newScore;\n    }\n    \n    const [ score, setScore ] = useState(getScore());\n    const [ scoreTotalState, setScoreTotal ] = useState(scoreTotal);\n    // eslint-disable-next-line\n    const [edit, setEdit] = useState(false);\n    const [timer, setTimer] = useState(null);\n    const [showButtons, setShowButtons] = useState(false);\n\n    const handleTouchStart = () => {\n        console.log(`handleTouchStart`)\n        setTimer(setTimeout(() => setShowButtons(true), 1000));\n    };\n\n    const handleTouchEnd = () => {\n        clearTimeout(timer);\n        //setShowButtons(false);\n    };\n\n    const quadrantScore = (quadrant) => {\n\n        //const playerScore = Number(localStorage.getItem(dominoKey));\n        const playerScore = score;\n        const scoreStart = scoreTotalState - (quadrant*10);\n        console.log(`playerScore: ${playerScore} \\nscoreTotalState: ${scoreTotalState} \\nscoreStart: ${scoreStart} \\nquadrant: ${quadrant}`)\n        //const scoreEnd = scoreStart+((quadrant-1)*10);\n        if (playerScore > scoreStart && playerScore < scoreStart + 10) {\n            return \"/\";\n        } else if (playerScore <= scoreStart) {\n            return \"\";\n        } else {\n            return \"X\";\n        }\n\n        //let quadrantScore = ['-','/', 'X'];\n        //return score;\n    }\n    const getDominoScore = (quadrant) => <div className='white'>{quadrantScore(quadrant)}</div>;\n    // eslint-disable-next-line\n    const updateScore = (newScore) => {\n        localStorage.setItem(player, newScore);\n        //setScore(Number(localStorage.getItem(player)));\n    }\n    const updateDominos = () => {\n        updateTwoPlayerScores(player, index, localStorage.getItem(dominoKey));\n    }\n    const addScore = () => {\n        \n        const playerScore = Number(localStorage.getItem(dominoKey));\n\n        if (score < Number(scoreTotalState) && score > Number(scoreTotalState-51)) {\n            let newScore = playerScore + 5;\n            localStorage.setItem(dominoKey, newScore);\n            //setScore(newScore);\n            //console.log(`addScore => scoreTotalState: ${scoreTotalState}  score: ${score}  newScore: ${newScore} getScore(): ${getScore()} getDominoTotal(): ${playerScore}`);  \n            updateDominos(); \n        }\n    }\n\n    const subtractScore = () => {\n        console.log('subtractScore score: ', score)\n        let newScore = Number(score)-5;\n        newScore = (newScore < 0) ? 0 : newScore;\n        localStorage.setItem(dominoKey, newScore);\n        updateDominos();\n    }\n\n    const editNav = () => {\n        if (edit) {\n            return <div className='subIndex t-0 relative flexContainer color-yellow p-1 bg-dkGreen r-5 bold'>\n                        <div className=\"flex3Column\"></div>\n                        <div className=\"flex3Column\">\n                            <div className='button color-green description r-5 p-5 m-5 bg-yellow' onClick={() => editPlayer(index)}>EDIT</div>\n                            <div className='button color-red description r-5 p-5 m-5 bg-yellow' onClick={() => deletePlayer(index)}>DELETE</div>\n                        </div>                    \n                        <div className=\"flex3Column\"></div>\n                    </div>\n        }\n    }\n    const stockClasses = 'r-10 m-1 color-yellow bold bg-darker';\n    const buttonClass = 'bg-darker';\n    const getButtonClass = 'button flex3Column p-10 r-10 ' + buttonClass;\n    // eslint-disable-next-line\n    const dominoClass = () => (score >= winner) ? 'color-neogreen shakingShaka' : 'white';\n    // eslint-disable-next-line\n    const scoreButtonClasses = 'glassy flex3Column button bg-green m-10 r-10 color-neogreen navBranding centeredContent';\n    const scoreButton = (quadrant) => {\n       return <div className={stockClasses}>\n                <div className='flexContainer'>\n                    <span className={getButtonClass}>\n                        <div className='p-5 r-5 navBranding'>\n                            {getDominoScore(quadrant)}\n                        </div>\n                    </span>\n                </div>\n            </div>\n    }\n    const quadrantClasses = (quadrant) => {\n\n        const playerScore = Number(localStorage.getItem(dominoKey));\n            \n        if (quadrant === 1) {\n            return (playerScore > 4) ? ((playerScore > 9) ? \"quadrant on5Right onBottom10\" : \"quadrant on5Right\") : \"quadrant\";\n        } else if (quadrant === 2) {\n            return (playerScore > 4) ? ((playerScore > 9) ? \"quadrant on5Left onBottom10\" : \"quadrant on5Left\") : \"quadrant\";\n        } else if (quadrant === 3) {\n            return (playerScore > 4) ? ((playerScore > 9) ? \"quadrant on5Right onTop10\" : \"quadrant on5Right\") : \"quadrant\";\n        } else if (quadrant === 4) {\n            return (playerScore > 4) ? ((playerScore > 9) ? \"quadrant on5Left onTop10\" : \"quadrant on5Left\") : \"quadrant\";\n        }\n    }\n    const editNavigation = () => {\n        return <div>\n                    <button className='myButton p-22 size25' onClick={subtractScore}>-</button>\n                    <button className='myButton p-22 size25' onClick={addScore}>+</button>\n                </div>\n    }\n    return (\n        <div>\n            <div className='yellow'>{scoreTotal}</div>\n            <div className={stockClasses} onTouchStart={handleTouchStart} onTouchEnd={handleTouchEnd}>\n                <div id=\"container\" onClick={() => addScore()}>\n                    <div id=\"top-left\" className={quadrantClasses(1)}>{scoreButton(1)}</div>\n                    <div id=\"top-right\" className={quadrantClasses(2)}>{scoreButton(2)}</div>\n                    <div id=\"bottom-left\" className={quadrantClasses(3)}>{scoreButton(3)}</div>\n                    <div id=\"bottom-right\" className={quadrantClasses(4)}>{scoreButton(4)}</div>\n                </div>\n            </div>\n            {editNav()}\n            {showButtons && (\n                editNavigation()\n            )}\n        </div>        \n\n    )\n\n}\n   \nexport default Dominos;","/Users/js/Dev/my-first-reactor/src/components/utils/CricketScore.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/CountrySelector.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreCard.js",["732"],"import React, { useState } from 'react';\n\nconst ScoreCard = ({ player, index, editPlayer, deletePlayer, game, updateTwoPlayerScores, winner }) => {\n\n    const cricketKey = `${player}Cricket${index}`;\n    const getScore = () => (localStorage.getItem(player) || 0);\n    const [ score, setScore ] = useState(getScore());\n    const [ edit, setEdit ] = useState(false);\n    const updateScore = (newScore) => {\n\n        localStorage.setItem(player, newScore);\n        JSON.parse(localStorage.getItem('players')).map((player, index) => {\n            console.log(`updateScore => ${index} player: ${player}: ${localStorage.getItem(player)}`);\n            if (Number(localStorage.getItem(player)) < Number(winner)) {\n                localStorage.setItem(`player${index}`, 'loser');\n                localStorage.setItem('gameStatus', 'inProgress');\n            } else {\n                localStorage.setItem(`player${index}`, 'winner');\n                localStorage.setItem('gameStatus', 'gameOver');\n            }\n        });\n        \n        console.log(`updateScore => index: ${index}`)\n        console.log(`updateScore => game: ${game}`)\n        console.log(`updateScore => winner: ${winner}`)\n        console.log(`updateScore => newScore: ${newScore}`)\n        console.log(`updateScore => player: ${player}`)\n        console.log(`updateScore => playerScore: ${localStorage.getItem(player)}`)\n        console.log(`updateScore => gameStatus: ${localStorage.getItem('gameStatus')}`)\n\n        setScore(Number(localStorage.getItem(player)));\n    }\n    // eslint-disable-next-line\n    const updateCricketScore = (newScore) => {\n        localStorage.setItem(cricketKey, newScore);\n        setScore(localStorage.getItem(cricketKey));\n        updateTwoPlayerScores(player, index, localStorage.getItem(cricketKey));\n    }\n    const addScore = () => {\n        let newScore = Number(score) + 1;\n        updateScore(newScore);       \n    }\n    const subtractScore = () => {\n        let newScore = Number(score)-1;\n        updateScore(newScore);\n    }\n    const editNav = () => {\n        if (edit) {\n            return <div className='subIndex t-0 relative flexContainer color-yellow p-1 bg-dkGreen r-5 bold'>\n                        <div className=\"flex3Column\"></div>\n                        <div className=\"flex3Column\">\n                            <div className='button color-green description r-5 p-5 m-5 bg-yellow' onClick={() => editPlayer(index)}>EDIT</div>\n                            <div className='button color-red description r-5 p-5 m-5 bg-yellow' onClick={() => deletePlayer(index)}>DELETE</div>\n                        </div>                    \n                        <div className=\"flex3Column\"></div>\n                    </div>\n        }\n    }\n    const stockClasses = 'r-10 m-1 color-yellow bold ';\n    const gameClasses = {\n        'standard': 'bg-dkGreen', \n        'ping pong': 'bg-dkGreen', \n        'golf': 'bg-dkGreen', \n        'cornhole': 'bg-dkYellow', \n        'horse': 'bg-dkYellow',\n        'horseshoes': 'bg-dkRed', \n        'bocci': 'bg-dkRed'\n    }\n    const buttonClass = 'bg-dark';\n    const getButtonClass = 'glassy button flex3Column p-10 r-10 m-1 ' + buttonClass;\n    const dartClass = () => (score >= winner) ? 'color-neogreen shakingShaka' : 'white';\n    const scoreButtonClasses = 'glassy flex3Column button bg-green r-10 color-neogreen navBranding centeredContent';\n    return (\n        <div>\n            <div className={stockClasses + gameClasses[game]}>\n                <div className='flexContainer'>\n                    <span className={scoreButtonClasses} onClick={() => subtractScore()}>-</span>\n                    <span \n                        className={getButtonClass} \n                        onClick={() => setEdit(!edit)}\n                    >\n                        <div></div>\n                        <div className={dartClass()}>{player}</div>\n                        <div className='p-5 r-5 navBranding'>\n                            {score}\n                        </div>\n                    </span>\n                    <span className={scoreButtonClasses} onClick={() => addScore()}>+</span>\n                </div>\n            </div>\n            {editNav()}\n        </div>        \n    )\n\n}\n   \nexport default ScoreCard;","/Users/js/Dev/my-first-reactor/src/components/site/GoogleAuth.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/LoginControl.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/Toggle.js",[],"/Users/js/Dev/my-first-reactor/src/components/functional/CopyrightText.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/StreamActions.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/StreamForm.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/ButtonAdmin.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/YouTube.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/SearchBar.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/VideoList.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/UnSplash.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/GridImage.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/VideoDetail.js",[],"/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js",[],"/Users/js/Dev/my-first-reactor/src/components/converter/LiquidVerdict.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/TemplateData.js",[],"/Users/js/Dev/my-first-reactor/src/components/converter/BoilingVerdict.js",[],"/Users/js/Dev/my-first-reactor/src/components/converter/TemperatureInput.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/Modal.js",[],"/Users/js/Dev/my-first-reactor/src/components/apis/config.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/UserHeader.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/BlogActions.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/Angles.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/Directions.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/Sunset.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/BuoyReport.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/WindDirection.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GetAngle.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/CreateLog.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/SwellSelector.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/Selector.js",["733"],"import React from 'react';\nimport FunctionalSelector from '../forms/FunctionalSelector.js';\n\nconst getLocalSpots = () => {\n    let uniqueSpots = [...new Set(getUnique(JSON.parse(localStorage.getItem('spots'))))];\n    return uniqueSpots;\n}\nconst getUnique = (array) => {\n    let uniqueSpots = [...new Set(array)];\n    return uniqueSpots;\n}\nconst selectorColor = (item, groupTitle, selected) => (selected(item,groupTitle)) ? \"completedSelector\" : \"incompletedSelector\";\n    \nconst Selector = (item, groupTitle, spot, defaultSelection, handleSelection, selected) => {\n    //console.log(`Selector: \\nitem: ${JSON.stringify(item, null,2)}\\ngroupTitle: ${groupTitle}\\nspot: ${spot}\\ndefaultSelection: ${defaultSelection}\\nhandleSelection: ${handleSelection}\\nselected: ${selected}`)\n    const isLocation = (groupTitle === 'Location') ? true : false;\n    const localLocations = (localStorage.getItem('spots')) ? true : false;\n    let items = item.selections;\n    const setLocal = () => (isLocation && !localLocations) ? localStorage.setItem('spots', JSON.stringify(items)) : null;\n    setLocal();\n    items = (isLocation && localLocations) ? getLocalSpots() : getUnique(items);\n    item.selections = items;\n    const addSpot = () => {\n        items.push(spot);\n        items = getUnique(items);\n        localStorage.setItem('spots', JSON.stringify(items))\n        return items;\n    }\n    const verifySpot = () => {\n        return (isLocation && !item.selections.includes(spot)) ? addSpot() : items;\n    }\n    //console.log(`spot: ${spot} \\n verifySpot(): ${verifySpot()} \\nselected: ${defaultSelection(item,groupTitle)}`)\n    \n    return <div className={\"r-vw p-vw\"}>\n        <div className=\"mb-5\">{item.description}: </div>\n        <div className=\"mb-5\">\n            <FunctionalSelector \n                groupTitle={groupTitle}  \n                label={item.description} \n                items={verifySpot()}\n                selected={defaultSelection(item,groupTitle)}\n                onChange={handleSelection}\n                fontSize='25'\n                padding='20px'\n                width='90%'\n            />\n        </div>\n    </div>;\n}\nexport default Selector","/Users/js/Dev/my-first-reactor/src/components/utils/RandomColor.js",[],"/Users/js/Dev/my-first-reactor/src/components/music/MusicActions.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/Group.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/RandomBackgroundColor.js",[],"/Users/js/Dev/my-first-reactor/src/components/forms/FormRadio.js",[],"/Users/js/Dev/my-first-reactor/src/components/functional/Dialog.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/tide/TideSelector.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/wind/WindSelector.js",["734","735"],"import React, { useState } from 'react';\nimport Selector from '../../forms/FunctionalSelector.js';\nimport WindDirection from '../WindDirection.js';\nimport directions from '../Directions.js';\nimport thumbsUp from '../../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../../assets/images/ThumbsDown.png';\n\nconst WindSelector = ({windDirection, pause, setWind, isWind, setStatus, handleWindCheck}) => {\n    //console.log(`WindSelector => isWind: ${isWind}`);\n    \n    const [filterByWind, setFilterByWind] = useState(isWind);\n    const backgroundColorClass = (localStorage.getItem('isWind') === 'true') ? 'bg-lite glassy fadeInFaded' : 'glassy fadeOutFaded';\n    const windClass = () => `${backgroundColorClass} flex2Column r-10 m-5 p-15`;\n    const handleWindSelection = (groupTitle, label, selected) => {\n        setStatus(selected)\n    }\n\n    return (\n        <div className={windClass()} onMouseDown={pause}>\n            {/*console.log(`windSelector => windDirection: ${status.windDirection}`)*/}\n            Wind<br/>\n            <div className=\"pt-10\">\n                <WindDirection columns=\"1\" setWind={setWind} height='150px'/>\n            </div>\n            <Selector\n                groupTitle=\"Wind\" \n                selected={windDirection} \n                label=\"Direction\"\n                items={directions}\n                onChange={handleWindSelection}\n                fontSize='20'\n                padding='5px'\n                width='93%'\n            />\n            <div className=\"button mt-15\" onClick={handleWindCheck}>\n                {(localStorage.getItem('isWind') === 'true') ? <img src={thumbsUp} alt='wind' className='p-10 r-20' /> : <img src={thumbsDown} alt='wind' className='p-10 r-20' /> }\n            </div>\n        </div>\n    );\n}\nexport default WindSelector;","/Users/js/Dev/my-first-reactor/src/components/forms/FormLogin.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/Countries.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/Greeting.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/LocalAuth.js",["736","737","738"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from '../../actions';\n\nclass LocalAuth extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSignedIn: this.props.isSignedIn,\n        };\n    }\n    onSignInClick = () => {\n        console.log(`LocalAuth => SignInClick!!! (${this.props.isSignedIn})`);\n        //this.auth.signIn();\n        this.props.setSignIn();\n    };\n    onSignOutClick = () => {\n        console.log(`LocalAuth => SignOutClick!!! (${this.props.isSignedIn})`);\n        //this.auth.signOut();\n        this.props.setSignIn();\n    };\n    renderAuthButton() {\n        if (this.state.isSignedIn === null) {\n            return null;\n        } else if (this.props.isSignedIn === true) {\n            return (\n                <button onClick={this.onSignOutClick} className=\"ui google button\">\n                <i className=\"larger middle aligned icon user\" />\n                Local Sign Out\n                </button>\n            );\n        } else {\n            return (\n                <button onClick={this.onSignInClick} className=\"ui google button\">\n                <i className=\"larger middle aligned icon user\" />\n                Local Sign In\n                </button>\n            );\n        }\n    }\n\n    render() {\n        return <React.Fragment>{this.renderAuthButton()}</React.Fragment>;\n    }\n}\n\nexport default LocalAuth;\n","/Users/js/Dev/my-first-reactor/src/apis/streams.js",[],"/Users/js/Dev/my-first-reactor/src/components/weather/Weekday.js",[],"/Users/js/Dev/my-first-reactor/src/components/weather/GetDirection.js",[],"/Users/js/Dev/my-first-reactor/src/components/weather/GetDirectionIcon.js",[],"/Users/js/Dev/my-first-reactor/src/apis/jsonPlaceholder.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/AirTemp.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/WaterTemp.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GetSurface.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GetWindMPH.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/WaveHeights.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GetWindOrientation.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GetWaveHeight.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GetNotes.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/VideoItem.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/Menu.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/NavClasses.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/TextColorizer.js",[],"/Users/js/Dev/my-first-reactor/src/actions/index.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/NavItems.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/useCurrentTime.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/LongPressButton.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRates.js",["739","740","741"],"import React, { useState, useEffect } from 'react';\n\nconst ExchangeRates = () => {\n\n  // set endpoint and your access key\n  //const endpoint = 'latest'\n  //const endpoint = '2000-01-17'\n  const endpoint = 'convert'\n  const access_key = '58e53558ca998da70c28b76dba516368';\n  const from = 'USD';\n  const to = 'EUR';\n  const amount = 25;\n\n  const templateData = {\n    success: true,\n    timestamp: 1519296206,\n    base: \"EUR\",\n    date: \"2021-03-17\",\n    rates: {\n          AUD: 1.566015,\n          CAD: 1.560132,\n          CHF: 1.154727,\n          CNY: 7.827874,\n          GBP: 0.882047,\n          JPY: 132.360679,\n          USD: 1.23396\n    }\n  }\n\n  //const [rates, setRates] = useState(null);\n  const [data, setData] = useState(templateData);\n\n  useEffect(() => {\n    const fetchRates = async () => {\n      try {\n        const response = await fetch('https://api.exchangeratesapi.io/v1/' + endpoint + '?access_key=' + access_key + '&from=' + from + '&to=' + to + '&amount=' + amount);\n        const data = await response.json();\n        //alert(JSON.stringify(data.error.code, null, 2));\n        setData(templateData);\n      } catch (error) {\n        //console.error('Error fetching exchange rates:', error);\n        setData(templateData);\n      }\n    };\n\n    fetchRates();\n  }, []);\n\n  if (!data) {\n    return <div>Loading...</div>;\n  }\n  \n  const rates = data.rates || templateData.rates;\n  \n  return (\n    <div>\n      <h2>Exchange Rates</h2>\n      <ul>\n        {Object.entries(data.rates).map(([currency, rate]) => (\n          <li key={currency}>\n            {currency}: {rate}\n          </li>\n        ))}\n      </ul>\n      Error code: {data.error?.code}\n      <br/>\n      Error message: {data.error?.message}\n    </div>\n  );\n  \n};\n\nexport default ExchangeRates;","/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeConverter.js",["742"],"import React, { useState, useEffect } from 'react';\nimport ExchangeRatesConfig from './ExchangeRatesConfig';\n\nconst ExchangeConverter = () => {\n\n    const currencies = {\n        MXN: `Pesos`,   // Mexican Peso\n        NIO: `Córdoba`,   // Nicaraguan Cordovas\n        CRC: `Colones`,    // Costa Rican Colones\n        IDR: `Rupiah`,  // Indonesian Rupiah\n        AUD: `AUD`,    // Australian Dollar\n    };\n\n    const [exchangeRates, setExchangeRates] = useState({});\n\n    const [usdAmount, setUsdAmount] = useState('');\n    const [selectedCurrency, setSelectedCurrency] = useState('MXN');\n    const [convertedAmount, setConvertedAmount] = useState('');\n    const [isToUsd, setIsToUsd] = useState(true);\n\n    const handleInputChange = (event) => {\n        setUsdAmount(event.target.value);\n    };\n\n    const handleCurrencyChange = (event) => {\n        setSelectedCurrency(event.target.value);\n    };\n\n    const handleConversion = () => {\n        if (isToUsd) {\n            const rate = exchangeRates[selectedCurrency];\n            const convertedValue = usdAmount / rate;\n            setConvertedAmount(convertedValue.toFixed(2));\n        } else {\n            const rate = exchangeRates[selectedCurrency];\n            const convertedValue = usdAmount * rate;\n            setConvertedAmount(convertedValue.toFixed(2));\n        }\n    };\n\n    const handleConversionDirection = () => {\n        setIsToUsd(!isToUsd);\n        setUsdAmount('');\n        setConvertedAmount('');\n    };\n\n    const currencyConverting = () => {\n        return currencies[selectedCurrency]\n    }\n    \n    return (\n        <div>\n            <ExchangeRatesConfig onExchangeRatesChange={setExchangeRates}></ExchangeRatesConfig>\n            <div className='bg-yellow size25 timerBox m-20 p-30 bold color-black' onClick={handleConversionDirection}>\n                {isToUsd ? 'Convert to USD' : 'Convert from USD'}\n            </div>\n            <div className='bg-darker r-10 p-10 ml-20 mr-20 mb-1 bold'>\n                <div className='size25 color-light mb-20 mt-10'>\n                    <label>\n                        {!isToUsd ? 'Convert to:' : 'Convert from:'}\n                        <select className='timerBox color-black' value={selectedCurrency} onChange={handleCurrencyChange}>\n                            <option value=\"MXN\">Mexican Peso ({exchangeRates.MXN})</option>\n                            <option value=\"NIO\">Nicaraguan Córdoba ({exchangeRates.NIO})</option>\n                            <option value=\"CRC\">Costa Rican Colone ({exchangeRates.CRC})</option>\n                            <option value=\"IDR\">Indonesian Rupiah ({exchangeRates.IDR})</option>\n                            <option value=\"AUD\">Australian Dollar ({exchangeRates.AUD})</option>\n                        </select>\n                    </label>\n                </div>\n            </div>\n            <div className='bg-darker r-10 p-10 mr-20 ml-20 bold'>\n                <div className='size25 m-20 color-light'>\n                    <label>\n                        {isToUsd ? `${currencyConverting()}: $` : 'US Dollars: $'}\n                        <input className='timerBox color-black' type='number' value={usdAmount} onChange={handleInputChange} />\n                    </label>\n                </div>\n            </div>\n            <div className='bg-orange size25 timerBox m-20 color-black bold p-30' onClick={handleConversion}>Convert</div>\n            {convertedAmount && (\n                <div className='size25 color-light bold p-30 bold m-20 r-10 bg-green'>\n                    {isToUsd\n                        ? `Converted Amount: ${convertedAmount} USD`\n                        : `Converted Amount: ${convertedAmount} ${selectedCurrency}`}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ExchangeConverter;","/Users/js/Dev/my-first-reactor/src/components/utils/DualVideoPlayer.js",["743"],"import React, { useState, useRef, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport VideoPlayer from './VideoPlayer';\nimport VideoNavigation from './VideoNavigation';\n\nconst DualVideoPlayer = forwardRef(({ src1, src2 }, ref) => {\n\n  const [status, setStatus] = useState({\n    startTime1: 0,\n    startTime2: 0,\n    videoPlayer1Ref: useRef(null),\n    videoPlayer2Ref: useRef(null),\n    isPlaying: false,\n    isSlow: false,\n    isSlowRewind: false,\n    isMediumRewind: false,\n    isMedium: false,\n    isFast: false\n  });\n\n  useEffect(() => {\n    const speed = (status.isMediumRewind) ? 250 : 80;\n    const interval = (status.isSlowRewind) ? 300 : speed;\n    console.log(`status startTime1: ${(status.startTime1) ? status.endTime1 : '??'}`);\n    console.log(`status startTime2: ${(status.endTime2) ? status.endTime2 : '??'}`);\n    console.log(`status endTime1: ${(status.endTime1) ? status.endTime1 : '??'}`);\n    console.log(`status endTime2: ${(status.endTime2) ? status.endTime2 : '??'}`);\n    const intervalId = setInterval(() => {\n      const time1 = status.videoPlayer1Ref.current.currentTime - 0.05;\n      const time2 = status.videoPlayer2Ref.current.currentTime - 0.05;\n      if ((status.isSlowRewind || status.isMediumRewind || status.isRewind) && status.isPlaying && ((status.videoPlayer1Ref.current.currentTime > status.startTime1) || (status.videoPlayer2Ref.current.currentTime > status.startTime2))) {\n        console.log(`SLOOOOW REEEEEEwind!!! status.videoPlayer1Ref.current.currentTime: ${status.videoPlayer1Ref.current.currentTime} startTime1: ${status.startTime1} status.videoPlayer2Ref.current.currentTime: ${status.videoPlayer2Ref.current.currentTime}  startTime2: ${status.startTime2}`)\n        if (status.videoPlayer1Ref.current.currentTime > (status.startTime1)) status.videoPlayer1Ref.current.currentTime = time1;\n        if (status.videoPlayer2Ref.current.currentTime > (status.startTime2)) status.videoPlayer2Ref.current.currentTime = time2;\n      } else if ((status.isSlowRewind || status.isMediumRewind || status.isRewind) && status.isPlaying && ((status.videoPlayer1Ref.current.currentTime <= status.startTime1) && (status.videoPlayer2Ref.current.currentTime <= status.startTime2))) {\n        console.log(`STOOOOP SLOOOOW REEEEEEwind!!! status.videoPlayer1Ref.current.currentTime: ${status.videoPlayer1Ref.current.currentTime} startTime1: ${status.startTime1} status.videoPlayer2Ref.current.currentTime: ${status.videoPlayer2Ref.current.currentTime}  startTime2: ${status.startTime2}`)\n        clearInterval(intervalId);\n        setStatus(prevState => ({\n          ...prevState,\n          isPlaying: false\n        }));\n      } else if (!status.isPlaying) {\n        console.log(`STOOOOP REEEEEEwind!!!`)\n        clearInterval(intervalId);\n      }\n    }, interval);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n\n  }, [status.isPlaying, status.isSlowRewind, status.isMediumRewind, status.isRewind, status.startTime1, status.startTime2, status.videoRef]);\n\n  const handleTimeUpdate1 = time => {\n    /*\n    setStatus(prevState => ({\n      ...prevState,\n      currentTime1: time\n    }));\n    */\n  };\n\n  const handleTimeUpdate2 = time => {\n    /*\n    setStatus(prevState => ({\n      ...prevState,\n      currentTime2: time\n    }));\n    */\n  };\n  const handleStartTimeUpdate1 = time => {\n    console.log(\"handleStartTimeUpdate1\", time);\n    setStatus(prevState => ({\n      ...prevState,\n      startTime1: time\n    }));\n  };\n  const handleStartTimeUpdate2 = time => {\n    console.log(\"handleStartTimeUpdate2\", time);\n    setStatus(prevState => ({\n      ...prevState,\n      startTime2: time\n    }));\n  };\n  const handleEndTimeUpdate1 = time => {\n    console.log(\"handleEndTimeUpdate1\", time);\n    setStatus(prevState => ({\n      ...prevState,\n      endTime1: time\n    }));\n  };\n  const handleEndTimeUpdate2 = time => {\n    console.log(\"handleEndTimeUpdate2\", time);\n    setStatus(prevState => ({\n      ...prevState,\n      endTime2: time\n    }));\n  };\n\n  useImperativeHandle(ref, () => ({\n    setStatus,\n  }));\n\n  const handlePlayPause = (id) => {\n    console.log(`handlePlayPause id: ${id}`);\n    if (status.isPlaying) {\n      console.log(`handlePlayPause => pause id: ${id}`);\n\n      if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n        status.videoPlayer1Ref.current.pause();\n      };\n      if ((id === '1' || id === 'both') && status.videoPlayer2Ref.current) {\n        status.videoPlayer2Ref.current.pause();\n      }\n\n      setStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    } else {\n      console.log(`handlePlayPause => play id: ${id}`);\n\n      if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n        status.videoPlayer1Ref.current.playbackRate = 1;\n        status.videoPlayer1Ref.current.play();\n      }\n      if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n        status.videoPlayer2Ref.current.playbackRate = 1;\n        status.videoPlayer2Ref.current.play();\n      }\n\n      setStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false,\n      }));\n    }\n  };\n\n  const handleRewind = (id) => {\n\n    if (status.videoPlayer1Ref.current) {\n      console.log(`handleRewind id: ${id}`);\n      if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n        status.videoPlayer1Ref.current.pause();\n      };\n      if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n        status.videoPlayer2Ref.current.pause();\n      };\n      setStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: true,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n  const handleJumpToStart = (id) => {\n    //console.log(`handleJumpToStart id: ${id} startTime1: ${status.startTime1} startTime2: ${status.startTime2}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      //alert(`handleJumpToStart id: ${id} startTime1: ${status.startTime1}`);\n      //status.videoPlayer1Ref.current.pause();\n      status.videoPlayer1Ref.current.currentTime = status.startTime1 || 0;\n    };\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      //alert(`handleJumpToStart id: ${id} startTime2: ${status.startTime2}`);\n      //status.videoPlayer2Ref.current.pause();\n      status.videoPlayer2Ref.current.currentTime = status.startTime2 || 0;\n    };\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: false,\n      isRewind: false,\n      isFast: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false\n    }));\n  };\n  const handleJumpToEnd = (id) => {\n    console.log(`handleJumpToEnd id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      //alert(`handleJumpToEnd id: ${id} endTime1: ${status.endTime1}`);\n      status.videoPlayer1Ref.current.pause();\n      status.videoPlayer1Ref.current.currentTime = status.endTime1;\n    };\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      //alert(`handleJumpToEnd id: ${id} endTime1: ${status.endTime2}`);\n      status.videoPlayer2Ref.current.pause();\n      status.videoPlayer2Ref.current.currentTime = status.endTime2;\n    };\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: false,\n      isRewind: false,\n      isFast: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false\n    }));\n  };\n  const handleMinusOne = (id) => {\n    console.log(`handleMinusOne id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      status.videoPlayer1Ref.current.pause();\n      status.videoPlayer1Ref.current.currentTime -= 0.05;\n    };\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      status.videoPlayer2Ref.current.pause();\n      status.videoPlayer2Ref.current.currentTime -= 0.05;\n    };\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: false,\n      isRewind: false,\n      isFast: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false\n    }));\n  };\n  const handleAddOne = (id) => {\n    console.log(`handlePlusOne: id(${id})`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      status.videoPlayer1Ref.current.pause();\n      status.videoPlayer1Ref.current.currentTime += 0.05;\n    }\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      status.videoPlayer2Ref.current.pause();\n      status.videoPlayer2Ref.current.currentTime += 0.05;\n    }\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: false,\n      isRewind: false,\n      isFast: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false\n    }));\n  };\n\n  const handleSlowRewind = (id) => {\n    console.log(`handleSlowMotionRewind id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) status.videoPlayer1Ref.current.pause();\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) status.videoPlayer2Ref.current.pause();\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: true,\n      isRewind: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: true,\n      isMediumRewind: false,\n      isFast: false\n    }));\n  };\n\n  const handleMediumRewind = (id) => {\n    console.log(`handleMediumMotionRewind id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) status.videoPlayer1Ref.current.pause();\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) status.videoPlayer2Ref.current.pause();\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: true,\n      isRewind: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: true,\n      isFast: false\n    }));\n  };\n\n  const handleSlowMotion = (id) => {\n    console.log(`handleSlowMotion id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      status.videoPlayer1Ref.current.playbackRate = .2;\n      status.videoPlayer1Ref.current.play();\n    }\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      status.videoPlayer2Ref.current.playbackRate = .2;\n      status.videoPlayer2Ref.current.play();\n    }\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: true,\n      isRewind: false,\n      isSlow: true,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false,\n      isFast: false\n    }));\n  };\n  const handleMediumMotion = (id) => {\n    console.log(`handleMediumMotion id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      status.videoPlayer1Ref.current.playbackRate = .5;\n      status.videoPlayer1Ref.current.play();\n    }\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      status.videoPlayer2Ref.current.playbackRate = .5;\n      status.videoPlayer2Ref.current.play();\n    }\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: true,\n      isSlow: false,\n      isMedium: true,\n      isSlowRewind: false,\n      isMediumRewind: false,\n      isRewind: false,\n      isFast: false,\n      playbackRate: 0.5\n    }));\n  };\n\n  const handleFastForward = (id) => {\n    console.log(`handleFastMotion id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      status.videoPlayer1Ref.current.playbackRate = 2;\n      status.videoPlayer1Ref.current.play();\n    };\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      status.videoPlayer2Ref.current.playbackRate = 2;\n      status.videoPlayer2Ref.current.play();\n    };\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: true,\n      isFast: true,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false,\n      isRewind: false,\n      playbackRate: 0.5\n    }));\n  };\n\n  return (\n    <div>\n      <div>\n        <div className='dualVideoPlayer'>\n          <VideoPlayer\n            id='1'\n            src={src1}\n            onTimeUpdate={handleTimeUpdate1}\n            onStartTimeUpdate={handleStartTimeUpdate1}\n            onEndTimeUpdate={handleEndTimeUpdate1}\n            handleJumpToStart={handleJumpToStart}\n            handleMinusOne={handleMinusOne}\n            handleRewind={handleRewind}\n            handleMediumRewind={handleMediumRewind}\n            handleSlowRewind={handleSlowRewind}\n            handlePlayPause={handlePlayPause}\n            handleSlowMotion={handleSlowMotion}\n            handleMediumMotion={handleMediumMotion}\n            handleFastForward={handleFastForward}\n            handleAddOne={handleAddOne}\n            handleJumpToEnd={handleJumpToEnd}\n            startTime={status.startTime1}\n            endTime={status.endTime1}\n            playStatus={true}\n            ref={status.videoPlayer1Ref}\n          />\n        </div>\n        <div className='dualVideoPlayer'>\n          <VideoPlayer\n            id='2'\n            src={src2}\n            onTimeUpdate={handleTimeUpdate2}\n            onStartTimeUpdate={handleStartTimeUpdate2}\n            onEndTimeUpdate={handleEndTimeUpdate2}\n            handleMinusOne={handleMinusOne}\n            handleRewind={handleRewind}\n            handleMediumRewind={handleMediumRewind}\n            handleSlowRewind={handleSlowRewind}\n            handlePlayPause={handlePlayPause}\n            handleSlowMotion={handleSlowMotion}\n            handleMediumMotion={handleMediumMotion}\n            handleFastForward={handleFastForward}\n            handleAddOne={handleAddOne}\n            ref={status.videoPlayer2Ref}\n            playStatus={true}\n            startTime={status.startTime2}\n            endTime={status.endTime2}\n          />\n        </div>\n      </div>\n      <VideoNavigation\n        handleJumpToStart={() => handleJumpToStart('both')}\n        handleMinusOne={() => handleMinusOne('both')}\n        handleRewind={() => handleRewind('both')}\n        handleMediumRewind={() => handleMediumRewind('both')}\n        handleSlowRewind={() => handleSlowRewind('both')}\n        handlePlayPause={() => handlePlayPause('both')}\n        handleSlowMotion={() => handleSlowMotion('both')}\n        handleMediumMotion={() => handleMediumMotion('both')}\n        handleFastForward={() => handleFastForward('both')}\n        handleAddOne={() => handleAddOne('both')}\n        handleJumpToEnd={() => handleJumpToEnd('both')}\n        playerStatus={status}\n      />\n    </div>\n  );\n});\n\nexport default DualVideoPlayer;","/Users/js/Dev/my-first-reactor/src/components/utils/ExpenseTracker.js",["744","745","746","747","748","749","750","751","752","753"],"import React, { useState, useEffect } from 'react';\nimport ExchangeRatesConfig from './ExchangeRatesConfig';\n\nconst ExpenseTracker = () => {\n\n  const countries = {\n    USD: {\n      country: `US`,\n      dollar: `Dollar`\n    },\n    MXN: {\n      country: `Mexico`,\n      dollar: `Pesos`,\n    },\n    NIO: {\n      country: `Nicaragua`,\n      dollar: `Córdoba`,\n    },\n    CRC: {\n      country: `Costa Rica`,\n      dollar: `Colones`,\n    },\n    IDR: {\n      country: `Indonesia`,\n      dollar: `Rupiah`,\n    },\n    AUD: {\n      country: `Australia`,\n      dollar: `AUD`,\n    }\n  }\n\n  const currencyCode = [\n    'USD',\n    'MXN',\n    'NIO',\n    'CRC',\n    'IDR',\n    'AUD',\n  ];\n  const currencyOptions = {\n    US: 'USD',\n    Mexico: 'MXN',\n    Nicaragua: 'NIO',\n    'Costa Rica': 'CRC',\n    Indonesia: 'IDR',\n    Australia: 'AUD',\n  };\n\n  const currencies = {\n    USD: 'Dollar',\n    MXN: `Pesos`,   // Mexican Peso\n    NIO: `Córdoba`,   // Nicaraguan Cordovas\n    CRC: `Colones`,    // Costa Rican Colones\n    IDR: `Rupiah`,  // Indonesian Rupiah\n    AUD: `AUD`,    // Australian Dollar\n  };\n\n  const [exchangeRates, setExchangeRates] = useState({});\n  const [usdAmount, setUsdAmount] = useState('');\n  const [selectedCurrency, setSelectedCurrency] = useState('MXN');\n  const [convertedAmount, setConvertedAmount] = useState('');\n  const [settings, setSettings] = useState(false)\n  const [expenses, setExpenses] = useState([]);\n  const [countryCode, setCountryCode] = useState([]);\n  const [expenseData, setExpenseData] = useState({\n    date: '',\n    time: '',\n    expense: '',\n    location: '',\n    cost: '',\n    currency: '',\n    countryCode: ''\n  });\n\n  useEffect(() => {\n    const savedExchangeRates = localStorage.getItem('exchangeRates');\n    if (savedExchangeRates) {\n      setExchangeRates(JSON.parse(savedExchangeRates));\n    }\n  }, []);\n\n  useEffect(() => {\n    const savedExpenses = localStorage.getItem('expenses');\n    if (savedExpenses) {\n      setExpenses(JSON.parse(savedExpenses));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('expenses', JSON.stringify(expenses));\n  }, [expenses]);\n\n  const handleInputRateChange = (event) => {\n    const { name, value } = event.target;\n    setExpenseData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleAddExpense = () => {\n    const newExpense = { ...expenseData };\n    newExpense.date = getCurrentDate();\n    newExpense.time = getCurrentTime();\n    setExpenses((prevExpenses) => [...prevExpenses, newExpense]);\n    setExpenseData({\n      date: '',\n      time: '',\n      expense: '',\n      location: '',\n      cost: '',\n      currency: '',\n      countryCode: ''\n    });\n  };\n  const removeExpense = (index) => {\n    const savedExpenses = localStorage.getItem('expenses');\n    const expenseUpdate = JSON.parse(savedExpenses);\n    expenseUpdate.splice(index, 1);\n    setExpenses(expenseUpdate);\n  }\n\n  const getCurrentDate = () => {\n    const currentDate = new Date();\n    return currentDate.toDateString();\n  };\n\n  const getCurrentTime = () => {\n    const currentTime = new Date();\n    return currentTime.toLocaleTimeString();\n  };\n  useEffect(() => {\n    localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n  }, [exchangeRates]);\n\n  const handleExpenseInputChange = (event) => {\n    setUsdAmount(event.target.value);\n    console.log(`${selectedCurrency}: ${event.target.value} - USD: ${convertToUS(event.target.value)}`)\n  };\n  const handleCurrencyInputChange = (event) => {\n    //console.log(event.target.value)\n    //alert(`USD: ${event.target.value}`)\n    setSelectedCurrency(event.target.value);\n  };\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    if (name === 'cost') {\n      handleExpenseInputChange(event);\n    }\n    if (name === 'currency') {\n      handleCurrencyInputChange(event);\n    }\n    setExpenseData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleCurrencyChange = (currency) => {\n    setSelectedCurrency(currency);\n  };\n\n  const convertToUS = (amount) => {\n      console.log(`convertToUS(${amount}) selectedCurrency: ${selectedCurrency}`)\n      const rate = exchangeRates['MXN'];\n      console.log(`convertToUS(${amount}) rate(${rate})`)\n      const convertedValue = amount / rate;\n      const converted = convertedValue.toFixed(2);\n      setConvertedAmount(converted);\n      return converted;\n  };\n\n  const reversedExpenses = [...expenses].reverse().map((item) => {\n    // Perform your mapping logic here\n    return item * 2;\n  });\n\n  return (\n    <div>\n      <ExchangeRatesConfig onExchangeRatesChange={setExchangeRates}></ExchangeRatesConfig>\n      <div className='bg-darker r-10 p-10 ml-20 mr-20 mb-1 bold'>\n        <label>\n          Expense:\n          <input\n            type=\"text\"\n            name=\"expense\"\n            value={expenseData.expense}\n            onChange={handleInputChange}\n            className='r-10 p-10 mr-20 ml-20 bold'\n          />\n        </label>\n      </div>\n      <br />\n      <div className='bg-darker r-10 p-10 ml-20 mr-20 mb-1 bold'>\n        <label>\n          Location:\n          <select\n            name=\"location\"\n            value={expenseData.location}\n            onChange={handleInputChange}\n            className='r-10 p-10 mr-20 ml-20 bold'\n          >\n            <option value=\"\">Select Location</option>\n            {Object.keys(currencyOptions).map((location) => (\n              <option key={location} value={location}>\n                {location}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <br />\n      <div className='bg-darker r-10 p-10 ml-20 mr-20 mb-1 bold'>\n        <label>\n          Currency:\n          <select\n            name=\"currency\"\n            value={expenseData.currency}\n            onChange={handleInputChange}\n            className='r-10 p-10 mr-20 ml-20 bold'\n          >\n            <option value=\"\">Select Currency</option>\n            {currencyCode.map((currency) => (\n              <option key={currency} value={currency}>\n                {currencies[currency]}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <br />\n      <div className='bg-darker r-10 p-10 ml-20 mr-20 mb-1 bold'>\n        <label>\n          Cost:\n          <input\n            type=\"number\"\n            name=\"cost\"\n            value={expenseData.cost}\n            onChange={handleInputChange}\n            className='r-10 p-10 mr-20 ml-20 bold'\n          />\n        </label>\n      </div>\n      <br />\n      <div>\n        <div className='bg-orange greet timerBox m-20 color-black' onClick={handleAddExpense}>Add Expense</div>\n      </div>\n      <br />\n      <br />\n      <div className='bg-darker r-10 p-10 ml-20 mr-20 mb-1 bold'>\n        <h3>Expense List</h3>\n        {expenses.length === 0 ? (\n          <p>No expenses recorded.</p>\n        ) : (\n          <ol>\n            {[...expenses].reverse().map((expense, index) => (\n              <li className='p-10 ml-20 mr-20 mb-1 bold lowerBorder size20' key={index}>\n                {expense.expense}: {expense.cost/*exchangeRates[expense.currency]'USD'*/} {expense.currency}\n                <div className='copyright'>\n                  {expense.date} - {expense.time} - {expense.location} : {expense.countryCode} - ${expense.cost} {expense.currency}s\n                </div>\n                <div \n                  className='copyright color-red brdr-red button p-10 r-5 b-1 m-5'\n                  onClick={() => removeExpense(index)}\n                >\n                  delete\n                </div>\n              </li>\n            ))}\n          </ol>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseTracker;","/Users/js/Dev/my-first-reactor/src/components/utils/Fireworks.js",["754"],"import React from 'react';\n\nconst Fireworks = ({ display, quantity }) => {\n  console.log(`Fireworks => display: ${display}, count: ${quantity}`);\n  \n  const renderFirework = () => {\n    const fireworks = [];\n    const half = (number) => Math.floor(number / 2);\n    const getStyle = (quantity, i) => {\n      return {\n        '--x': `${(60 * Math.random())-30}vmin`,\n        '--speed': `${(10 * Math.random())}s`,\n        '--verticalDistance': `${((-50 * Math.random())) * Math.random()}vmin`,\n        '--finalSize': `${((150 * Math.random())) * Math.random()}vmin`,\n        '--particleSize': `${(i * (5 * Math.random() + 1))}vmin`\n      };\n    };\n    for (let i = 0; i < quantity; i++) {\n      fireworks.push(\n        <div className=\"firework\" key={i} style={getStyle(quantity, i)}></div>\n      );\n    }\n    return fireworks;\n  };\n\n  if (display === 'true') {\n    return <div>{renderFirework()}</div>;\n  }\n  return <div></div>;\n};\n\nexport default Fireworks;","/Users/js/Dev/my-first-reactor/src/components/utils/TaskTracker.js",["755","756","757","758"],"import React, { useState, useEffect } from 'react';\nimport DropDown from '../forms/DropDown.js';\nimport thumbsUp from '../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../assets/images/ThumbsDown.png';\n\nconst ProjectTaskTracker = () => {\n\n    const [projects, setProjects] = useState(JSON.parse(localStorage.getItem('projects')) || []);\n    const [tracking, setTracking] = useState(localStorage.getItem('tracking') || 'tasks');\n    const [isCollapsed, setIsCollapsed] = useState(false);\n    const [newProjectDescription, setNewProjectDescription] = useState((tracking === 'sets') ? 'WAVES' : (tracking === 'solar/battery') ? 'Solar / Battery Log' : '');\n    const [newTaskDescription, setNewTaskDescription] = useState('');\n    const [activeProjectIndex, setActiveProjectIndex] = useState(-1);\n\n    const trackables = ['tasks', 'sets', 'events', 'solar/battery'];\n\n    useEffect(() => {\n        const storedProjects = localStorage.getItem('projects');\n        if (storedProjects) {\n            setProjects(JSON.parse(storedProjects));\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('projects', JSON.stringify(projects));\n    }, [projects]);\n    /*\n        useEffect(() => {\n            localStorage.setItem('tracking', tracking);\n            console.log(`tracking: ${JSON.stringify(tracking,null,2)}`)\n            if (tracking === 'sets') {\n                setNewProjectDescription('WAVES');\n                return (projects.length<1) ? handleAddProject(): null;\n            }\n        }, [tracking]);\n    */\n    useEffect(() => {\n        localStorage.setItem('tracking', tracking);\n        if (tracking === 'sets') {\n            setNewProjectDescription('WAVES');\n            const storedProjects = localStorage.getItem('projects');\n            if (storedProjects) {\n                const currentProjects = JSON.parse(storedProjects);\n                if (currentProjects.length < 1) {\n                    handleAddProject();\n                }\n            }\n        }\n        if (tracking === 'solar/battery') {\n            setNewProjectDescription('Solar / Battery Log');\n            const storedProjects = localStorage.getItem('projects');\n            if (storedProjects) {\n                const currentProjects = JSON.parse(storedProjects);\n                if (currentProjects.length < 1) {\n                    handleAddProject();\n                }\n            }\n        }\n    }, [tracking]);\n\n    const handleDropdownChange = (event) => {\n        setTracking(event.target.value);\n    };\n\n    const handleAddProject = () => {\n        const project = {\n            description: newProjectDescription,\n            createdDate: new Date().toLocaleString(),\n            startTime: new Date().getTime(),\n            tasks: []\n        };\n        setProjects(prevProjects => [project, ...prevProjects]);\n    };\n\n    const addTask = (projectIndex) => {\n        const taskDescription = (tracking !== 'solar/battery') \n            ? prompt('Enter task description:') \n            : null;\n        const batteryDescription = (tracking === 'solar/battery') \n            ? prompt('Battery Type:') \n            : null;\n        const batteryLevel = (tracking === 'solar/battery') \n            ? prompt('Battery Level:') \n            : null;\n        const solarDescription = (tracking === 'solar/battery') \n            ? prompt('Solar Type:') \n            : null;\n        const solarLogDescription = `${batteryDescription} + ${solarDescription}: ${batteryLevel}-100%`\n        if (taskDescription || batteryDescription) {\n            const session = {\n                startDate: new Date().toLocaleString(),\n                startTime: new Date().getTime(),\n                endTime: '',\n                endDate: '',\n                totalTime: '',\n                runningTime: '0s'\n            }\n            const sessions = [];\n            sessions.push(session);\n            const task = {\n                startTime: new Date().getTime(),\n                endTime: '',\n                description: (tracking === 'tasks') ? taskDescription : solarLogDescription,\n                sessions: sessions,\n                isRunning: true,\n                runningTime: '0s'\n            };\n            const updatedProjects = [...projects];\n            updatedProjects[projectIndex].tasks.unshift(task);\n            updatedProjects[projectIndex].isCollapsed = false;\n            setProjects(updatedProjects);\n        }\n    };\n\n    const addSet = (projectIndex) => {\n        const updatedProjects = [...projects];\n        const taskDescription = `Set ${updatedProjects[projectIndex].tasks.length + 1}`;\n        if (taskDescription) {\n            const session = {\n                startDate: new Date().toLocaleString(),\n                startTime: new Date().getTime(),\n                endTime: '',\n                endDate: '',\n                totalTime: '',\n                runningTime: '0s'\n            }\n            const sessions = [];\n            sessions.push(session);\n            const task = {\n                startTime: new Date().getTime(),\n                endTime: '',\n                description: taskDescription,\n                sessions: sessions,\n                isRunning: true,\n                runningTime: '0s'\n            };\n            updatedProjects[projectIndex].tasks.unshift(task);\n            updatedProjects[projectIndex].isCollapsed = false;\n            setProjects(updatedProjects);\n        }\n    };\n\n    const handleAddTask = (projectIndex) => {\n        const task = {\n            description: newTaskDescription,\n            startDate: new Date().toLocaleString(),\n            startTime: new Date().getTime(),\n            endTime: '',\n            endDate: '',\n            totalTime: '',\n            runningTime: '0s',\n            isRunning: true\n        };\n        const updatedProjects = [...projects];\n        updatedProjects[activeProjectIndex].tasks.unshift(task);\n        setProjects(updatedProjects);\n        setNewTaskDescription('');\n        setActiveProjectIndex(projectIndex)\n    };\n\n    const handleDeleteProject = (index) => {\n        const updatedProjects = [...projects];\n        updatedProjects.splice(index, 1);\n        setProjects(updatedProjects);\n    };\n\n    const handleDeleteTask = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        updatedProjects[projectIndex].tasks.splice(taskIndex, 1);\n        setProjects(updatedProjects);\n    };\n\n    const handleStartTask = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        task.sessions = task.sessions || [];\n        task.isRunning = true;\n        //task.startDate = new Date().toLocaleString();\n        const session = {\n            startDate: new Date().toLocaleString(),\n            startTime: new Date().getTime(),\n            endTime: ''\n        }\n        task.sessions.push(session)\n        setProjects(updatedProjects);\n        startTimer(projectIndex, taskIndex);\n    };\n    const addWave = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        task.sessions = task.sessions || [];\n        task.isRunning = false;\n        //task.startDate = new Date().toLocaleString();\n        const session = {\n            startDate: new Date().toLocaleString(),\n            startTime: new Date().getTime(),\n            endTime: new Date().getTime(),\n        }\n        task.sessions.push(session)\n        setProjects(updatedProjects);\n    };\n    const subtractWave = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        task.sessions = task.sessions || [];\n        task.isRunning = false;\n        task.sessions.pop();\n        setProjects(updatedProjects);\n    };\n    const getTotalTime = (totalTimeMilliseconds) => {\n        let hours = Math.floor(totalTimeMilliseconds / 3600000);\n        hours = (hours < 10) ? `0${hours}` : hours;\n        let minutes = Math.floor((totalTimeMilliseconds % 3600000) / 60000);\n        minutes = (minutes < 10) ? `0${minutes}` : minutes;\n        let seconds = Math.floor((totalTimeMilliseconds % 60000) / 1000);\n        seconds = (seconds < 10) ? `0${seconds}` : seconds;\n        const totalTime = `${hours}:${minutes}:${seconds}`;\n        return totalTime\n    }\n    const handleStopTask = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        task.sessions = task.sessions || [];\n        task.isRunning = false;\n        const startTime = task.sessions[task.sessions.length - 1].startTime;\n        const startDate = task.sessions[task.sessions.length - 1].startDate;\n        const endTime = new Date().getTime();\n        const endDate = new Date().toLocaleString();\n        const totalTimeMilliseconds = Math.round(endTime - startTime);\n        const totalTime = getTotalTime(totalTimeMilliseconds);\n        let runningTime = task.sessions[task.sessions.length - 1].runningTime;\n        runningTime = (runningTime === undefined) ? task.sessions[task.sessions.length - 2].runningTime : runningTime;\n        //alert(`runningTime: ${runningTime}`)\n        runningTime = (runningTime === '0s') ? totalTimeMilliseconds : (runningTime + totalTimeMilliseconds);\n        const runningTimeDisplay = getTotalTime(runningTime);\n        const session = {\n            startDate: startDate,\n            startTime: startTime,\n            endDate: endDate,\n            endTime: endTime,\n            totalTime: totalTime,\n            runningTime: runningTime,\n            runningTimeDisplay: runningTimeDisplay\n        }\n        //alert(JSON.stringify(session,null,2))\n        task.runningTime = runningTime;\n        task.runningTimeDisplay = runningTimeDisplay;\n        task.sessions.push(session)\n        setProjects(updatedProjects);\n        stopTimer(projectIndex, taskIndex);\n    };\n\n    const startTimer = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        const startTime = new Date().getTime();\n        const session = task.sessions[task.sessions.length - 1]\n\n        task.timerId = setInterval(() => {\n            const currentTime = new Date().getTime();\n            const elapsedTime = currentTime - startTime;\n            const seconds = Math.floor(elapsedTime / 1000);\n            const minutes = Math.floor(seconds / 60);\n            const hours = Math.floor(minutes / 60);\n            const timeString = `${(hours < 10) ? `0${hours}` : hours}:${((minutes % 60) < 10) ? `0${(minutes % 60)}` : (minutes % 60)}:${((seconds % 60) < 10) ? `0${(seconds % 60)}` : (seconds % 60)}`;\n            //task.runningTime = timeString;\n            //task.runningTimeDisplay = timeString;\n            //session.runningTime = timeString;\n            //session.runningTimeDisplay = timeString;\n            setProjects(updatedProjects);\n        }, 1000);\n    };\n\n    const stopTimer = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        const session = task.sessions[task.sessions.length - 1]\n        clearInterval(task.timerId);\n        task.sessions.splice((task.sessions.length - 2), 1);\n        task.totalTime = task.totalTime + session.runningTime;\n        setProjects(updatedProjects);\n    };\n\n    const handleToggleCollapse = () => {\n        setIsCollapsed(!isCollapsed);\n    };\n    const handleProjectToggle = (projectIndex) => {\n        //setIsCollapsed(!isCollapsed);\n        const updatedProjects = [...projects];\n        const project = updatedProjects[projectIndex];\n        project.isCollapsed = !project.isCollapsed;\n\n        setProjects(updatedProjects);\n        return (!project.isCollapsed) ? setIsCollapsed(false) : null;\n    };\n\n    const getProjectTime = (project) => {\n        let projectTotal = 0;\n        project.tasks.forEach((task) => {\n            console.log(`${project.description} task: ${getTotalTime(task.runningTime)}`)\n            projectTotal += task.runningTime;\n        });\n        project.totalTime = projectTotal;\n        console.log(`getProjectTime => ${project.description}: ${getTotalTime(projectTotal)}`)\n        return projectTotal;\n    };\n\n\n    return (\n        <div>\n            <div className='color-dark'>\n                <DropDown\n                    value={tracking}\n                    options={trackables}\n                    onChange={handleDropdownChange}\n                />\n            </div>\n            <h2>Project Task Tracker</h2>\n            <button onClick={handleToggleCollapse}>{isCollapsed ? 'Expand All' : 'Collapse All'}</button>\n            <br />\n            <br />\n            {(tracking === 'tasks') ?\n                <React.Fragment>\n                    <div>\n                        <h3>Add Project</h3>\n                        <input\n                            type=\"text\"\n                            value={newProjectDescription}\n                            onChange={(e) => setNewProjectDescription(e.target.value)}\n                            onKeyDown={(e) => {\n                                if (e.key === 'Enter') {\n                                    e.preventDefault();\n                                    handleAddProject();\n                                }\n                            }}\n                        />\n\n                        <button onClick={handleAddProject}>Add Project</button>\n                    </div>\n                    <br />\n                    <div>\n                        <h3>Projects</h3>\n                        {projects.map((project, projectIndex) => (\n                            <div key={projectIndex} className='r-10 bg-darker m-5 p-10'>\n                                <div className='r-10 bg-black m-5 p-10'>\n                                    <div className='greet bold color-yellow'>{project.description}</div>\n                                    <div className='copyright color-light'>{project.createdDate} Time: {getTotalTime(getProjectTime(project))}</div>\n                                    <button onClick={() => addTask(projectIndex)}>\n                                        Add Task\n                                    </button>\n                                    <button onClick={() => handleDeleteProject(projectIndex)}>\n                                        Delete Project\n                                    </button>\n                                    <button onClick={() => handleProjectToggle(projectIndex)}>\n                                        {project.isCollapsed ? 'Expand' : 'Collapse'}\n                                    </button>\n                                </div>\n                                <div className='color-green bold'>{(isCollapsed || project.isCollapsed) ? '' : `${project.description} Task List:`}</div>\n                                <div>\n                                    {(isCollapsed || project.isCollapsed) ? null : project.tasks.map((task, taskIndex) => (\n                                        <div key={taskIndex} className='bg-black m-5 p-10 lowerBorder'>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                <div>{task.description}</div>\n                                                <div>{task.sessions.length} Total: {task.runningTimeDisplay} </div>\n                                            </div>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                {task.sessions.map((session, sessionIndex) => (\n                                                    <div className='copyright color-light'>{session.startDate} - {String(session.endDate).split(', ')[1]} {session.totalTime}\n                                                    </div>\n                                                ))}\n                                            </div>\n                                            {task.isRunning ? (\n                                                <button onClick={() => handleStopTask(projectIndex, taskIndex)}>\n                                                    Stop\n                                                </button>\n                                            ) : (\n                                                <button onClick={() => handleStartTask(projectIndex, taskIndex)}>\n                                                    Start\n                                                </button>\n                                            )}\n                                            <button onClick={() => handleDeleteTask(projectIndex, taskIndex)}>\n                                                Delete Task\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </React.Fragment>\n                : <React.Fragment></React.Fragment>}\n            \n            {(tracking === 'solar/battery') ?\n                <React.Fragment>\n                    <div>\n                        <h3>Solar/Battery Log</h3>\n                        <input\n                            type=\"text\"\n                            value={newProjectDescription}\n                            onChange={(e) => setNewProjectDescription(e.target.value)}\n                            onKeyDown={(e) => {\n                                if (e.key === 'Enter') {\n                                    e.preventDefault();\n                                    handleAddProject();\n                                }\n                            }}\n                        />\n\n                        <button onClick={handleAddProject}>Add Project</button>\n                    </div>\n                    <br />\n                    <div>\n                        <h3>Projects</h3>\n                        {projects.map((project, projectIndex) => (\n                            <div key={projectIndex} className='r-10 bg-darker m-5 p-10'>\n                                <div className='r-10 bg-black m-5 p-10'>\n                                    <div className='greet bold color-yellow'>{project.description}</div>\n                                    <div className='copyright color-light'>{project.createdDate} Time: {getTotalTime(getProjectTime(project))}</div>\n                                    <button onClick={() => addTask(projectIndex)}>\n                                        Add Task\n                                    </button>\n                                    <button onClick={() => handleDeleteProject(projectIndex)}>\n                                        Delete Project\n                                    </button>\n                                    <button onClick={() => handleProjectToggle(projectIndex)}>\n                                        {project.isCollapsed ? 'Expand' : 'Collapse'}\n                                    </button>\n                                </div>\n                                <div className='color-green bold'>{(isCollapsed || project.isCollapsed) ? '' : `${project.description} Task List:`}</div>\n                                <div>\n                                    {(isCollapsed || project.isCollapsed) ? null : project.tasks.map((task, taskIndex) => (\n                                        <div key={taskIndex} className='bg-black m-5 p-10 lowerBorder'>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                <div>{task.description}</div>\n                                                <div>{task.sessions.length} Total: {task.runningTimeDisplay} </div>\n                                            </div>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                {task.sessions.map((session, sessionIndex) => (\n                                                    <div className='copyright color-light'>{session.startDate} - {String(session.endDate).split(', ')[1]} {session.totalTime}\n                                                    </div>\n                                                ))}\n                                            </div>\n                                            {task.isRunning ? (\n                                                <button onClick={() => handleStopTask(projectIndex, taskIndex)}>\n                                                    Stop\n                                                </button>\n                                            ) : (\n                                                <button onClick={() => handleStartTask(projectIndex, taskIndex)}>\n                                                    Start\n                                                </button>\n                                            )}\n                                            <button onClick={() => handleDeleteTask(projectIndex, taskIndex)}>\n                                                Delete Task\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </React.Fragment>\n                : <React.Fragment></React.Fragment>\n            }\n\n            {(tracking === 'sets') ?\n                <React.Fragment>\n                    <div>\n                        <h3>Track Sets</h3>\n                    </div>\n                    <br />\n                    <div>\n                        {projects.map((project, projectIndex) => (\n                            <div key={projectIndex} className='r-10 bg-darker m-5 p-10'>\n                                <div className='r-10 bg-black m-5 p-10'>\n                                    <div className='greet bold color-yellow'>{project.description}</div>\n                                    <div className='copyright color-light'>{project.createdDate} Time: {getTotalTime(getProjectTime(project))}</div>\n                                    <button onClick={() => addSet(projectIndex)}>\n                                        Add Set\n                                    </button>\n                                    <button onClick={() => handleDeleteProject(projectIndex)}>\n                                        Delete Log\n                                    </button>\n                                </div>\n                                <div className='color-green bold'>{(isCollapsed || project.isCollapsed) ? '' : `${project.description} Task List:`}</div>\n                                <div>\n                                    {(isCollapsed || project.isCollapsed) ? null : project.tasks.map((task, taskIndex) => (\n                                        <div key={taskIndex} className='bg-black m-5 p-10 lowerBorder'>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                <div>{task.description}</div>\n                                                <div>Waves: {task.sessions.length}</div>\n                                            </div>\n                                            <React.Fragment>\n                                                <button onClick={() => addWave(projectIndex, taskIndex)}>\n                                                    Wave +\n                                                </button>\n                                                <button onClick={() => subtractWave(projectIndex, taskIndex)}>\n                                                    Wave -\n                                                </button>\n                                            </React.Fragment>\n                                            <button onClick={() => handleDeleteTask(projectIndex, taskIndex)}>\n                                                Delete Set\n                                            </button>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                {task.sessions.map((session, sessionIndex) => (\n                                                    <div className='copyright color-light p-10'>\n                                                        <div className=\"button\" onClick={() => task.sessions[sessionIndex].isLiked = !task.sessions[sessionIndex].isLiked}>\n                                                            <span className='mr-5'>{String(session.startDate).split(', ')[1]}  - Wave {sessionIndex + 1}</span>\n                                                            <img src={(task.sessions[sessionIndex].isLiked) ? thumbsUp : thumbsDown} alt='like' className='shaka mb--10' />\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </React.Fragment>\n                : <React.Fragment></React.Fragment>}\n        </div>\n    );\n};\n\nexport default ProjectTaskTracker;\n","/Users/js/Dev/my-first-reactor/src/components/utils/VideoPlayer.js",["759","760","761","762","763"],"import React, { useState, useRef, useEffect } from 'react';\nimport videoFile from '../../assets/1.MP4';\nimport VideoNavigation from './VideoNavigation';\nimport { TextField } from '@material-ui/core';\n//const VideoPlayer = ({ src, startTime, endTime, onTimeUpdate }) => {\nconst VideoPlayer = React.forwardRef((props, ref) => {\n  const [currentTime, setCurrentTime] = useState(0);\n  const [playerStatus, setPlayerStatus] = useState({\n    videoRef: ref,\n    isPlaying: false,\n    isSlow: false,\n    isMedium: false,\n    isSlowRewind: false,\n    isMediumRewind: false,\n    playbackRate: 1\n  });\n  //const videoRef = useRef(playerStatus.videoRef);\n  let time = (playerStatus.videoRef.current !== null) ? playerStatus.videoRef.current.currentTime : '00:00:00';\n  console.log('props: ', props)\n\n  useEffect(() => {\n    const updateCurrentTime = () => {\n      if (playerStatus.videoRef.current.currentTime >= playerStatus.endTime) {\n        setPlayerStatus(prevState => ({\n          ...prevState,\n          isPlaying: false,\n          isRewind: false,\n          isFast: false,\n          isSlow: false,\n          isMedium: false,\n          isSlowRewind: false,\n          isMediumRewind: false\n        }));\n      }\n      /*\n      if (playerStatus.endTime > playerStatus.videoRef.current.duration) {\n        alert(`playerStatus.endTime(${playerStatus.endTime}) > playerStatus.videoRef.current.duration (${playerStatus.videoRef.current.duration})`)\n        endChange(playerStatus.videoRef.current.duration)\n        setPlayerStatus(prevState => ({\n          ...prevState,\n          endTime: playerStatus.videoRef.current.duration\n        }));\n      }\n      */\n      setCurrentTime(playerStatus.videoRef.current.currentTime);\n    };\n    // Attach the time update event listener\n    playerStatus.videoRef.current.addEventListener('timeupdate', updateCurrentTime);\n    // Clean up the event listener on component unmount\n    return () => {\n      playerStatus.videoRef.current.removeEventListener('timeupdate', updateCurrentTime);\n    };\n  }, []);\n\n  useEffect(() => {\n    const speed = (playerStatus.isMediumRewind) ? 250 : 80;\n    const interval = (playerStatus.isSlowRewind) ? 300 : speed;\n    const intervalId = setInterval(() => {\n      const currentTime = playerStatus.videoRef.current.currentTime;\n      const time = currentTime - 0.05;\n      if ((playerStatus.isSlowRewind || playerStatus.isMediumRewind || playerStatus.isRewind) && playerStatus.isPlaying && (time > (playerStatus.startTime))) {\n        playerStatus.videoRef.current.currentTime = time;\n      } else {\n        clearInterval(intervalId);\n      }\n    }, interval);\n\n    return () => {\n      clearInterval(intervalId);\n    }\n  }, [\n    playerStatus.isPlaying,\n    playerStatus.isSlowRewind,\n    playerStatus.isMediumRewind,\n    playerStatus.isRewind,\n    playerStatus.startTime,\n    playerStatus.videoRef\n  ]);\n\n  const handleJumpToStart = () => {\n    //console.log(`handleJumpToStart startTime: ${playerStatus.startTime}`);\n    //alert(`handleJumpToStart startTime1: ${playerStatus.startTime}`);\n    playerStatus.videoRef.current.currentTime = playerStatus.startTime || 0;\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      isPlaying: false,\n      isRewind: false,\n      isFast: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false\n    }));\n  };\n  const handleJumpToEnd = () => {\n    //console.log(`handleJumpToEnd id: ${id}`);\n    //alert(`handleJumpToEnd id: ${id} endTime1: ${status.endTime1}`);\n    playerStatus.videoRef.current.currentTime = playerStatus.endTime;\n\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      isPlaying: false,\n      isRewind: false,\n      isFast: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false\n    }));\n  };\n  const handlePlayPause = () => {\n    console.log(\"handlePlayPause\");\n    if (playerStatus.isPlaying) {\n      console.log(\"handlePlayPause => pause\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    } else {\n      console.log(\"handlePlayPause => play\");\n      playerStatus.videoRef.current.playbackRate = 1;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false\n      }));\n    }\n  };\n\n  const handleRewind = () => {\n    if (playerStatus.videoRef.current && playerStatus.isRewind === false) {\n      console.log(\"handleRewind\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: true,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n  const handleMinusOne = () => {\n    if (playerStatus.videoRef.current) {\n      console.log(\"handleMinusOne\");\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime -= 0.05;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n  const handleAddOne = () => {\n    if (playerStatus.videoRef.current) {\n      console.log(\"handlePlusOne\");\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime += 0.05;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n\n  const handleSlowRewind = () => {\n    if (playerStatus.videoRef.current && playerStatus.isSlowRewind === false) {\n      console.log(\"handleSlowMotionRewind\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: true,\n        isMediumRewind: false,\n        isFast: false\n      }));\n    }\n  };\n\n  const handleMediumRewind = () => {\n    if (playerStatus.videoRef.current && playerStatus.isMediumRewind === false) {\n      console.log(\"handleMediumMotionRewind\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: true,\n        isFast: false\n      }));\n    }\n  };\n\n  const handleSlowMotion = () => {\n    if (playerStatus.videoRef.current && playerStatus.isSlow === false) {\n      console.log(\"handleSlowMotion\");\n      playerStatus.videoRef.current.playbackRate = .2;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: true,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false,\n        playbackRate: 0.2\n      }));\n    }\n  };\n  const handleMediumMotion = () => {\n    if (playerStatus.videoRef.current && playerStatus.isMedium === false) {\n      console.log(\"handleMediumMotion\");\n      playerStatus.videoRef.current.playbackRate = .5;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: false,\n        isMedium: true,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false,\n        playbackRate: 0.5\n      }));\n    }\n  };\n\n  const handleFastForward = () => {\n    if (playerStatus.videoRef.current && playerStatus.isFast === false) {\n      console.log(\"handleFastMotion\");\n      playerStatus.videoRef.current.playbackRate = 2;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isFast: true,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        playbackRate: 0.5\n      }));\n    }\n  };\n  const handleTimeUpdate = () => {\n    props.onTimeUpdate(time);\n    if (time >= playerStatus.endTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.endTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false\n      }));\n    } else if (time <= playerStatus.startTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.startTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false\n      }));\n    }\n  };\n\n  const handleScrub = e => {\n    const x = e.nativeEvent.offsetX;\n    const width = e.currentTarget.offsetWidth;\n    const duration = playerStatus.videoRef.current.duration;\n    const scrubTime = (x / width) * duration;\n    playerStatus.videoRef.current.currentTime = scrubTime;\n  };\n  const startChange = (value) => {\n    props.onStartTimeUpdate(value);\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      startTime: value,\n      currentTime: playerStatus.videoRef.current.currentTime\n    }));\n  }\n  const endChange = (value) => {\n    props.onEndTimeUpdate(value);\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      endTime: value,\n      currentTime: playerStatus.videoRef.current.currentTime\n    }));\n  }\n\n  const handleStartChange = (event) => {\n    const { value } = event.target;\n    props.onStartTimeUpdate(value);\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      startTime: value,\n      currentTime: playerStatus.videoRef.current.currentTime\n    }));\n  }\n\n  function handleEndChange(event) {\n    const { value } = event.target;\n    props.onEndTimeUpdate(value);\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      endTime: value,\n      currentTime: playerStatus.videoRef.current.currentTime\n    }));\n  }\n  const timeDisplay = () => {\n    console.log(`timeDisplay: ${time} of ${playerStatus.videoRef.current.duration}`)\n    return <div className='timerBox'>\n      {playerStatus.videoRef.current.currentTime} of {playerStatus.videoRef.current.duration}\n    </div>\n  }\n  const handleVideoUpdate = (event) => {\n    const { currentTime } = event.target;\n    if (currentTime > playerStatus.endTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.endTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        currentTime: currentTime\n      }));\n    } else if (currentTime <= playerStatus.startTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.startTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        currentTime: playerStatus.videoRef.current.currentTime\n      }));\n    }\n  };\n\n  return (\n    <div>\n      <video\n        ref={playerStatus.videoRef}\n        //src={props.src}\n        src={videoFile}\n        onTimeUpdate={handleVideoUpdate}\n        style={{\n          width: `100%`,\n          height: `auto`,\n        }}\n\n        onLoadedMetadata={() => {\n          if (time !== null) {\n            time = props.startTime;\n            playerStatus.videoRef.current.playbackRate = 1;\n          }\n        }}\n      />\n      <div className='videoNavigation'>\n          <VideoNavigation \n            handleJumpToStart={() => handleJumpToStart()}\n            handleMinusOne={() => handleMinusOne()}\n            handleRewind={() => handleRewind()}\n            handleMediumRewind={() => handleMediumRewind()}\n            handleSlowRewind={() => handleSlowRewind()}\n            handlePlayPause={() => handlePlayPause()}\n            handleSlowMotion={() => handleSlowMotion()}\n            handleMediumMotion={() => handleMediumMotion()}\n            handleFastForward={() => handleFastForward()}\n            handleAddOne={() => handleAddOne()}\n            handleJumpToEnd={() => handleJumpToEnd()}\n            playerStatus={playerStatus}\n          />\n      </div>\n      <div>\n        <div><span className='p-20'>{playerStatus.startTime}</span><span className='p-20'>{currentTime}</span><span className='p-20'>{playerStatus.endTime}</span></div>\n      </div>\n      <button onClick={() => startChange(currentTime)}>Start Mark</button><input type=\"text\" value={playerStatus.startTime} onChange={handleStartChange} />\n      <button onClick={() => endChange(currentTime)}>End Mark</button><input type=\"text\" value={playerStatus.endTime} onChange={handleEndChange} />\n      <div style={{ position: 'relative' }}>\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            //width: `${((playerStatus.videoRef.current?.currentTime || 0) / playerStatus.videoRef.current?.duration) * 100}%`,\n            width: '100px',\n            backgroundColor: 'blue',\n            opacity: 0.5,\n          }}\n        />\n        <div\n          style={{\n            position: 'absolute',\n            backgroundColor: '00FF00',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: '100%',\n            zIndex: 1,\n          }}\n          onClick={handleScrub}\n        />\n      </div>\n    </div>\n  );\n});\n\nexport default VideoPlayer;","/Users/js/Dev/my-first-reactor/src/components/forms/DropDown.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/VideoNavigation.js",["764"],"import React, { useState } from 'react';\nconst VideoNavigation = React.forwardRef((props, ref) => {\n    console.log(`VideoNavigation props.playerStatus.isPlaying: ${props.playerStatus.isPlaying}`);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [slider, setSlider] = useState(0);\n    \n    const handleScrub = (event) => {\n        //const scrubTime = (100/props.playerStatus.videoRef.current.duration)/event.target.value;\n        //props.playerStatus.videoRef.current.currentTime = scrubTime;\n        //console.log(`scrubTime: ${scrubTime} value: ${event.target.value}`);\n        const sliderValue = event.target.value;\n        const videoDuration = (props.playerStatus.videoRef) ? props.playerStatus.videoRef.current.duration : null;\n        const videoDuration1 = (props.playerStatus.videoPlayer1Ref) ? props.playerStatus.videoPlayer1Ref.current.duration : null;\n        const videoDuration2 = (props.playerStatus.videoPlayer2Ref) ? props.playerStatus.videoPlayer2Ref.current.duration : null;\n        const currentTime = (sliderValue / 100) * videoDuration;\n        const currentTime1 = (videoDuration1!=null) ? ((sliderValue / 100) * videoDuration1) : 0;\n        const currentTime2 = (videoDuration2!=null) ? ((sliderValue / 100) * videoDuration2) : 0;\n        console.log(`scrubTime => currentTime: ${currentTime.toFixed(5)} value: ${event.target.value}`);\n        if (!!props.playerStatus.videoRef) props.playerStatus.videoRef.current.currentTime = currentTime.toFixed(5);\n        if (!!props.playerStatus.videoPlayer1Ref) props.playerStatus.videoPlayer1Ref.current.currentTime = currentTime1.toFixed(5);\n        if (!!props.playerStatus.videoPlayer2Ref) props.playerStatus.videoPlayer2Ref.current.currentTime = currentTime2.toFixed(5);\n        if (!!props.playerStatus.videoRef) setCurrentTime(currentTime.toFixed(5));\n        if (!!props.playerStatus.videoPlayer1Ref) setCurrentTime(currentTime1.toFixed(5));\n        if (!!props.playerStatus.videoPlayer2Ref) setCurrentTime(currentTime2.toFixed(5));\n        //alert(`videoRef: ${!!props.playerStatus.videoRef}`)\n        //alert(`videoPlayer1Ref: ${!!props.playerStatus.videoPlayer1Ref}`)\n        //alert(`videoPlayer2Ref: ${!!props.playerStatus.videoPlayer2Ref}`)\n        \n        setSlider(sliderValue);\n    };\n\n    return (\n        <React.Fragment>\n            <div>\n                <input type=\"range\" min=\"0\" max=\"100\" value={slider} onChange={handleScrub} />\n            </div>\n            <button className='navButton p-10' onClick={props.handleJumpToStart}>|&lt;=</button>\n            <button className='navButton p-10' onClick={props.handleMinusOne}>-1</button>\n            {\n                /*\n                <button className='navButton p-10' onClick={props.handleRewind}>&lt;&lt;&lt;</button>\n                <button className='navButton p-10' onClick={props.handleMediumRewind}>&lt;&lt;</button>\n                */\n            }\n            <button className='navButton p-10' onClick={props.handleSlowRewind}>&lt;</button>\n            <button className='navButton p-10' onClick={props.handlePlayPause}>{props.playerStatus.isPlaying ? 'Pause' : 'Play'}</button>\n            <button className='navButton p-10' onClick={props.handleSlowMotion}>&gt;</button>\n            <button className='navButton p-10' onClick={props.handleMediumMotion}>&gt;&gt;</button>\n            <button className='navButton p-10' onClick={props.handleFastForward}>&gt;&gt;&gt;</button>\n            <button className='navButton p-10' onClick={props.handleAddOne}>+1</button>\n            <button className='navButton p-10' onClick={props.handleJumpToEnd}>=&gt;|</button>\n        </React.Fragment>\n    );\n});\n\nexport default VideoNavigation;","/Users/js/Dev/my-first-reactor/src/components/utils/PlayerNavigation.js",[],["765","766"],"/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRatesConfig.js",["767","768"],"import React, { useState, useEffect } from 'react';\nimport menu from '../../assets/images/menuYellow.png';\n\nconst ExchangeRatesConfig = ({ onExchangeRatesChange }) => {\n\n    const [exchangeRates, setExchangeRates] = useState({\n        USD: 1,\n        MXN: 17.16,   // Mexican Peso\n        NIO: 36.55,   // Nicaraguan Cordovas\n        CRC: 541.23,    // Costa Rican Colones\n        IDR: 15045.30,  // Indonesian Rupiah\n        AUD: 1.50,    // Australian Dollar\n    });\n\n    const [settings, setSettings] = useState(false)\n\n    useEffect(() => {\n        const savedExchangeRates = localStorage.getItem('exchangeRates');\n        if (savedExchangeRates) {\n            setExchangeRates(JSON.parse(savedExchangeRates));\n            onExchangeRatesChange(exchangeRates);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n        onExchangeRatesChange(exchangeRates);\n    }, [exchangeRates]);\n\n    useEffect(() => {\n        localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n        onExchangeRatesChange(exchangeRates); // Invoke the callback when rates change\n    }, [exchangeRates, onExchangeRatesChange]);\n\n    const toggleSettings = () => {\n        setSettings(!settings)\n    }\n\n    const handleRateChange = (rate, value) => {\n        console.log(`handleRateChange 1 - value: ${value} rate: ${rate}`);\n        setExchangeRates(prevState => ({\n            ...prevState,\n            [rate]: value\n        }));\n        onExchangeRatesChange(exchangeRates);\n    }\n    const handleRateEnter = (e) => {\n        console.log(`handleRateEnter:1 - key: ${e.key}`);\n        if (e.key === 'Enter') {\n            console.log(`handleRateEnter:2 - key: ${e.key}`);\n            toggleSettings();\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <img className='color-yellow button' src={menu} alt=\"open menu\" onClick={() => toggleSettings()} />\n            </div>\n            {settings ? (\n                Object.keys(exchangeRates).map(rate => (\n                    <div key={rate}>\n                        <label\n                            className='p-20 m-5 color-lite bold'\n                            htmlFor={rate}\n                        >\n                            {rate}\n                        </label>\n                        <input\n                            className='p-20 m-5 color-lite bold bg-black'\n                            type=\"number\"\n                            id={rate}\n                            value={exchangeRates[rate]}\n                            onChange={e => handleRateChange(rate, e.target.value)}\n                            onKeyDown={e => handleRateEnter(e)}\n                        />\n                    </div>\n                ))\n            ) : (\n                <div></div>\n            )}\n        </div>\n    );\n\n};\n\nexport default ExchangeRatesConfig;",{"ruleId":"769","replacedBy":"770"},{"ruleId":"771","replacedBy":"772"},{"ruleId":"773","severity":1,"message":"774","line":7,"column":27,"nodeType":"775","messageId":"776","endLine":7,"endColumn":33},{"ruleId":"773","severity":1,"message":"777","line":44,"column":19,"nodeType":"775","messageId":"776","endLine":44,"endColumn":26},{"ruleId":"773","severity":1,"message":"778","line":45,"column":19,"nodeType":"775","messageId":"776","endLine":45,"endColumn":32},{"ruleId":"779","severity":1,"message":"780","line":94,"column":222,"nodeType":"781","endLine":94,"endColumn":401},{"ruleId":"782","severity":1,"message":"783","line":94,"column":478,"nodeType":"781","endLine":94,"endColumn":554},{"ruleId":"784","severity":1,"message":"785","line":57,"column":8,"nodeType":"786","endLine":57,"endColumn":10,"suggestions":"787"},{"ruleId":"773","severity":1,"message":"788","line":3,"column":10,"nodeType":"775","messageId":"776","endLine":3,"endColumn":17},{"ruleId":"784","severity":1,"message":"789","line":104,"column":7,"nodeType":"786","endLine":104,"endColumn":9,"suggestions":"790"},{"ruleId":"773","severity":1,"message":"791","line":356,"column":17,"nodeType":"775","messageId":"776","endLine":356,"endColumn":23},{"ruleId":"773","severity":1,"message":"792","line":481,"column":11,"nodeType":"775","messageId":"776","endLine":481,"endColumn":27},{"ruleId":"773","severity":1,"message":"793","line":493,"column":11,"nodeType":"775","messageId":"776","endLine":493,"endColumn":27},{"ruleId":"773","severity":1,"message":"794","line":529,"column":15,"nodeType":"775","messageId":"776","endLine":529,"endColumn":30},{"ruleId":"773","severity":1,"message":"795","line":540,"column":11,"nodeType":"775","messageId":"776","endLine":540,"endColumn":28},{"ruleId":"773","severity":1,"message":"796","line":552,"column":11,"nodeType":"775","messageId":"776","endLine":552,"endColumn":21},{"ruleId":"773","severity":1,"message":"797","line":560,"column":11,"nodeType":"775","messageId":"776","endLine":560,"endColumn":21},{"ruleId":"773","severity":1,"message":"798","line":568,"column":11,"nodeType":"775","messageId":"776","endLine":568,"endColumn":23},{"ruleId":"773","severity":1,"message":"799","line":576,"column":11,"nodeType":"775","messageId":"776","endLine":576,"endColumn":23},{"ruleId":"784","severity":1,"message":"800","line":97,"column":7,"nodeType":"786","endLine":97,"endColumn":15,"suggestions":"801"},{"ruleId":"773","severity":1,"message":"802","line":142,"column":11,"nodeType":"775","messageId":"776","endLine":142,"endColumn":23},{"ruleId":"773","severity":1,"message":"803","line":143,"column":11,"nodeType":"775","messageId":"776","endLine":143,"endColumn":26},{"ruleId":"773","severity":1,"message":"804","line":11,"column":8,"nodeType":"775","messageId":"776","endLine":11,"endColumn":18},{"ruleId":"773","severity":1,"message":"805","line":3,"column":8,"nodeType":"775","messageId":"776","endLine":3,"endColumn":20},{"ruleId":"769","replacedBy":"806"},{"ruleId":"771","replacedBy":"807"},{"ruleId":"773","severity":1,"message":"808","line":32,"column":13,"nodeType":"775","messageId":"776","endLine":32,"endColumn":23},{"ruleId":"773","severity":1,"message":"809","line":32,"column":25,"nodeType":"775","messageId":"776","endLine":32,"endColumn":38},{"ruleId":"810","severity":1,"message":"811","line":58,"column":40,"nodeType":"812","messageId":"813","endLine":58,"endColumn":42},{"ruleId":"784","severity":1,"message":"814","line":347,"column":7,"nodeType":"786","endLine":347,"endColumn":21,"suggestions":"815"},{"ruleId":"784","severity":1,"message":"816","line":351,"column":7,"nodeType":"786","endLine":351,"endColumn":9,"suggestions":"817"},{"ruleId":"784","severity":1,"message":"818","line":354,"column":7,"nodeType":"786","endLine":354,"endColumn":19,"suggestions":"819"},{"ruleId":"773","severity":1,"message":"820","line":614,"column":11,"nodeType":"775","messageId":"776","endLine":614,"endColumn":29},{"ruleId":"773","severity":1,"message":"821","line":1,"column":10,"nodeType":"775","messageId":"776","endLine":1,"endColumn":16},{"ruleId":"810","severity":1,"message":"822","line":12,"column":56,"nodeType":"812","messageId":"823","endLine":12,"endColumn":58},{"ruleId":"773","severity":1,"message":"824","line":15,"column":20,"nodeType":"775","messageId":"776","endLine":15,"endColumn":29},{"ruleId":"825","severity":1,"message":"826","line":61,"column":57,"nodeType":"827","messageId":"828","endLine":61,"endColumn":59},{"ruleId":"784","severity":1,"message":"829","line":49,"column":6,"nodeType":"786","endLine":49,"endColumn":8,"suggestions":"830"},{"ruleId":"773","severity":1,"message":"831","line":34,"column":11,"nodeType":"775","messageId":"776","endLine":34,"endColumn":22},{"ruleId":"832","severity":1,"message":"833","line":46,"column":55,"nodeType":"834","messageId":"835","endLine":46,"endColumn":89},{"ruleId":"832","severity":1,"message":"833","line":48,"column":56,"nodeType":"834","messageId":"835","endLine":48,"endColumn":90},{"ruleId":"832","severity":1,"message":"833","line":50,"column":55,"nodeType":"834","messageId":"835","endLine":50,"endColumn":89},{"ruleId":"832","severity":1,"message":"833","line":52,"column":56,"nodeType":"834","messageId":"835","endLine":52,"endColumn":90},{"ruleId":"832","severity":1,"message":"833","line":54,"column":55,"nodeType":"834","messageId":"835","endLine":54,"endColumn":89},{"ruleId":"832","severity":1,"message":"833","line":56,"column":56,"nodeType":"834","messageId":"835","endLine":56,"endColumn":90},{"ruleId":"832","severity":1,"message":"833","line":58,"column":55,"nodeType":"834","messageId":"835","endLine":58,"endColumn":89},{"ruleId":"773","severity":1,"message":"774","line":4,"column":27,"nodeType":"775","messageId":"776","endLine":4,"endColumn":33},{"ruleId":"773","severity":1,"message":"836","line":7,"column":8,"nodeType":"775","messageId":"776","endLine":7,"endColumn":17},{"ruleId":"773","severity":1,"message":"791","line":11,"column":182,"nodeType":"775","messageId":"776","endLine":11,"endColumn":188},{"ruleId":"773","severity":1,"message":"837","line":2,"column":8,"nodeType":"775","messageId":"776","endLine":2,"endColumn":14},{"ruleId":"773","severity":1,"message":"774","line":7,"column":27,"nodeType":"775","messageId":"776","endLine":7,"endColumn":33},{"ruleId":"773","severity":1,"message":"838","line":18,"column":12,"nodeType":"775","messageId":"776","endLine":18,"endColumn":26},{"ruleId":"773","severity":1,"message":"839","line":19,"column":18,"nodeType":"775","messageId":"776","endLine":19,"endColumn":25},{"ruleId":"773","severity":1,"message":"840","line":21,"column":11,"nodeType":"775","messageId":"776","endLine":21,"endColumn":23},{"ruleId":"841","severity":1,"message":"842","line":35,"column":8,"nodeType":"843","messageId":"844","endLine":35,"endColumn":47},{"ruleId":"810","severity":1,"message":"811","line":45,"column":37,"nodeType":"812","messageId":"813","endLine":45,"endColumn":39},{"ruleId":"773","severity":1,"message":"845","line":76,"column":11,"nodeType":"775","messageId":"776","endLine":76,"endColumn":21},{"ruleId":"773","severity":1,"message":"846","line":108,"column":15,"nodeType":"775","messageId":"776","endLine":108,"endColumn":26},{"ruleId":"773","severity":1,"message":"847","line":1,"column":27,"nodeType":"775","messageId":"776","endLine":1,"endColumn":36},{"ruleId":"773","severity":1,"message":"848","line":2,"column":8,"nodeType":"775","messageId":"776","endLine":2,"endColumn":23},{"ruleId":"810","severity":1,"message":"811","line":10,"column":33,"nodeType":"812","messageId":"813","endLine":10,"endColumn":35},{"ruleId":"773","severity":1,"message":"849","line":17,"column":20,"nodeType":"775","messageId":"776","endLine":17,"endColumn":28},{"ruleId":"773","severity":1,"message":"850","line":18,"column":30,"nodeType":"775","messageId":"776","endLine":18,"endColumn":43},{"ruleId":"810","severity":1,"message":"811","line":12,"column":73,"nodeType":"812","messageId":"813","endLine":12,"endColumn":75},{"ruleId":"773","severity":1,"message":"851","line":12,"column":7,"nodeType":"775","messageId":"776","endLine":12,"endColumn":20},{"ruleId":"773","severity":1,"message":"852","line":11,"column":12,"nodeType":"775","messageId":"776","endLine":11,"endColumn":24},{"ruleId":"773","severity":1,"message":"853","line":11,"column":26,"nodeType":"775","messageId":"776","endLine":11,"endColumn":41},{"ruleId":"773","severity":1,"message":"788","line":2,"column":10,"nodeType":"775","messageId":"776","endLine":2,"endColumn":17},{"ruleId":"773","severity":1,"message":"854","line":3,"column":10,"nodeType":"775","messageId":"776","endLine":3,"endColumn":16},{"ruleId":"773","severity":1,"message":"855","line":3,"column":18,"nodeType":"775","messageId":"776","endLine":3,"endColumn":25},{"ruleId":"773","severity":1,"message":"856","line":37,"column":15,"nodeType":"775","messageId":"776","endLine":37,"endColumn":19},{"ruleId":"784","severity":1,"message":"857","line":47,"column":6,"nodeType":"786","endLine":47,"endColumn":8,"suggestions":"858"},{"ruleId":"773","severity":1,"message":"859","line":53,"column":9,"nodeType":"775","messageId":"776","endLine":53,"endColumn":14},{"ruleId":"773","severity":1,"message":"847","line":1,"column":27,"nodeType":"775","messageId":"776","endLine":1,"endColumn":36},{"ruleId":"784","severity":1,"message":"860","line":51,"column":6,"nodeType":"786","endLine":51,"endColumn":140,"suggestions":"861"},{"ruleId":"773","severity":1,"message":"862","line":6,"column":9,"nodeType":"775","messageId":"776","endLine":6,"endColumn":18},{"ruleId":"773","severity":1,"message":"863","line":60,"column":10,"nodeType":"775","messageId":"776","endLine":60,"endColumn":19},{"ruleId":"773","severity":1,"message":"864","line":62,"column":10,"nodeType":"775","messageId":"776","endLine":62,"endColumn":25},{"ruleId":"773","severity":1,"message":"865","line":63,"column":10,"nodeType":"775","messageId":"776","endLine":63,"endColumn":18},{"ruleId":"773","severity":1,"message":"866","line":63,"column":20,"nodeType":"775","messageId":"776","endLine":63,"endColumn":31},{"ruleId":"773","severity":1,"message":"867","line":65,"column":10,"nodeType":"775","messageId":"776","endLine":65,"endColumn":21},{"ruleId":"773","severity":1,"message":"868","line":65,"column":23,"nodeType":"775","messageId":"776","endLine":65,"endColumn":37},{"ruleId":"773","severity":1,"message":"869","line":94,"column":9,"nodeType":"775","messageId":"776","endLine":94,"endColumn":30},{"ruleId":"773","severity":1,"message":"870","line":160,"column":9,"nodeType":"775","messageId":"776","endLine":160,"endColumn":29},{"ruleId":"773","severity":1,"message":"871","line":174,"column":9,"nodeType":"775","messageId":"776","endLine":174,"endColumn":25},{"ruleId":"773","severity":1,"message":"872","line":8,"column":11,"nodeType":"775","messageId":"776","endLine":8,"endColumn":15},{"ruleId":"784","severity":1,"message":"873","line":59,"column":8,"nodeType":"786","endLine":59,"endColumn":18,"suggestions":"874"},{"ruleId":"773","severity":1,"message":"875","line":143,"column":11,"nodeType":"775","messageId":"776","endLine":143,"endColumn":24},{"ruleId":"773","severity":1,"message":"876","line":257,"column":15,"nodeType":"775","messageId":"776","endLine":257,"endColumn":22},{"ruleId":"773","severity":1,"message":"877","line":265,"column":19,"nodeType":"775","messageId":"776","endLine":265,"endColumn":29},{"ruleId":"773","severity":1,"message":"878","line":1,"column":27,"nodeType":"775","messageId":"776","endLine":1,"endColumn":33},{"ruleId":"773","severity":1,"message":"879","line":4,"column":10,"nodeType":"775","messageId":"776","endLine":4,"endColumn":19},{"ruleId":"784","severity":1,"message":"880","line":53,"column":6,"nodeType":"786","endLine":53,"endColumn":8,"suggestions":"881"},{"ruleId":"773","severity":1,"message":"882","line":283,"column":9,"nodeType":"775","messageId":"776","endLine":283,"endColumn":25},{"ruleId":"773","severity":1,"message":"883","line":345,"column":9,"nodeType":"775","messageId":"776","endLine":345,"endColumn":20},{"ruleId":"773","severity":1,"message":"884","line":4,"column":12,"nodeType":"775","messageId":"776","endLine":4,"endColumn":23},{"ruleId":"769","replacedBy":"885"},{"ruleId":"771","replacedBy":"886"},{"ruleId":"784","severity":1,"message":"887","line":23,"column":8,"nodeType":"786","endLine":23,"endColumn":10,"suggestions":"888"},{"ruleId":"784","severity":1,"message":"889","line":28,"column":8,"nodeType":"786","endLine":28,"endColumn":23,"suggestions":"890"},"no-native-reassign",["891"],"no-negated-in-lhs",["892"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","'buttonClasses' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location' and 'status.log'. Either include them or remove the dependency array.","ArrayExpression",["893"],"'connect' is defined but never used.","React Hook useEffect has a missing dependency: 'tick'. Either include it or remove the dependency array.",["894"],"'height' is assigned a value but never used.","'sortedNorthSpots' is assigned a value but never used.","'sortedSouthSpots' is assigned a value but never used.","'sortedLocations' is assigned a value but never used.","'matchingLocations' is assigned a value but never used.","'tideButton' is assigned a value but never used.","'windButton' is assigned a value but never used.","'swell1Button' is assigned a value but never used.","'swell2Button' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getDaysInLastMonth', 'getDaysInMonth', 'time.date', 'time.hours', 'time.monthLong', and 'time.monthNextLong'. Either include them or remove the dependency array.",["895"],"'displayDebug' is assigned a value but never used.","'displayDayDebug' is assigned a value but never used.","'GoogleAuth' is defined but never used.","'LoginControl' is defined but never used.",["891"],["892"],"'gameStatus' is assigned a value but never used.","'setGameStatus' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'getItems' and 'getTotal'. Either include them or remove the dependency array.",["896"],"React Hook useEffect has a missing dependency: 'updateAisles'. Either include it or remove the dependency array.",["897"],"React Hook useEffect has a missing dependency: 'getTotal'. Either include it or remove the dependency array.",["898"],"'toggleProductEntry' is assigned a value but never used.","'render' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'setStatus' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getOceanData' and 'status.oceanData'. Either include them or remove the dependency array.",["899"],"'getTideIcon' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'createLog' is defined but never used.","'Dialog' is defined but never used.","'debouncedPrice' is assigned a value but never used.","'setItem' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'setDisplay' is assigned a value but never used.","'setThePrice' is assigned a value but never used.","'useEffect' is defined but never used.","'LongPressButton' is defined but never used.","'setScore' is assigned a value but never used.","'setScoreTotal' is assigned a value but never used.","'selectorColor' is assigned a value but never used.","'filterByWind' is assigned a value but never used.","'setFilterByWind' is assigned a value but never used.","'signIn' is defined but never used.","'signOut' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'templateData'. Either include it or remove the dependency array.",["900"],"'rates' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'status.endTime1', 'status.endTime2', 'status.videoPlayer1Ref', and 'status.videoPlayer2Ref'. Either include them or remove the dependency array.",["901"],"'countries' is assigned a value but never used.","'usdAmount' is assigned a value but never used.","'convertedAmount' is assigned a value but never used.","'settings' is assigned a value but never used.","'setSettings' is assigned a value but never used.","'countryCode' is assigned a value but never used.","'setCountryCode' is assigned a value but never used.","'handleInputRateChange' is assigned a value but never used.","'handleCurrencyChange' is assigned a value but never used.","'reversedExpenses' is assigned a value but never used.","'half' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleAddProject'. Either include it or remove the dependency array.",["902"],"'handleAddTask' is assigned a value but never used.","'session' is assigned a value but never used.","'timeString' is assigned a value but never used.","'useRef' is defined but never used.","'TextField' is defined but never used.","React Hook useEffect has missing dependencies: 'playerStatus.endTime' and 'playerStatus.videoRef'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentTime' needs the current value of 'playerStatus.videoRef'.",["903"],"'handleTimeUpdate' is assigned a value but never used.","'timeDisplay' is assigned a value but never used.","'currentTime' is assigned a value but never used.",["891"],["892"],"React Hook useEffect has missing dependencies: 'exchangeRates' and 'onExchangeRatesChange'. Either include them or remove the dependency array. If 'onExchangeRatesChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["904"],"React Hook useEffect has a missing dependency: 'onExchangeRatesChange'. Either include it or remove the dependency array. If 'onExchangeRatesChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["905"],"no-global-assign","no-unsafe-negation",{"desc":"906","fix":"907"},{"desc":"908","fix":"909"},{"desc":"910","fix":"911"},{"desc":"912","fix":"913"},{"desc":"914","fix":"915"},{"desc":"916","fix":"917"},{"desc":"918","fix":"919"},{"desc":"920","fix":"921"},{"desc":"922","fix":"923"},{"desc":"924","fix":"925"},{"desc":"926","fix":"927"},{"desc":"928","fix":"929"},{"desc":"928","fix":"930"},"Update the dependencies array to be: [location, status.log]",{"range":"931","text":"932"},"Update the dependencies array to be: [tick]",{"range":"933","text":"934"},"Update the dependencies array to be: [getDaysInLastMonth, getDaysInMonth, status, time.date, time.hours, time.monthLong, time.monthNextLong]",{"range":"935","text":"936"},"Update the dependencies array to be: [getItems, getTotal, status.todos]",{"range":"937","text":"938"},"Update the dependencies array to be: [updateAisles]",{"range":"939","text":"940"},"Update the dependencies array to be: [getTotal, status.tax]",{"range":"941","text":"942"},"Update the dependencies array to be: [getOceanData, status.oceanData]",{"range":"943","text":"944"},"Update the dependencies array to be: [templateData]",{"range":"945","text":"946"},"Update the dependencies array to be: [status.isPlaying, status.isSlowRewind, status.isMediumRewind, status.isRewind, status.startTime1, status.startTime2, status.videoRef, status.endTime1, status.endTime2, status.videoPlayer1Ref, status.videoPlayer2Ref]",{"range":"947","text":"948"},"Update the dependencies array to be: [handleAddProject, tracking]",{"range":"949","text":"950"},"Update the dependencies array to be: [playerStatus.endTime, playerStatus.videoRef]",{"range":"951","text":"952"},"Update the dependencies array to be: [exchangeRates, onExchangeRatesChange]",{"range":"953","text":"954"},{"range":"955","text":"954"},[2555,2557],"[location, status.log]",[4850,4852],"[tick]",[4998,5006],"[getDaysInLastMonth, getDaysInMonth, status, time.date, time.hours, time.monthLong, time.monthNextLong]",[15340,15354],"[getItems, getTotal, status.todos]",[15414,15416],"[updateAisles]",[15467,15479],"[getTotal, status.tax]",[1964,1966],"[getOceanData, status.oceanData]",[1279,1281],"[templateData]",[2871,3005],"[status.isPlaying, status.isSlowRewind, status.isMediumRewind, status.isRewind, status.startTime1, status.startTime2, status.videoRef, status.endTime1, status.endTime2, status.videoPlayer1Ref, status.videoPlayer2Ref]",[2422,2432],"[handleAddProject, tracking]",[2026,2028],"[playerStatus.endTime, playerStatus.videoRef]",[782,784],"[exchangeRates, onExchangeRatesChange]",[941,956]]