[{"/Users/js/Dev/my-first-reactor/src/index.js":"1","/Users/js/Dev/my-first-reactor/src/reducers/SitewideReducers.js":"2","/Users/js/Dev/my-first-reactor/src/App.js":"3","/Users/js/Dev/my-first-reactor/src/serviceWorker.js":"4","/Users/js/Dev/my-first-reactor/src/components/music/songReducer.js":"5","/Users/js/Dev/my-first-reactor/src/components/blog/postsReducer.js":"6","/Users/js/Dev/my-first-reactor/src/components/music/selectedSongReducer.js":"7","/Users/js/Dev/my-first-reactor/src/components/waves/WavesReducer.js":"8","/Users/js/Dev/my-first-reactor/src/components/streams/streamReducer.js":"9","/Users/js/Dev/my-first-reactor/src/components/blog/usersReducer.js":"10","/Users/js/Dev/my-first-reactor/src/components/blog/Blog.js":"11","/Users/js/Dev/my-first-reactor/src/components/waves/LogDirectory.js":"12","/Users/js/Dev/my-first-reactor/src/components/waves/SurfReports.js":"13","/Users/js/Dev/my-first-reactor/src/components/waves/LoggerFunctional.js":"14","/Users/js/Dev/my-first-reactor/src/components/Home.js":"15","/Users/js/Dev/my-first-reactor/src/components/Reducer.js":"16","/Users/js/Dev/my-first-reactor/src/components/waves/WaveFinder.js":"17","/Users/js/Dev/my-first-reactor/src/components/blog/PhotoBlog.js":"18","/Users/js/Dev/my-first-reactor/src/components/music/Player.js":"19","/Users/js/Dev/my-first-reactor/src/reducers/authReducer.js":"20","/Users/js/Dev/my-first-reactor/src/components/utils/Debouncer.js":"21","/Users/js/Dev/my-first-reactor/src/components/forms/FormEssay.js":"22","/Users/js/Dev/my-first-reactor/src/components/utils/SlideShow.js":"23","/Users/js/Dev/my-first-reactor/src/components/utils/Photos.js":"24","/Users/js/Dev/my-first-reactor/src/components/utils/PhotoSequence.js":"25","/Users/js/Dev/my-first-reactor/src/components/utils/Videos.js":"26","/Users/js/Dev/my-first-reactor/src/components/utils/WikiSearch.js":"27","/Users/js/Dev/my-first-reactor/src/components/site/Header.js":"28","/Users/js/Dev/my-first-reactor/src/components/site/Footer.js":"29","/Users/js/Dev/my-first-reactor/src/components/utils/Accordion.js":"30","/Users/js/Dev/my-first-reactor/src/components/utils/ScrollToTop.js":"31","/Users/js/Dev/my-first-reactor/src/components/hooks/Todos.js":"32","/Users/js/Dev/my-first-reactor/src/components/utils/history.js":"33","/Users/js/Dev/my-first-reactor/src/components/hooks/Counter.js":"34","/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js":"35","/Users/js/Dev/my-first-reactor/src/components/hooks/Adder.js":"36","/Users/js/Dev/my-first-reactor/src/components/converter/Calculator.js":"37","/Users/js/Dev/my-first-reactor/src/components/weather/Weather.js":"38","/Users/js/Dev/my-first-reactor/src/components/context/CountryContext.js":"39","/Users/js/Dev/my-first-reactor/src/components/shop/Shop.js":"40","/Users/js/Dev/my-first-reactor/src/components/translator/Translator.js":"41","/Users/js/Dev/my-first-reactor/src/components/streams/StreamShow.js":"42","/Users/js/Dev/my-first-reactor/src/components/streams/StreamDelete.js":"43","/Users/js/Dev/my-first-reactor/src/components/streams/StreamCreate.js":"44","/Users/js/Dev/my-first-reactor/src/components/streams/StreamList.js":"45","/Users/js/Dev/my-first-reactor/src/components/streams/StreamEdit.js":"46","/Users/js/Dev/my-first-reactor/src/actions/types.js":"47","/Users/js/Dev/my-first-reactor/src/components/blog/PostList.js":"48","/Users/js/Dev/my-first-reactor/src/components/utils/KeyGenerator.js":"49","/Users/js/Dev/my-first-reactor/src/components/waves/InterfaceData.js":"50","/Users/js/Dev/my-first-reactor/src/components/waves/LogTemplateData.js":"51","/Users/js/Dev/my-first-reactor/src/components/utils/Timer.js":"52","/Users/js/Dev/my-first-reactor/src/components/waves/GenerateLogId.js":"53","/Users/js/Dev/my-first-reactor/src/components/waves/ConditionsDashboard.js":"54","/Users/js/Dev/my-first-reactor/src/components/utils/Geolocator.js":"55","/Users/js/Dev/my-first-reactor/src/components/utils/WaveUtils.js":"56","/Users/js/Dev/my-first-reactor/src/components/waves/Tide.js":"57","/Users/js/Dev/my-first-reactor/src/components/waves/DirectionObject.js":"58","/Users/js/Dev/my-first-reactor/src/components/waves/ConditionsSelectors.js":"59","/Users/js/Dev/my-first-reactor/src/components/waves/Locations.js":"60","/Users/js/Dev/my-first-reactor/src/components/waves/useOceanData.js":"61","/Users/js/Dev/my-first-reactor/src/components/waves/GetMatchIcon.js":"62","/Users/js/Dev/my-first-reactor/src/components/context/ConditionsContext.js":"63","/Users/js/Dev/my-first-reactor/src/components/waves/SurfLocation.js":"64","/Users/js/Dev/my-first-reactor/src/components/utils/CalculateDistance.js":"65","/Users/js/Dev/my-first-reactor/src/components/waves/PostDirectory.js":"66","/Users/js/Dev/my-first-reactor/src/components/waves/LogEntryFunctional.js":"67","/Users/js/Dev/my-first-reactor/src/components/utils/Loader.js":"68","/Users/js/Dev/my-first-reactor/src/components/blog/BlogImages.js":"69","/Users/js/Dev/my-first-reactor/src/components/music/SongList.js":"70","/Users/js/Dev/my-first-reactor/src/components/music/SongDetail.js":"71","/Users/js/Dev/my-first-reactor/src/components/utils/SequenceImages.js":"72","/Users/js/Dev/my-first-reactor/src/components/utils/DebouncerType.js":"73","/Users/js/Dev/my-first-reactor/src/components/utils/DropDown.js":"74","/Users/js/Dev/my-first-reactor/src/components/translator/Translate.js":"75","/Users/js/Dev/my-first-reactor/src/components/forms/FunctionalSelector.js":"76","/Users/js/Dev/my-first-reactor/src/components/shop/ProductEntry.js":"77","/Users/js/Dev/my-first-reactor/src/components/shop/initData.js":"78","/Users/js/Dev/my-first-reactor/src/components/shop/SettingsMenu.js":"79","/Users/js/Dev/my-first-reactor/src/components/utils/Dominos.js":"80","/Users/js/Dev/my-first-reactor/src/components/utils/CricketScore.js":"81","/Users/js/Dev/my-first-reactor/src/components/site/CountrySelector.js":"82","/Users/js/Dev/my-first-reactor/src/components/utils/ScoreCard.js":"83","/Users/js/Dev/my-first-reactor/src/components/site/GoogleAuth.js":"84","/Users/js/Dev/my-first-reactor/src/components/utils/LoginControl.js":"85","/Users/js/Dev/my-first-reactor/src/components/utils/Toggle.js":"86","/Users/js/Dev/my-first-reactor/src/components/functional/CopyrightText.js":"87","/Users/js/Dev/my-first-reactor/src/components/streams/StreamActions.js":"88","/Users/js/Dev/my-first-reactor/src/components/streams/StreamForm.js":"89","/Users/js/Dev/my-first-reactor/src/components/streams/ButtonAdmin.js":"90","/Users/js/Dev/my-first-reactor/src/components/utils/YouTube.js":"91","/Users/js/Dev/my-first-reactor/src/components/utils/SearchBar.js":"92","/Users/js/Dev/my-first-reactor/src/components/utils/VideoList.js":"93","/Users/js/Dev/my-first-reactor/src/components/utils/UnSplash.js":"94","/Users/js/Dev/my-first-reactor/src/components/utils/GridImage.js":"95","/Users/js/Dev/my-first-reactor/src/components/utils/VideoDetail.js":"96","/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js":"97","/Users/js/Dev/my-first-reactor/src/components/converter/LiquidVerdict.js":"98","/Users/js/Dev/my-first-reactor/src/components/waves/TemplateData.js":"99","/Users/js/Dev/my-first-reactor/src/components/converter/BoilingVerdict.js":"100","/Users/js/Dev/my-first-reactor/src/components/converter/TemperatureInput.js":"101","/Users/js/Dev/my-first-reactor/src/components/streams/Modal.js":"102","/Users/js/Dev/my-first-reactor/src/components/apis/config.js":"103","/Users/js/Dev/my-first-reactor/src/components/blog/UserHeader.js":"104","/Users/js/Dev/my-first-reactor/src/components/blog/BlogActions.js":"105","/Users/js/Dev/my-first-reactor/src/components/waves/Angles.js":"106","/Users/js/Dev/my-first-reactor/src/components/waves/Directions.js":"107","/Users/js/Dev/my-first-reactor/src/components/waves/Sunset.js":"108","/Users/js/Dev/my-first-reactor/src/components/waves/BuoyReport.js":"109","/Users/js/Dev/my-first-reactor/src/components/waves/WindDirection.js":"110","/Users/js/Dev/my-first-reactor/src/components/waves/GetAngle.js":"111","/Users/js/Dev/my-first-reactor/src/components/waves/CreateLog.js":"112","/Users/js/Dev/my-first-reactor/src/components/waves/SwellSelector.js":"113","/Users/js/Dev/my-first-reactor/src/components/waves/Selector.js":"114","/Users/js/Dev/my-first-reactor/src/components/utils/RandomColor.js":"115","/Users/js/Dev/my-first-reactor/src/components/music/MusicActions.js":"116","/Users/js/Dev/my-first-reactor/src/components/waves/Group.js":"117","/Users/js/Dev/my-first-reactor/src/components/utils/RandomBackgroundColor.js":"118","/Users/js/Dev/my-first-reactor/src/components/forms/FormRadio.js":"119","/Users/js/Dev/my-first-reactor/src/components/functional/Dialog.js":"120","/Users/js/Dev/my-first-reactor/src/components/waves/tide/TideSelector.js":"121","/Users/js/Dev/my-first-reactor/src/components/waves/wind/WindSelector.js":"122","/Users/js/Dev/my-first-reactor/src/components/forms/FormLogin.js":"123","/Users/js/Dev/my-first-reactor/src/components/site/Countries.js":"124","/Users/js/Dev/my-first-reactor/src/components/utils/Greeting.js":"125","/Users/js/Dev/my-first-reactor/src/components/site/LocalAuth.js":"126","/Users/js/Dev/my-first-reactor/src/apis/streams.js":"127","/Users/js/Dev/my-first-reactor/src/components/weather/Weekday.js":"128","/Users/js/Dev/my-first-reactor/src/components/weather/GetDirection.js":"129","/Users/js/Dev/my-first-reactor/src/components/weather/GetDirectionIcon.js":"130","/Users/js/Dev/my-first-reactor/src/apis/jsonPlaceholder.js":"131","/Users/js/Dev/my-first-reactor/src/components/waves/AirTemp.js":"132","/Users/js/Dev/my-first-reactor/src/components/waves/WaterTemp.js":"133","/Users/js/Dev/my-first-reactor/src/components/waves/GetSurface.js":"134","/Users/js/Dev/my-first-reactor/src/components/waves/GetWindMPH.js":"135","/Users/js/Dev/my-first-reactor/src/components/waves/WaveHeights.js":"136","/Users/js/Dev/my-first-reactor/src/components/waves/GetWindOrientation.js":"137","/Users/js/Dev/my-first-reactor/src/components/waves/GetWaveHeight.js":"138","/Users/js/Dev/my-first-reactor/src/components/waves/GetNotes.js":"139","/Users/js/Dev/my-first-reactor/src/components/utils/VideoItem.js":"140","/Users/js/Dev/my-first-reactor/src/components/site/Menu.js":"141","/Users/js/Dev/my-first-reactor/src/components/site/NavClasses.js":"142","/Users/js/Dev/my-first-reactor/src/components/utils/TextColorizer.js":"143","/Users/js/Dev/my-first-reactor/src/actions/index.js":"144","/Users/js/Dev/my-first-reactor/src/components/site/NavItems.js":"145","/Users/js/Dev/my-first-reactor/src/components/utils/useCurrentTime.js":"146","/Users/js/Dev/my-first-reactor/src/components/utils/LongPressButton.js":"147","/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRates.js":"148","/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeConverter.js":"149","/Users/js/Dev/my-first-reactor/src/components/utils/DualVideoPlayer.js":"150","/Users/js/Dev/my-first-reactor/src/components/utils/ExpenseTracker.js":"151","/Users/js/Dev/my-first-reactor/src/components/utils/Fireworks.js":"152","/Users/js/Dev/my-first-reactor/src/components/utils/TaskTracker.js":"153","/Users/js/Dev/my-first-reactor/src/components/utils/VideoPlayer.js":"154","/Users/js/Dev/my-first-reactor/src/components/forms/DropDown.js":"155","/Users/js/Dev/my-first-reactor/src/components/utils/VideoNavigation.js":"156","/Users/js/Dev/my-first-reactor/src/components/utils/PlayerNavigation.js":"157","/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRatesConfig.js":"158","/Users/js/Dev/my-first-reactor/src/components/utils/SurfScores.js":"159","/Users/js/Dev/my-first-reactor/src/components/utils/ExpenseTrackerInitData.js":"160","/Users/js/Dev/my-first-reactor/src/components/waves/BuoyData.js":"161","/Users/js/Dev/my-first-reactor/src/components/utils/Sounds.js":"162","/Users/js/Dev/my-first-reactor/src/components/utils/GallonsCalculator.js":"163","/Users/js/Dev/my-first-reactor/src/components/utils/TripFuelTracker.js":"164","/Users/js/Dev/my-first-reactor/src/components/utils/SurfingScores.js":"165","/Users/js/Dev/my-first-reactor/src/components/utils/JerseyColors.js":"166","/Users/js/Dev/my-first-reactor/src/components/utils/SurfScoring.js":"167","/Users/js/Dev/my-first-reactor/src/components/utils/InitPlayers.js":"168","/Users/js/Dev/my-first-reactor/src/components/utils/InitNewPlayer.js":"169","/Users/js/Dev/my-first-reactor/src/components/utils/SurfScoringLogic.js":"170","/Users/js/Dev/my-first-reactor/src/components/utils/SurfPriority.js":"171","/Users/js/Dev/my-first-reactor/src/components/utils/Dates.js":"172","/Users/js/Dev/my-first-reactor/src/components/utils/GetAthleteScore.js":"173","/Users/js/Dev/my-first-reactor/src/components/utils/GetPriorityColor.js":"174","/Users/js/Dev/my-first-reactor/src/components/utils/HighScores.js":"175","/Users/js/Dev/my-first-reactor/src/redux/store.js":"176","/Users/js/Dev/my-first-reactor/src/reducers/reducers.js":"177","/Users/js/Dev/my-first-reactor/src/components/utils/CounterButton.js":"178","/Users/js/Dev/my-first-reactor/src/redux/selectors.js":"179","/Users/js/Dev/my-first-reactor/src/redux/actions.js":"180"},{"size":1123,"mtime":1701301234257,"results":"181","hashOfConfig":"182"},{"size":781,"mtime":1688777016427,"results":"183","hashOfConfig":"182"},{"size":12556,"mtime":1701302281570,"results":"184","hashOfConfig":"182"},{"size":5087,"mtime":1688777016428,"results":"185","hashOfConfig":"182"},{"size":399,"mtime":1688777015956,"results":"186","hashOfConfig":"182"},{"size":266,"mtime":1688777015954,"results":"187","hashOfConfig":"182"},{"size":187,"mtime":1688777015956,"results":"188","hashOfConfig":"182"},{"size":434,"mtime":1688777016159,"results":"189","hashOfConfig":"182"},{"size":919,"mtime":1688777016148,"results":"190","hashOfConfig":"182"},{"size":275,"mtime":1688777015954,"results":"191","hashOfConfig":"182"},{"size":134,"mtime":1688777015952,"results":"192","hashOfConfig":"182"},{"size":4564,"mtime":1699044936455,"results":"193","hashOfConfig":"182"},{"size":4415,"mtime":1690427105467,"results":"194","hashOfConfig":"182"},{"size":4344,"mtime":1701456029092,"results":"195","hashOfConfig":"182"},{"size":3880,"mtime":1701464705020,"results":"196","hashOfConfig":"182"},{"size":3265,"mtime":1688777015952,"results":"197","hashOfConfig":"182"},{"size":29286,"mtime":1701464418278,"results":"198","hashOfConfig":"182"},{"size":936,"mtime":1688777015954,"results":"199","hashOfConfig":"182"},{"size":278,"mtime":1688777015956,"results":"200","hashOfConfig":"182"},{"size":431,"mtime":1688777016427,"results":"201","hashOfConfig":"182"},{"size":666,"mtime":1688777016149,"results":"202","hashOfConfig":"182"},{"size":1576,"mtime":1699045510009,"results":"203","hashOfConfig":"182"},{"size":9711,"mtime":1688777016152,"results":"204","hashOfConfig":"182"},{"size":2786,"mtime":1688777016151,"results":"205","hashOfConfig":"182"},{"size":3046,"mtime":1688777016151,"results":"206","hashOfConfig":"182"},{"size":1871,"mtime":1688777016153,"results":"207","hashOfConfig":"182"},{"size":3764,"mtime":1698080705438,"results":"208","hashOfConfig":"182"},{"size":4635,"mtime":1701465610589,"results":"209","hashOfConfig":"182"},{"size":2758,"mtime":1696968062338,"results":"210","hashOfConfig":"182"},{"size":973,"mtime":1688777016148,"results":"211","hashOfConfig":"182"},{"size":863,"mtime":1684871035000,"results":"212","hashOfConfig":"182"},{"size":12229,"mtime":1701555822898,"results":"213","hashOfConfig":"182"},{"size":86,"mtime":1688777016154,"results":"214","hashOfConfig":"182"},{"size":719,"mtime":1688777015956,"results":"215","hashOfConfig":"182"},{"size":42809,"mtime":1701469511084,"results":"216","hashOfConfig":"182"},{"size":1823,"mtime":1688777015956,"results":"217","hashOfConfig":"182"},{"size":2277,"mtime":1688777015954,"results":"218","hashOfConfig":"182"},{"size":1100,"mtime":1688777016160,"results":"219","hashOfConfig":"182"},{"size":69,"mtime":1688777015954,"results":"220","hashOfConfig":"182"},{"size":28002,"mtime":1699044390681,"results":"221","hashOfConfig":"182"},{"size":1435,"mtime":1688777016148,"results":"222","hashOfConfig":"182"},{"size":1396,"mtime":1688777015973,"results":"223","hashOfConfig":"182"},{"size":1737,"mtime":1688777015959,"results":"224","hashOfConfig":"182"},{"size":743,"mtime":1688777015959,"results":"225","hashOfConfig":"182"},{"size":2352,"mtime":1699045421202,"results":"226","hashOfConfig":"182"},{"size":1281,"mtime":1688777015959,"results":"227","hashOfConfig":"182"},{"size":1191,"mtime":1688777015848,"results":"228","hashOfConfig":"182"},{"size":1728,"mtime":1698080654318,"results":"229","hashOfConfig":"182"},{"size":349,"mtime":1688777016151,"results":"230","hashOfConfig":"182"},{"size":13053,"mtime":1688777016156,"results":"231","hashOfConfig":"182"},{"size":982,"mtime":1688777016156,"results":"232","hashOfConfig":"182"},{"size":1887,"mtime":1688777016153,"results":"233","hashOfConfig":"182"},{"size":423,"mtime":1688777016155,"results":"234","hashOfConfig":"182"},{"size":1558,"mtime":1699045342582,"results":"235","hashOfConfig":"182"},{"size":3144,"mtime":1701464137902,"results":"236","hashOfConfig":"182"},{"size":7596,"mtime":1688777016154,"results":"237","hashOfConfig":"182"},{"size":14224,"mtime":1688777016158,"results":"238","hashOfConfig":"182"},{"size":360,"mtime":1688777016155,"results":"239","hashOfConfig":"182"},{"size":6638,"mtime":1699045304818,"results":"240","hashOfConfig":"182"},{"size":20953,"mtime":1688777016156,"results":"241","hashOfConfig":"182"},{"size":2047,"mtime":1688777016159,"results":"242","hashOfConfig":"182"},{"size":4332,"mtime":1688777016155,"results":"243","hashOfConfig":"182"},{"size":21283,"mtime":1688777015954,"results":"244","hashOfConfig":"182"},{"size":8815,"mtime":1698080712283,"results":"245","hashOfConfig":"182"},{"size":1123,"mtime":1688777016149,"results":"246","hashOfConfig":"182"},{"size":4280,"mtime":1701456058656,"results":"247","hashOfConfig":"182"},{"size":12089,"mtime":1701455979305,"results":"248","hashOfConfig":"182"},{"size":1670,"mtime":1688777016151,"results":"249","hashOfConfig":"182"},{"size":60510,"mtime":1688777015954,"results":"250","hashOfConfig":"182"},{"size":1114,"mtime":1688777015956,"results":"251","hashOfConfig":"182"},{"size":804,"mtime":1688777015956,"results":"252","hashOfConfig":"182"},{"size":151,"mtime":1688777016152,"results":"253","hashOfConfig":"182"},{"size":213,"mtime":1688777016149,"results":"254","hashOfConfig":"182"},{"size":1517,"mtime":1688777016149,"results":"255","hashOfConfig":"182"},{"size":2210,"mtime":1688777016148,"results":"256","hashOfConfig":"182"},{"size":1601,"mtime":1701451685813,"results":"257","hashOfConfig":"182"},{"size":5906,"mtime":1688777015957,"results":"258","hashOfConfig":"182"},{"size":46410,"mtime":1690293810842,"results":"259","hashOfConfig":"182"},{"size":2654,"mtime":1688777015957,"results":"260","hashOfConfig":"182"},{"size":9347,"mtime":1700358320140,"results":"261","hashOfConfig":"182"},{"size":3027,"mtime":1701467017986,"results":"262","hashOfConfig":"182"},{"size":1593,"mtime":1688777015958,"results":"263","hashOfConfig":"182"},{"size":12580,"mtime":1701469609116,"results":"264","hashOfConfig":"182"},{"size":2652,"mtime":1696968005838,"results":"265","hashOfConfig":"182"},{"size":846,"mtime":1688777016151,"results":"266","hashOfConfig":"182"},{"size":298,"mtime":1688777016153,"results":"267","hashOfConfig":"182"},{"size":564,"mtime":1688777015955,"results":"268","hashOfConfig":"182"},{"size":1633,"mtime":1688777015959,"results":"269","hashOfConfig":"182"},{"size":1831,"mtime":1688777015959,"results":"270","hashOfConfig":"182"},{"size":1543,"mtime":1698080532495,"results":"271","hashOfConfig":"182"},{"size":249,"mtime":1688777016154,"results":"272","hashOfConfig":"182"},{"size":748,"mtime":1688777016152,"results":"273","hashOfConfig":"182"},{"size":447,"mtime":1688777016153,"results":"274","hashOfConfig":"182"},{"size":223,"mtime":1688777016153,"results":"275","hashOfConfig":"182"},{"size":1532,"mtime":1688777016151,"results":"276","hashOfConfig":"182"},{"size":1002,"mtime":1698080688785,"results":"277","hashOfConfig":"182"},{"size":7302,"mtime":1688777016159,"results":"278","hashOfConfig":"182"},{"size":410,"mtime":1688777015954,"results":"279","hashOfConfig":"182"},{"size":1010,"mtime":1688777016158,"results":"280","hashOfConfig":"182"},{"size":821,"mtime":1688777015954,"results":"281","hashOfConfig":"182"},{"size":1715,"mtime":1688777015955,"results":"282","hashOfConfig":"182"},{"size":972,"mtime":1688777015959,"results":"283","hashOfConfig":"182"},{"size":572,"mtime":1688777015952,"results":"284","hashOfConfig":"182"},{"size":468,"mtime":1688777015954,"results":"285","hashOfConfig":"182"},{"size":1279,"mtime":1688777015953,"results":"286","hashOfConfig":"182"},{"size":432,"mtime":1688777016154,"results":"287","hashOfConfig":"182"},{"size":135,"mtime":1688777016155,"results":"288","hashOfConfig":"182"},{"size":5380,"mtime":1688777016157,"results":"289","hashOfConfig":"182"},{"size":333,"mtime":1688777016154,"results":"290","hashOfConfig":"182"},{"size":4939,"mtime":1688777016159,"results":"291","hashOfConfig":"182"},{"size":303,"mtime":1688777016155,"results":"292","hashOfConfig":"182"},{"size":4415,"mtime":1688777016155,"results":"293","hashOfConfig":"182"},{"size":6299,"mtime":1699045287854,"results":"294","hashOfConfig":"182"},{"size":2163,"mtime":1688777016157,"results":"295","hashOfConfig":"182"},{"size":321,"mtime":1688777016151,"results":"296","hashOfConfig":"182"},{"size":230,"mtime":1688777015956,"results":"297","hashOfConfig":"182"},{"size":310,"mtime":1688777016155,"results":"298","hashOfConfig":"182"},{"size":353,"mtime":1688777016151,"results":"299","hashOfConfig":"182"},{"size":2535,"mtime":1688777015955,"results":"300","hashOfConfig":"182"},{"size":449,"mtime":1688777015955,"results":"301","hashOfConfig":"182"},{"size":1345,"mtime":1699045269873,"results":"302","hashOfConfig":"182"},{"size":1818,"mtime":1699045258409,"results":"303","hashOfConfig":"182"},{"size":1590,"mtime":1688777015955,"results":"304","hashOfConfig":"182"},{"size":1312,"mtime":1688777015958,"results":"305","hashOfConfig":"182"},{"size":526,"mtime":1688777016150,"results":"306","hashOfConfig":"182"},{"size":1439,"mtime":1688777015958,"results":"307","hashOfConfig":"182"},{"size":97,"mtime":1688777015849,"results":"308","hashOfConfig":"182"},{"size":325,"mtime":1688777016160,"results":"309","hashOfConfig":"182"},{"size":309,"mtime":1688777016160,"results":"310","hashOfConfig":"182"},{"size":1527,"mtime":1688777016160,"results":"311","hashOfConfig":"182"},{"size":154,"mtime":1688777015849,"results":"312","hashOfConfig":"182"},{"size":1550,"mtime":1688777016154,"results":"313","hashOfConfig":"182"},{"size":1758,"mtime":1688777016158,"results":"314","hashOfConfig":"182"},{"size":290,"mtime":1688777016155,"results":"315","hashOfConfig":"182"},{"size":137,"mtime":1688777016155,"results":"316","hashOfConfig":"182"},{"size":170,"mtime":1688777016158,"results":"317","hashOfConfig":"182"},{"size":663,"mtime":1688777016155,"results":"318","hashOfConfig":"182"},{"size":407,"mtime":1688777016155,"results":"319","hashOfConfig":"182"},{"size":973,"mtime":1688777016155,"results":"320","hashOfConfig":"182"},{"size":958,"mtime":1699045363374,"results":"321","hashOfConfig":"182"},{"size":812,"mtime":1701465754348,"results":"322","hashOfConfig":"182"},{"size":296,"mtime":1701450996779,"results":"323","hashOfConfig":"182"},{"size":831,"mtime":1688777016152,"results":"324","hashOfConfig":"182"},{"size":218,"mtime":1688777015848,"results":"325","hashOfConfig":"182"},{"size":547,"mtime":1701453865307,"results":"326","hashOfConfig":"182"},{"size":3278,"mtime":1688777016154,"results":"327","hashOfConfig":"182"},{"size":802,"mtime":1688777016151,"results":"328","hashOfConfig":"182"},{"size":2048,"mtime":1696628835940,"results":"329","hashOfConfig":"182"},{"size":3988,"mtime":1701533186438,"results":"330","hashOfConfig":"182"},{"size":15036,"mtime":1688777016150,"results":"331","hashOfConfig":"182"},{"size":9431,"mtime":1690294709656,"results":"332","hashOfConfig":"182"},{"size":956,"mtime":1688777016150,"results":"333","hashOfConfig":"182"},{"size":25940,"mtime":1701533186433,"results":"334","hashOfConfig":"182"},{"size":14225,"mtime":1688777016153,"results":"335","hashOfConfig":"182"},{"size":353,"mtime":1688833516760,"results":"336","hashOfConfig":"182"},{"size":3697,"mtime":1688777016153,"results":"337","hashOfConfig":"182"},{"size":2305,"mtime":1688248071610,"results":"338","hashOfConfig":"182"},{"size":4179,"mtime":1696865801023,"results":"339","hashOfConfig":"182"},{"size":5497,"mtime":1701533186433,"results":"340","hashOfConfig":"182"},{"size":7754,"mtime":1690433109213,"results":"341","hashOfConfig":"182"},{"size":1756,"mtime":1696599272458,"results":"342","hashOfConfig":"182"},{"size":3288,"mtime":1701373924183,"results":"343","hashOfConfig":"182"},{"size":4037,"mtime":1698092261661,"results":"344","hashOfConfig":"182"},{"size":33901,"mtime":1701463527870,"results":"345","hashOfConfig":"182"},{"size":9130,"mtime":1701143767376,"results":"346","hashOfConfig":"182"},{"size":126,"mtime":1700341823278,"results":"347","hashOfConfig":"182"},{"size":89,"mtime":1700526090789,"results":"348","hashOfConfig":"182"},{"size":1402,"mtime":1700537046462,"results":"349","hashOfConfig":"182"},{"size":780,"mtime":1700537116283,"results":"350","hashOfConfig":"182"},{"size":5415,"mtime":1701145033943,"results":"351","hashOfConfig":"182"},{"size":1327,"mtime":1700607515246,"results":"352","hashOfConfig":"182"},{"size":306,"mtime":1700942219519,"results":"353","hashOfConfig":"182"},{"size":1246,"mtime":1701387898801,"results":"354","hashOfConfig":"182"},{"size":875,"mtime":1701139002936,"results":"355","hashOfConfig":"182"},{"size":1304,"mtime":1701140821580,"results":"356","hashOfConfig":"182"},{"size":249,"mtime":1701302486161,"results":"357","hashOfConfig":"182"},{"size":250,"mtime":1701302406211,"results":"358","hashOfConfig":"182"},{"size":906,"mtime":1701310991392,"results":"359","hashOfConfig":"182"},{"size":63,"mtime":1701302551390,"results":"360","hashOfConfig":"182"},{"size":113,"mtime":1701302631949,"results":"361","hashOfConfig":"182"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},"fc5en8",{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"364"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"364"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"364"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"364"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"364"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"364"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"431"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"364"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"364"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"364"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"364"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"364"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"364"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"364"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"364"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"364"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"364"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"364"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"364"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"364"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"364"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"364"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"364"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"364"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"636","messages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"638","messages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"641"},{"filePath":"642","messages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"656","messages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"641"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"682","messages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"364"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689","usedDeprecatedRules":"364"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"364"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"364"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"364"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"364"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704","usedDeprecatedRules":"364"},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"707","messages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709","usedDeprecatedRules":"364"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"712"},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"364"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"364"},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"364"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"364"},{"filePath":"727","messages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729","usedDeprecatedRules":"364"},{"filePath":"730","messages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"732","usedDeprecatedRules":"364"},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735","usedDeprecatedRules":"364"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"740","messages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"742"},{"filePath":"743","messages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"742"},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"364"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"364"},{"filePath":"751","messages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"753","messages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"364"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"364"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"364"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"769","messages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/js/Dev/my-first-reactor/src/index.js",[],["771","772"],"/Users/js/Dev/my-first-reactor/src/reducers/SitewideReducers.js",[],"/Users/js/Dev/my-first-reactor/src/App.js",[],"/Users/js/Dev/my-first-reactor/src/serviceWorker.js",[],"/Users/js/Dev/my-first-reactor/src/components/music/songReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/postsReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/music/selectedSongReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/WavesReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/streamReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/usersReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/Blog.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/LogDirectory.js",["773","774","775"],"import React from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport shakaBlack from '../../assets/images/shakaBlack.png';\nimport thumbsUp from '../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../assets/images/ThumbsDown.png';\nimport { BrowserRouter as Router, Link} from 'react-router-dom';\n\nconst LogDirectory = ({ title, message }) => {\n    \n   const getLog = () => window.location.pathname = \"/reactor/SurfLog\";\n   const sessionClick = (item, spot) => {\n        localStorage.setItem('spot', spot)\n        localStorage.setItem('logId', item)\n        console.log(`sessionClick \\n${item} --> \\nSpot: ${spot}`);\n        getLog();\n    }\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"]\n    const suffix = [\"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\"];\n    const icons = [shakaBlack, thumbsUp, thumbsDown];\n    const conditions = [\"Firing\", \"Good\", \"Bad\"];\n    const items = () => JSON.parse(localStorage.getItem(\"postDirectory\"));\n    \n    const sessions = () => items().map((item) => {\n        const itemObj = JSON.parse(localStorage.getItem(item));\n        \n        if (itemObj !== null) {\n            \n            //console.log(`ITEM: ${item} ====> ${JSON.stringify(itemObj, null, 2)}`)\n            const { Conditions, Location, Day, Surf, Swell1 } = itemObj;\n            const conditionsIndex = conditions.indexOf(Conditions.Conditions);\n            const spot = Location.Break;\n            const day = Day.Day;\n            const month = months[Day.Month-1];\n            const year = Day.Year;\n            const conditionDescription = Conditions.Conditions;\n            // eslint-disable-next-line\n            const conditionHeight = Surf.Height;\n            const height = Swell1.Height;\n            const direction = Swell1.Direction;            \n            const angle = Swell1.Angle;\n            const interval = Swell1.Interval.replace('seconds', 'sec');\n            const condition = icons[conditionsIndex];\n            const classes = 'stripe color-black m-1 r-10 flexContainer m-10Percent';\n            const buttonClasses = 'button p-10 r-10 m-1 width-100-percent glassy';\n\n            return (\n                <Link \n                    onClick={() => sessionClick(item, spot)}\n                    className=\"noUnderline mobileFull m-1 stripe color-black m-1 r-10\" \n                    key={getKey(\"link\")} \n                    to={{\n                        pathname: '/SurfLog', \n                        state: {\n                            spot: {spot}, \n                            logId: {item}\n                        }\n                    }}\n                >\n                    <div className='flexContainer m-25Percent'>\n                        <div className='flexOneFourthColumnRight contentRight p-10'>\n                            <img src={condition} alt={conditionDescription} className='icon r-5' />\n                        </div>\n                        <div className='flexThreeFourthColumn contentLeft m-10'>\n                            <div className='description'>\n                                {month + \" \" + day + suffix[Number(String(day).slice(-1))]} {year}\n                            </div>\n                            <div className='size20'>{spot}</div>\n                            <div className='description'>\n                                <span>{height}</span>\n                                <span className='ml-5'>{direction}</span>\n                                <span className='ml-5'>{angle}</span>\n                                <span className='ml-5'>{interval}</span>\n                            </div>\n                        </div>\n                    </div>\n                </Link>\n            )\n        }\n        return \"\";\n    })\n    const logSession = () => window.location.pathname = \"/reactor/SurfLog\";\n    //console.log(`postssssss=>${JSON.stringify(posts.getDirectory(),null,2)}`)\n    return (\n        <div className=\"App-content fadeIn mt--14\">\n            {sessions()}\n            <PostDirectory/>\n            <div className=\"button p-20 r-5 m-20 bg-green completedSelector color-black glassy\" onClick={logSession}>Add Session</div>\n        </div>\n    );\n}\n\nexport default LogDirectory;\n/*\n\"ThuApr3020209:17:44PM\",\n\"ThuApr3020209:19:28PM\",\n\"FriMay0120207:10:29PM\",\n\"SunMay03202012:59:02PM\",\n\"SunMay0320201:04:32PM\",\n\"SunMay0320201:11:21PM\",\n\"SunMay0320201:12:16PM\",\n\"SunMay0320201:21:55PM\",\n\"SunMay0320201:22:13PM\",\n\"SunMay0320201:22:29PM\"\n*/","/Users/js/Dev/my-first-reactor/src/components/waves/SurfReports.js",["776","777"],"import React, { useState } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\n//import cheerio from 'cheerio';\n//import got from 'got';\n\nconst SurfReports = () => {\n    // eslint-disable-next-line\n    const [oSideBuoyData, setOSideBuoyData] = useState({});\n    // eslint-disable-next-line\n    const getSwellData = () => {\n        const unirest = require(\"unirest\");\n        const req = unirest(\"GET\", \"https://stormglass.p.rapidapi.com/forecast\");\n        req.headers({\n            \"x-rapidapi-host\": \"stormglass.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"cd590b7832msheb65a284b1083a6p112e16jsn24ac4a11b813\",\n            \"useQueryString\": true\n        });\n        req.end(function (res) {\n            if (res.error) throw new Error(res.error);\n            console.log(`getSwellData => ${res.body}`);\n        });\n\n    }\n    // eslint-disable-next-line\n    const getRapidData = () => {\n        const settings = {\n            \"async\": true,\n            \"crossDomain\": true,\n            \"url\": \"https://community-open-weather-map.p.rapidapi.com/weather?q=san%20francisco%2Cus\",\n            \"method\": \"GET\",\n            \"headers\": {\n              \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n              \"x-rapidapi-key\": \"SIGN-UP-FOR-KEY\"\n            }\n          }\n          \n        const xhttp = new XMLHttpRequest();\n        xhttp.onreadystatechange = function() {\n            if (this.readyState === 4 && this.status === 200) {\n                console.log(`getRapidData: ${this.responseText}`);\n            } else {\n                console.log(`getRapidData: ${this.status}`)\n            }\n        };\n        xhttp.open(\"GET\", settings, true);\n        xhttp.send();\n          /*\n          $.ajax(settings).done(function (response) {\n            console.log(`getRapidData: ${response}`);\n          });\n          */\n    }\n        //this.getSwellData();\n        //this.getRapidData();\n    \n    const bouys = [\n        {\n           title: 'Oceanside Offshore',\n           src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=46224'\n        },\n        {\n            title: 'Torrey Pines Outer',\n            src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=46225'\n        },\n        {\n            title: 'Del Mar Nearshore',\n            src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=46266'\n        },\n        {\n            title: 'SCRIPPS Nearshore',\n            src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=46254'\n        },\n        {\n            title: 'La Jolla LJAC1',\n            src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=LJAC1'\n        },\n        {\n            title: 'La Jolla LJPC1',\n            src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=LJPC1'\n        },\n        {\n            title: 'Point Loma South',\n            src: 'https://www.ndbc.noaa.gov/widgets/station_page.php?station=46232'\n        }\n    ];\n    const menu = () => {\n        const classes = 'maxWidth400 m-10 r-5 glassy height400 horizontalItem';\n        const portraitButton = (item, index) => <iframe src={item.src} title={item.title} key={getKey(`index${index}`)} className={classes}></iframe>;\n        const menuItems = bouys.map((item) => portraitButton(item));\n        return menuItems;\n    }\n    return (\n        <div className='m-10'>\n            <link href=\"//www.surf-forecast.com/stylesheets/widget.css\" media=\"screen\" rel=\"stylesheet\" type=\"text/css\" /><div className=\"wf-width-cont surf-fc-widget\"><div className=\"widget-container\"><div className=\"external-cont\"><iframe className=\"surf-fc-i\" allowtransparency=\"true\" src=\"//www.surf-forecast.com/breaks/Uluwatu/forecasts/widget/a\" scrolling=\"no\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\"></iframe><div className=\"footer\"><a className=\"logo\" href=\"//www.surf-forecast.com/\"><img src=\"//www.surf-forecast.com/images/widget.png\" width=\"1\" height=\"1\" /></a><div className=\"about\" id=\"cmt\">View detailed surf forecast for <a href=\"//www.surf-forecast.com/breaks/Uluwatu\">Uluwatu</a>. Visit <a href=\"//www.surf-forecast.com/breaks/Uluwatu\">surf-forecast.com</a> for more details, long range forecasts, surf reports, swell and weather maps.</div></div></div></div></div>\n            \n            <div className='width-100-percent h-scroll'>\n                {menu()}\n            </div>\n        </div>\n    )\n}\n\nexport default SurfReports;","/Users/js/Dev/my-first-reactor/src/components/waves/LoggerFunctional.js",["778"],"import React, {useState, useEffect} from 'react';\nimport LogEntry from './LogEntryFunctional.js';\nimport Loader from '../utils/Loader.js';\nimport interfaceData from './InterfaceData.js'\nimport templateData from './LogTemplateData.js';\nimport generateNewLogId from './GenerateLogId.js';\n\nconst Logger = ({logId, location}) => { \n    console.log(`Logger => logId: ${logId}\\nlocalStorage.getItem('logId'): ${localStorage.getItem('logId')}`); \n    const logExists = () => (localStorage.getItem(logId) === 'null') ? false : true;\n    // eslint-disable-next-line\n    const initLogId = () => (logExists()) ? logId : generateNewLogId();\n    const initLog = () => (logExists()) ? JSON.parse(localStorage.getItem(logId)) : templateData;\n    const [status, setStatus] = useState({\n        //logID: initLogId(),\n        logID: localStorage.getItem('logId'),\n        log: initLog(),\n        isLoaded: false,\n        items: []\n    })\n    // eslint-disable-next-line\n    const getSpot = () => localStorage.getItem(\"spot\");\n    useEffect(() => {\n        // eslint-disable-next-line\n        const { state } = location;\n        const logId = localStorage.getItem('logId');\n        console.log(`LoggerFunctional => componentDidMount -> SPOT: ${getSpot()}\\ngetLogId: ${localStorage.getItem('logId')}\\nlogId: ${logId}`); \n        \n        if (localStorage.getItem(logId) === 'null') {\n            setStatus(prevState => ({\n                ...prevState,\n                log: templateData,\n                logID:generateNewLogId()\n            }));\n            console.log(`LoggerFunctional => componentDidMount -> 1\\nSPOT: ${getSpot()}\\nlogID: ${logId}\\nlog: ${JSON.stringify(status.log, null, 2)}`); \n        \n        } else {\n            setStatus(prevState => ({\n                ...prevState,\n                log: JSON.parse(localStorage.getItem(logId)),\n                logID: logId\n            }));\n            //console.log(`LoggerFunctional => componentDidMount -> 2\\nSPOT: ${getSpot()}\\nlogID: ${logId}\\nlog: ${JSON.stringify(status.log, null, 2)}`); \n        }\n        \n        let data = interfaceData;\n        const returnJSON = (response) => response.json();\n        const returnRejection = (response) => Promise.reject({status: response.status, data});\n        // eslint-disable-next-line\n        const validate = (response) => (response.ok) ? returnJSON(response) : returnRejection(response);\n        setStatus({\n            log: JSON.parse(localStorage.getItem(logId)),\n            logID: logId,\n            items: data,\n            isLoaded: true\n        });\n    }, [])\n\n    const updateLog = (groupTitle, label, selected, set) => {\n        const log = (status.log !== null) ? status.log : templateData;\n        //console.log(`updateLog => \\ngroupTitle: ${groupTitle} \\nlabel: ${label}\\nselected: ${selected}\\nset: ${set}\\nlog: ${JSON.stringify(log, null, 2)}`)\n        log[groupTitle][label] = selected;\n        if (groupTitle !== undefined && groupTitle !== 1 && selected !== undefined && set) {\n            setStatus(prevState => ({\n                ...prevState,\n                log: log\n            }));\n        }\n    }\n    const getStateLog = () => status.log;\n          \n    //console.log(`LoggerFunctional ===> ${JSON.stringify(status.items, null, 2)}`);\n    let appInterface = <div className=\"App-content fadeIn\">\n                            <div className=\"flex3Column\"></div>\n                            <div className=\"flex3Column\">\n                                <Loader />\n                            </div>\n                            <div className=\"flex3Column\"></div>\n                        </div>;\n                        \n    if (status.isLoaded) {\n        appInterface = <div className=\"App-content fadeIn\">\n            <div className=\"flex3Column\"></div>\n            <div className=\"flex3Column\">\n                <LogEntry\n                    logId={status.logID}\n                    onChange={updateLog} \n                    getStateLog={getStateLog} \n                    title=\"Session Log\" \n                    message=\"Add your session data\"  \n                    buttonLabel=\"submit\" \n                    items={status.items}\n                />\n            </div>\n            <div className=\"flex3Column\"></div>\n        </div>\n        \n    }\n    return (\n        appInterface            \n    )\n    \n}\nexport default Logger;","/Users/js/Dev/my-first-reactor/src/components/Home.js",[],"/Users/js/Dev/my-first-reactor/src/components/Reducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/WaveFinder.js",["779","780","781","782","783","784","785","786","787","788","789"],"import React, { useState, useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport getKey from '../utils/KeyGenerator.js';\nimport WaveUtils from '../utils/WaveUtils.js';\nimport calculateDistance from '../utils/CalculateDistance.js';\nimport Tide from './Tide.js';\nimport ConditionsDashboard from './ConditionsDashboard.js';\n// eslint-disable-next-line\nimport tide from '../../assets/images/tide.png';\nimport GetMatchIcon from './GetMatchIcon.js';\nimport SurfLocation from './SurfLocation.js';\nimport Sunset from './Sunset.js';\nimport locations from './Locations.js';\nimport directionObject from './DirectionObject.js';\nimport ConditionsSelectors from './ConditionsSelectors.js';\nimport Geolocator from '../utils/Geolocator.js';\n// eslint-disable-next-line\nimport useOceanData from './useOceanData.js';\nimport useCurrentTime from '../utils/useCurrentTime.js';\nimport ConditionsContext from '../context/ConditionsContext.js';\n\nconst WaveFinder = () => {\n    const getLocal = (item) => localStorage.getItem(item);\n    const getProps = (item) => item;\n\n    const getDefault = (item) => (getLocal(item) === 'null') \n                                    ? getProps(item) \n                                    : getLocal(item);\n\n    const getSwell1Direction = () => localStorage.getItem('swell1Direction') ? localStorage.getItem('swell1Direction') : 'SSW';\n    const getSwell2Direction = () => localStorage.getItem('swell2Direction') ? localStorage.getItem('swell2Direction') : 'SSW';\n    const getLocalLocations = () => (localStorage.getItem('locations')) ? JSON.parse(localStorage.getItem('locations')) : locations();\n    const getLocations = () => getLocalLocations() || locations();\n    \n    const [status, setStatus] = useState({            \n        module: 'WaveFinder',\n        pause: true,\n        date: new Date(),\n        edit: false,\n        tide: getDefault('tide'),\n        stars: getDefault('stars'),\n        waterTemp: '66.2',\n        swell1Height: '2.0',\n        swell1Interval: '17 seconds',\n        swell1Direction: getSwell1Direction(),\n        swell2Height: '2.0',\n        swell2Interval: '9 seconds',\n        swell2Direction: getSwell2Direction(),\n        swell1Angle: directionObject[getSwell1Direction()],\n        swell2Angle: directionObject[getSwell2Direction()],\n        //swell1Direction: getDefault('swell1Direction'),\n        //swell2Direction: getDefault('swell2Direction'),\n        //swell1Angle: getDefault('swell1Angle'),\n        //swell2Angle: getDefault('swell2Angle'),\n        //swell1Height: getDefault('swell1Height'),\n        //swell2Height: getDefault('swell2Height'),\n        //swell1Interval: getDefault('swell1Interval'),\n        //swell2Interval: getDefault('swell2Interval'),\n        windDirection: getDefault('windDirection'),\n        distance: getDefault('distance'),\n        isSwell1: (localStorage.getItem('isSwell1') === 'true') ? true : false,\n        isSwell2: (localStorage.getItem('isSwell2') === 'true') ? true : false,\n        isTide: (localStorage.getItem('isTide') === 'true') ? true : false,\n        isWind: (localStorage.getItem('isWind') === 'true') ? true : false,\n        locations: getLocations(),\n        matches: [],\n        init: false\n    });\n    //console.log(`WaveFinder => status:\\n${JSON.stringify(status, null, 2)}`);\n    //setIt = setIt.bind(this);\n    const time = useCurrentTime();\n    const startTime = time[0].startTime;\n    const endTime = time[0].endTime;\n    //console.log(`WaveFinder => time: ${JSON.stringify(time, null, 2)}\\nstartTime: ${startTime} \\nendTime: ${endTime}`);\n    const tideNowLink = `https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?begin_date=${startTime}&end_date=${endTime}&station=9410660&product=water_level&datum=mllw&units=english&time_zone=lst_ldt&application=web_services&format=json`;\n    const uriMLL = `https://api.tidesandcurrents.noaa.gov/api/prod/datagetter?product=predictions&application=NOS.COOPS.TAC.WL&begin_date=${startTime}&end_date=${endTime}&datum=MLLW&station=9410230&time_zone=lst_ldt&units=english&interval=hilo&format=json`;\n    // eslint-disable-next-line\n    const data = useOceanData('tides', uriMLL);\n    // eslint-disable-next-line\n    console.log(`$$$$$$$$$$$$$$$$$$$$$$$$$$$TIDE: ${tideNowLink}`);\n    const tideNow = useOceanData('tide', tideNowLink);\n    \n    //console.log(`isWind: ${getDefault('isWind')}`)\n    \n    const tick = () => {\n        console.log(`tick => pause: ${status.pause}`)\n        if (status.pause === false) {\n            setStatus(prevState => ({\n                ...prevState,\n                date: new Date(),\n                pause: true\n            }));\n        }\n    }\n    useEffect(() => {\t\t\n        const timerID = setInterval(\n            () => tick(),\n            3000000\n        );\n        return function cleanUp () {\n            clearInterval(timerID);\n        }\n    },[]);\n    \n    useEffect(() => {\n        setScroll();\n    },[]);\n\n    const currentPositionExists = () => (status.longitude) ? true : false;\n    const updateCurrentLocation = (longitude, latitude) => {\n//      console.log(`UPDATING CURRENT POSITION ======> longitude: ${longitude} latitude: ${latitude}`)\n        if (currentPositionExists()) {\n\n            if ((Math.abs(status.longitude - longitude)>.0001) || (Math.abs(status.latitude - latitude)>.0001) || (status.init === false)) {\n                console.log(`updateCurrentLocation => satus coords ^^^^^^^^^^^ ${longitude}, ${latitude}`)\n                localStorage.setItem('longitude', longitude);\n                localStorage.setItem('latitude', latitude);\n                setStatus(prevState => ({\n                    ...prevState,\n                    longitude,\n                    latitude,\n                    init: true\n                }));\n            }\n        } else if ((Math.abs(Number(localStorage.getItem('longitude')) - longitude)>.000003) || (Math.abs(localStorage.getItem('latitude') - latitude)>.000003)) {\n            console.log(`updateCurrentLocation => local coords ^^^^^^^^^^^ ${longitude}, ${latitude}`)\n            localStorage.setItem('longitude', longitude);\n            localStorage.setItem('latitude', latitude);\n            setStatus(prevState => ({\n                ...prevState,\n                longitude,\n                latitude,\n                init: true\n            }));\n        }\n    }\n    const updateLocations = () => {\n        console.log(`updateLocations =>`);\n        setStatus(prevState => ({\n            ...prevState,\n            locations: getLocations(),\n            edit: false\n        }));\n    }; \n    const getDefaultHeights = (tideSelected) => {\n        if (tideSelected === 'high') {\n            return 5;\n        } else if (tideSelected === 'medium') {\n            return 3;\n        }\n        return 0;\n    }\n    const handleWindCheck = () => {\n        localStorage.setItem('isWind', !status.isWind);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            isWind: localStorage.getItem('isWind')\n        }));\n    }\n    const handleTideCheck = () => {\n        localStorage.setItem('isTide', !status.isTide);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            isTide: localStorage.getItem('isTide')\n        }));\n    }\n    const handleSwellCheck = (id) => {\n        if (id === '1') {\n            localStorage.setItem('isSwell1', !status.isSwell1);\n            setStatus(prevState => ({\n                ...prevState,\n                pause: true,\n                isSwell1: localStorage.getItem('isSwell1')\n            }));\n        } else {\n            localStorage.setItem('isSwell2', !status.isSwell2);\n            setStatus(prevState => ({\n                ...prevState,\n                pause: true,\n                isSwell2: localStorage.getItem('isSwell2')\n            }));\n        }\n    }\n    // eslint-disable-next-line\n    const handleSwellSelection = (id, groupTitle, label, selected) => {\n        // eslint-disable-next-line\n        const swellAngle = directionObject[selected];\n        //console.log(`handleSwellSelection => \\nselected: ${selected} \\nswellAngle: ${swellAngle}\\n directionObject: ${JSON.stringify(directionObject, null, 2)}`)\n        if(id === '1') {\n            localStorage.setItem('swell1Angle', swellAngle);\n            localStorage.setItem('swell1Direction', selected);\n            setStatus(prevState => ({\n                ...prevState,\n                pause: true,\n                swell1Direction: selected,\n                swell1Angle: swellAngle\n            }));\n        } else {\n            //console.log(`${selected} swell2Angle: ${swell2Angle}`)\n            localStorage.setItem('swell2Angle', swellAngle);\n            localStorage.setItem('swell2Direction', selected);\n            setStatus(prevState => ({\n                ...prevState,\n                pause: true,\n                swell2Direction: selected,\n                swell2Angle: swellAngle\n            }));\n        }\n    }\n    const handleSwell1Selection = (groupTitle, label, selected) => {\n        const swell1Angle = directionObject[selected];\n        //console.log(`handleSwell1Selection => \\nselected: ${selected} \\nswell1Angle: ${swell1Angle}\\n directionObject: ${JSON.stringify(directionObject, null, 2)}`)\n        localStorage.setItem('swell1Angle', swell1Angle);\n        localStorage.setItem('swell1Direction', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell1Direction: selected,\n            swell1Angle: swell1Angle\n        }));\n    }\n    const handleSwell2Selection = (groupTitle, label, selected) => {\n        const swell2Angle = directionObject[selected];\n        //console.log(`${selected} swell2Angle: ${swell2Angle}`)\n        localStorage.setItem('swell2Angle', swell2Angle);\n        localStorage.setItem('swell2Direction', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell2Direction: selected,\n            swell2Angle: swell2Angle\n        }));\n    }\n    const handleSwell1Angle = (groupTitle, label, selected) => {\n        localStorage.setItem('swell1Angle', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell1Angle: selected\n        }));\n    }\n    const handleSwell2Angle = (groupTitle, label, selected) => {\n        localStorage.setItem('swell2Angle', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell2Angle: selected\n        }));\n    }\n    const handleSwell1Height = (groupTitle, label, selected) => {\n        localStorage.setItem('swell1Height', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell1Height: selected\n        }));\n    }\n    const handleSwell2Height = (groupTitle, label, selected) => {\n        localStorage.setItem('swell2Height', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell2Height: selected\n        }));\n    }\n    const handleSwell1Interval = (groupTitle, label, selected) => {\n        localStorage.setItem('swell1Interval', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell1Interval: selected\n        }));\n    }\n    const handleSwell2Interval = (groupTitle, label, selected) => {\n        localStorage.setItem('swell2Interval', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            swell2Interval: selected\n        }));\n    }\n    const handleStarSelection = (groupTitle, label, selected) => {\n        localStorage.setItem('stars', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            stars: selected\n        }));\n    }\n    const handleDistanceSelection = (event) => {\n        const target = event.target;\n        localStorage.setItem('distance', target.value);\n        setStatus(prevState => ({\n            ...prevState,\n            distance: target.value\n        }));\n    }\n    const pause = (event) => {\n        //console.log('PAUSE');\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true\n        }));\n    }\n    // eslint-disable-next-line\n    const unpause = () => {\n        //console.log('UNPAUSE');\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true\n        }));\n    };\n    const setTide = (tide, height) => {\n        console.log(`WaveFinder = > setTide ${tide}`)\n        //let currentTide = (Number(tide)>2) ? 'medium' : 'low';\n        //console.log(`WaveFinder = > ${tide} currentTide(${currentTide})`)\n        //currentTide = (Number(tide)>4) ? 'high' : currentTide;\n        //console.log(`WaveFinder = > ${tide} currentTide(${currentTide})`)\n        if (localStorage.getItem('tide') !== tide) {\n            localStorage.setItem('height', height);\n            localStorage.setItem('tide', tide);\n            setStatus(prevState => ({\n                ...prevState,\n                tide: tide,\n                height: height\n            }));\n        }\n    }\n    const tideDisplay = (display) => <Tide \n                                    tideNow={tideNow} \n                                    data={data} \n                                    time={time} \n                                    setTide={setTide} \n                                    display={`${display}`}\n                                />\n\n    // eslint-disable-next-line\n    const getState = (kind) => {\n        const { swell1Direction, swell2Direction, tide, windDirection } = status;\n        if (kind === 'swell1') {\n            return swell1Direction;\n        } else if (kind === 'swell2') {\n            return swell2Direction;\n        } else if (kind === 'tide') {\n            return tide;\n        } else if (kind === 'wind') {\n            return windDirection;\n        }\n    }\n    // eslint-disable-next-line\n    const getStarDetails = (kind) => {\n        let details = '';\n        const { height, windSpeed, windGusts } = status;\n        details = (kind === 'tide') ? <div className='bold color-neogreen'>{localStorage.getItem('height')}'</div> : details;\n        details = (kind === 'wind') ? <div className='bold color-neogreen'>{windSpeed * 1.15078}-{windGusts * 1.15078}mph</div> : details;\n        return details\n    }\n    // eslint-disable-next-line\n    /*\n    const star = (matchKind) => <div className='flex3Column bg-lite mr-5 ml-5 p-10 r-10'>\n                            <GetMatchIcon kind={matchKind} status={status}/>\n                            <div className='greet'>{getState(matchKind)}{getStarDetails(matchKind)}</div>\n                        </div>;\n    */\n    \n    const handleTideSelection = (groupTitle, label, selected) => {\n        const height = getDefaultHeights(selected);\n        setTide(selected, height);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            tide: selected,\n            height: height\n        }));\n    }\n    const setWind = (direction, angle, speed, gusts) => {\n        //console.log(`setWind =>\\ndirection: ${direction}\\nspeed: ${speed}`)\n        setStatus(prevState => ({\n            ...prevState,\n            windDirection: direction,\n            windAngle: Number(angle).toFixed(0),\n            windSpeed: Number(speed).toFixed(0),\n            windGusts: Number(gusts).toFixed(0)\n        }));\n    }\n\n    //console.log(`currentPositionExists: ${currentPositionExists()}`);\n    const swell1Match = (item) => (item.swell.indexOf(status.swell1Direction)>-1) ? true : false;\n    const swell2Match = (item) => (item.swell.indexOf(status.swell2Direction)>-1) ? true : false;\n    const windMatch = (item) => (item.wind.indexOf(status.windDirection)>-1) ? true : false;\n    const tideMatch = (item) => (item.tide.indexOf(status.tide)>-1) ? true : false;\n    //const swell1DirectionMatch = (direction) => (direction.swell===status.swell1Direction) ? true : false;\n    //const swell2DirectionMatch = (direction) => (direction===status.swell2Direction) ? true : false;\n    //const windDirectionMatch = (direction) => (direction.wind === windDirection) ? true : false;\n    //const tideDirectionMatch = (direction) => (direction.tide === status.tide) ? true : false;\n    const getDistance = (item) => calculateDistance(status, item);\n    //Math.abs(item.latitude - status.latitude)+Math.abs(item.longitude - status.longitude);\n    //.01 - 1 mile\n    const distanceRange = Number(status.distance);\n    const regionMatch = (item) => ((getDistance(item)<distanceRange) || (distanceRange > 999999999999)) ? getDistance(item) : false;\n    let count = 0;\n    const match = (item) => {\n        const matches = [];\n        // eslint-disable-next-line\n        let matchesCount = (swell1Match(item)) ? matches.push('swell1') : matches;\n        matchesCount = (swell2Match(item)) ? matches.push('swell2') : matches;\n        matchesCount = (windMatch(item)) ? matches.push('wind') : matches;\n        // eslint-disable-next-line\n        matchesCount = (tideMatch(item)) ? matches.push('tide') : matches;\n        //console.log(`matches => ${item.name} - ${matches}`)\n        return matches;\n    }\n    // eslint-disable-next-line\n    const statusClass = (status) => (status === true) ? 'color-neogreen' : 'color-yellow'; \n    // eslint-disable-next-line\n    const subStatusClass = (status) => (status === true) ? 'color-orange' : 'color-yellow'; \n    const swell1Confirm = (matches) => ((status.isSwell1 && matches.includes('swell1')) || status.isSwell1 === false) ? true : false;\n    const swell2Confirm = (matches) => ((status.isSwell2 && matches.includes('swell2')) || status.isSwell2 === false) ? true : false;\n    const tideConfirm = (matches) => ((status.isTide && matches.includes('tide')) || status.isTide === false) ? true : false;\n    const windConfirm = (matches) => ((status.isWind && matches.includes('wind')) || status.isWind === false) ? true : false;\n    const showAll = false;\n    const getCount = () => count;\n    const getMatchingLocation = (item) => {\n        const matches = match(item);\n        const inRegion = regionMatch(item);\n        if ((swell1Confirm(matches) && swell2Confirm(matches) && tideConfirm(matches) && windConfirm(matches)) || showAll) {\n            if (inRegion !== false) {\n                if (matches.length >= Number(status.stars)) {\n                    //console.log(`STARS ==================> Matches: ${matches.length} status stars:${status.stars}`)\n                    count = count + 1;\n                    return <SurfLocation \n                                key={getKey('link')} \n                                state={status} \n                                item={item} \n                                matches={matches} \n                                calculateDistance={calculateDistance} \n                                regionMatch={inRegion} \n                                tideDisplay={tideDisplay} \n                                updateLocations={updateLocations}\n                            >\n                            </SurfLocation>\n                }\n            }\n        }\n    }\n    const setScroll = () => {\n        const body = document.body; // For Safari\n        const html = document.documentElement; // Chrome, Firefox, IE and Opera places the overflow at the html level, unless else is specified. Therefore, we use the documentElement property for these browsers\n        const height = document.getElementById('north').clientHeight;\n        body.scrollLeft = 0;\n        body.scrollTop = height+1700;\n        html.scrollLeft = 0;\n        html.scrollTop = height+1700;\n    }\n    const currentConditions = () => {\n        const body = document.body; // For Safari\n        const html = document.documentElement; // Chrome, Firefox, IE and Opera places the overflow at the html level, unless else is specified. Therefore, we use the documentElement property for these browsers\n        body.scrollLeft = 0;\n        body.scrollTop = 25;\n        html.scrollLeft = 0;\n        html.scrollTop = 25;\n        const localTide = Number(JSON.parse(localStorage.getItem(\"tideData\")).data[JSON.parse(localStorage.getItem(\"tideData\")).data.length-1].v).toFixed(1);\n        const waterLevel = (tideNow.data !== undefined) ? Number(tideNow.data[tideNow.data.length - 1].v).toFixed(1) : localTide;\n        const getCurrentTide = (waterLevel > 3) ? \"high\" : (waterLevel < 2) ? \"low\" : \"medium\";\n        //localStorage.setItem('tide', getCurrentTide);\n        localStorage.setItem('height', waterLevel);\n        setTide(getCurrentTide);\n        setWindStatus(localStorage.getItem(\"wind\"))\n    }\n    const conditionsEntry = () => {\n        const body = document.body; // For Safari\n        const html = document.documentElement; // Chrome, Firefox, IE and Opera places the overflow at the html level, unless else is specified. Therefore, we use the documentElement property for these browsers\n        body.scrollLeft = 0;\n        body.scrollTop = 740;\n        html.scrollLeft = 0;\n        html.scrollTop = 740;\n    }\n    const sortedNorthSpots = () => {\n        const latitude = (status.latitude !== undefined) ? status.latitude : 33.079940;\n        const north = [];\n        locations().forEach((item) => {\n            if (latitude < item.latitude) {\n                north.push(item);\n            }\n        });\n        localStorage.setItem('scrollIndex', north.length)\n        const northLocations = () => north.map((item) => getMatchingLocation(item));\n        return northLocations;\n    }\n    const sortedSouthSpots = () => {\n        const latitude = (status.latitude !== undefined) ? status.latitude : 33.079940;\n        const south = [];\n        locations().forEach((item) => {\n            if (latitude > item.latitude) {\n                south.push(item);\n            }\n        });\n        const southLocations = () => south.map((item) => getMatchingLocation(item));\n        return southLocations;\n    }\n    // eslint-disable-next-line\n    const sortedSpots = () => {\n        const latitude = (status.latitude !== undefined) ? status.latitude : 33.079940;\n        const north = [];\n        const south = [];\n        locations().forEach((item) => {\n            //console.log(`${item.name} current ${latitude} > item: ${item.latitude}`)\n            if (latitude > item.latitude) {\n                south.push(item);\n            } else {\n                north.push(item);\n            }\n        });\n        localStorage.setItem('scrollIndex', north.length)\n        /*\n        setStatus(prevState => ({\n            ...prevState,\n            scrollIndex: localStorage.getItem('scrollIndex')\n        }));\n        */\n        const northLocations = north.map((item) => getMatchingLocation(item));\n        const southLocations = south.map((item) => getMatchingLocation(item))\n        const sorted = north.concat(south);\n        //console.log(`sortedSpots =>\\nsortedNorth: ${JSON.stringify(north,null,2)}`)\n        //console.log(`sortedSpots =>\\nsortedSouth: ${JSON.stringify(south,null,2)}`)\n        const sortedLocations = sorted.map((item) => getMatchingLocation(item));\n        return <div>\n                <div id='north' className='p-10 r-10 glassy mb-1'>\n                    {northLocations}<br/>north\n                </div>\n                <div className='p-10 r-10 glassy'>\n                    south<br/>\n                    {southLocations}\n                </div>\n            </div>;\n    }\n    const matchingLocations = locations().map((item) => getMatchingLocation(item));\n    //localStorage.setItem('locations', JSON.stringify(locations()))\n    //console.log(`WaveFinder => \\nlocations: ${JSON.stringify(locations(), null, 2)}`)\n    // eslint-disable-next-line\n    const setWindStatus = (selected) => {\n        localStorage.setItem('windDirection', selected);\n        setStatus(prevState => ({\n            ...prevState,\n            pause: true,\n            windDirection: selected\n        }));\n    }\n    const tideButton = () => {\n        return (\n            <div className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                <GetMatchIcon kind='tide' status={status}/>\n                Tide\n            </div>\n        )\n    }\n    const windButton = () => {\n        return (\n            <div className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                <GetMatchIcon kind='wind' status={status}/>\n                Wind\n            </div>\n        )\n    }\n    const swell1Button = () => {\n        return (\n            <div className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                <GetMatchIcon kind='swell1' status={status}/>\n                Swell1\n            </div>\n        )\n    }\n    const swell2Button = () => {\n        return (\n            <div className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                <GetMatchIcon kind='swell2' status={status}/>\n                Swell2\n            </div>\n        )\n    }\n    const repositionButton = () => {\n        return (\n            <div onClick={() => setScroll()} className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                Reposition\n            </div>\n        )\n    }\n    const conditionsButton = () => {\n        return (\n            <div onClick={() => conditionsEntry()} className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                Conditions\n            </div>\n        )\n    }\n    const currentButton = () => {\n        return (\n            <div onClick={() => currentConditions()} className='p-10 button r-5 color-lite bold bg-green glassy m-1'>\n                Current\n            </div>\n        )\n    }\n    return (\n        <div className='r-10 p-5 fadeIn mt--40 width-100-percent bg-tinted'>\n            <div className='p-10'>\n                <Geolocator currentPositionExists={currentPositionExists} returnCurrentPosition={updateCurrentLocation}/>\n            </div>\n            <div className='white mt--10'>\n                <ConditionsDashboard tideDisplay={tideDisplay} setWind={setWind} />\n                <ConditionsContext.Provider value={status}>\n                    <ConditionsSelectors \n                        setTide={setTide}\n                        setWind={setWind}\n                        setWindStatus={setWindStatus}\n                        handleTideCheck={handleTideCheck}\n                        handleTideSelection={handleTideSelection}\n                        handleWindCheck={handleWindCheck} \n                        handleSwellCheck={handleSwellCheck}\n                        handleSwell1Selection={handleSwell1Selection}\n                        handleSwell2Selection={handleSwell2Selection}\n                        handleSwell1Angle={handleSwell1Angle}\n                        handleSwell2Angle={handleSwell2Angle}\n                        handleSwell1Height={handleSwell1Height}\n                        handleSwell2Height={handleSwell2Height}\n                        handleSwell1Interval={handleSwell1Interval}\n                        handleSwell2Interval={handleSwell2Interval}\n                        handleStarSelection={handleStarSelection}\n                        handleDistanceSelection={handleDistanceSelection}\n                        pause={pause}\n                        setStatus={setStatus}\n                        tideNow={tideNow}\n                        data={data} \n                        tideDisplay={tideDisplay}\n                    />\n                </ConditionsContext.Provider>\n                <div className='mt-10 mb-20'>\n                    <div className='m-5'><span className='color-neogreen bold'>{(getCount() === 1) ? `1 wave` : `${count} waves`}</span> out of {locations().length}</div>\n                    <div className='m-5'>are in a <span className='color-neogreen bold'>{status.distance}</span> mile radius</div>\n                    <div className='m-5'>and prefer <span className='color-neogreen bold'>{status.swell1Direction} </span>and <span className='color-orange bold '>{status.swell2Direction} </span>swell </div>\n                    <div className='m-5'>with a <span className='color-neogreen bold'>{localStorage.getItem('height')}' {localStorage.getItem('tide')} </span>tide and {localStorage.getItem('windDirection')} winds.</div>\n                </div>\n                <Sunset view='simple'/>\n                {sortedSpots()}\n                <WaveUtils status={status} item={status} updateLocations={updateLocations}></WaveUtils>\n                <div className='flexContainer bt-15'>\n                    <div className='flex3Column'>{currentButton()}</div>\n                    <div className='flex3Column'>{conditionsButton()}</div>\n                    <div className='flex3Column'>{repositionButton()}</div>\n                </div>\n                {/*\n                    <div className='flexContainer t-50 mt-10'>\n                        <div className='flex4Column'>{swell1Button()}</div>\n                        <div className='flex4Column'>{swell2Button()}</div>\n                        <div className='flex4Column'>{tideButton()}</div>\n                        <div className='flex4Column'>{windButton()}</div>\n                    </div>\n                */}\n            </div> \n        </div>  \n    )\n}\nexport default WaveFinder;","/Users/js/Dev/my-first-reactor/src/components/blog/PhotoBlog.js",[],"/Users/js/Dev/my-first-reactor/src/components/music/Player.js",[],"/Users/js/Dev/my-first-reactor/src/reducers/authReducer.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/Debouncer.js",[],"/Users/js/Dev/my-first-reactor/src/components/forms/FormEssay.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/SlideShow.js",["790","791","792"],"import React, { useEffect, useState } from 'react';\n\nimport useCurrentTime from './useCurrentTime.js';\n\nconst SlideShow = () => {\n    const [ time ] = useCurrentTime();\n    const times = [0, 6, 12, 18];\n    const getHourIndex = (hour) => {\n        const sortedTimes = times.sort((a, b) => a - b);\n        let hourIndex = sortedTimes.findIndex((time) => time > hour+1);\n        if (hourIndex === -1) hourIndex = sortedTimes.length;\n        \n        return hourIndex-1;\n    };\n    const getDaysInMonth = () => {\n        const year = time.year;\n        const month = time.month + 1; // Adding 1 because months are zero-based\n        const firstDayOfNextMonth = new Date(year, month, 1);\n        const lastDayOfCurrentMonth = new Date(firstDayOfNextMonth - 1);\n        return lastDayOfCurrentMonth.getDate();\n    };\n    const getDaysInLastMonth = () => {\n        const year = time.year;\n        const month = time.month-1; // Adding 1 because months are zero-based\n        const firstDayOfLastMonth = new Date(year, month, 1);\n        const lastDayOfLastMonth = new Date(firstDayOfLastMonth - 1);\n        return lastDayOfLastMonth.getDate();\n    };\n                                \n    console.log(`SlideShow => time.hours: ${time.hours} \\nmonth long: ${time.monthLong} \\nmonth: ${time.month} \\nday: ${time.date} \\ndays this month: ${getDaysInMonth()} \\ndays last month: ${getDaysInLastMonth()}`);\n    const images = [];\n    for (let x=1;x<=90;x++) {\n        if (x<31) {\n            images.push({ \"image\": \"http://slcharts01.cdn-surfline.com/charts/socal/local/socal_large_\"+x+\".png\" });\n        } else if (x < 61) {\n            images.push({ \"image\": \"http://slcharts01.cdn-surfline.com/charts/nbaja/puntabaja/nearshore/puntabaja_large_\"+(x-30)+\".png\" });\n        } else {\n            images.push({ \"image\": \"http://slcharts01.cdn-surfline.com/charts/sbaja/local/sbaja_large_\"+(x-60)+\".png\" });\n        }\n    };\n    const [status, setStatus] = useState({\n        nextMonthStatus: false,\n        day: time.date,\n        month: time.month,\n        hourIndex: getHourIndex(time.hours),\n        monthLong: time.monthLong,\n        slideShow: true,\n        index: 0,\n        images: images,\n        url1: images[0].image,\n        url2: images[30].image,\n        url3: images[60].image\n    });\n    useEffect(() => {\n       const getImage = () => {\n            //console.log(`status.index: ${status.index} slideShow: ${status.slideShow}`)\n            if (status.slideShow) {\n                const i = (status.index === 29) ? 1 : status.index+1; \n                const isBack = () => ((i === status.index+1) || (status.index === 29)) ? false : true;        \n                const indexMinusOne = () => (status.hourIndex - 1);\n                const indexPlusOne = () => (status.hourIndex + 1); \n                const goBackIndex = () => ((indexMinusOne() > 0) ? indexMinusOne() : 3);\n                const goFowardIndex = () => ((indexPlusOne() <= 3) ? indexPlusOne() : 0)\n                const goBackDay = () => ((status.day === 1) ? getDaysInLastMonth() : status.day-1);\n                const getHourIndex = () => (isBack()) ? goBackIndex() : goFowardIndex();\n                //console.log(`getImage => imgArray[${i}].image: ${status.images[i].image}`)\n                console.log(`(status.day: ${status.day} === getDaysInMonth(): ${getDaysInMonth()})`)\n                let thisDay = (getHourIndex() > status.hourIndex) ? status.day : ((isBack()) ? goBackDay() : ((status.day === getDaysInMonth()) ? 1 : status.day+1));\n                thisDay = (i === 1) ? ((time.hours >= 18) ? (time.date+1) : time.date) : thisDay;\n                const nextMonthStatus = ((i>1) && ((status.nextMonthStatus && ((thisDay === (status.day+1))||(thisDay === 1)||(thisDay === status.day))) || (!status.nextMonthStatus && (thisDay === 1)))) ? true : false;\n                //((status.nextMonthStatus && (thisDay === (status.day+1))) || (!status.nextMonthStatus && (thisDay === 1))) ? true : false,\n        \n                console.log(`thisDay: ${thisDay}`)\n                setStatus(prevState => ({\n                    ...prevState,\n                    day: thisDay,\n                    nextMonthStatus: nextMonthStatus,\n                    month: (!status.nextMonthStatus && (status.day > getDaysInMonth())) ? `0${Number(status.month)+1}` : status.month,\n                    monthLong: time.monthLong,\n                    //monthLong: (status.day === getDaysInMonth()) ? time.monthNextLong : time.monthLong,\n                    monthNextLong: time.monthNextLong,\n                    hourIndex: getHourIndex(),\n                    index: i,\n                    url1: status.images[i].image,\n                    url2: status.images[i+30].image,\n                    url3: status.images[i+60].image\n                }))\n            }\n        }   \t\t\n        const timerID = setInterval(\n            () => getImage(),\n            700\n        );\n        return function cleanUp () {\n            clearInterval(timerID);\n        }\n    },[status]);\n    const toggleSlideShow = (e) => {\n        e.persist();\n        const position = () => e.clientX;\n        const width = () => window.innerWidth;\n        const back = () => width()/3;\n        const halfway = () => width()/2;\n        const next = () => width() - back();\n        const getDirection = () => (position() > next()) ? 'next' : 'back';\n        const isNext = () => (position() > next()) ? true : false;\n        const isBack = () => (position() < back()) ? true : false;\n        const isCenter = () => ((position() > back()) && (position() < next())) ? true : false;\n        console.log(`$click\\nwidth: ${width()}\\nhalfway: ${halfway()}\\nxpos: ${position()}\\ndirection: ${getDirection()}\\nback: ${back()}\\nnext: ${next()}`)\n        const updateStatus = () => ((isNext() || isBack()) && !isCenter() ) ? false : !status.slideShow;\n        const getIndex = () => (isBack()) ? (status.index - 1) : (status.index + 1);\n        const i = (getIndex() === 30) ? 1 : (getIndex() === 0) ? 29 : getIndex();\n        const previousIndex = () => (status.hourIndex - 1);\n        const nextIndex = () => (status.hourIndex + 1);\n        const isPreviousIndexGreaterThanOne = () => (previousIndex > 0);\n        let getHourIndex = () => (isBack()) ? (isPreviousIndexGreaterThanOne() ? previousIndex : 3) : ((nextIndex() <= 3) ? nextIndex() : 0);\n        const goBackDay = () => ((status.day === 1) ? getDaysInLastMonth() : status.day-1);\n        const isHourIndexGreater = () => (getHourIndex() > status.hourIndex);\n        const addDay = () => ((status.day === getDaysInMonth()) ? 1 : status.day+1);\n        let thisDay = isHourIndexGreater() ? status.day : ((isBack()) ? goBackDay() : addDay());\n        //let thisDay = (getHourIndex() > status.hourIndex) ? status.day : ((isBack()) ? goBackDay() : ((status.day === getDaysInMonth()) ? 1 : status.day+1));\n        thisDay = (i === 1) ? ((time.hours >= 18) ? (time.date+1) : time.date) : thisDay;\n        const nextMonthStatus = ((i>1) && ((status.nextMonthStatus && ((thisDay === (status.day+1))||(thisDay === 1)||(thisDay === status.day))) || (!status.nextMonthStatus && (thisDay === 1)))) ? true : false;\n        //console.log(`getImage => imgArray[${i}].image: ${status.images[i].image}`)\n        setStatus(prevState => ({\n            ...prevState,\n            index: i,\n            hourIndex: getHourIndex(),\n            slideShow: updateStatus(),\n            nextMonth: ((i>1) && (status.day === getDaysInMonth())) ? true : false,\n            monthLong: (nextMonthStatus) ? time.monthNextLong : time.monthLong,\n            monthNextLong: time.monthNextLong,\n            nextMonthStatus: nextMonthStatus,\n            day: thisDay,\n            month: (!status.nextMonthStatus && (status.day > getDaysInMonth())) ? `0${Number(status.month)+1}` : status.month,\n            url1: status.images[i].image,\n            url2: status.images[i+30].image,\n            url3: status.images[i+60].image\n        }))\n    }\n    const displayHour = Number(times[Number(status.hourIndex)]);\n    const displayDebug = () => <div className=\"color-dark p-20 bold bigHeader bg-dkGreen r-5 m-20 glassy\">{time.hours} -- {times[Number(status.hourIndex)]}Z{status.day}{String(status.monthLong).substring(0,3).toUpperCase()}{time.year}</div>\n    const displayDayDebug = () => <div className=\"mt-100 color-dark p-20 bold bigHeader bg-dkGreen r-5 m-20 glassy\">{status.index} - {String(status.nextMonthStatus)} - {String(status.monthLong).substring(0,3).toUpperCase()} {status.day} {(displayHour > 12) ? (displayHour-12) : displayHour}:00{(displayHour >= 12) ? 'PM' : 'AM'}</div>    \n    const displayDay = () => <div className=\"mt-100 color-dark p-20 bold bigHeader bg-dkGreen r-5 m-20 glassy\">\n                                <div className=\"p-5\">{String(status.monthLong).substring(0,3).toUpperCase()} {status.day}</div>\n                                <div className=\"p-5\">{(displayHour > 12) ? (displayHour-12) : displayHour}:00{(displayHour >= 12) ? 'PM' : 'AM'}</div>\n                            </div>    \n    return (\n        <div className='mt--30'>\n            <div className='fixed lt-0 top-100'>            \n                {displayDay()}\n            </div>\n            <img id=\"slideshow1\" className=\"width-100-percent\" src={status.url1} onClick={(e) => toggleSlideShow(e)} alt=\"California Sur Swell\" />\n            <br/>\n            <img id=\"slideshow1\" className=\"width-100-percent\" src={status.url2} onClick={(e) => toggleSlideShow(e)} alt=\"Baja Norte Swell\" />\n            <br/>\n            <img id=\"slideshow1\" className=\"width-100-percent\" src={status.url3} onClick={(e) => toggleSlideShow(e)} alt=\"Baja Sur Swell\" />\n        </div>\n    )\n}\n\nexport default SlideShow;","/Users/js/Dev/my-first-reactor/src/components/utils/Photos.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/PhotoSequence.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/Videos.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/WikiSearch.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/Header.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/Footer.js",["793"],"import React, { useEffect, useState } from 'react';\nimport Toggle from '../utils/Toggle.js';\nimport LoginControl from '../utils/LoginControl.js';\nimport CopyrightText from '../functional/CopyrightText.js';\nimport js from '../../assets/images/js.png';\nimport Loader from '../utils/Loader.js';\n//import GoogleAuth from './GoogleAuth.js';\nimport CountrySelector from './CountrySelector.js';\n\nconst Footer = ({ isSignedIn, isMotionOn, setMotion, setSignIn, setCountry }) => {\n    \n    const [signedIn, setSignedIn] = useState(\n        isSignedIn !== null ? isSignedIn : false || false\n    );\n    \n    const percent =\n        window.innerWidth < 700\n        ? 'twentyfivePercent mt--70 mb--70'\n        : 'fiftyPercent mt--30 mb--40';\n    \n        const loaderTag = (\n        <div className={percent}>\n        <Loader isMotionOn={isMotionOn} />\n        </div>\n    );\n\n    useEffect(() => {\n        console.log(`Footer => useEffect => isSignedIn: ${isSignedIn}`);\n        setSignedIn(isSignedIn !== null ? isSignedIn : false);\n    }, [isSignedIn]);\n\n    const path = window.location.pathname.toLocaleLowerCase();\n    const isPageSurfLog =\n        path.includes('surflog') || window.innerHeight < 600 ? true : false;\n    const isPageHome =\n        path.includes('home') || path === '/reactor' || path === '/reactor/'\n        ? true\n        : console.log(`path: ${path}`);\n    const bottom = isPageSurfLog || !isPageHome ? 'b-collapse' : 'bt-0';\n    const footerClasses =\n        bottom +\n        ' fixed subfooter flexContainer width-100-percent responsive height200';\n    console.log(`Footer 2 =>\\nisSignedIn: ${isSignedIn}\\nsignedIn: ${signedIn}`);\n   return (\n        <div>\n            <div id='footer' className={footerClasses}>\n                <div className='flex3Column responsive bg-dkGreen m-1 color-neogreen centeredContent'>\n                <CountrySelector setCountry={setCountry} />\n                {/*<GoogleAuth isSignedIn={signedIn} setSignIn={setSignIn} />*/}\n                </div>\n                <div className='flex3Column responsive bg-dkYellow m-1 color-yellow'>\n                {loaderTag}\n                <img className='mb-1' src={js} alt='js' />\n                <CopyrightText />\n                </div>\n                <div className='flex3Column responsive bg-dkRed m-1 color-red centeredContent'>\n                <Toggle isMotionOn={isMotionOn} setMotion={setMotion} id='toggle' />\n                </div>\n            </div>\n            <div className='flexContainer width-100-percent footer fixed'>\n                <div className='flex3Column bg-green' />\n                <div className='flex3Column bg-yellow' />\n                <div className='flex3Column bg-red' />\n            </div>\n        </div>\n    );\n};\n\nexport default Footer;\n","/Users/js/Dev/my-first-reactor/src/components/utils/Accordion.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/ScrollToTop.js",[],["794","795"],"/Users/js/Dev/my-first-reactor/src/components/hooks/Todos.js",["796","797","798","799","800","801","802","803","804","805","806","807","808"],"import React, { useState, useEffect } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport Sounds from '../utils/Sounds.js';\nimport { SettingsApplicationsOutlined } from '@material-ui/icons';\n\nexport default function Todos(props) {\n    const initTodos = [\n        {\n            description: 'Eat',\n            type: 'checkbox',\n            time: 0,\n            currentTime: 0,\n            activated: false,\n            completed: false\n        },\n        {\n            description: 'Surf',\n            type: 'track',\n            time: 0,\n            currentTime: 0,\n            activated: false,\n            completed: false\n        },\n        {\n            description: 'Sleep 20 minutes',\n            type: 'timer',\n            time: (20 * 60),\n            currentTime: (20 * 60),\n            activated: false,\n            completed: false\n        }\n    ]\n    const getLocal = () => (localStorage.getItem('todos') === 'null' || localStorage.getItem('todos') === null) ? initTodos : JSON.parse(localStorage.getItem('todos'));\n    const [todos, setTodos] = useState(getLocal());\n    const [pausedTodos, setPausedTodos] = useState();\n    const [edit, setEdit] = useState(false);\n    const [timerOn, setTimerOn] = useState(false);\n    const [paused, setPaused] = useState(false);\n    const storeIt = () => localStorage.setItem('todos', JSON.stringify(todos));\n    const todoInput = () => document.getElementById('todo').value;\n    const clearInput = () => document.getElementById('todo').value = '';\n    const getNewTodo = (todo) => todo.charAt(0).toUpperCase() + todo.slice(1);\n\n    useEffect(() => {\n        storeIt();\n        const timerActive = todos.some(obj => obj.activated);\n        setTimerOn(timerActive);\n    }, [todos]);\n    \n    useEffect(() => {\n        let intervalId;\n        if (timerOn) {\n            intervalId = setInterval(() => {\n                const newTodos = [...todos];\n                newTodos.map((todo) => {\n                    if (todo.activated) {\n                        if (todo.type == 'timer' && todo.currentTime > 0) {\n                            todo.currentTime = todo.currentTime - 1;\n                            if (todo.currentTime == 0) {\n                                Sounds.playSiren();\n                                todo.activated = false;\n                                todo.completed = true;\n                                todo.currentTime = todo.time\n                            }\n                        } else if (todo.type == 'track') {\n                            todo.currentTime = todo.currentTime + 1;\n                        }\n                    }\n                });\n                setTodos(newTodos);\n                console.log(`tick`)\n            }, 1000);\n        }\n        return () => clearInterval(intervalId);\n    }, [timerOn]);\n\n    const addTodo = () => {\n        const newTodo = {\n            description: getNewTodo(todoInput()),\n            type: 'checkbox',\n            time: 0,\n            currentTime: 0,\n            activated: false,\n            completed: false\n        }\n        console.log(`new todo: ${newTodo.description}`);\n        const newTodos = [...todos];\n        newTodos.push(newTodo);\n        setTodos(newTodos);\n        clearInput();\n        Sounds.playSound(0, 1);\n    };\n    const removeTodo = (id) => {\n        console.log(`remove todo: ${todos[id].description}`);\n        const newTodos = [...todos];\n        newTodos.splice(id, 1)\n        setTodos(newTodos);\n        Sounds.playSound(0, 1);\n    }\n    const editTodo = (id) => {\n        console.log(`edit todo: ${todos[id].description}`);\n        const newTodos = [...todos];\n        const modifiedTodo = prompt('description: ', newTodos[id].description)\n        newTodos[id].description = modifiedTodo;\n        setTodos(newTodos);\n        setEdit(!edit);\n        Sounds.playSound(0, 1);\n    }\n    const trackTodo = (id) => {\n        console.log(`time todo: ${todos[id].description}`);\n        const newTodos = [...todos];\n        newTodos[id].type = 'track';\n        newTodos[id].time = 0;\n        newTodos[id].currentTime = 0;\n        setTodos(newTodos);\n        setEdit(!edit);\n        Sounds.playSound(0, 1);\n    }\n    const timerTodo = (id) => {\n        console.log(`edit todo: ${todos[id].description} time:${todos[id].time/60}`);\n        const newTodos = [...todos];\n        newTodos[id].type = 'timer';\n        newTodos[id].time = todos[id].time/60;\n        const modifiedTodo = prompt('enter time (minutes): ', newTodos[id].time);\n        newTodos[id].time = (Number(modifiedTodo*60));\n        newTodos[id].currentTime = (Number(modifiedTodo*60));\n        setTodos(newTodos);\n        setEdit(!edit);\n        Sounds.playSound(0, 1);\n    }\n    const toggleTimer = (id) => {\n        console.log(`start timer: ${todos[id].description}`);\n        const newTodos = [...todos];\n        newTodos[id].activated = !newTodos[id].activated;\n        if (newTodos[id].activated) {\n            newTodos[id].completed = false;\n        }\n        setTodos(newTodos);\n        Sounds.playSound(0, 1);\n    }\n    const formatTime = (timeInSeconds) => {\n        const hours = Math.floor(timeInSeconds / 3600);\n        const minutes = Math.floor((timeInSeconds % 3600) / 60);\n        const seconds = timeInSeconds % 60;\n        const formattedHours = hours.toString().padStart(2, '0');\n        const formattedMinutes = minutes.toString().padStart(2, '0');\n        const formattedSeconds = seconds.toString().padStart(2, '0');\n        return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n    };\n    const getClock = (id) => {\n        const todoTime = todos[id].currentTime;\n        return <div className='m-5 r-10 bg-tinted bold size25 p-20 color-lite'>\n                    <span>\n                        {formatTime(todoTime)}\n                    </span>\n                </div>\n    }\n    function makeMenu() {\n        const makeMenu = (menu) => menu.map(item => <div className='button bg-green r-10 m-5 p-5'>{item}</div>);\n        const menuData = ['one', 'two', 'thee'];\n        return (\n            <React.Fragment>{makeMenu(menuData)}</React.Fragment>\n        )\n    }\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            addTodo();\n        }\n    };\n    const toggleCheckbox = (index) => {\n        const newTodos = [...todos];\n        newTodos[index].completed = !newTodos[index].completed;\n        if (newTodos[index].completed) {\n            newTodos[index].activated = false;\n        }\n        setTodos(newTodos);\n        Sounds.playSound(0, 1);\n    };\n    const togglePause = () => {\n        const newTodos = [...todos];\n        if (!paused) {\n            const newPausedTodos = [...todos];\n            localStorage.setItem('pausedTodos', JSON.stringify(newPausedTodos))\n            setPausedTodos(JSON.parse(localStorage.getItem('pausedTodos')));\n            newTodos.map((todo,index) => {\n                todo.activated = false;\n            })\n        } else {\n            newTodos.map((todo, index) => {\n                const activated = pausedTodos[index].activated;\n                todo.activated = activated;\n            })\n        }\n        setTodos(newTodos);\n        setTimerOn(paused);\n        setPaused(!paused)\n    }\n    const reset = () => {\n        const newTodos = [...todos];\n        newTodos.map((todo) => {\n            todo.completed = false;\n            todo.activated = false;\n            todo.currentTime = todo.time;\n        })\n        setTodos(newTodos);\n        Sounds.playSound(0, 1);\n    }\n    const editTodos = () => {\n        setEdit(!edit);\n        Sounds.playSound(0, 1);\n    }\n    const clear = () => {\n        setTodos([]);\n        Sounds.playSound(0, 1);\n    }\n    return (\n        <div className='mt--30'>\n            <div className='color-yellow p-5 r-10'>\n                <div className='p-5 r-10 bg-tinted'>\n                    <label className='flexContainer'>\n                        <input className='ht-30 m-5 flex2Column contentCenter p-15 r-10 bg-darker color-white bold size25' type='text' id='todo' name='todo' placeholder='Enter a todo' onKeyDown={handleKeyDown} />\n                        <button className='r-10 greet bold bg-green m-5 p-10 flex2Column10Percent contentCenter' onClick={() => addTodo()}>ADD</button>\n                    </label>\n                </div>\n            </div>\n            <div className='p-5 r-10'>\n                <div id='list' className='p-5 r-10 bg-tinted'>\n                    {todos.map((todo, index) => (\n                        <div key={getKey('todo')} className='p-10 flexContainer bg-darker r-10 m-5'>\n                            <div className='color-lite flex2Column p-10 size25 columnLeftAlign'>\n                                <input className='regular-checkbox button mr-10' checked={todo.completed} type='checkbox' id='completed' onChange={() => toggleCheckbox(index)} />\n                                {todo.description}\n                            </div>\n                            <div className='flex2Column10Percent columnRightAlign'>\n                                {\n                                    ((todo.type == 'timer' || todo.type == 'track') && !edit)\n                                    ? <div className='flexContainer'>\n                                        <button id={`toggleTimer${index}`} name={`toggleTimer${todo.description}`} className={`flex2Column r-10 p-15 greet bold bg-tinted m-5 ${(todo.activated)?'bg-dkRed color-red':'bg-dkGreen color-neogreen'}`} onClick={() => toggleTimer(index)}>\n                                            {(todo.activated)?'STOP':'START'}\n                                        </button>\n                                        <div className='flex2Column'>\n                                            {getClock(index)}\n                                        </div>\n                                    </div>\n                                    : null\n                                }\n                                {\n                                    (edit)\n                                    ? <div className='flexContainer'>\n                                        <button id={`setTimert${index}`} name={`setTimer${todo.description}`} className='r-10 p-15 greet bold bg-tinted m-5 color-lite' onClick={() => timerTodo(index)}>set timer</button>\n                                        <button id={`time${index}`} name={`time${todo.description}`} className='r-10 p-15 greet bold bg-tinted m-5 color-lite' onClick={() => trackTodo(index)}>track time</button>\n                                        <button id={`edit${index}`} name={`edit${todo.description}`} className='r-10 p-15 greet bold bg-tinted m-5 color-lite' onClick={() => editTodo(index)}>edit</button>\n                                        <button id={`remove${index}`} name={`remove${todo.description}`} className='r-10 p-15 greet bold bg-tinted m-5 color-lite' onClick={() => removeTodo(index)}>X</button>\n                                    </div>\n                                    : null\n                                }\n                            </div>\n                        </div>\n                    ))}\n                    {/*makeMenu()*/}\n                    <div className='button color-lite r-10 bg-lite m-5 bold flex3Column p-10 size25 columnCenterAlign' onClick={() => togglePause()}>\n                            {(paused)?'UNPAUSE':'PAUSE ALL CLOCKS'}\n                    </div>\n                    <div className='flexContainer'>\n                        <div className='button color-neogreen r-10 bg-dkGreen m-5 bold flex3Column p-10 size25 columnCenterAlign' onClick={() => reset()}>\n                            RESET\n                        </div>\n                        <div className='button color-yellow r-10 bg-dkYellow m-5 bold flex3Column p-10 size25 columnCenterAlign' onClick={() => editTodos()}>\n                            EDIT\n                        </div>\n                        <div className='button color-red r-10 bg-dkRed m-5 bold flex3Column p-10 size25 columnCenterAlign' onClick={() => clear()}>\n                            CLEAR\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","/Users/js/Dev/my-first-reactor/src/components/utils/history.js",[],"/Users/js/Dev/my-first-reactor/src/components/hooks/Counter.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreKeeper.js",["809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844"],"import React, { useState, useEffect } from 'react';\nimport ScoreCard from './ScoreCard.js';\nimport CricketScore from './CricketScore.js';\nimport Dominos from './Dominos.js';\nimport SurfScores from './SurfScores.js';\nimport SurfingScores from './SurfingScores.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport getKey from '../utils/KeyGenerator.js';\nimport jerseyColors from './JerseyColors.js';\n//import { getSurferIndexWithPriority, losePriority } from './SurfPriority.js';\nimport { newDate } from './Dates.js'\n//import SurfScoringLogic from './SurfScoringLogic.js';\nimport { findTwoHighestIndices, getTwoHighestScores } from './HighScores.js';\nimport getAthleteScore from './GetAthleteScore.js';\n\nconst ScoreKeeper = () => {\n\n    const getCurrentTime = () => {\n        const currentTime = new Date().toLocaleString();\n        return currentTime.split(', ')[1]\n    }\n\n    const surfScoring = ['', '', '', '', '', '', '', '', '', ''];\n    const initHeatLog = [{\n        date:\"Nov 25 2023\",\n        time: \"11:50:07 AM\",\n        length: \"30\",\n        scores:[\n            {\n                name:\"Titus Kaiman Santucci\",\n                surfScore:\"17.00\",\n                surfScores:[9,8,,,,,,,,],\n                surfJerseyColor: \"1\"\n            },\n            {\n                name:\"Johnny\",\n                surfScore:\"7.00\",\n                surfScores:[7,,,,,,,,,],\n                surfJerseyColor: \"2\"\n            },\n            {\n                name:\"Lukas\",\n                surfScore:\"5.00\",\n                surfScores:[5,,,,,,,,,],\n                surfJerseyColor: \"3\"\n            }\n        ]\n    }];\n\n    const initPlayers = [\n        {\n            name: 'You',\n            score: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScore: 0,\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        },\n        {\n            name: 'Me',\n            score: 0,\n            surfScore: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n    ];\n    const initNewPlayer = (name) => {\n        const newPlayer = {\n            name: name,\n            score: 0,\n            surfScore: 0,\n            dominoScore: 0,\n            golfScores: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            golfGIR: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfFW: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n            golfPutts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            surfScores: ['', '', '', '', '', '', '', '', '', ''],\n            surfJerseyColor: 0,\n            surfPriority: 0,\n            cricketScores: [0, 0, 0, 0, 0, 0, 0]\n        }\n        return newPlayer;\n    };\n    const games = ['standard', 'ping pong', 'golf', 'cornhole', 'darts', 'dominos', 'horse', 'horseshoes', 'bocci', 'surf'];\n    const winners = [5, 10, 11, 15, 20, 21];\n    const dominoWinners = [50, 100, 150, 200];\n    const heatLengths = [.5, 1, 3, 15, 20, 30, 45, 60];\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')) || initPlayers);\n    const [game, setGame] = useState(localStorage.getItem('game') || 'standard');\n    const initScores = [players[0][`${game}Score`], players[1][`${game}Score`]] || [0, 0];\n    const [winner, setWinner] = useState(Number(localStorage.getItem('winner')) || 21);\n    const [heatLength, setHeatLength] = useState(winner * 60);\n    const [waveCount, setWaveCount] = useState(['', '', '', '', '', '', '', '', '', '']);\n    const [surfersScores, setSurfersScores] = useState(JSON.parse(localStorage.getItem('surfersScores')) || [])\n    const darts = (game !== 'darts') ? false : true;\n    const dominos = (game !== 'dominos') ? false : true;\n    const surf = (game !== 'surf') ? false : true;\n    const golf = (game !== 'golf') ? false : true;\n    const cricketKey = (player, index) => `${(player.player || player.name)}Cricket${index}`;\n    const golfKey = (player, index) => `${(player.player || player.name)}Golf${index}`;\n    const surfKey = (player, index) => `${(player.player || player.name)}Surf${index}`;\n    const parsDefault = [4, 3, 3, 5, 4, 4, 3, 3, 5, 5, 4, 5, 4, 5, 4, 4, 4, 5];\n    const dartScoring = [20, 19, 18, 17, 16, 15, '.B.'];\n    const golfScoring = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    const [golfPars, setGolfPars] = useState(JSON.parse(localStorage.getItem('golfPars')) || parsDefault);\n    const dominoScoring = [50, 100, 150, 200];\n    const [gameStatus, setGameStatus] = useState(localStorage.getItem('gameStatus') || 'inProgress');\n    const [showButtons, setShowButtons] = useState(false);\n    const [heatLog, setHeatLog] = useState(JSON.parse(localStorage.getItem('heatLog'))|| initHeatLog);\n    const [startTime, setStartTime] = useState(getCurrentTime())\n    \n    useEffect(() => {\n        if (JSON.stringify(players, null, 2) !== '[]') {\n            const surfersScores = [];\n            localStorage.setItem('surfersScores', JSON.stringify(surfersScores))\n            localStorage.setItem('players', JSON.stringify(players));\n            setShowButtons(false)\n        }\n    }, [players]);\n    useEffect(() => {\n        //localStorage.setItem(`${game}Winner`, winner)\n\n        localStorage.setItem('game', game)\n        localStorage.setItem('gameStatus', 'inProgress');\n        //localStorage.setItem(`${game}Winner`, selected)\n        let newWinner = localStorage.getItem(`${game}Winner`);\n        if (newWinner == null) {\n            if (game == 'darts') {\n                newWinner = 21;\n            } else if (game == 'golf') {\n                newWinner = 3000;\n            } else if (game == 'surf') {\n                newWinner = 15;\n            } else if (game == 'dominos') {\n                newWinner = 200;\n            } else {\n                newWinner = 21;\n            }\n            localStorage.setItem(`${game}Winner`, newWinner);\n        }\n        if (game == 'golf') {\n            newWinner = 3000;\n            localStorage.setItem(`${game}Winner`, newWinner);\n        }\n        setWinner(newWinner);\n        if (game == 'surf') {\n            setHeatLength(winner);\n        }\n    }, [game]);\n    useEffect(() => {\n        localStorage.setItem(`${game}Winner`, winner);\n        if (game == 'surf') {\n            setHeatLength(winner);\n        }\n    }, [winner]);\n    useEffect(() => {\n        localStorage.setItem('heatLog', JSON.stringify(heatLog));\n    }, [heatLog]);\n\n    useEffect(() => {\n        localStorage.setItem('golfPars', JSON.stringify(golfPars));\n    }, [golfPars]);\n\n    useEffect(() => {\n        //alert(localStorage.getItem('players'));\n        if (!localStorage.getItem('players') || (localStorage.getItem('players') === '[]')) {\n            //const playersValue = localStorage.getItem('players');\n            //alert(`localStorage.players: ${playersValue}`)\n            //alert('Length:', playersValue.length);\n            newPlayer();\n        }\n        if (heatLog == null) {\n            localStorage.setItem('heatLog', JSON.stringify(initHeatLog));\n            setHeatLog(initHeatLog);\n        }\n        const newPlayers = [...players];\n        if (!players[0].cricketScores || !players[1].cricketScores) {\n            if (!players[0].cricketScores) {\n                newPlayers[0].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[0].dartsScore = 0;\n            }\n            if (!players[1].cricketScores) {\n                newPlayers[1].cricketScores = [0, 0, 0, 0, 0, 0, 0];\n                newPlayers[1].dartsScore = 0;\n            }\n        }\n        const initGolfStats = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n        if (!players[0].golfPutts || !players[0].golfFW || !players[0].golfGIR) {\n            newPlayers[0].golfPutts = golfScoring;\n            newPlayers[0].golfFW = initGolfStats;\n            newPlayers[0].golfGIR = initGolfStats;\n        }\n        if (!players[1].golfPutts || !players[1].golfFW || !players[1].golfGIR) {\n            newPlayers[1].golfPutts = golfScoring;\n            newPlayers[1].golfFW = initGolfStats;\n            newPlayers[1].golfGIR = initGolfStats;\n        }\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }, []);\n\n    const setGameInProgress = (playerIndex) => {\n        if (playerIndex > 0) {\n            if (localStorage.getItem(`player${playerIndex - 1}`) !== 'winner') {\n                localStorage.setItem('gameStatus', 'inProgress')\n            }\n        }\n        localStorage.setItem(`player${playerIndex}`, 'loser');\n        return false;\n    }\n    const isWinner = (playerIndex) => (getDartTotal(players[playerIndex]) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n    const playerScores = [\n        { name: 'Player 1', scores: [90, 85, 92, 78, 95, 87, 84, 89, 91, 88] },\n        { name: 'Player 2', scores: [75, 82, 80, 79, 88, 84, 76, 85, 90, 81] },\n        { name: 'Player 3', scores: [86, 82, 90, 88, 91, 79, 85, 87, 83, 89] },\n    ];\n    const setGameOver = (playerIndex) => {\n        localStorage.setItem('gameStatus', 'gameOver');\n        localStorage.setItem(`player${playerIndex}`, 'winner');\n        return true;\n    }\n\n    if (darts && winner !== 21) {\n        localStorage.setItem('winner', 21);\n        setWinner(Number(localStorage.getItem('winner')));\n    }\n    const getDartTotal = (player) => {\n        const cricketScores = String(player.cricketScores).split(',');\n        let total = 0;\n        const addToTotal = (value) => total = total + value;\n        cricketScores.map((score, index) => addToTotal(Number(score)));\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n    const getGolfTotal = (player) => {\n        if (!golf) return;\n        let total = 0;\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        const addToTotal = (value) => total = total + Number(value);\n        newPlayers.map((player) => {\n            player.golfScores.map((score) => addToTotal(score))\n            player.golfScore = total;\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        return total;\n    }\n    const getDominoTotal = (index) => {\n        const newScores = [players[0].dominoScore, players[1].dominoScore] || [0, 0];\n        const total = newScores[index];\n        console.log(`getDominoTotal => player: ${players[index].name}: ${total} ? winner: ${winner}`)\n        if (total === winner) localStorage.setItem('gameStatus', 'gameOver');\n        return total;\n    }\n\n    const updateScores = () => {\n        const newPlayers = JSON.parse(localStorage.getItem('players'));\n        setPlayers(newPlayers);\n    }\n    const set21 = () => {\n        if (darts) {\n            localStorage.setItem('winner', 21);\n            setWinner(Number(localStorage.getItem('winner')));\n        }\n    }\n    const selectGame = (groupTitle, label, selected) => {\n        setGame(selected);\n        set21();\n        getScore();\n    }\n    const selectWinner = (groupTitle, label, selected) => {\n        setWinner(selected);\n        getScore();\n    }\n    const clear = (event) => {\n        //alert('Note was cleared: ' + event.value);\n        localStorage.setItem('players', JSON.stringify(initPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        localStorage.setItem('gameStatus', 'inProgress');\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    }\n    const recordHeatScores = () => {\n        const currentPlayers = JSON.parse(localStorage.getItem('players'));\n        const heatData = currentPlayers.map((player, index) => {\n            //console.log(`recordHeatScores=> name: ${player.name} score: ${player.surfScore}`);\n            return {\n                name: player.name,\n                surfScore: player.surfScore,\n                surfScores: player.surfScores,\n                surfJerseyColor: player.surfJerseyColor\n            }\n        });\n        console.log(`recordHeatScores => heatData: ${JSON.stringify(heatData,null,2)}`);\n        const newHeatLog = [...heatLog];\n        newHeatLog.push({\n            date: newDate(),\n            time: startTime,\n            length: heatLength,\n            scores: heatData\n        });\n        localStorage.setItem('heatLog', JSON.stringify(heatLog));\n        setHeatLog(newHeatLog);\n    }\n    const deleteHeat = (i) => {\n        const newHeatLog = [...heatLog];\n        newHeatLog.splice(i, 1);\n        setHeatLog(newHeatLog);\n    }\n    const displayHeatLog = () => {\n        console.log(`initHeatLog: ${JSON.stringify(initHeatLog,null,2)}`)\n        console.log(`heatLog: ${heatLog}`)\n        //localStorage.setItem('heatLog', JSON.stringify(initHeatLog));\n        //const heatLog = JSON.parse(localStorage.getItem('heatLog'));\n        const log = () => heatLog.map((heat, index) => <div className='relative size15 p-10 bg-tinted color-lite r-10 ml-10 mr-10 mt-10 mb-15'>\n                    <div className='absolute w-50 rt-10 t-10 r-5 color-dkRed bg-red brdr-red p-5 m-5 button bold' onClick={() => deleteHeat(index)}>X</div>\n                    <div className='m-10 size25 bold'>{heat.date}</div>\n                    <div className='m-5'>{heat.time} - {heat.length}min</div>\n                    <div className='flexContainer width-100-percent'>\n                        {heat.scores.map((player, index) => <div className='flexContainer width-100-percent'>\n                                    {getAthleteScore(heat.scores, index)}\n                                </div>\n                        )}\n                    </div>\n                </div>\n        )\n        return <div>\n            <div className='size15 bold p-10 bg-darker ml-10 mr-10 mt-10 mb--5 r-10'>Recorded Heats</div>\n            <div className='scroll'>{log()}</div>\n        </div>\n    }\n\n    const reset = (event) => {\n        let newPlayers = JSON.parse(localStorage.getItem('players'));\n        const getDominoKey = (player, index) => `${player.name}Domino${index}`;\n\n        const id = (player, index) => {\n            if (darts) {\n                return cricketKey(player, index);\n            } else if (dominos) {\n                return getDominoKey(player, index);\n            } else if (golf) {\n                return golfKey(player, index);\n            } else if (surf) {\n                return surfKey(player, index);\n            }\n            return (player.player || player.name);\n        }\n\n        const initValue = 0;\n        if (darts) {\n            newPlayers.map((player) => {\n                player.dartsScore = 0;\n                player.cricketScores = [0, 0, 0, 0, 0, 0, 0];\n            });\n        } else if (golf) {\n            newPlayers.map((player) => {\n                player.golfScore = 0;\n                player.golfScores = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n                player.golfGIR = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfFW = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n                player.golfPutts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n            });\n        } else if (dominos) {\n            newPlayers[0].dominoScore = 0;\n            newPlayers[1].dominoScore = 0;\n        } else if (surf) {\n            recordHeatScores();\n            newPlayers.map((player, index) => {\n                player.surfScores = surfScoring;\n                player.surfScore = 0;\n                player.surfPriority = 0;\n            });\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => getSurfTotal(b) - getSurfTotal(a));\n            newPlayers = [...sortedPlayers];\n        } else {\n            newPlayers.map((player, index) => newPlayers[index][`${game}Score`] = initValue);\n        }\n        localStorage.setItem('gameStatus', 'inProgress');\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n        getScore();\n    }\n    const newPlayer = () => {\n        const newPlayer = prompt('Enter new name', '');\n        const initializedNewPlayer = initNewPlayer(newPlayer);\n        let newPlayers = [...players];\n        if (newPlayer !== null) {\n            newPlayers.push(initializedNewPlayer);\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n    }\n    const addPlayer = (event) => {\n        newPlayer();\n    }\n    const editPlayer = (index) => {\n        const newPlayer = prompt('Enter new name', players[index].name);\n        if (newPlayer !== null) {\n            let newPlayers = [...players];\n            newPlayers[index].name = newPlayer;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            //console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n            setPlayers(JSON.parse(localStorage.getItem('players')));\n        }\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n\n    const deletePlayer = (index) => {\n        console.log(`deletePlayer => ${index}`)\n        const newPlayers = [...players].slice();\n        newPlayers.splice(index, 1);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        console.log(`localStorage.getItem('players') => ${localStorage.getItem('players')}`)\n        setPlayers(JSON.parse(localStorage.getItem('players')));\n    };\n    /*\n    const getSurferIndexWithPriority = (priorityIndex) => {\n        for (let i = 0; i < players.length; i++) {\n            if (Number(players[i].surfPriority) === priorityIndex) {\n                return i;\n            }\n        }\n        return null;\n    }\n    const losePriority = (selectedPriority) => {\n        const newPlayers = [...players];\n        newPlayers.map((player, index) => {\n            if (player.surfPriority == selectedPriority) {\n                player.surfPriority = newPlayers.length;\n            } else if (player.surfPriority != 1 && selectedPriority != newPlayers.length) {\n                const shift = player.surfPriority - 1;\n                player.surfPriority = (shift > 0) ? shift : newPlayers.length;\n            }\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n        setPlayers(newPlayers);\n    }\n    const shiftPriority = (priorityIndex) => {\n        const newPlayers = [...players];\n        newPlayers.map((player, index) => {\n            if (player.surfPriority === (priorityIndex - 1)) {\n                player.surfPriority = priorityIndex;\n            } else if (player.surfPriority === priorityIndex) {\n                player.surfPriority = (priorityIndex - 1);\n            }\n        });\n        localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n        setPlayers(newPlayers);\n    }\n    */\n    const resetSurfersScores = (playerId) => {\n        const newPlayers = [...players];\n        newPlayers[playerId].surfScore = 0;\n        newPlayers[playerId].surfScores = surfScoring;\n        setPlayers(newPlayers);\n        getScore();\n    }\n    const deleteAthlete = (playerId) => {\n        const newPlayers = [...players];\n        newPlayers.splice(playerId, 1);\n        setPlayers(newPlayers);\n    }\n    const getJerseyColorSelector = (playerId, color, index) => <button className={`bg-${color} ht-45 width50px button r-10`} onClick={() => selectJersey(playerId, index)}></button>;\n    const editSurfer = (playerId) => <div className='m-10 p-10 r-10 bg-darker'>\n            <div className='size30 p-10'>Name:</div>\n            <button className={`bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10`} onClick={() => editPlayer(playerId)}>{players[playerId].name}</button>\n            <div className='size30 p-10'>Jersey color:</div>\n            <div>\n                {jerseyColors.map((color,index) => \n                    index === Math.ceil(jerseyColors.length / 2) ? (\n                        <React.Fragment key={index}>\n                            <br />\n                            {getJerseyColorSelector(playerId, color, index)}\n                        </React.Fragment>\n                    ) : (\n                        getJerseyColorSelector(playerId, color, index)\n                    )\n                )}\n            </div>\n            <div>\n                <button className='bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10 m-5' onClick={() => resetSurfersScores(playerId)}>\n                    Reset Scores\n                </button>\n                <button className='bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10 m-5' onClick={() => deleteAthlete(playerId)}>\n                    Delete Athlete\n                </button>\n            </div>\n        </div>\n    const getSurfTotal = (player) => {\n        let total = 0;\n        const score = (index) => player.surfScores[index];\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n                addToTotal(Number(score(index)))\n            }\n        );\n        return total;\n    }\n    const isTieScore = (index) => {\n        const score = scoreTotal(index, players);\n        if (index !== 0) {\n            if (score === scoreTotal(index - 1, players)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    const getHeatTotals = () => <div>\n                {players.map((player, index) => <div>{surferTotals(player, index)}</div>)}\n            </div>\n    const place = (index) => (isTieScore(index) && (index !== 0)) ? index : (index + 1);\n    const placeSuffix = (index) => rank[(isTieScore(index) && (index !== 0)) ? (index-1) : (index > 2) ? 3 : (index)];\n    const position = (index) => `${place} ${placeSuffix}`;\n    const surferTotals = (player, index) => <div>{position(index)} {players[index].name} {players[index].surfScore} {rankStatus(player, index)}</div>;\n    const rank = ['st', 'nd', 'rd', 'th'];\n    const rankStatus = (player, index) => {\n        const score = getSurfTotal(player);\n        const scoreDifference = Number(players[(index === 0) ? 0 : (index - 1)].surfScore - players[(index === 0) ? 1 : (index)].surfScore);\n        const difference = (scoreDifference < 0) ? (-1 * scoreDifference) : scoreDifference;\n        const winningScore = Number(players[(index === 0) ? 0 : ((index < 3) ? (index - 1) : 1)].surfScore);\n        const highestScoresIndices = findTwoHighestIndices(players[index].surfScores);\n        const losersHeighestScore = players[index].surfScores[highestScoresIndices[0]];\n        const need = (winningScore - losersHeighestScore) + .01;\n        const winsBy = `Wins by ${difference.toFixed(2)}`;\n        const needs = `Needs ${need.toFixed(2)}`;\n        if (index === 0) {\n            return winsBy;\n        }\n        return needs;\n    }\n    const getScoreTotal = (index) => {\n        const highestScore = players[index].surfScores[getTwoHighestScores(players, index).highScoreIndex]\n        const secondHighestScore = players[index].surfScores[getTwoHighestScores(players, index).secondHighScoreIndex]\n        const score = (highestScore + secondHighestScore);\n        return score;\n    }\n    const highestScore = (index, playersArray) => {\n        return playersArray[index].surfScores[getTwoHighestScores(playersArray, index).highScoreIndex];\n    }\n    const secondHighestScore = (index, playersArray) => playersArray[index].surfScores[getTwoHighestScores(players, index).secondHighScoreIndex];\n    const scoreTotal = (index, playersArray) => Number(highestScore(index, playersArray) + secondHighestScore(index, playersArray)).toFixed(2);\n\n    const selectJersey = (playerId, selection) => {\n        const newPlayers = [...players];\n        newPlayers[playerId].surfJerseyColor = (selection);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(newPlayers);\n    }\n    const setNewStartTime = () => {\n        setStartTime(getCurrentTime());\n    };\n    const scorecards = () => {\n        const scorecard = (playerIndex, scoreIndex, score) => {\n            const player = players[playerIndex];\n            if (darts) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} scoreIndex: ${scoreIndex} score(${scoreIndex}): ${player.score}`)\n                return <CricketScore\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (dominos) {\n                console.log(`${game} - scorecard => player: ${(player.player || player.name)} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex} scoreIndex: ${player.dominoScore} score: ${score}`)\n                return <Dominos\n                    game={game}\n                    player={player}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    scoreTotal={player.dominoScore || 0}\n                    treeTotal={score}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    getDominoTotal={getDominoTotal}\n                    updateScores={updateScores}\n                    winner={winner}\n                    key={getKey((player.player || player.name))}\n                />\n            }\n            if (golf) {\n                console.log(`${game} - scorecard => player:${player.player || player.name}`);\n                console.log(`scoreIndex: ${scoreIndex}`);\n                console.log(`score: ${player.golfScores[scoreIndex]}`);\n                console.log(`scorecards => par: ${score}`);\n                return <ScoreCard\n                    game={game}\n                    players={players}\n                    playerIndex={playerIndex}\n                    scoreIndex={scoreIndex}\n                    editPlayer={editPlayer}\n                    deletePlayer={deletePlayer}\n                    updateScores={updateScores}\n                    winner={golfPars[scoreIndex]}\n                />\n            }\n            return <ScoreCard\n                game={game}\n                players={players}\n                playerIndex={playerIndex}\n                scoreIndex={scoreIndex}\n                editPlayer={editPlayer}\n                deletePlayer={deletePlayer}\n                updateScores={updateScores}\n                winner={winner}\n            />\n        }\n        /////////////////////////////////\n        const setSurfScore = (playerId, index, score) => {\n            const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n            const newPlayers = [...players];\n            const currentScore = newPlayers[playerId].surfScores[index];\n            const edit = (currentScore !== '' && currentScore !== 0) ? false : true;\n            newPlayers[playerId].surfScores[index] = Number(newScore);\n            newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n            if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n                newPlayers.map((player, index) => {\n                    if (index === playerId) {\n                        player.surfPriority = players.length;\n                    } else if (player.surfPriority != 0) {\n                        player.surfPriority = player.surfPriority - 1;\n                    }\n                });\n            }\n            const sortedPlayers = [...newPlayers];\n            sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n\n            console.log('setSurfScore => sortedPlayers: ', sortedPlayers)\n\n            localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n            setPlayers(sortedPlayers);\n        }\n        const get2ndHighestScore = (playerId) => {\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const secondHighestId = highestScores[1];\n            return players[playerId].surfScores[secondHighestId];\n        }\n        const getSurfScore = (index) => {\n            const newPlayers = [...players];\n            const surfScore = scoreTotal(index, newPlayers);\n\n            newPlayers[index].score = surfScore;\n            newPlayers[index].surfScore = surfScore;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            return surfScore;\n        };\n        const getWave = (playerId, index, score) => {\n            const player = players[playerId];\n            const theScore = player.surfScores[index];\n            const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n            const highestId = highestScores[0];\n            const secondHighestId = highestScores[1];\n            const firstScore = (index === highestId) ? true : false;\n            const secondScore = (index === secondHighestId) ? true : false;\n            const getClasses = (firstScore || secondScore) ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n            const wave = <div className=\"column r-10\" onClick={() => setSurfScore(playerId, index, score)} key={getKey(`wave${playerId}${index}${score}`)}>\n                <div className='size30 bold color-yellow bg-dkYellow w-100 p-10'>{index + 1}</div>\n                <div className={`ht-40 ${getClasses}`}>{score}</div>\n            </div>\n            return wave\n        }\n        const surferScores = (player, index) => <div className='button' key={getKey(`${index}${(player.player || player.name)}`)}>\n            <div className={`flexContainer ht-50 r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`} key={getKey(`${index}${(player.player || player.name)}`)}>\n                <div className={`flex2Column contentLeft r-10-lft m-0 w-75 p-10`}>\n                    <div className='bold'>\n                        <span className='size25 mt--10'>\n                            {place(index)}\n                        </span>\n                        <span className='size15 mt--10'>\n                            {placeSuffix(index)}\n                        </span>\n                    </div>\n                    <div className='bold' onClick={()=>setShowButtons((showButtons!==false)?false:index)}>\n                        <div className='size30 mt-5 mb-5'>\n                            {(player.player || player.name).split(' ')[0]}\n                        </div>\n                        <div className='size20'>\n                            {(player.name.indexOf(' ') !== -1)?player.name.substring(player.name.indexOf(' ') + 1):null}\n                        </div>\n                    </div>\n                </div>\n                <div className={`r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`}>\n                    <div className='size40 bold'>{getScoreTotal(index)}</div>\n                    <div className='mt-10 bold'>{rankStatus(player, index)}</div>\n                </div>\n            </div>\n            <div>\n                {showButtons === index && (\n                editSurfer(index)\n            )}\n            </div>\n            <div>\n                <div>\n                    <div className='h-scroll color-white copyright ml-10 mr-10 mt-5'>\n                        <div className=\"container mt-10\">\n                            {players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        /////////////////////////////////\n        const surfingScores = (player, index) => {\n            return surferScores(player, index);\n            /*if (players != undefined && index != undefined && player != undefined) {\n                return <SurfingScores\n                    players={players}\n                    player={player}\n                    index={index}\n                    surfScoring={surfScoring}\n                    setPlayers={setPlayers}\n                    key={getKey(index)}\n                >\n                </SurfingScores>\n            } \n            */\n        }\n\n        const renderedItems = () => players.map((player, index) => scorecard(index, 0, 0));\n\n        const dartScores = () => dartScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex3Column'>\n                {scorecard(0, index, 0)}\n            </div>\n            <div className='ml-10 bg-tinted p-15 r-10 mb-1 font50 color-yellow flex3Column20Percent'>\n                {score}\n            </div>\n            <div className='flex3Column ml-10'>\n                {scorecard(1, index, 0)}\n            </div>\n        </div>);\n\n        const editGolfPar = (hole) => {\n            const newPars = [...golfPars];\n            const newPar = prompt(`Enter par for hole ${hole}:`, golfPars[hole]);\n            newPars[hole] = newPar;\n            setGolfPars(newPars);\n        }\n\n        const golfScores = () => golfScoring.map((hole, index) => <div key={getKey(hole)}>\n            <div className='contentCenter bg-darker r-10 m-5 mt-35'>\n                <div>\n                    <span className='copyright greet color-yellow'>\n                        Hole:\n                    </span>\n                    <span className='size40 bold pt-5 pl-15 pr-15 bg-darker r-10'>\n                        {index + 1}\n                    </span>\n                    <span className='copyright greet color-yellow'>\n                        Par:\n                    </span>\n                    <span className='size20 bold color-lite mt--5'>\n                        {golfPars[index]}\n                    </span>\n                </div>\n                <div className='flexContainer'>\n                    <div className='flex2Column p-5'>\n                        {scorecard(0, index, golfPars[index])}\n                    </div>\n                    <div className='flex2Column p-5'>\n                        {scorecard(1, index, golfPars[index])}\n                    </div>\n                </div>\n            </div>\n        </div>);\n\n        const surfingScoreboard = () => players.map((player, index) => surfingScores(player, index));\n\n        const dominoScores = () => dominoScoring.map((score, index) => <div className='flexContainer width-100-percent' key={getKey(score)}>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(0, index, score)}\n            </div>\n            <div className='r-5 font50 color-yellow m-auto w-100'>\n                {score}\n            </div>\n            <div className='flex2Column10Percent contentCenter p-5'>\n                {scorecard(1, index, score)}\n            </div>\n        </div>);\n\n        const isDominoWinner = (playerIndex) => (getDominoTotal(playerIndex) >= winner) ? setGameOver(playerIndex) : setGameInProgress(playerIndex);\n\n        const dartClass = (playerIndex) => 'r-10 color-yellow flex3Column p-20 size25 bold bg-veryLite' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n        const dominoClass = (playerIndex) => 'color-yellow flex3Column p-20 size25 bold' + ((isDominoWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n\n        const dartScoreboard = () => <div className='bg-tinted p-10 m-5 r-10'>\n            <div className='flexContainer glassy mb-10 bg-veryLite r-10'>\n                <div className={dartClass(0)}>\n                    {players[0].player || players[0].name}:\n                    <div className='mt-10 size40 white pt-10'>\n                        {getDartTotal(players[0])}\n                    </div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>\n                    vs\n                </div>\n                <div className={dartClass(1)}>\n                    {players[1].player || players[1].name}:\n                    <div className='mt-10 size40 white pt-10'>\n                        {getDartTotal(players[1])}\n                    </div>\n                </div>\n            </div>\n            {dartScores()}\n        </div>\n\n        const golfScoreboard = () => <div className='bg-tinted p-10 m-5 r-10'>\n            <div className='flexContainer glassy m-5 mb-20 bg-veryLite r-10'>\n                <div className={dartClass(0)}>\n                    {players[0].player || players[0].name}:<div className='mt-10 size40 white'>{players[0].golfScore}</div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dartClass(1)}>\n                    {players[1].player || players[1].name}:<div className='mt-10  size40 white'>{players[1].golfScore}</div>\n                </div>\n            </div>\n            <div className='scrollHeight500'>\n                {golfScores()}\n            </div>\n        </div>\n\n        const dominoScoreboard = () => <div className='bg-tinted p-10 m-5 r-10'>\n            <div className='flexContainer glassy ml-5 mr-5 mb-10 bg-veryLite r-10'>\n                <div className={dominoClass(0)}>\n                    {players[0].player || players[0].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(0)}\n                    </div>\n                </div>\n                <div className='p-20 bg-tinted navBranding w-200 color-yellow'>vs</div>\n                <div className={dominoClass(1)}>\n                    {players[1].player || players[1].name}:\n                    <div className='mt-10 size40 white'>\n                        {getDominoTotal(1)}\n                    </div>\n                </div>\n            </div>\n            {dominoScores()}\n        </div>\n            \n        if (darts) return dartScoreboard()\n        if (dominos) return dominoScoreboard()\n        if (golf) return golfScoreboard()\n        //if (surf) return surfScoreboard\n        if (surf) return surfingScoreboard()\n        else return renderedItems();\n    }\n\n    return (\n        <div className='fadeIn mt--30 mb-55 pb-50'>\n            <div className='mb-10'>\n                <Selector\n                    groupTitle='game'\n                    label='item.description'\n                    items={games}\n                    selected={game}\n                    onChange={selectGame}\n                    fontSize='25'\n                    padding='10px'\n                    width={(darts || dominos) ? '98%' : '65%'}\n                />\n                {\n                    (darts || golf)\n                        ? <React.Fragment></React.Fragment>\n                        : <Selector className='fl-left'\n                            groupTitle='winner'\n                            label='i.description'\n                            items={(dominos) ? dominoWinners : ((surf) ? heatLengths : winners)}\n                            selected={winner}\n                            onChange={selectWinner}\n                            fontSize='25'\n                            padding='10px'\n                            width='30%'\n                        />\n                }\n                {(surf) ?\n                    <SurfScores\n                        players={players}\n                        setPlayers={setPlayers}\n                        heatLength={winner}\n                        isWinner={isWinner}\n                        editPlayer={editPlayer} \n                        deletePlayer={deletePlayer}\n                        setGameStatus={setGameStatus}\n                        setStartTime={setNewStartTime}\n                    ></SurfScores>\n                    :\n                    <React.Fragment></React.Fragment>\n\n                }\n            </div>\n            <div className='scrollHeight550'>\n                {scorecards()}\n            </div>\n            {(surf)?displayHeatLog():null}\n            <div className='flexContainer width-100-percent bt-0'>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mb-5 width-100-percent bg-green brdr-green color-yellow' onClick={() => addPlayer()}>add player</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mb-5 width-100-percent bg-yellow brdr-yellow color-black' onClick={() => reset()}>reset</div>\n                </div>\n                <div className='flex3Column m-1'>\n                    <div value='Submit' className='glassy button greet p-20 r-10 mb-5 width-100-percent bg-red brdr-red color-yellow' onClick={() => clear()}>clear</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScoreKeeper;","/Users/js/Dev/my-first-reactor/src/components/hooks/Adder.js",[],"/Users/js/Dev/my-first-reactor/src/components/converter/Calculator.js",[],"/Users/js/Dev/my-first-reactor/src/components/weather/Weather.js",[],"/Users/js/Dev/my-first-reactor/src/components/context/CountryContext.js",[],"/Users/js/Dev/my-first-reactor/src/components/shop/Shop.js",["845","846","847","848"],"import React, { useState, useEffect } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport menu from '../../assets/images/menuYellow.png';\n// eslint-disable-next-line\nimport { BsFillGearFill } from \"react-icons/bs\";\nimport Selected from '../../assets/images/cart.png';\nimport Select from '../../assets/images/addToCart.png';\nimport SettingsMenu from './SettingsMenu.js';\nimport ProductEntry from './ProductEntry.js';\nimport SearchBar from '../utils/SearchBar';\nimport '../../assets/css/shop.css';\nimport debounceType from '../utils/DebouncerType.js';\nimport initData from './initData.js';\nimport InCart from '../../assets/images/inCart.png';\nimport PutInCart from '../../assets/images/putInCart.png';\nimport Selector from '../forms/FunctionalSelector.js';\n\nconst Shop = () => {\n    const [ itemEntry, setItemEntry ] = useState('');\n    const today = new Date();\n    const itemMenuDefault = ['', 'ADD INDEX', 'EDIT', 'PRICE', 'DELETE'];\n    const getTodos = () => (localStorage.getItem('vueTodos')) \n        ? JSON.parse(localStorage.getItem('vueTodos')) \n        : initData;\n    const aislesInit = ['Vons', 'Sprouts', 'Smart and Final'];\n    const getAisles = () => (localStorage.getItem('aisles') !== null) \n        ? JSON.parse(localStorage.getItem('aisles')) \n        : aislesInit;\n    const pad = (n, width, z) => {\n        //pad(10, 4) => 0010\n        z = z || '0';\n        n = n + '';\n        return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n    }\n    const getColors = (aisles) => {\n        const colors = [];\n        let aisleColor = '';\n        aisles = (aisles !== null) ? aisles : aislesInit;\n        //console.log(`getColors() => \\naisles: ${aisles}`);\n        aisles.forEach(aisle => {\n            aisleColor = Math.floor(Math.random()*16777215).toString(16).toUpperCase();\n            aisleColor = pad(aisleColor, 6);\n            //console.log(`getColors => \\naisleColor: ${aisleColor}\\naisleColorLength: ${aisleColor.length}`)\n            colors.push(`#${aisleColor}`);\n        });\n        //console.log(`getColors => colors: ${colors}`)\n        return colors;\n    }\n    const [ status, setStatus ] = useState({\n        displaySettings: false,\n        displayProductEntry: false,\n        search: '',\n        list: <div></div>,\n        fontSize: 25,\n        tax: 8.75,\n        todos: getTodos(),\n        aisles: getAisles(),\n        colors: getColors(getAisles()),\n        retrievedData: getTodos(),\n        ogTitle: '',\n        newTodoText: '',\n        total: 0, \n        taxTotal: 0, \n        items: 0, \n        totalItems: 0,\n        sortByIndex: true,\n        item: ''\n    });\n    //console.log(`todos: ${JSON.stringify(status.todos, null, 2)}`)\n    localStorage.setItem('vueTodosSaved', JSON.stringify(status.todos));\n    localStorage.setItem('vueTodos', JSON.stringify(status.todos));\n    //console.log(`vueTodosSaved(1): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`);\n    const aisleIndex = (aisle) => (status.aisles === undefined) ? 0 : status.aisles.indexOf(aisle);\n    const getColor = (aisle) => {\n        //const index = aisleIndex(aisle);\n        //console.log(`getColor => \\nindex: ${index}\\naisle: ${aisle}\\ncolors: ${status.colors}\\ncolor: ${status.colors[aisleIndex(aisle)]}`)\n        return status.colors[aisleIndex(aisle)];\n    }\n    const getInCartButton = (index) => {\n        //console.log(`getInCartButton =>\\nindex: ${index}\\ntodo: ${JSON.stringify(status.todos[index],null,2)}`)\n        return (\n            <img \n                className='inCartIcon' \n                alt='in cart' \n                src={(status.todos[index].cart) ? InCart : PutInCart} \n                onClick={() => toggleCart(index)}\n            />\n        )\n    }\n    const quantities = [0,1,2,3,4,5,6,7,8,9,10];\n    const toggleTax = (index) => {          \n        const newTodos = status.todos;   \n        newTodos.forEach(item => {\n            if (item.title === status.todos[index].title) {\n                item.tax = !status.todos[index].tax;\n            }\n        });\n        localStorage.setItem('vueTodos', JSON.stringify(newTodos));\n        localStorage.setItem('vueTodosSaved', JSON.stringify(newTodos));\n        //console.log(`vueTodosSaved(8): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`)\n        setStatus(prevState => ({\n            ...prevState,\n            todos: JSON.parse(localStorage.getItem('vueTodos')),\n            retrievedData: JSON.parse(localStorage.getItem('vueTodosSaved'))\n        }));\n        getTotal();\n    };\n    const toggleCart = (index) => {\n        const newTodos = status.todos;\n        if (newTodos[index].cart) {\n            newTodos[index].cart = false;\n        } else {\n            newTodos[index].cart = true;\n        }\n        setStatus(prevState => ({\n            ...prevState,\n            todos: newTodos\n        }));\n        getTotal();\n    };\n    const getTaxCheckBox = (todo, index) => {\n        if (todo.tax) {\n            return <input className='regular-checkbox button glassy' checked type='checkbox' id='tax' onChange={() => toggleTax(index)} />\n        } else {\n            return <input className='regular-checkbox button glassy' type='checkbox' id='tax' onChange={() => toggleTax(index)} />\n        }\n    }\n    const updateQuantity = (groupTitle, id, selected) => {\n        //console.log(`updateQuantity =>\\ngroupTitle: ${groupTitle}\\n, \\nindex: ${id}, \\nselected: ${selected}`);\n        const updatedTodos = status.todos;\n        updatedTodos.forEach((item, index) => {\n            if (id === index) {\n                item.quantity = Number(selected);\n            } else if (typeof item.quantity === 'undefined') {\n                item.quantity = quantities[1];\n            }\n        });\n        setStatus(prevState => ({\n            ...prevState,\n            todos: updatedTodos\n        }));\n        getTotal();\n        //window.location.pathname = \"/reactor/Shop\";\n    \n    };\n    const reIndex = (groupTitle, index, selectedAisle) => {\n        //console.log(`REINDEX => \\nselectedAisle: ${selectedAisle}\\nindex: ${index}`);\n        const updatedTodos = status.todos;\n        const updatedRetrievedData = JSON.parse(localStorage.getItem('vueTodosSaved'));\n        let newAisles = status.aisles || aislesInit;   \n        if (selectedAisle === 'DELETE') {\n            updatedRetrievedData.forEach(item => {\n                if (item.title === status.todos[index].title) {\n                    updatedRetrievedData.splice(index, 1);\n                }\n            })\n            localStorage.setItem('vueTodosSaved', JSON.stringify(updatedRetrievedData));\n            //console.log(`vueTodosSaved(4): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`)\n            updatedTodos.splice(index, 1);\n        } else if (selectedAisle === 'PRICE') {\n            const newPrice = prompt('Enter price:', updatedTodos[index].price);\n            updatedTodos[index].price = (newPrice !== null) ? Number(newPrice).toFixed(2) : updatedTodos[index].price;\n            updatedRetrievedData.forEach(item => {\n                if (item.title === updatedTodos[index].title) {\n                    item.price = updatedTodos[index].price;\n                    updatedTodos[index].aisle = item.aisle;\n                };\n            });\n            localStorage.setItem('vueTodosSaved', JSON.stringify(updatedRetrievedData));\n            //console.log(`vueTodosSaved(5): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')))}`);\n        } else if (selectedAisle === 'EDIT') {\n            let updatedOgTitle = status.ogTitle;\n            updatedOgTitle = updatedTodos[index].title;\n            \n            const newLabel = prompt('Enter new label:', updatedTodos[index].title);\n            updatedTodos[index].title = (newLabel !== null) ? newLabel : updatedTodos[index].title;\n            updatedRetrievedData.forEach(item => {\n                if (item.title === updatedOgTitle) {\n                    item.title = updatedTodos[index].title;\n                    selectedAisle = item.aisle;\n                };\n            });\n            updatedTodos[index].aisle = selectedAisle;\n            //updateAisles();\n            localStorage.setItem('vueTodosSaved', JSON.stringify(updatedRetrievedData));\n            //console.log(`vueTodosSaved(6): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`)\n        } else {\n            newAisles = status.aisles || aislesInit;\n            if (selectedAisle === 'ADD INDEX') {\n\n                const newAisle = prompt('Enter aisle number:', '');\n                selectedAisle = (newAisle !== null) ? newAisle : 'New';\n\n                if(newAisles.indexOf(selectedAisle) < 0){\n                    newAisles.push(selectedAisle);\n                }\n            }\n            updatedTodos[index].aisle = selectedAisle;\n            updatedRetrievedData.forEach(item => {\n                if (item.title === updatedTodos[index].title) {\n                    item.aisle = selectedAisle;  \n                }\n            });\n            localStorage.setItem('aisles', JSON.stringify(newAisles));\n            localStorage.setItem('vueTodosSaved', JSON.stringify(updatedRetrievedData));\n            localStorage.setItem('vueTodos', JSON.stringify(updatedRetrievedData));\n            //console.log(`vueTodosSaved(7): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`)\n            getTotal();\n            updateAisles(); \n            //window.location.pathname = \"/reactor/Shop\";\n        }\n        updateAisles();\n        localStorage.setItem('vueTodos', JSON.stringify(updatedTodos));\n        setStatus(prevState => ({\n            ...prevState,\n            todos: updatedTodos,\n            aisles: newAisles,\n            retrievedData: JSON.parse(localStorage.getItem('vueTodosSaved')),\n            ogTitle: (selectedAisle === 'EDIT') ? '' : status.ogTitle\n        }));\n\n    }\n    const getSelectors = (todo, index, aisleColor) => {\n        return (\n            <div className='itemSelectors' style={{backgroundColor: aisleColor}}>\n                <div className='flex-container'>\n                    <div>\n                        <div className='button'>\n                            {getInCartButton(index)}\n                        </div>\n                        <div className='size20 m-10'> \n                            ${ todo.price }\n                        </div>\n                    </div>\n                    <div>\n                        <div>Days</div>\n                        <div className='lastPurchaseDays flexOneFifthColumn contentCenter'>{todo.days}</div>\n                    </div>\n                    <div>\n                        <div className='mb-5'>Tax</div>\n                        {getTaxCheckBox(todo, index)}\n                    </div>\n                    <div>\n                        <div className='mb-5 button'>Count</div> \n                        <Selector\n                            groupTitle='Count'\n                            //selected={todo.quantity} \n                            selected={status.todos[index].quantity} \n                            label={index}\n                            items={quantities}\n                            onChange={updateQuantity}\n                            padding='5px'\n                            fontSize='15'\n                        />\n                    </div>\n                    <div id='aisle flexTwoFourthColumn' >\n                        <div className='mb-5'>Aisle</div>\n                        <Selector\n                            groupTitle='Aisle'\n                            selected={todo.aisle} \n                            label={index} \n                            items={itemMenuDefault.concat(status.aisles) || itemMenuDefault.concat(aislesInit)}\n                            onChange={reIndex}\n                            padding='5px'\n                            fontSize='15' \n                            maxWidth='115px'\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    const daItem = (todo, index) => {\n        //console.log(`daItem =>\\ntodo: ${JSON.stringify(todo, null, 2)}\\nindex: ${index}`);\n        \n        const shopNavClasses = () => (todo.select) ? 'itemRemove glassyShopNav' : 'itemRemove';\n        const titleClasses = () => (todo.select) ? 'title white' : 'title';\n        const aisleColor = getColor(todo.aisle);\n        if (todo !== undefined) {\n            return (\n                <div key={getKey(status.todos[index].title)}>\n                    <div className='height1px' style={{backgroundColor: aisleColor}}></div>\n                    <div className={shopNavClasses()} onClick={() => toggleSelect(index)}>\n                        <span className={titleClasses()}>{ status.todos[index].title }</span>\n                        {getSelectIcon(index)}\n                    </div>                 \n                    {getSelectors(todo,index, aisleColor)}\n                </div>\n            )\n        } else {\n            return (\n                <div key={getKey(status.todos[index].title)}>\n                    <div className='height1px' style={{backgroundColor: aisleColor}}></div>\n                    <div className={shopNavClasses()} onClick={() => toggleSelect(index)}>\n                        <span className={titleClasses()}>{ status.todos[index].title }</span>\n                        {getSelectIcon(index)}\n                    </div>\n                    {getSelectors(todo,index, aisleColor)}\n                </div>\n            )\n        }    \n    }\n    const getItems = (context) => {\n        const newAisles = (status.aisles !== undefined) ? status.aisles : aislesInit;\n        let newList = <React.Fragment></React.Fragment>;\n        //console.log(`daList => todos: ${JSON.stringify(status.todos, null,2)}`);\n        const pushNewAisle = (aisle) => (newAisles.indexOf(aisle) > -1) ? '' : newAisles.push(aisle);\n        /*\n        status.todos.forEach((todo,index) => {\n            pushNewAisle(todo.aisle);\n            //console.log(`daList =>\\nnewAisles: ${newAisles}\\nquantities: ${todo.quantity}\\ntitle: ${todo.title}\\ndays: ${todo.days}\\nprice: ${todo.price}\\ntax: ${todo.tax}\\nquantity: ${todo.quantity}`)\n            newList = <div>\n                    {newList}\n                    {daItem(todo, index)}\n                </div>;\n        })\n        */\n        const filteredTodos = status.todos.filter(todo => {\n            return todo.title.toLowerCase().includes(status.search.toLowerCase());\n        });\n\n        filteredTodos.forEach((todo, index) => {\n            pushNewAisle(todo.aisle);\n            newList = <div>\n                {newList}\n                {daItem(todo, index)}\n            </div>;\n        });\n\n        //console.log(`daList => newList: ${JSON.stringify(newList,null,2)}`)\n        localStorage.setItem('aisles', JSON.stringify(newAisles));\n        if (context === 'display') {\n            return newList;\n        } else if (context === 'effect') {\n            //console.log(`useEffect => newAisles: ${newAisles}`)\n            setStatus(prevState => ({\n                ...prevState,\n                list: newList,\n                aisles: newAisles\n            }));\n        }\n    };\n    \n    useEffect(() => {\n        getItems('effect');\n        getTotal();\n    },[status.todos]);\n    \n    useEffect(() => {\n        updateAisles();\n    },[]);\n    useEffect(() => {\n        getTotal();\n    },[status.tax]);\n    const sortArray = (array) => {\n        const filtered = array.filter(function (el) {\n            return el != null;\n        });\n        //console.log(`sortArray => filtered: ${filtered}`)\n\n        const alphabetic = [];\n        const numeric = [];\n        filtered.forEach(item => {\n            if (Number(item.substring(0,1)) > 0) {\n                numeric.push(item);\n            } else {\n                alphabetic.push(item);\n            }\n        });\n        alphabetic.sort();\n        numeric.sort(function(a, b){return a - b});\n        array = [];\n        alphabetic.forEach(item => {\n            if (array.indexOf(item) < 0){\n                array.push(item);\n            }\n        });\n        numeric.forEach(item => array.push(item));  \n        return array;\n    };\n    const getTotal = () => {\n        let newTotal = 0;\n        let subtotal = 0;\n        let newTax = 0;\n        let newTaxTotal = 0;\n        let updatedTodos = status.todos;\n        let updatesItems = 0;\n        let updatedTotalItems = 0;\n        updatedTodos.forEach(item => {\n            if (typeof item.price !== 'undefined' && item.cart) {\n                updatesItems++;\n                updatedTotalItems = Number(updatedTotalItems) + Number(item.quantity);\n                subtotal = parseFloat(Number(item.price)) * Number(item.quantity);\n                if (item.tax) {\n                    newTax = subtotal * (Number(status.tax) * .01);\n                    newTaxTotal = newTaxTotal + newTax;\n                    subtotal = subtotal + newTax;\n                }\n                newTotal = parseFloat(Number(newTotal)) + subtotal;\n            }\n        })\n        //localStorage.setItem('vueTodos', JSON.stringify(status.todos));\n        newTotal = Math.round( newTotal * 100 ) / 100;\n        newTotal = newTotal.toFixed(2);\n        newTaxTotal = newTaxTotal.toFixed(2)\n        setStatus(prevState => ({\n            ...prevState,\n            totalItems: updatedTotalItems,\n            items: updatesItems,\n            total: newTotal,\n            taxTotal: newTaxTotal,\n            //tax: newTax\n        }));\n    };\n    const sortName = () => {\n        let sortedTodos = status.todos;\n        sortedTodos.sort(function(a, b){\n            let x = a.title.toLowerCase();\n            let y = b.title.toLowerCase();\n            if (x < y) {return -1;}\n            if (x > y) {return 1;}\n            return 0;\n        });\n        setStatus(prevState => ({\n            ...prevState,\n            todos: sortedTodos\n        }));\n    };\n    const updateItem = (item) => {\n        setStatus(prevState => ({\n            ...prevState,\n            item: item\n        }));\n    }\n    const updateAisles = () => {\n        let colors = [];\n        let todoSort = [];\n        let inactiveTodos = [];\n        let newAisles = status.aisles || aislesInit;\n        const updatedTodos = status.todos;\n        updatedTodos.forEach(todo => {\n            if (newAisles.indexOf(todo.aisle) < 0) {\n                newAisles.push(todo.aisle);\n            }\n        });\n        newAisles = sortArray(newAisles);\n        localStorage.setItem('aisles', JSON.stringify(newAisles));\n        colors = getColors(newAisles);\n        newAisles.forEach(aisle => {\n            updatedTodos.forEach(todo => {\n                if (todo.aisle === aisle && todo.select) {\n                    todoSort.push(todo);\n                } else if (todo.aisle === aisle && !todo.select) {\n                    inactiveTodos.push(todo);\n                }\n            });\n        });\n        //console.log(`updateAisles => !!!!!!!!!!\\ntodoSort: ${JSON.stringify(todoSort, null,2)}\\ninactiveTodos: ${inactiveTodos}`)\n        inactiveTodos.forEach(todo => todoSort.push(todo));\n        setStatus(prevState => ({\n            ...prevState,\n            todos: todoSort,\n            aisles: newAisles,\n            colors: colors\n        }));\n    };\n    const setEntry = (value) => {\n        console.log(`setEntry ${value}`);\n        debounceType(setItemEntry, value);\n        setStatus(prevState => ({\n            ...prevState,\n            displayProductEntry: false,\n            displaySettings: false,\n            search: value,\n            item: value\n        }));\n    }\n    const addTodo = () => {\n        //e.preventDefault();\n        console.log(`addTodo =>\\nitemEntry: ${itemEntry}`);\n        const updatedTodos = status.todos;\n        let updatedRetrievedData = status.retrievedData;\n        const updatedAisles = status.aisles || aislesInit;\n        let newPriceUpdate = 0;\n        let newItem = {};\n        if (itemEntry) {\n            //onClick={() => toggleProductEntry()}\n            //const newAisle = prompt('Enter aisle number:', '');\n            const newAisle = 'Walmart';\n            if (updatedAisles.indexOf(newAisle) < 0) {\n                updatedAisles.push(newAisle);\n            }\n            //newPriceUpdate = prompt('Enter price:', '');\n            \n            newItem = {\n                title: itemEntry, \n                aisle: newAisle, \n                price: Number(newPriceUpdate).toFixed(2),\n                quantity: 1, \n                tax: false, \n                cart: true, \n                select: true, \n                lastPurchase: today, \n                days: 0\n            };\n            updatedTodos.push(newItem);\n            updatedRetrievedData.push(newItem);\n            localStorage.setItem('vueTodos', JSON.stringify(updatedRetrievedData));\n            if (!localStorage.getItem('vueTodosSaved')) {\n                localStorage.setItem('vueTodosSaved', JSON.stringify(updatedTodos));\n                //console.log(`vueTodosSaved(2): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`);                \n            } else {\n                updatedRetrievedData = JSON.parse(localStorage.getItem('vueTodosSaved'));\n                updatedRetrievedData.push(newItem);\n                localStorage.setItem('vueTodosSaved', JSON.stringify(updatedRetrievedData));\n                //console.log(`vueTodosSaved(3): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`);\n            }\n            const newTodos = JSON.parse(localStorage.getItem('vueTodosSaved'));\n            const newRetrievedData = (localStorage.getItem('vueTodosSaved')) ? JSON.parse(localStorage.getItem('vueTodosSaved')) : JSON.parse(localStorage.getItem('vueTodos'))\n            setStatus(prevState => ({\n                ...prevState,\n                newTodoText: itemEntry,\n                aisles: updatedAisles,\n                retrievedData: newRetrievedData,\n                todos: newTodos,\n            }));\n            //updateAisles();\n            //setNewTodoText('');\n            getTotal();\n            //setItemEntry('');\n        }\n    };\n    const toggleSelect = (id) => { \n        const updatedTodos = status.todos; \n        updatedTodos.forEach((item, index) => {\n            if (item.title === updatedTodos[id].title) {\n                if (updatedTodos[id].select) {\n                    updatedTodos[index].select = false;\n                    updatedTodos[index].cart = false;\n                } else {\n                    updatedTodos[index].lastPurchase = today;\n                    updatedTodos[index].days = 1;\n                    updatedTodos[index].select = true;\n                }\n            }\n        });       \n        localStorage.setItem('vueTodos', JSON.stringify(updatedTodos));\n        setStatus(prevState => ({\n            ...prevState,\n            todos: JSON.parse(localStorage.getItem('vueTodos'))\n        }));\n        getTotal();\n        updateAisles();   \n    };\n    const revert = () => {\n        const revertData = JSON.parse(localStorage.getItem('vueTodosRevert'));\n        \n        //console.log(`revertData: ${JSON.stringify(revertData, null, 2)}`)\n        localStorage.setItem('vueTodos', JSON.stringify(revertData));\n        setStatus(prevState => ({\n            ...prevState,\n            todos: revertData,\n            retrievedData: revertData,\n            displaySettings: false,\n            displayProductEntry: false\n\n        }));\n        //itemMenuDefault.forEach(aisle => newAisles.push(aisle));\n        //setAisles(newAisles);\n        //updateAisles();\n        getTotal();\n    };\n    const save = () => {\n        localStorage.setItem('vueTodosSaved', JSON.stringify(status.todos));\n        //console.log(`vueTodosSaved(9): ${JSON.stringify(JSON.parse(localStorage.getItem('vueTodosSaved')),null,2)}`)\n        setStatus(prevState => ({\n            ...prevState,\n            displaySettings: false,\n            displayProductEntry: false\n        }));\n    };\n    const restore = () => {\n        const newAisles = status.aisles || aislesInit;\n        itemMenuDefault.forEach(aisle => newAisles.push(aisle));\n        updateAisles();\n        localStorage.setItem('vueTodos', JSON.stringify(status.retrievedData));\n        setStatus(prevState => ({\n            ...prevState,\n            todos: status.retrievedData,\n            aisles: newAisles,\n            retrievedData: JSON.parse(localStorage.getItem('vueTodosSaved')),\n            displaySettings: false,\n            displayProductEntry: false\n        }));        \n    };    \n    const getSelectIcon = (index) => <img \n                                        className='cart' \n                                        alt='select' \n                                        src={(status.todos[index].select) ? Selected : Select}\n                                    />\n    const setTax = () => {\n        setStatus(prevState => ({\n            ...prevState,\n            tax: localStorage.getItem('tax')\n        }));\n    }\n    const toggleSettings = () => {\n        //console.log(`toggleSettings => displaySettings: ${status.displaySettings}`)\n        setStatus(prevState => ({\n            ...prevState,\n            displaySettings: !status.displaySettings\n        }));\n    };\n    const toggleProductEntry = () => {\n        //console.log(`toggleProductEntry => displayProductEntry: ${status.displayProductEntry}`)\n        setStatus(prevState => ({\n            ...prevState,\n            displayProductEntry: !status.displayProductEntry\n        }));\n    };\n    const clear = () => {\n        localStorage.setItem('vueTodosRevert', JSON.stringify(status.todos));\n        localStorage.removeItem('aisles', '');\n        localStorage.removeItem('vueTodos', '');\n        setStatus(prevState => ({\n            ...prevState,\n            todos: [],\n            aisles: []\n        }));\n        getTotal();\n    };\n    const totals = <div className='total '>\n                        <div className='totalItems'>\n                            Items: { status.items }<br />\n                            total: { status.totalItems }\n                        </div>\n                        <div className='totalDollars'>\n                            Tax: $ { status.taxTotal }<br />\n                            Total: $ { status.total }\n                        </div>\n                    </div>\n    const getMenuHeight = (status.displaySettings) ? 'mt-180 visible bottomPadding' : 'mt-850 visible bottomPadding';\n    const menuClasses = (!status.displaySettings && !status.displayProductEntry) ? 'mt-60 visible bottomPadding' : getMenuHeight;\n    console.log(`Shop ==> REFRESH\n                    displaySettings: ${status.displaySettings}\n                    displayProductEntry: ${status.displayProductEntry}\n                `);\n    \n    return (\n        <div className='mt--7'>\n            <div className='input'>\n                <SearchBar onSubmit={addTodo} onChange={setEntry} label='Add items' term=''/>\n                <img className='settings' src={menu} alt=\"open menu\" onClick={() => toggleSettings()}/>\n            </div>\n            <div className={menuClasses}>\n                {getItems('display')}\n            </div>\n            {totals}\n            <ProductEntry\n                state={status} \n                updateAisles={updateAisles} \n                save={save} \n                displayProductEntry={status.displayProductEntry}\n                Item={status.search}\n                updateItem={updateItem} \n            />\n            <SettingsMenu \n                state={status} \n                updateAisles={updateAisles} \n                sortName={sortName} \n                revert={revert} \n                save={save} \n                restore={restore} \n                getTotal={getTotal} \n                setTax={setTax} \n                clear={clear}\n            />\n        </div>\n    )\n}\n\nexport default Shop;","/Users/js/Dev/my-first-reactor/src/components/translator/Translator.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/StreamShow.js",["849"],"import { render } from '@testing-library/react';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteStream, fetchStream } from './StreamActions.js';\n\nclass StreamShow extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n    onDeleteClick() {\n        const { id } = this.props.match.params;\n        this.props.deletePost(id);\n    }\n    render() {\n        if (!this.props.stream) {\n            return <div>Loading...</div>\n        }\n        const { title, description } = this.props.stream;\n        return (\n            <div className='ml-10 mr-10'>\n                <h1>{title}</h1>\n                <h5>{description}</h5>\n                <br/>\n                <div className='r-5 p-10 m-1 button glassy bg-lite'>\n                    <Link to={`/streams/`} className='color-lite bold'>back</Link>\n                </div>\n                <div \n                    className='r-5 p-10 bg-dkRed color-lite bold m-1 button glassy' \n                    onClick={this.onDeleteClick.bind(this)}\n                >delete</div>\n            </div>\n        ) \n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] };\n}\nexport default connect (\n    mapStateToProps,\n    { fetchStream, deleteStream }\n)(StreamShow);\n","/Users/js/Dev/my-first-reactor/src/components/streams/StreamDelete.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/StreamCreate.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/StreamList.js",["850"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport  { Link } from 'react-router-dom';\nimport { fetchStreams } from './StreamActions.js';\nimport ButtonAdmin from './ButtonAdmin.js';\n\nclass StreamList extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n    streamList = () => this.props.streams.map((stream) => {\n        let match = false;\n        if (stream.userId === this.props.currentUserId) {\n            //console.log(`Stream => \\n${stream.userId}\\n${this.props.currentUserId}`)\n            match = true;\n        }\n        if (match) {\n            return (\n                <div \n                    className='item glassy r-5 p-10 flexContainer' \n                    key={stream.id}\n                    onClick={() => console.log(stream.title)}\n                >\n                    {/*<i className='large middle pr-5 aligned icon camera width50px'/>*/}\n                    <div className='pt-5 flex2Column contentCenter'>\n                        <Link to={`/streams/${stream.id}`} className='size25 color-lite'>{stream.title}</Link>\n                        <div className='description color-soft bold'>{stream.description}</div>\n                    </div>\n                    <ButtonAdmin stream={stream} currentUserId={this.props.currentUserId}/>\n                </div>\n            )\n        }\n    });\n    renderCreate() {\n        if (this.props.isSignedIn) {\n            return (\n                <div \n                    className='bt-20 rt-10' \n                    style={{ textAlign: 'right' }}\n                >\n                    <Link to='/streams/new' className='p-10 button r-5 color-lite bold bg-green glassy'>\n                        Create Stream\n                    </Link>\n                </div>\n            )\n        }\n    }\n    render() {\n        return (\n            <div className='pb-200'>\n                <div className='ml-20 mr-20 mt--30 columnLeftAlign'>\n                    {this.streamList()}\n                </div>\n                {this.renderCreate()}\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn\n    };\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);\n","/Users/js/Dev/my-first-reactor/src/components/streams/StreamEdit.js",[],"/Users/js/Dev/my-first-reactor/src/actions/types.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/PostList.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/KeyGenerator.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/InterfaceData.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/LogTemplateData.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/Timer.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GenerateLogId.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/ConditionsDashboard.js",["851"],"import React from 'react';\nimport WaterTemp from './WaterTemp.js';\nimport AirTemp from './AirTemp.js';\nimport WindDirection from './WindDirection.js';\nimport Sunset from './Sunset.js';\nimport BuoyReport from './BuoyReport.js';\nimport BuoyData from './BuoyData.js';\n\nconst ConditionsDashboard = ({tideDisplay, setWind}) => {\n\n    return (\n        <div className='m-10'>\n            <div className=\"flexContainer\">\n                <div className=\"flex2Column contentCenter p-5 r-10 color-orange glassy m-5\">\n                    tide<br/>\n                    {tideDisplay('wide')}\n                </div>\n                <div className=\"flex2Column contentCenter p-5 r-10 color-yellow glassy m-5\">\n                    wind\n                    <WindDirection columns=\"2\" setWind={setWind} height='157px'/>\n                </div>\n            </div>\n            <div className=\"flexContainer\">\n                <span className=\"flex2Column contentCenter p-5 r-10 color-blue glassy m-5\">\n                    {/*getWaterTempIcon*/}\n                    <span className=\"ml-2\">water</span><br/>\n                    <WaterTemp/>\n                </span>\n                <span className=\"flex2Column contentCenter p-5 r-10 color-white glassy m-5\">\n                    {/*getAirTempIcon*/}\n                    <span className=\"ml-2\">air</span><br/>\n                    <AirTemp/>\n                </span>\n            </div>\n            <Sunset view='full'/>\n            <BuoyReport />\n            {/*<BuoyData />*/}\n        </div>\n    )\n}\n\nexport default ConditionsDashboard;","/Users/js/Dev/my-first-reactor/src/components/utils/Geolocator.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/WaveUtils.js",["852"],"import React, {useState} from 'react';\n\nconst WaveUtils = ({item, state, logLocation, updateLocations}) => {\n   //console.log(`WaveUtils => \\nstate: \\n${JSON.stringify(state,null,2)}\\nlogLocation: \\n${JSON.stringify(logLocation,null,2)}`)\n    // eslint-disable-next-line\n    //console.log(`WaveUtils => state: ${state}`);\n    const locationsInit = [{\n        \"name\": \"Seaside Reef\",\n        \"latitude\": 33.001613,\n        \"longitude\": -117.278393,\n        \"swell\": [\"NW\",\"W\"],\n        \"wind\": [\"E\"],\n        \"tide\": [\"low\", \"medium\"]\n    }];\n    const [status, setStatus] = useState(state);\n    const [locations, setLocations] = useState((status !== undefined) ? status.locations : locationsInit)\n    const addWave = () => {\n        const swells = [];\n        const winds = [];\n        const tides = [];\n        const waveLocations = locations;\n        let i=0;\n        let wave = prompt('wave: ', '');\n        const latitude = prompt('lat: ', localStorage.getItem('latitude'));\n        const longitude = prompt('long: ', localStorage.getItem('longitude'));\n        \n        const swellCount = prompt('swell count: ', '');\n        for (i=0; i<swellCount; i++) {\n            swells[i] = prompt('swell direction', '').toLocaleUpperCase();\n        }\n        const windCount = prompt('wind count: ', '');\n        for (i=0; i<windCount; i++) {\n            winds[i] = prompt('wind direction', '').toLocaleUpperCase();\n        }\n        const tideCount = prompt('tide count: ', '');\n        for (i=0; i<tideCount; i++) {\n            tides[i] = prompt('tide direction', '').toLocaleLowerCase();\n        }\n        const getObj = () => {\n            //console.log(`getObj => state: ${JSON.stringify(status,null,2)}`)\n            return {\n                name: wave,\n                latitude: latitude,\n                longitude: longitude,\n                swell: swells,\n                wind: winds,\n                tide: tides\n            }\n        }\n        waveLocations.push(getObj());\n        //console.log(`add a wave... ${JSON.stringify(getObj(), null, 2)}`);\n        localStorage.setItem('locations', JSON.stringify(waveLocations));\n        setLocations(waveLocations);\n        updateLocations();\n    }\n    const deleteWave = (props) => {\n        let waveLocations = JSON.parse(localStorage.getItem('locations'));\n        //console.log(`Props: ${JSON.stringify(props, null, 2)}`)\n        let index = 0;\n        /*\n        const result = waveLocations.find(obj => {\n            index++\n            return obj.name === props.name\n        })\n        console.log(`delete 1 => index: ${index-1} result: ${JSON.stringify(result, null, 2)}`)\n        console.log(`delete 2 => locations: [${index-1}]: ${JSON.stringify(waveLocations[index-1], null, 2)}`)\n        */\n        ///////////////\n        waveLocations.splice(index-1, 1);\n        localStorage.setItem('locations', JSON.stringify(waveLocations))\n        //console.log(`delete 3 => locations: [${index-1}]: ${waveLocations.map((location, index) => `${index} ${location.name}`)}`)\n        setLocations(localStorage.getItem('locations'));\n        updateLocations();\n    }\n    const editWaveSave = (location, index) => {\n        //console.log(`editWaveSave() => ${JSON.stringify(location,null,2)}`)\n        let waveLocations = JSON.parse(localStorage.getItem('locations'));\n        let swells = location.swell;\n        let winds = location.wind;\n        let tides = location.tide;\n        let i=0;\n        let wave = prompt('wave: ', location.name);\n        let latitude = prompt('lat: ', location.latitude);\n        let longitude = prompt('long: ', location.longitude);\n        const swellCount = prompt('swell count: ', swells.length);\n        for (i=0; i<swellCount; i++) {\n            swells[i] = prompt('edit swell direction', swells[i]).toLocaleUpperCase();\n        }\n        swells = swells.slice(0, swellCount);\n        const windCount = prompt('wind count: ', winds.length);\n        for (i=0; i<windCount; i++) {\n            winds[i] = prompt('edit wind direction', winds[i]).toLocaleUpperCase();\n        }\n        winds = winds.slice(0, windCount);\n        const tideCount = prompt('tide count: ', tides.length);\n        for (i=0; i<tideCount; i++) {\n            tides[i] = prompt('edit tide direction', tides[i]).toLocaleLowerCase();\n        }\n        tides = tides.slice(0, tideCount);\n        const getObj = () => {\n            return {\n                name: wave,\n                latitude: latitude,\n                longitude: longitude,\n                swell: swells,\n                wind: winds,\n                tide: tides\n            }\n        }\n        //console.log(`locations: ${JSON.stringify(waveLocations[index],null,2)} => will be ${JSON.stringify(getObj(),null,2)}`)\n        waveLocations[index] = getObj();\n        //console.log(`edit a wave saving... ${JSON.stringify(waveLocations[index], null, 2)}`)\n        localStorage.setItem('locations', JSON.stringify(waveLocations))\n        setLocations(localStorage.getItem('locations'));\n        updateLocations();\n    }\n   \n    const editWave = (props) => {\n\n        console.log(`editWave =>\\nprops: ${JSON.stringify(props, null, 2)}`);\n        const waveLocations = JSON.parse(localStorage.getItem('locations'));\n        \n        if (props.name === 'button') {\n            //console.log(`edit(${localStorage.getItem('edit')}) toggle... ${JSON.stringify(props, null, 2)}`);\n            handleEditToggle()\n        } else if (props.name === 'edit') {\n            //console.log(`edit a wave... ${JSON.stringify(item, null, 2)}`);\n            //console.log(`Props: ${JSON.stringify(props, null, 2)}`)\n            let index = 0;\n            const result = waveLocations.find(obj => {\n                index++\n                return obj.name === item.name\n            })\n            //console.log(`index: ${index} result: ${JSON.stringify(result, null, 2)}`)\n            //console.log(`locations: [${index}]: ${JSON.stringify(waveLocations[index-1], null, 2)}`)\n            editWaveSave(result, index-1);\n        }\n    }\n    const handleEditToggle = () => {\n        const edit = (localStorage.getItem('edit') === 'true') ? false : true;\n        localStorage.setItem('edit', edit);\n        updateLocations();\n        //console.log(`handleEditToggle => EDIT: ${edit}`)\n        /*\n        this.setState({\n            edit: edit\n        })\n        */\n    }\n    const menu = <div>\n                    <div className='glassy button m-5 r-10 p-10 bg-green ' onClick={() => addWave()}>\n                        Add wave\n                    </div>\n                    <div className='glassy button m-5 r-10 p-10 bg-green' onClick={() => editWave({'name':'button'})}>\n                        {(localStorage.getItem('edit') === 'true') ? 'Save' : 'Edit wave'}\n                    </div>\n                </div>;\n    const itemContainer = <div>\n                    <div className='App button bg-yellow color-black p-10 r-10 mt-20' onClick={() => logLocation(item)}>\n                        Log Session\n                    </div>\n                    <div className='App button bg-red color-black p-10 r-10 mt-20' onClick={() => editWave({'name':'edit'})}>\n                        Edit Location\n                    </div>\n                    <div className='App button bg-red color-black p-10 r-10 mt-20' onClick={() => deleteWave(item)}>\n                        Delete Location\n                    </div>\n                </div>\n    //console.log(`status.module: ${status.module}`)\n    return ((status !== undefined && status.module) === 'WaveFinder') ? menu : itemContainer;\n}\nexport default WaveUtils","/Users/js/Dev/my-first-reactor/src/components/waves/Tide.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/DirectionObject.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/ConditionsSelectors.js",["853"],"import React from 'react';\nimport WindSelector from './wind/WindSelector.js';\nimport TideSelector from './tide/TideSelector.js';\nimport SwellSelector from './SwellSelector.js';\nimport ConditionsContext from '../context/ConditionsContext.js';\nimport Selector from '../forms/FunctionalSelector.js';\n\nclass ConditionsSelectors extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setWindStatus = props.setWindStatus;\n        this.setTide = props.setTide;\n        this.setWind = props.setWind;\n        this.setWindStatus = props.setWindStatus;\n        this.handleWindCheck = props.handleWindCheck;\n        this.handleTideCheck = props.handleTideCheck;\n        this.handleTideSelection = props.handleTideSelection;\n        this.handleSwellCheck = props.handleSwellCheck;\n        this.handleSwell1Selection = props.handleSwell1Selection;\n        this.handleSwell2Selection = props.handleSwell2Selection;\n        this.handleSwell1Angle = props.handleSwell1Angle;\n        this.handleSwell2Angle = props.handleSwell2Angle;\n        this.handleSwell1Height = props.handleSwell1Height;\n        this.handleSwell2Height = props.handleSwell2Height;\n        this.handleSwell1Interval = props.handleSwell1Interval;\n        this.handleSwell2Interval = props.handleSwell2Interval;\n        this.handleStarSelection = props.handleStarSelection;\n        this.handleDistanceSelection = props.handleDistanceSelection;\n        this.pause = props.pause;\n        this.setStatus = props.setStatus;\n        this.data = props.data;\n        this.tideDisplay = props.tideDisplay;\n    }\n\n    static contextType = ConditionsContext;\n\n    refresh = () => window.location.pathname = \"/reactor/WaveFinder\";\n    \n    starSelector = (stars) => <div \n                                className=\"flex2Column contentCenter glassy r-10 m-5 p-15\" \n                                onMouseDown={this.pause}\n                                >\n                                    Match<br/>\n                                    <Selector\n                                        groupTitle=\"Matches\" \n                                        selected={stars} \n                                        label=\"Quality\"\n                                        items={[0,1,2,3,4,5]}\n                                        onChange={this.handleStarSelection}\n                                        fontSize='20'\n                                        padding='5px'\n                                        width='93%'\n                                    />\n                                </div>\n    milesInput = (distance) => <div className=\"flex2Column contentCenter glassy r-10 m-5 p-10\">\n                                <label>\n                                    Miles<br/>\n                                    <input className=\"mt-10 p-10 r-10\"\n                                        name=\"distance\"\n                                        type=\"number\"\n                                        value={(distance=='' ? 100 : distance)}\n                                        onChange={this.handleDistanceSelection}\n                                    />\n                                </label>\n                            </div>\n    render() {\n        //console.log('ConditionsSelectors => render => this.context: ', this.context);\n        return (\n            <div className=\"p-5 r-10 m-5\">\n                <div className='p-10 color-yellow'>select current conditions:</div>\n                <div className=\"flexContainer\">\n                    <SwellSelector \n                        id='1' \n                        swellDirection={this.context.swell1Direction} \n                        status={this.context} \n                        handleSwell1Selection={this.handleSwell1Selection} \n                        handleSwell2Selection={this.handleSwell2Selection} \n                        handleSwell1Angle={this.handleSwell1Angle} \n                        handleSwell2Angle={this.handleSwell2Angle} \n                        handleSwell1Height={this.handleSwell1Height} \n                        handleSwell2Height={this.handleSwell2Height} \n                        handleSwell1Interval={this.handleSwell1Interval} \n                        handleSwell2Interval={this.handleSwell2Interval} \n                        handleSwellCheck={this.handleSwellCheck}  \n                        pause={this.pause}>\n                    </SwellSelector>\n                    <SwellSelector \n                        id='2' \n                        swellDirection={this.context.swell2Direction} \n                        status={this.context} \n                        handleSwell1Selection={this.handleSwell1Selection} \n                        handleSwell2Selection={this.handleSwell2Selection} \n                        handleSwell1Angle={this.handleSwell1Angle} \n                        handleSwell2Angle={this.handleSwell2Angle} \n                        handleSwell1Height={this.handleSwell1Height} \n                        handleSwell2Height={this.handleSwell2Height} \n                        handleSwell1Interval={this.handleSwell1Interval} \n                        handleSwell2Interval={this.handleSwell2Interval} \n                        handleSwellCheck={this.handleSwellCheck} \n                        pause={this.pause}>\n                    </SwellSelector>\n                </div>\n                <div className=\"flexContainer\">\n                    <TideSelector \n                        tideNow={this.tideNow} \n                        data={this.data} \n                        status={this.context}\n                        pause={this.pause} \n                        tideDisplay={this.tideDisplay} \n                        handleTideCheck={this.handleTideCheck} \n                        handleTideSelection={this.handleTideSelection}\n                    />\n                    <WindSelector \n                        windDirection={this.context.windDirection} \n                        pause={this.pause} \n                        setWind={this.setWind} \n                        isWind={this.context.isWind} \n                        setStatus={this.setWindStatus} \n                        handleWindCheck={this.handleWindCheck}\n                    />\n                </div>\n                <div className=\"flexContainer\">\n                    {this.milesInput(this.context.distance)}\n                    {this.starSelector(this.context.stars)} \n                </div>\n                <div className=\"button bg-neogreen r-10 m-5 p-15 color-black bold glassy\" onClick={this.refresh}>Refresh</div>\n            </div>\n        ) \n    }\n    \n}\nexport default ConditionsSelectors;\n","/Users/js/Dev/my-first-reactor/src/components/waves/Locations.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/useOceanData.js",["854"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport useCurrentTime from \"../utils/useCurrentTime.js\";\n\nconst useOceanData = (component, uri) => {\n  const [status, setStatus] = useState({\n    oceanData: {},\n    updated: false,\n  });\n  const date = useCurrentTime()[0].startTime.split(\"%\")[0];\n  const getOceanData = async () => {\n    console.log(`getOceanData => SERVER: ${component}`);\n    //console.log(`getOceanData => SERVER: ${component}\\nuri: ${uri}`);\n    const { data } = await axios.get(uri, {\n      params: {\n        origin: \"*\",\n        format: \"json\",\n        mode: \"cors\",\n      },\n    });\n    //console.log(`getOceanData => SERVER: ${component}: \\nstatus.updated: ${status.updated}\\nuri: ${uri}\\noceanData: ${JSON.stringify(data, null, 2)}`)\n    //console.log(`getOceanData => data.data: ${JSON.stringify(data.data, null, 2)}`)\n    //const lastElement = data.data[data.data.length-1];\n    //console.log(`getOceanData => data.data[last]: ${JSON.stringify(lastElement)}`)\n    //console.log(`getOceanData => data.data[last].v: ${lastElement.v}`)\n    //console.log(`getOceanData => data.data[last].dr: ${lastElement.dr}`)\n    //console.log(`getOceanData => data.data[last].t: ${lastElement.t}`)\n    //console.log(`getOceanData => data.data[last].d: ${lastElement.d}`)\n    //console.log(`getOceanData => data.data[last].g: ${lastElement.g}`)\n\n    localStorage.setItem(`${component}Data`, JSON.stringify(data));\n    localStorage.setItem(`${component}Date`, date);\n    setStatus((prevState) => ({\n      ...prevState,\n      oceanData: data,\n      update: true,\n    }));\n  };\n  useEffect(() => {\n    //console.log(`OceanData => ${ component }`)\n    let ignore = false;\n    //console.log(`useOceanData => CHECK\\nstatus.oceanData: ${JSON.stringify(status.oceanData,null,2)}\\ndate: ${date}`)\n    if (!ignore && JSON.stringify(status.oceanData) === \"{}\") {\n      getOceanData();\n    }\n    return () => {\n      ignore = true;\n    };\n  }, []);\n\n  return [status.oceanData, getOceanData];\n};\nexport default useOceanData;\n\n\n","/Users/js/Dev/my-first-reactor/src/components/waves/GetMatchIcon.js",["855","856","857","858","859","860","861","862"],"import React from 'react';\nimport swell1 from '../../assets/images/wavePrimary.png';\nimport swell2 from '../../assets/images/waveSecondaryB.png';\nimport N from '../../assets/images/windN.png';\nimport NE from '../../assets/images/windNE.png';\nimport E from '../../assets/images/windE.png';\nimport SE from '../../assets/images/windSE.png';\nimport S from '../../assets/images/windS.png';\nimport SW from '../../assets/images/windSW.png';\nimport W from '../../assets/images/windW.png';\nimport NW from '../../assets/images/windNW.png';\n// eslint-disable-next-line\nimport tideIcon from '../../assets/images/tide.png';\nimport tide from '../../assets/images/tide.png';\n// eslint-disable-next-line\nimport high from '../../assets/images/tide.png';\n// eslint-disable-next-line\nimport medium from '../../assets/images/tide.png';\n// eslint-disable-next-line\nimport low from '../../assets/images/tide.png';\nimport waterTemp from '../../assets/images/waterTemp.png';\nimport airTemp from '../../assets/images/airTemp.png';\n\nconst getMatchIcon = ({kind, status}) => {\n    //console.log(`getMatchIcon => kind: ${kind}\\nstatus:${JSON.stringify(status,null,2)}`)\n    const getStarMatchKind = (kind) => {\n        //let classes = \"shaka r-20 p-2\";\n        let classes = 'h50w50 p-5';\n        classes = (kind === \"wind\") ? (classes + \" r-10 bg-white mb-55\") : classes; \n        return classes;\n    }\n    // eslint-disable-next-line\n    //console.log(`status.tide: ${status.tide}`);\n    const getTideIcon = <img src={status.tide} className={`mb--5 ${getStarMatchKind(\"tide\")}`} alt=\"tide\" />;\n    // eslint-disable-next-line\n    const getWaterTempIcon = <img src={waterTemp} className={`mb--7 ${getStarMatchKind(\"tide\")}`} alt=\"water temp\" />;\n    // eslint-disable-next-line\n    const getAirTempIcon = <img src={airTemp} className={`mb--7 ${getStarMatchKind(\"tide\")}`} alt=\"air temp\" />;\n    // eslint-disable-next-line\n    let icon = (kind === \"swell1\") ? \"swell1\" : \"swell2\";\n    icon = (kind === \"wind\") ? \"wind\" : icon;\n    // eslint-disable-next-line\n    icon = (kind === \"tide\") ? \"tide\" : icon;\n    const getDirectionIcon = (direction) => {\n        if (direction === \"N\") {\n            return <img className='width50px' src={N} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if ((direction === \"NE\") || (direction === \"NNE\") || (direction === \"ENE\")) {\n            return <img className='width50px' src={NE} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if (direction === \"E\") {\n            return <img className='width50px' src={E} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if ((direction === \"SE\") || (direction === \"SSE\") || (direction === \"ESE\")) {\n            return <img className='width50px' src={SE} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if (direction === \"S\") {\n            return <img className='width50px' src={S} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if ((direction === \"SW\") || (direction === \"SSW\") || (direction === \"WSW\")) {\n            return <img className='width50px' src={SW} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if (direction === \"W\") {\n            return <img className='width50px' src={W} className={getStarMatchKind(kind)} alt={kind} />;\n        } else if ((direction === \"NW\") || (direction === \"NNW\") || (direction === \"WNW\")) {\n            return <img className='width50px' src={NW}  alt={kind} />;\n        }\n    }\n    if (kind === \"swell1\") {\n        const swellDirection = status.swell1Direction;\n        return <React.Fragment>\n                <img src={swell1} className={getStarMatchKind(kind)} alt={kind} /><br/>\n                {getDirectionIcon(swellDirection)}\n            </React.Fragment>;\n    } else if (kind === \"swell2\") {\n        const swellDirection = status.swell2Direction;\n        return <React.Fragment>\n                <img src={swell2} className={getStarMatchKind(kind)} alt={kind} /><br/>\n                {getDirectionIcon(swellDirection)}\n            </React.Fragment>;\n    } else if (kind === \"tide\") {\n        return <img src={tide} className={getStarMatchKind(kind)} alt={kind} />;\n    } else if (kind === \"wind\") {\n        const windDirection = status.windDirection;\n        return getDirectionIcon(windDirection);\n    }\n};\nexport default getMatchIcon;","/Users/js/Dev/my-first-reactor/src/components/context/ConditionsContext.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/SurfLocation.js",["863","864","865"],"import React, {useState} from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport WaveUtils from '../utils/WaveUtils.js';\nimport { BrowserRouter as Router, Link} from 'react-router-dom';\nimport GetMatchIcon from './GetMatchIcon.js';\nimport getAngle from './GetAngle.js';\nimport createLog from './CreateLog.js';\n\nconst SurfLocation = ({state, item, matches, regionMatch, tideDisplay, updateLocations}) => {\n    //console.log(`SurfLocation: state: ${JSON.stringify(state, null, 2)}`)\n    const { edit, windDirection, windSpeed, windGusts, swell1Direction, swell2Direction, swell1Angle, swell2Angle, swell1Height, swell2Height, swell1Interval, swell2Interval, tide, height, stars } = state;\n    // eslint-disable-next-line\n    const [status, setStatus] = useState({\n        module: 'SurfLocation',\n        logged: false,\n        edit: edit,\n        windDirection: windDirection,\n        windSpeed: windSpeed, \n        windGusts: windGusts,\n        swell1Direction: swell1Direction, \n        swell2Direction: swell2Direction,\n        swell1Angle: swell1Angle,\n        swell2Angle: swell2Angle,\n        swell1Height: swell1Height,\n        swell2Height: swell2Height,\n        swell1Interval: swell1Interval,\n        swell2Interval: swell2Interval,\n        tide: tide, \n        height: swell1Height,\n        stars: stars\n    });\n    const secondsToSec = () => 'sec';\n    const getSpeed = () => `${Number(status.windSpeed).toFixed(0)}-${Number(status.windGusts).toFixed(0)}`;\n    const getStrength = () => (Number(status.speed)<2) ? 'light' : (Number(status.speed)>8) ? 'strong' : 'moderate';\n    const style = {\n        height: '50px'\n    }\n    const getCurrentWind = () => {\n        return (\n            <div className='white' style={style}>\n                <div className='m-2'>{`${getStrength()}`}</div>\n                <div className='m-2'>{`${status.windDirection} ${Number(getAngle(status.windDirection))}°`}</div>\n                <div className='m-2'>{getSpeed()} <span className=\"greet\">mph</span></div>\n            </div>\n        )\n    }\n    // eslint-disable-next-line\n    const setTide = (tide) => {\n        localStorage.setItem(\"tide\", tide);\n    }\n    const getStarDetails = (kind) => {\n        let details = '';\n        // eslint-disable-next-line\n        const {height, windSpeed, windGusts, swell1Height, swell1Angle,swell1Interval, swell2Height, swell2Angle, swell2Interval} = status;\n        // eslint-disable-next-line\n        const getWindSpeed = (((windSpeed * 1.15078)+(windGusts * 1.15078))/2).toFixed(0);\n        details = (kind === 'tide') ? tideDisplay('star') : details;\n        details = (kind === 'wind') ? getCurrentWind() : details;\n        details = (kind === 'swell1') \n            ? (<React.Fragment>\n                    <div className='bold white'>{swell1Angle}°</div>\n                    <div className='bold white'>{`${swell1Height}${(swell1Height.includes('ft')) ? '' : \"'\"}`}</div>\n                    <div className='bold white'>{swell1Interval.replace(' seconds',secondsToSec())}</div>\n                </React.Fragment>) \n            : details;\n        details = (kind === 'swell2') \n            ? (<React.Fragment>\n                    <div className='bold white'>{swell2Angle}°</div>\n                    <div className='bold white'>{`${swell2Height}${(swell2Height.includes('ft')) ? '' : \"'\"}`}</div>\n                    <div className='bold white'>{swell2Interval.replace(' seconds',secondsToSec())}</div>\n                </React.Fragment>)\n            : details;\n        return details\n    }\n    const getState = (kind) => {\n        const { swell1Direction, swell2Direction, tide, windDirection } = status;\n        if (kind === 'swell1') {\n            return swell1Direction;\n        } else if (kind === 'swell2') {\n            return swell2Direction;\n        } else if (kind === 'tide') {\n            return tide.toUpperCase();\n        } else if (kind === 'wind') {\n            return windDirection;\n        }\n    }\n    const star = (matchKind) => {\n        return (<div key={getKey('star')} className='flex3Column bg-lite glassy mr-5 ml-5 p-10 r-10'>\n            <GetMatchIcon kind={matchKind} status={status}/>\n            <div className='greet color-yellow bold'>\n                {(matchKind === 'tide') ? '' : getState(matchKind)}{getStarDetails(matchKind)}\n            </div>\n        </div>)\n    }\n    const getStars = (stars) => stars.map((currentStar) => star(currentStar));\n    const logLocation = (item) => (status.logged === true) ? alert('log already exists') : alert('log already exists');//createLog(item, status);\n    const logLocationButton = (item) => {\n        return <React.Fragment>\n                    {\n                        (localStorage.getItem('edit') === 'true') \n                        ? <WaveUtils item={item} state={status} logLocation={() => logLocation(item)} updateLocations={updateLocations}></WaveUtils>\n                        : <div className='App button bg-dkYellow color-black glassy p-10 r-10 mt-20' onClick={() => logLocation(item)}>\n                            Log Session\n                        </div>\n                    }\n                </React.Fragment>\n    }\n    // eslint-disable-next-line\n    const editLogButton = () => {\n        return (\n            <Link className='noUnderline' key={getKey('link')} to={{\n                pathname: '/SurfLog?logId=ThuApr3020209:19:28PM',\n                state: {\n                    logId: status.recordId\n                }\n            }}>\n                <div className='App button bg-yellow color-black p-10 r-10 mt-20'>\n                    Edit Log\n                </div>\n            </Link>\n        );\n    }\n    \n    const statusClass = (status) => (status === true) ? 'color-yellow mt-10' : 'white mt-10'; \n    const subStatusClass = (status) => (status === true) ? 'color-orange  mt-10' : 'white  mt-10'; \n    const swell1Match = (item) => (item.swell.indexOf(swell1Direction)>-1) ? true : false;\n    // eslint-disable-next-line\n    const swell2Match = (item) => (item.swell.indexOf(swell2Direction)>-1) ? true : false;\n    // eslint-disable-next-line\n    const windMatch = (item) => (item.wind.indexOf(windDirection)>-1) ? true : false;\n    // eslint-disable-next-line\n    const tideMatch = (item) => (item.tide.indexOf(tide)>-1) ? true : false;\n    const swell2DirectionMatch = (direction) => (direction===swell2Direction) ? true : false;\n    const windDirectionMatch = (direction) => (direction.wind === windDirection) ? true : false;\n    const tideDirectionMatch = (direction) => (direction.tide === tide) ? true : false;\n    const preferredClasses = 'white bold mt-5';\n    return (\n        <div key={getKey('loc')} /*onClick={() => this.props.editLocation()}*/>\n            <div className='r-10 m-10 p-20 glassy'>\n                    <div className='width-100-percent flexContainer'>{getStars(matches)}</div>\n                    <div className='mt-20 mb-20 navBranding color-yellow'>{item.name}</div>\n                    <div className='greet glassy color-yellow p-5 bg-lite mt-15 mb-10 r-5'>{`${regionMatch} miles`}</div>\n                <div className='flexContainer'>\n                    <div className='flexContainer m-auto'>\n                        <div className='columnRightAlign pr-10'>\n                            <div className={preferredClasses}>Swell: </div>\n                            <div className={preferredClasses}>Wind: </div>\n                            <div className={preferredClasses}>Tide: </div>\n                        </div>\n                        <div className='columnLeftAlign'>\n                            <div className='mt-5'>{item.swell.map((swell, i) => <span key={getKey('swell')} className={(swell === status.swell1Direction) ? statusClass(swell1Match(item)) : subStatusClass(swell2DirectionMatch(swell))}>{swell}{((i+1) === item.swell.length)? '' : ', '}</span>)}</div>\n                            <div className='mt-5'>\n                                {item.wind.map((wind, i) => <span key={getKey('wind')} className={statusClass(windDirectionMatch({wind}))}>\n                                                            {wind}{((i+1) === item.wind.length)? '' : ', '}\n                                                        </span>)}\n                            </div>\n                            <div className='mt-5'>{item.tide.map((tide,i) => <span key={getKey('tide')} className={statusClass(tideDirectionMatch({tide}))}>{tide}{((i+1) === item.tide.length)? '' : ', '}</span>)}</div>\n                        </div>\n                    </div>\n                    \n                </div>\n                {\n                    //(status.logged) ? editLogButton() : logLocationButton(item)\n                    logLocationButton(item)\n                }\n            </div>\n        </div>\n    );\n}\nexport default SurfLocation;","/Users/js/Dev/my-first-reactor/src/components/utils/CalculateDistance.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/PostDirectory.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/LogEntryFunctional.js",["866","867"],"import React, { useState } from 'react';\nimport Dialog from '../functional/Dialog.js';\nimport RadioSelector from '../forms/FormRadio.js';\nimport DatePicker from 'react-date-picker';\nimport getKey from '../utils/KeyGenerator.js';\nimport PostDirectory from './PostDirectory.js';\nimport { BrowserRouter as Router, Link, Route} from 'react-router-dom';\nimport Selector from './Selector.js';\nimport group from './Group.js';\nimport templateData from './TemplateData.js';\nimport generateNewLogId from './GenerateLogId.js';\n\nconst LogEntry = ({ logId, onChange, getStateLog, title, message, buttonLabel, items }) => {\n    console.log(`LogEntry => logId: ${logId}`)\n    const posts = new PostDirectory();\n    const logIdExists = () => (logId !== undefined && logId !== \"\" ) ? false : true;\n    const localLastPostIdExists = () => (localStorage.getItem(\"lastPostId\") === 'null') ? false : true;\n    const getLocalLastPostId = () => (localLastPostIdExists()) ? localStorage.getItem(\"lastPostId\") : posts.getLastItem(); \n    const getLastPostId = () => (logIdExists()) ? logId : getLocalLastPostId();\n    const localLogExists = () => (localStorage.getItem(logId) === 'null') ? false : true;\n    const getLog = () => (localLogExists()) ? JSON.parse(localStorage.getItem(logId)) : templateData;\n    //console.log(`LogEntry => logId: ${logId}\\nlog: ${JSON.stringify(getLog(), null, 2)}`)\n    // eslint-disable-next-line\n    const classes = 'stripe p-10 color-black m-10 r-10 bg-soft';\n    // eslint-disable-next-line\n    const buttonClasses = 'button p-10 r-10 m-1 width-100-percent';\n\n    const [status, setStatus] = useState({\n        logId: logId,\n        lastPostId: getLastPostId(),\n        date: new Date(),\n        log: getLog(),\n        change: false,\n        spot: localStorage.getItem('spot')\n    });\n\n    const handleSelection = (groupTitle, label, selected) => {\n        console.log(`handleSelection => \\ngroupTitle: ${groupTitle}\\nlabel: ${label}\\nselected: ${selected}`)\n        if (typeof groupTitle === \"string\") {\n            const currentLog = status.log;\n            currentLog[groupTitle][label] = selected;\n            setStatus(prevState => ({\n                ...prevState,\n                log: currentLog,\n                change: true\n            }));\n            onChange(groupTitle, label, selected, true);\n        } \n    }\n    const updateNotes = (event) => {\n        handleSelection(\"Comments\", \"notes\", event.target.value);\n    }\n    const handleSubmit = (event) => {\n        console.log(`handleSubmit: ${JSON.stringify(status.log, null, 2)}`)\n        const recordId = generateNewLogId();\n        console.log(`handleSubmit: recordId: ${recordId}`)\n        let postDirectory = posts.getDirectory();\n        let post = \"\";\n        const logIt = () => {\n            postDirectory.push(recordId);\n            postDirectory = JSON.stringify(postDirectory);\n            console.log(`postDirectory: ${postDirectory}`)\n            post = JSON.stringify(status.log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n            //localStorage.setItem(\"postDirectory\", postDirectory);\n            posts.add(recordId);\n        }\n        logIt();\n        window.location.pathname = \"/reactor/LogDirectory\";\n    }\n    const handleSave = (event) => {\n        console.log(`handleSave: ${status.log}`)\n        const recordId = logId;\n        let post = \"\";\n        const logIt = () => {\n            post = JSON.stringify(status.log, null, 2);\n            console.log(`post: ${post}`)\n            localStorage.setItem(recordId, post);\n        }\n        logIt();\n        window.location.pathname = \"/reactor/LogDirectory\";\n    }\n    const handleDelete = () => {\n        console.log(`handleDelete => `)\n        const recordId = logId;\n        console.log(`handleDelete => recordId: ${recordId}`)\n        posts.delete(recordId);\n        window.location.pathname = \"/reactor/LogDirectory\";\n    }\n    const onDateChange = (date) => {\n        const day = date.getDate();\n        const month = date.getMonth()+1;\n        const year = date.getFullYear();\n        handleSelection(\"Day\", \"Date\", date);\n        handleSelection(\"Day\", \"Day\", day);\n        handleSelection(\"Day\", \"Month\", month);\n        handleSelection(\"Day\", \"Year\", year);\n    }\n    const getItems = () => items;\n    const selected = (item, groupTitle) => ((item.selections.indexOf(status.log[groupTitle][item.description])) !== -1) ? true : false;\n    const getWaveHeight = (height) => {\n        console.log(`getWaveHeight(1) => height: ${height}`)\n        let newHeight = height;\n        const heights = ['knee high', 'waist high', 'chest high', 'shoulder high', 'head high', 'over head', 'foot over head', '2 feet over head' ,'double over head', 'triple over head']\n        const size = ['1ft', '2ft', '3ft', '4ft', '5ft', '6ft', '7ft', '8ft' ,'9ft', '10ft'];\n        const decimal = ['1.0', '2.0', '3.0', '4.0', '5.0', '6.0', '7.0', '8.0' ,'9.0', '10.0']\n        newHeight = (size.indexOf(height)<0) ? height : size[heights.indexOf(height)];\n        console.log(`getWaveHeight(2) => height: ${height}`);\n        newHeight = (decimal.indexOf(height)<0) ? height : size[decimal.indexOf(height)];\n        console.log(`getWaveHeight(3) => height: ${newHeight}`)\n        return newHeight;     \n    }\n    const getTide = (height) => {\n        const tide = Number(height.replace('ft','')).toFixed(0) + 'ft';\n        console.log(`getTide => height: ${tide}`);\n        return tide;\n    }\n    const defaultSelection = (item, groupTitle) => {\n        console.log(`defaultSelection => status.log: ${JSON.stringify(status.log,null,2)}`);\n        let selected = status.log[groupTitle][item.description];\n        console.log(`defaultSelection => \\nselected: ${selected}\\ngroupTitle: ${groupTitle}\\nitem.description: ${item.description}`);\n        \n        //selected = getWaveSize(selected);\n        if ((item.description === 'Height' && (groupTitle === 'Swell1' || groupTitle === 'Swell2')) || (item.description === 'Report' && groupTitle === 'Surf')) {\n            selected = getWaveHeight(selected);\n        }\n        if (item.description === 'Phase' && groupTitle === 'Tide') {\n            console.log(`defaultSelection => Tide(1) => Phase: ${selected}`)\n            if (selected === 'high' || selected === 'medium' || selected === 'low') {\n            } else if (selected > 3) {\n                selected = 'high';\n            } else if (selected > 2) {\n                selected = 'medium';\n            } else {\n                selected = 'low';\n            }\n            //selected = getTide(selected);\n            console.log(`defaultSelection => Tide(2) => Phase: ${selected}`)\n        }\n        if (item.description === 'Height' && groupTitle === 'Tide') {\n            if (selected === 'NaNft') {\n                selected = status.log[groupTitle]['Phase'];\n            }\n            console.log(`defaultSelection => Tide => Height: ${selected}`)\n            selected = getTide(selected);\n        }\n        if (selected === ('High => Low' || 'Low => High')) {\n            selected = 'medium';\n        }\n        let selectedIndex = item.selections.indexOf(String(selected).toLocaleLowerCase());\n        if (item.selections[selectedIndex] === undefined) {\n            selectedIndex = item.selections.indexOf(String(selected));\n        }\n        console.log(`defaultSelection => ${item.description}: ${groupTitle} - ${selected}\\nselections:${item.selections[selectedIndex]}\\nitem: ${JSON.stringify(item, null, 2)}`);\n        return selectedIndex; \n    }\n    const radioItems = (item, groupTitle) => {\n        return (\n            <RadioSelector\n                header={groupTitle}\n                groupTitle={groupTitle} \n                selected={defaultSelection(item,groupTitle)} \n                label={item.description} \n                items={item.selections} \n                onChange={handleSelection}\n            />\n        )\n    };\n\n                            \n    const radio = (item, groupTitle) => {\n        console.log('RADIO button')\n        return (\n            <div className=\"r-vw\">\n                {radioItems(item, groupTitle)}\n            </div>\n        )\n    };\n    \n    const selectionInterface = (item, groupTitle) => (item.type === 'radio') ? radio(item, groupTitle) : Selector(item, groupTitle, status.spot, defaultSelection, handleSelection, selected);\n    const groups = () => getItems().map((item) => {\n        const headerClasses = 'subHeader color-yellow p-20';\n        const selectorClasses = 'greet p-vw flex3Column';\n        const groupClasses = (window.innerWidth < 500) \n            ? \"r-vw bg-dark r-10\" \n            : \"flexContainer width-100-percent r-vw bg-dark r-10\";\n        const description = item.description;\n        //console.log(`description: ${description}`)\n       return <div key={getKey(\"groupConainer\")}>\n                <div key={getKey(\"groupHeader\")} className={headerClasses}>\n                    {description}\n                </div>\n                <div className={groupClasses} key={getKey(\"groupSubConainer\")}>\n                    {group(item).map((group) => \n                        <div key={getKey(\"selectorContainer\")} className={selectorClasses}>\n                            {selectionInterface(group, description)}\n                        </div>\n                    )}\n                </div>\n            </div>\n    });\n    const categories = () => {\n        status.selectorStatus = [];\n        return <div className='description'>{groups()}</div>;\n    }\n    const getLogObject = () => status.log;\n    const dateEntry = () => {\n        const logExists = (status.log !== undefined && status.log !== null && JSON.stringify(status.log, null, 2) !== \"{}\") ? true : false;\n        const stateLogDate = () => getLogObject().Day.Date;\n        const getDate = () => (logExists === true) ? new Date(stateLogDate()) : new Date(status.date);\n        return <React.Fragment>\n                    <div className='mb-5 subHeader color-yellow'>Date</div>\n                    <div className='flexContainer width-100-percent'>\n                        <DatePicker\n                            onChange={onDateChange}\n                            value={getDate()} \n                            className='glassy p-vw bg-lite flex3Column r-vw m-vw p-20'\n                        /><br/>\n                    </div>\n                </React.Fragment>\n    }\n    \n    return (\n        <Route>\n            <form onSubmit={handleSubmit} className='bg-lite p-20 m-5 r-10'>\n                {dateEntry()}\n                {categories()}\n                <br/>\n                <div className=\"mb-5\">Additional Comments: </div>\n                <textarea \n                    rows=\"10\" \n                    cols={window.innerWidth/15} \n                    value={status.log.Comments.notes} \n                    onChange={updateNotes} \n                    className=\"mt-10 greet p-10 r-10 brdr-green\"\n                />\n                <PostDirectory />\n                <Link className=\"noUnderline color-black\"\n                    to=\"/LogDirectory\"\n                    onClick={() => handleSubmit()}>\n                    <div onClick={handleSubmit} className=\"button m-1 greet p-20 r-10 bg-green brdr-green glassy\">\n                        {buttonLabel}\n                    </div>\n                </Link> \n                <Link className=\"noUnderline color-black\"\n                    to=\"/LogDirectory\"\n                    onClick={() => handleSave()}>\n                    <div onClick={handleSave} className=\"myButton m-1 greet p-20 r-10 bg-yellow brdr-yellow glassy\">\n                        save\n                    </div>\n                </Link>\n                <Link className=\"noUnderline\"\n                    to=\"/LogDirectory\"\n                    onClick={() => handleDelete()}>\n                    <div onClick={handleDelete} className=\"button m-1 color-black greet p-20 r-10 bg-red brdr-red glassy\">\n                        delete\n                    </div>\n                </Link>\n            </form>\n        </Route>\n    );\n}\n\nexport default LogEntry;","/Users/js/Dev/my-first-reactor/src/components/utils/Loader.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/BlogImages.js",[],"/Users/js/Dev/my-first-reactor/src/components/music/SongList.js",[],"/Users/js/Dev/my-first-reactor/src/components/music/SongDetail.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/SequenceImages.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/DebouncerType.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/DropDown.js",[],"/Users/js/Dev/my-first-reactor/src/components/translator/Translate.js",[],"/Users/js/Dev/my-first-reactor/src/components/forms/FunctionalSelector.js",[],"/Users/js/Dev/my-first-reactor/src/components/shop/ProductEntry.js",["868","869","870","871","872","873","874"],"import React, { useState, useEffect } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport debounceType from '../utils/DebouncerType.js';\nimport Selector from '../forms/FunctionalSelector.js';\nimport CurrencyInput from 'react-currency-input-field';\n\nconst ProductEntry = ({ state, updateAisles, save, displayProductEntry}) => {\n\n    console.log(`searchItem: ${state.search}`)\n\n    const listItems = [\n        'Item',\n        'Aisle',\n        'Price',\n        'Save'\n    ];\n    const [Price, setPrice] = useState('');\n    const [debouncedPrice, setDebouncedPrice] = useState(Price);\n    const [Item, setItem] = useState(state.item);\n    console.log(`ProductEntry => search: ${state.search} - Item: ${Item}`);\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        // Do something with the collected price\n        console.log(Price);\n    };\n    \n    useEffect(() => {\n        const timerId = setTimeout(() => {\n            setDebouncedPrice(Price);\n        }, 1000);\n\n        return () => {\n            clearTimeout(timerId);\n        };\n       debounceType(setDebouncedPrice, Price);\n    }, [Price]);\n\n    const initState = () => {\n       \n        //const newState = state;\n        //newState.listItems = listItems;\n        const initAdd = {\n            listItems: [...listItems] // make a copy of the listItems array\n        }\n        listItems.map((item, index) => {\n            const propName = listItems[index];\n            const propValue = (listItems[index] === 'Aisle') ? 'Smart and Final' : (listItems[index] === 'Item') ? state.search : state.search;\n            initAdd[propName] = propValue;\n        })\n        initAdd[\"displayProductEntry\"] = displayProductEntry;\n        const newState = { ...state, ...initAdd };\n        return newState;\n    }\n\n    const [status, setStatus] = useState(initState());\n    \n    console.log(`status => search: ${initState().search}`)\n\n    console.log('-----=======>>>>>>>  status: ', status);\n\n    const getSetting = (index) => {\n        if (status.listItems[index] === 'Save') {\n            save();\n        } else if (status.listItems[index] === 'Price') {\n\n        }\n        //displayProductEntry = displayProductEntry\n        /*\n        setStatus(prevState => ({\n            ...prevState,\n            listItems: listItems,\n            displayProductEntry: displayProductEntry\n        }));\n        */\n    };\n    const setDisplay = (display) => {\n        setStatus(prevState => ({\n            ...prevState,\n            Price: display\n        }))\n        console.log('setDisplay: ', display);\n        /*\n        setStatus(prevState => ({\n            ...prevState,\n            displayProductEntry: displayProductEntry\n        }))\n        */\n    };\n\n    const getInputField = (index) => {\n        const itemEntry = () => {\n            const item = initState().search;\n            console.log('setItem: ', item);\n            setStatus(prevState => ({\n                ...prevState,\n                Item: item,\n                item: item,\n                search: item\n            }))\n        };\n        const setAisle = (groupTitle, label, selected) => {\n            console.log('setAisle: ', selected);\n            setStatus(prevState => ({\n                ...prevState,\n                Aisle: selected\n            }))\n        };\n        const setThePrice = (value) => {\n            console.log('setThePrice: ', value);\n            setStatus(prevState => ({\n                ...prevState,\n                Price: value\n            }))\n        };\n        if (listItems[index] === \"Price\") {\n            return <CurrencyInput\n                        id=\"price\"\n                        name=\"price\"\n                        placeholder=\"enter price...\"\n                        defaultValue={state.price}\n                        decimalsLimit={2}\n                        //onValueChange={(value, name) => setThePrice(value)}\n                        onValueChange={setPrice}\n                    />\n        } else if (listItems[index] === \"Item\") {\n            return <div className='m-20'>\n                        <form onSubmit={itemEntry}>\n                            <input\n                                className='p-10 r-5 bg-dark white size25 glassy width-100-percent'\n                                type=\"text\"\n                                value={initState().search}\n                                placeholder={'item...'}\n                                onChange={itemEntry}\n                            />\n                        </form>\n                    </div>\n        } else if (listItems[index] === \"Aisle\") {\n            return <Selector\n                    groupTitle={`Aisles`} \n                    selected={status.Aisle} \n                    label='Aisles' \n                    items={status.aisles}\n                    onChange={setAisle}\n                    fontSize='20'\n                    padding='5px'\n                    width='70%'\n                />\n        }\n        return <button>Add</button>\n\n    }\n    \n    \n    const productEntry = <div id='settingsMenu' className='bg-dark'>\n            {\n                status.listItems.map((item, index) => {\n                    return (\n                        <div \n                            key={getKey(status.listItems[index])} \n                            className='productButton' \n                            onClick={() => getSetting(index)}\n                        >\n                            { listItems[index] }: {getInputField(index)}\n                            \n                        </div>\n                    )\n                })\n            }\n        </div>\n    console.log('displayProductEntry1: ', displayProductEntry);\n    if (displayProductEntry === true) {\n        console.log('displayProductEntry2: ', displayProductEntry);\n        return productEntry\n    }\n    return <React.Fragment></React.Fragment>\n}\n\nexport default ProductEntry","/Users/js/Dev/my-first-reactor/src/components/shop/initData.js",[],"/Users/js/Dev/my-first-reactor/src/components/shop/SettingsMenu.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/Dominos.js",["875","876","877","878","879"],"import React, { useState, useEffect } from 'react';\nimport LongPressButton from './LongPressButton';\nimport Sounds from './Sounds.js';\n\nconst Dominos = ({ player, playerIndex, scoreIndex, scoreTotal, treeTotal, editPlayer, deletePlayer, getDominoTotal, updateScores, winner }) => {\n\n    //const dominoKey = `${(player.player||player.name)}Domino${scoreIndex}`;\n    const indexArray = [0, 1, 2, 3];\n    const getScore = () => {\n        //let newScore = 0;\n        //indexArray.map(scoreBox => {\n        //const dominoKey = `${(player.player||player.name)}Domino${scoreBox}`;\n        //console.log(`getScore => dominoKey: ${dominoKey}`)\n        //console.log(`getScore => newScore: ${Number(localStorage.getItem(dominoKey) || 0)}`)\n        //newScore = newScore + Number(localStorage.getItem(dominoKey) || 0);\n        //});\n        //return newScore;\n        const localPlayers = JSON.parse(localStorage.getItem('players'));\n        const localPlayer = localPlayers[playerIndex]\n        return Number(localPlayer.dominoScore);\n    }\n\n    const [score, setScore] = useState(getScore());\n    const [scoreTotalState, setScoreTotal] = useState(scoreTotal);\n    // eslint-disable-next-line\n    const [edit, setEdit] = useState(false);\n    const [timer, setTimer] = useState(null);\n    const [showButtons, setShowButtons] = useState(false);\n\n    const handleTouchStart = () => {\n        console.log(`handleTouchStart`)\n        setTimer(setTimeout(() => setShowButtons(true), 1000));\n    };\n\n    const handleTouchEnd = () => {\n        console.log(`handleTouchEnd`)\n        clearTimeout(timer);\n        //setShowButtons(false);\n    };\n\n    const quadrantScore = (quadrant) => {\n\n        //const playerScore = Number(localStorage.getItem(dominoKey));\n        //const playerScore = scoreTotalState;\n        const playerScore = getScore();\n        const scoreStart = treeTotal - (quadrant * 10);\n        //console.log(`player: ${player.name} dominoKey: ${dominoKey} playerScore: ${playerScore} \\nscoreTotalState: ${scoreTotalState} \\ntreeTotal: ${treeTotal} \\nscoreStart: ${scoreStart} \\nquadrant: ${quadrant}`)\n        console.log(`player: ${player.name} playerScore: ${playerScore} \\nscoreTotalState: ${scoreTotalState} \\ntreeTotal: ${treeTotal} \\nscoreStart: ${scoreStart} \\nquadrant: ${quadrant}`)\n        //const scoreEnd = scoreStart+((quadrant-1)*10);\n        if (playerScore > scoreStart && playerScore < scoreStart + 10) {\n            return \"/\";\n        } else if (playerScore <= scoreStart) {\n            return \"\";\n        } else {\n            return \"X\";\n        }\n\n        //let quadrantScore = ['-','/', 'X'];\n        //return score;\n    }\n    const getDominoScore = (quadrant) => <div className='white'>{quadrantScore(quadrant)}</div>;\n    // eslint-disable-next-line\n    const updateScore = (newScore) => {\n        localStorage.setItem((player.player || player.name), newScore);\n        //setScore(Number(localStorage.getItem(player)));\n    }\n    const updateDominos = () => {\n        console.log(`updateDominos() => getScore(): ${getScore()} player: ${player.name} playerIndex: ${playerIndex} scoreIndex: ${scoreIndex}`);\n        updateScores();\n    }\n\n    const addScore = () => {\n\n        //const playerScore = Number(localStorage.getItem(dominoKey));\n        const localPlayers = JSON.parse(localStorage.getItem('players'));\n        const localPlayer = localPlayers[playerIndex];\n        //const playerScore = Number(localStorage.getItem('players').split(',')[playerIndex]) || 0;\n        const playerScore = Number(localPlayer.dominoScore) || 0;\n\n        //console.log(`addScore => dominoKey: ${dominoKey} treeTotal: ${treeTotal} scoreTotalState: ${scoreTotalState}  score: ${score} getScore(): ${getScore()} getDominoTotal(): ${playerScore}`);\n        console.log(`addScore => treeTotal: ${treeTotal} scoreTotalState: ${scoreTotalState}  score: ${score} getScore(): ${getScore()} getDominoTotal(): ${playerScore}`);\n\n        if (score < Number(treeTotal) && score > Number(treeTotal - 51)) {\n            let newScore = playerScore + 5;\n            const players = JSON.parse(localStorage.getItem('players'));\n            players[playerIndex].dominoScore = newScore;\n            localStorage.setItem('players', JSON.stringify(players));\n            //localStorage.setItem(dominoKey, newScore);\n            const currentScore = getScore();\n            setScore(currentScore);\n            if (currentScore == winner) {\n                Sounds.playSiren();\n            } else {\n                Sounds.playSound(winner, currentScore);\n            }\n            //console.log(`addScore => dominoKey: ${dominoKey} treeTotal: ${treeTotal} scoreTotalState: ${scoreTotalState}  score: ${score}  newScore: ${newScore} getScore(): ${getScore()} getDominoTotal(): ${playerScore}`);\n            console.log(`addScore => treeTotal: ${treeTotal} scoreTotalState: ${scoreTotalState}  score: ${score}  newScore: ${newScore} getScore(): ${getScore()} getDominoTotal(): ${playerScore}`);\n            updateDominos();\n        }\n    }\n\n    const subtractScore = () => {\n        console.log('subtractScore score: ', score)\n        let newScore = Number(score) - 5;\n        newScore = (newScore < 0) ? 0 : newScore;\n        const players = JSON.parse(localStorage.getItem('players'));\n        players[playerIndex].dominoScore = newScore;\n        localStorage.setItem('players', JSON.stringify(players));\n\n        //localStorage.setItem(dominoKey, newScore);\n        updateDominos();\n    }\n\n    const editNav = () => {\n        if (edit) {\n            return <div className='subIndex t-0 relative flexContainer color-yellow p-1 bg-dkGreen r-5 bold'>\n                <div className=\"flex3Column\"></div>\n                <div className=\"flex3Column\">\n                    <div className='button color-green description r-5 p-5 m-5 bg-yellow' onClick={() => editPlayer(playerIndex)}>EDIT</div>\n                    <div className='button color-red description r-5 p-5 m-5 bg-yellow' onClick={() => deletePlayer(playerIndex)}>DELETE</div>\n                </div>\n                <div className=\"flex3Column\"></div>\n            </div>\n        }\n    }\n    \n    const stockClasses = 'r-10 m-1 color-yellow bold bg-darker';\n    const containerClasses = `ht-105 w-150 ${stockClasses}`;\n    const buttonClass = 'bg-darker';\n    const getButtonClass = 'button flex3Column p-10 r-10 ' + buttonClass;\n    // eslint-disable-next-line\n    const dominoClass = () => (score >= winner) ? 'color-neogreen shakingShaka' : 'white';\n    // eslint-disable-next-line\n    const scoreButtonClasses = 'glassy flex3Column button bg-green m-10 r-10 color-neogreen navBranding centeredContent';\n    const scoreButton = (quadrant) => {\n        return <div className='{stockClasses}'>\n            <div className='flexContainer'>\n                <span className={getButtonClass}>\n                    <div className='p-5 r-5 navBranding'>\n                        {getDominoScore(quadrant)}\n                    </div>\n                </span>\n            </div>\n        </div>\n    }\n    const quadrantClasses = (quadrant, treeTotal) => {\n\n        const playerScore = getScore();\n        const startScore = treeTotal - 50;\n        const verticalLineScore = startScore + 5;\n        const horizontalLineScore = startScore + 10;\n        const showVerticalLine = (playerScore >= verticalLineScore) ? true : false;\n        const showHorizontalLine = (playerScore >= horizontalLineScore) ? true : false;\n\n        console.log(`quadrantClasses => treeTotal: ${treeTotal} scoreIndex: ${scoreIndex} score: ${getScore()} playerScore: ${playerScore}`)\n        if (quadrant === 1) {\n            return (showVerticalLine) ? ((showHorizontalLine) ? \"quadrant on5Right onBottom10\" : \"quadrant on5Right\") : \"quadrant\";\n        } else if (quadrant === 2) {\n            return (showVerticalLine) ? ((showHorizontalLine) ? \"quadrant on5Left onBottom10\" : \"quadrant on5Left\") : \"quadrant\";\n        } else if (quadrant === 3) {\n            return (showVerticalLine) ? ((showHorizontalLine) ? \"quadrant on5Right onTop10\" : \"quadrant on5Right\") : \"quadrant\";\n        } else if (quadrant === 4) {\n            return (showVerticalLine) ? ((showHorizontalLine) ? \"quadrant on5Left onTop10\" : \"quadrant on5Left\") : \"quadrant\";\n        }\n    }\n    const editNavigation = () => {\n        return <div>\n            <button className='myButton p-22 size25' onClick={subtractScore}>-</button>\n            <button className='myButton p-22 size25' onClick={addScore}>+</button>\n        </div>\n    }\n    return (\n        <div className='centeredContent'>\n            <div className={containerClasses} onTouchStart={handleTouchStart} onTouchEnd={handleTouchEnd}>\n                <div id=\"container\" onClick={() => addScore()}>\n                    <div id=\"top-left\" className={quadrantClasses(1, treeTotal)}>{scoreButton(1)}</div>\n                    <div id=\"top-right\" className={quadrantClasses(2, treeTotal)}>{scoreButton(2)}</div>\n                    <div id=\"bottom-left\" className={quadrantClasses(3, treeTotal)}>{scoreButton(3)}</div>\n                    <div id=\"bottom-right\" className={quadrantClasses(4, treeTotal)}>{scoreButton(4)}</div>\n                </div>\n            </div>\n            {editNav()}\n            {showButtons && (\n                editNavigation()\n            )}\n        </div>\n\n    )\n\n}\n\nexport default Dominos;","/Users/js/Dev/my-first-reactor/src/components/utils/CricketScore.js",["880","881"],"import React, { useState, useEffect } from 'react';\nimport Sounds from './Sounds.js';\n\nconst CricketScore = ({ player, playerIndex, scoreIndex, editPlayer, deletePlayer, game, updateScores, winner }) => {\n\n    const [players, setPlayers] = useState(JSON.parse(localStorage.getItem('players')));\n    const getScore = () => (players[playerIndex].cricketScores[scoreIndex]) || 0;\n    const [score, setScore] = useState(getScore());\n    // eslint-disable-next-line\n    const [edit, setEdit] = useState(false);\n    const dartsScores = ['-', '/', 'X', 'O'];\n    const getDartScore = (score) => <div className='white'>{dartsScores[score]}</div>;\n\n    const addScore = () => {\n        let newScore = Number(score) + 1;\n        newScore = (newScore > 3) ? 0 : newScore;\n        const newPlayers = [...players];\n        let total = 0;\n        newPlayers[playerIndex].cricketScores[scoreIndex] = newScore;\n        newPlayers[playerIndex].cricketScores.map((score, index) => total = total + score);\n        newPlayers[playerIndex].dartsScore = total;\n        //alert(`addScore => newPlayers[${playerIndex}].dartsScore: ${newPlayers[playerIndex].dartsScore}`)\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        //setPlayers(JSON.parse(localStorage.getItem(players)));\n        Sounds.playSound(winner, total);\n        updateScores();\n        setScore(newScore);\n    }\n    const editNav = () => {\n        if (edit) {\n            return <div className='subIndex t-0 relative flexContainer color-yellow p-1 bg-dkGreen r-5 bold'>\n                <div className=\"flex3Column\"></div>\n                <div className=\"flex3Column\">\n                    <div className='button color-green description r-5 p-5 m-5 bg-yellow' onClick={() => editPlayer(playerIndex)}>EDIT</div>\n                    <div className='button color-red description r-5 p-5 m-5 bg-yellow' onClick={() => deletePlayer(playerIndex)}>DELETE</div>\n                </div>\n                <div className=\"flex3Column\"></div>\n            </div>\n        }\n    }\n    const stockClasses = 'r-10 m-1 color-yellow bold bg-darker';\n    const buttonClass = 'bg-darker';\n    const getButtonClass = 'button flex3Column p-10 r-10 ' + buttonClass;\n    // eslint-disable-next-line\n    const dartClass = () => (score >= winner) ? 'color-neogreen shakingShaka' : 'white';\n    // eslint-disable-next-line\n    const scoreButtonClasses = 'flex3Column button bg-green r-10 color-neogreen navBranding centeredContent';\n    return (\n        <div>\n            <div className={stockClasses}>\n                <div className='flexContainer'>\n                    <span\n                        className={getButtonClass}\n                        onClick={() => addScore()}\n                    >\n                        <div className='p-5 r-5 navBranding'>\n                            {getDartScore(score)}\n                        </div>\n                    </span>\n                </div>\n            </div>\n            {editNav()}\n        </div>\n    )\n\n}\n\nexport default CricketScore;","/Users/js/Dev/my-first-reactor/src/components/site/CountrySelector.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/ScoreCard.js",["882","883","884","885","886","887"],"import React, { useState } from 'react';\nimport Sounds from './Sounds.js';\nimport Selector from '../forms/FunctionalSelector.js';\n\nconst ScoreCard = ({ game, players, playerIndex, scoreIndex, editPlayer, deletePlayer, updateScores, winner}) => {\n \n    const player = players[playerIndex];\n    console.log(`ScoreCard => game: ${game} scoreIndex: ${scoreIndex} player: ${player.name} or ${JSON.stringify(player,null,2)} winner: ${winner}`)\n    const cricketKey = `${player}Cricket${scoreIndex}`;\n    //const getScore = () => (localStorage.getItem(player.name) || 0);\n    const initGolfStats = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\n    const initGolfPutts = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n    const puttsArray = [0,1,2,3,4,5,6,7,8,9,10];\n    const getScore = () => {\n        if (game === 'golf') {\n            const newPlayers = JSON.parse(localStorage.getItem('players'));\n            return newPlayers[playerIndex].golfScores[scoreIndex];\n        } \n        return player[`${game}Score`] || 0;\n    }\n    const [ score, setScore ] = useState(getScore());\n    const [ edit, setEdit ] = useState(false);\n    const updateScore = (newScore) => {\n\n        //localStorage.setItem((player.player||player.name), newScore);\n        let total = 0;\n        const addToTotal = (value) => total = total + value;\n        if (game === 'golf') {\n            const newPlayers = JSON.parse(localStorage.getItem('players'));\n            //alert(`updateScore => ${game}: hole: ${scoreIndex} newScore: ${newScore} player: ${player.name}`);\n            newPlayers[playerIndex].golfScores[scoreIndex] = newScore;\n            newPlayers[playerIndex].golfScores.map((score) => addToTotal(score));\n            newPlayers[playerIndex].golfScore = total;\n            if (!newPlayers[playerIndex].golfFW) {\n                newPlayers[playerIndex].golfFW = initGolfStats;\n            }\n            if (!newPlayers[playerIndex].golfGIR) {\n                newPlayers[playerIndex].golfGIR = initGolfStats;\n            }\n            if (!newPlayers[playerIndex].golfPutts) {\n                newPlayers[playerIndex].golfPutts = initGolfPutts;\n            }\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n        } else {\n            player[`${game}Score`] = newScore;\n            players.map((player, index) => {\n                if (index === playerIndex) {\n                    //players[index].score = newScore;\n                    players[index][`${game}Score`] = newScore;\n                }\n                console.log(`updateScore => ${index} player: ${(player.player||player.name)}: ${newScore}`);\n                if (game === 'golf' || (newScore < Number(winner))) {\n                    //localStorage.setItem(`player${index}`, 'loser');\n                    localStorage.setItem('gameStatus', 'inProgress');\n                } else {\n                    //localStorage.setItem(`player${index}`, 'winner');\n                    localStorage.setItem('gameStatus', 'gameOver');\n                }\n            });\n            localStorage.setItem('players', JSON.stringify(players));\n        }\n        \n        Sounds.playSound((game==='golf')?3000:winner, newScore);\n       \n        console.log(`updateScore => playerIndex: ${playerIndex}`)\n        console.log(`updateScore => scoreIndex: ${scoreIndex}`)\n        console.log(`updateScore => game: ${game}`)\n        console.log(`updateScore => winner: ${winner}`)\n        console.log(`updateScore => newScore: ${newScore}`)\n        console.log(`updateScore => player: ${(player.player||player.name)}`)\n        console.log(`updateScore => playerScore: ${(game === 'golf') ? total : newScore}`)\n        console.log(`updateScore => gameStatus: ${localStorage.getItem('gameStatus')}`)\n        \n        setScore(newScore);\n        updateScores();\n    }\n    // eslint-disable-next-line\n    const addScore = () => {\n        const newScore = Number(score) + 1;\n        updateScore(newScore);       \n    }\n    const subtractScore = () => {\n        const newScore = Number(score) - 1;\n        updateScore(newScore);\n    }\n    const editNav = () => {\n        if (edit) {\n            return <div className='t-0 relative flexContainer color-yellow p-1 bg-dkGreen r-5 bold'>\n                        <div className=\"flex3Column\"></div>\n                        <div className=\"flex3Column\">\n                            <div className='button color-green description r-5 p-5 m-5 bg-yellow' onClick={() => editPlayer(playerIndex)}>EDIT</div>\n                            <div className='button color-red description r-5 p-5 m-5 bg-yellow' onClick={() => deletePlayer(playerIndex)}>DELETE</div>\n                        </div>                    \n                        <div className=\"flex3Column\"></div>\n                    </div>\n        }\n    }\n    const stockClasses = 'r-10 m-1 color-yellow bold ';\n    const gameClasses = {\n        'standard': 'bg-dkGreen', \n        'ping pong': 'bg-dkGreen', \n        'golf': 'bg-dkGreen', \n        'cornhole': 'bg-dkYellow', \n        'horse': 'bg-dkYellow',\n        'horseshoes': 'bg-dkRed', \n        'bocci': 'bg-dkRed'\n    }\n    const buttonClass = (game === 'golf') ? 'bg-darker' : 'bg-darker';\n    const getButtonClass = 'glassy button flex3Column p-5 r-10 m-1 ' + buttonClass;\n    const dartClass = () => (score >= winner) ? 'color-neogreen shakingShaka' : 'white';\n    const scoreButtonClasses = 'glassy flex3Column button bg-green r-10 color-neogreen centeredContent';\n    console.log(`PLAYER: ${(players[playerIndex].player || players[playerIndex].name)} or ${JSON.stringify(players[playerIndex],null,2)} ${game==='golf'?'par:':'winner:'} ${winner} score: ${score}`)\n    const isEagle = (score, par) => (score === (par-1)) ? true : false;\n    const isBoagie = (score, par) => ((score > par) && (score < (Number(par)+3))) ? true : false;\n    const isDoubleBoagie = (score, par) => (score === (Number(par)+2)) ? true : false;\n    const getOuterCSS = (score, winner) => {\n        if (game==='golf'&&isEagle(score, winner)) return 'completedSelector r-50-percent pb-5 pt-3';\n        if (game==='golf'&&isDoubleBoagie(score, winner)) return 'brdr-light p-5 r-10';\n        return 'brdr-transparent r-10';\n    }\n    const getInnerCSS = (score,winner) => {\n        if (game==='golf'&&isBoagie(score,winner)&&isDoubleBoagie(score,winner)) return 'brdr-light r-5 font50 ht-50 pt-12 pl-10 pr-10';\n        if (game==='golf'&&isBoagie(score,winner)) return 'brdr-light r-5 font50 ht-50 pt-12 pl-10 pr-10 mt-5 mb-5';\n        if (game==='golf'&&!isDoubleBoagie(score,winner)&&!isEagle(score,winner)) return 'ht-40 p-5 r-5 font50 m-10';\n        return 'p-5 r-5 font50 m-10';\n    }\n    const toggleFW = () => {\n        const newPlayers = [...players];\n        if (newPlayers[playerIndex].golfFW[scoreIndex] != true) {\n            newPlayers[playerIndex].golfFW[scoreIndex] = true;\n        } else {\n            newPlayers[playerIndex].golfFW[scoreIndex] = false;\n        }\n        Sounds.playSound(3000, newPlayers[playerIndex].golfScores[scoreIndex]);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        updateScores();\n    };\n    const toggleGIR = () => {\n        const newPlayers = [...players];\n        if (newPlayers[playerIndex].golfGIR[scoreIndex] != true) {\n            newPlayers[playerIndex].golfGIR[scoreIndex] = true;\n        } else {\n            newPlayers[playerIndex].golfGIR[scoreIndex] = false;\n        }\n        Sounds.playSound(3000, newPlayers[playerIndex].golfScores[scoreIndex]);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        updateScores();\n    };\n    const getFW_Checkbox = () => {\n        if (!players[playerIndex].golfFW) {\n            const newPlayers = [...players];\n            newPlayers[playerIndex].golfFW = initGolfStats;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            updateScores();\n        }\n        const FW = players[playerIndex].golfFW[scoreIndex] || false;\n        let checkBox = <input className='regular-checkbox button glassy ml-5' checked type='checkbox' id='fw' />\n        if (FW != true) {\n            checkBox = <input className='regular-checkbox button glassy ml-5' type='checkbox' id='fw' />\n        }\n        return checkBox;\n    }\n    const getGIR_Checkbox = () => {\n        if (!players[playerIndex].golfGIR) {\n            const newPlayers = [...players];\n            newPlayers[playerIndex].golfGIR = initGolfStats;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            updateScores();\n        }\n        const GIR = players[playerIndex].golfGIR[scoreIndex] || false;\n        let checkBox = <input className='regular-checkbox button glassy ml-5 mr-10' checked type='checkbox' id='gir' />\n        if (GIR != true) {\n            checkBox = <input className='regular-checkbox button glassy ml-5 mr-10' type='checkbox' id='gir' />\n        }\n        return checkBox;\n    }\n    const selectPutts = (groupTitle, label, selected) => {\n        const newPlayers = [...players];\n        const previouslySetPutts = newPlayers[playerIndex].golfPutts[scoreIndex];\n        const newSelectionDifference = selected - previouslySetPutts;\n        const currentScore = newPlayers[playerIndex].golfScores[scoreIndex];\n        newPlayers[playerIndex].golfScores[scoreIndex] = currentScore + newSelectionDifference;\n        newPlayers[playerIndex].golfPutts[scoreIndex] = selected;\n        newPlayers[playerIndex].golfScore = newPlayers[playerIndex].golfScore + newSelectionDifference;\n        Sounds.playSound(3000, newPlayers[playerIndex].golfScores[scoreIndex]);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        updateScores();\n    }\n    const getPuttCount_Selector = () => {\n        if (!players[playerIndex].golfPutts) {\n            const newPlayers = [...players];\n            newPlayers[playerIndex].golfPutts = initGolfPutts;\n            localStorage.setItem('players', JSON.stringify(newPlayers));\n            updateScores();\n        }\n        const putts = players[playerIndex].golfPutts[scoreIndex] || 0;\n        let puttSelector = <Selector\n                                groupTitle='putts'\n                                label='putts'\n                                items={puttsArray}\n                                selected={putts}\n                                onChange={selectPutts}\n                                fontSize='25'\n                                padding='10px'\n                                width={'auto'}\n                            />\n        return <div className='columnCenterAlign bg-lite r-10 button m-2'>\n                    <span className=\"size20\">Putts:</span>\n                    <span className='m-5'>{puttSelector}</span>\n                </div>\n    }\n    const getGolfLowerNav = () => <div className='flexContainer m-1'>\n        <div className={`columnCenterAlign size20 p-10 mt-5 mb-5 ${scoreButtonClasses}`} onClick={() => toggleFW()}>\n            <span>FW</span>\n            {getFW_Checkbox()}\n        </div>\n        <div className=\"flex3Column\"></div>\n        <div className={`columnCenterAlign size20 pt-10 pb-10 pl-10 mt-5 mb-5 ${scoreButtonClasses}`} onClick={() => toggleGIR()}>\n            <span>GIR</span>\n            {getGIR_Checkbox()}\n        </div>\n    </div>\n\n    return (\n        <div>\n            <div className={stockClasses + gameClasses[game]}>\n                <div className='flexContainer'>\n                    <span className={`navBranding ${scoreButtonClasses}`} onClick={() => subtractScore()}>-</span>\n                    <span \n                        className={getButtonClass} \n                        onClick={() => setEdit(!edit)}\n                    >\n                        <div></div>\n                        <div className={dartClass()}>{(game==='golf')?null:(players[playerIndex].player || players[playerIndex].name)}</div>\n                        <div className={getOuterCSS(score, winner)}>\n                            <div className={getInnerCSS(score, winner)}>\n                                {score}\n                            </div>\n                        </div>\n                    </span>\n                    <span className={`navBranding ${scoreButtonClasses}`} onClick={() => addScore()}>+</span>\n                </div>\n                {(game === 'golf') ? getGolfLowerNav() : null}\n                {(game === 'golf') ? getPuttCount_Selector(): null} \n            </div>\n            {editNav()}\n        </div>\n    )\n}\n   \nexport default ScoreCard;","/Users/js/Dev/my-first-reactor/src/components/site/GoogleAuth.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/LoginControl.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/Toggle.js",[],"/Users/js/Dev/my-first-reactor/src/components/functional/CopyrightText.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/StreamActions.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/StreamForm.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/ButtonAdmin.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/YouTube.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/SearchBar.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/VideoList.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/UnSplash.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/GridImage.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/VideoDetail.js",[],"/Users/js/Dev/my-first-reactor/src/components/weather/CitySelector.js",[],"/Users/js/Dev/my-first-reactor/src/components/converter/LiquidVerdict.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/TemplateData.js",[],"/Users/js/Dev/my-first-reactor/src/components/converter/BoilingVerdict.js",[],"/Users/js/Dev/my-first-reactor/src/components/converter/TemperatureInput.js",[],"/Users/js/Dev/my-first-reactor/src/components/streams/Modal.js",[],"/Users/js/Dev/my-first-reactor/src/components/apis/config.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/UserHeader.js",[],"/Users/js/Dev/my-first-reactor/src/components/blog/BlogActions.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/Angles.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/Directions.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/Sunset.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/BuoyReport.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/WindDirection.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GetAngle.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/CreateLog.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/SwellSelector.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/Selector.js",["888"],"import React from 'react';\nimport FunctionalSelector from '../forms/FunctionalSelector.js';\n\nconst getLocalSpots = () => {\n    let uniqueSpots = [...new Set(getUnique(JSON.parse(localStorage.getItem('spots'))))];\n    return uniqueSpots;\n}\nconst getUnique = (array) => {\n    let uniqueSpots = [...new Set(array)];\n    return uniqueSpots;\n}\nconst selectorColor = (item, groupTitle, selected) => (selected(item,groupTitle)) ? \"completedSelector\" : \"incompletedSelector\";\n    \nconst Selector = (item, groupTitle, spot, defaultSelection, handleSelection, selected) => {\n    //console.log(`Selector: \\nitem: ${JSON.stringify(item, null,2)}\\ngroupTitle: ${groupTitle}\\nspot: ${spot}\\ndefaultSelection: ${defaultSelection}\\nhandleSelection: ${handleSelection}\\nselected: ${selected}`)\n    const isLocation = (groupTitle === 'Location') ? true : false;\n    const localLocations = (localStorage.getItem('spots')) ? true : false;\n    let items = item.selections;\n    const setLocal = () => (isLocation && !localLocations) ? localStorage.setItem('spots', JSON.stringify(items)) : null;\n    setLocal();\n    items = (isLocation && localLocations) ? getLocalSpots() : getUnique(items);\n    item.selections = items;\n    const addSpot = () => {\n        items.push(spot);\n        items = getUnique(items);\n        localStorage.setItem('spots', JSON.stringify(items))\n        return items;\n    }\n    const verifySpot = () => {\n        return (isLocation && !item.selections.includes(spot)) ? addSpot() : items;\n    }\n    //console.log(`spot: ${spot} \\n verifySpot(): ${verifySpot()} \\nselected: ${defaultSelection(item,groupTitle)}`)\n    \n    return <div className={\"r-vw p-vw\"}>\n        <div className=\"mb-5\">{item.description}: </div>\n        <div className=\"mb-5\">\n            <FunctionalSelector \n                groupTitle={groupTitle}  \n                label={item.description} \n                items={verifySpot()}\n                selected={defaultSelection(item,groupTitle)}\n                onChange={handleSelection}\n                fontSize='25'\n                padding='20px'\n                width='90%'\n            />\n        </div>\n    </div>;\n}\nexport default Selector","/Users/js/Dev/my-first-reactor/src/components/utils/RandomColor.js",[],"/Users/js/Dev/my-first-reactor/src/components/music/MusicActions.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/Group.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/RandomBackgroundColor.js",[],"/Users/js/Dev/my-first-reactor/src/components/forms/FormRadio.js",[],"/Users/js/Dev/my-first-reactor/src/components/functional/Dialog.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/tide/TideSelector.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/wind/WindSelector.js",["889","890"],"import React, { useState } from 'react';\nimport Selector from '../../forms/FunctionalSelector.js';\nimport WindDirection from '../WindDirection.js';\nimport directions from '../Directions.js';\nimport thumbsUp from '../../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../../assets/images/ThumbsDown.png';\n\nconst WindSelector = ({windDirection, pause, setWind, isWind, setStatus, handleWindCheck}) => {\n    //console.log(`WindSelector => isWind: ${isWind}`);\n    \n    const [filterByWind, setFilterByWind] = useState(isWind);\n    const backgroundColorClass = (localStorage.getItem('isWind') === 'true') ? 'bg-lite glassy fadeInFaded' : 'glassy fadeOutFaded';\n    const windClass = () => `${backgroundColorClass} flex2Column contentCenter r-10 m-5 p-15`;\n    const handleWindSelection = (groupTitle, label, selected) => {\n        setStatus(selected)\n    }\n\n    return (\n        <div className={windClass()} onMouseDown={pause}>\n            {/*console.log(`windSelector => windDirection: ${status.windDirection}`)*/}\n            Wind<br/>\n            <div className=\"pt-10\">\n                <WindDirection columns=\"1\" setWind={setWind} height='150px'/>\n            </div>\n            <Selector\n                groupTitle=\"Wind\" \n                selected={windDirection} \n                label=\"Direction\"\n                items={directions}\n                onChange={handleWindSelection}\n                fontSize='20'\n                padding='5px'\n                width='93%'\n            />\n            <div className=\"button mt-15\" onClick={handleWindCheck}>\n                {(localStorage.getItem('isWind') === 'true') ? <img src={thumbsUp} alt='wind' className='p-10 r-20' /> : <img src={thumbsDown} alt='wind' className='p-10 r-20' /> }\n            </div>\n        </div>\n    );\n}\nexport default WindSelector;","/Users/js/Dev/my-first-reactor/src/components/forms/FormLogin.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/Countries.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/Greeting.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/LocalAuth.js",["891","892","893"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from '../../actions';\n\nclass LocalAuth extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSignedIn: this.props.isSignedIn,\n        };\n    }\n    onSignInClick = () => {\n        console.log(`LocalAuth => SignInClick!!! (${this.props.isSignedIn})`);\n        //this.auth.signIn();\n        this.props.setSignIn();\n    };\n    onSignOutClick = () => {\n        console.log(`LocalAuth => SignOutClick!!! (${this.props.isSignedIn})`);\n        //this.auth.signOut();\n        this.props.setSignIn();\n    };\n    renderAuthButton() {\n        if (this.state.isSignedIn === null) {\n            return null;\n        } else if (this.props.isSignedIn === true) {\n            return (\n                <button onClick={this.onSignOutClick} className=\"ui google button\">\n                <i className=\"larger middle aligned icon user\" />\n                Local Sign Out\n                </button>\n            );\n        } else {\n            return (\n                <button onClick={this.onSignInClick} className=\"ui google button\">\n                <i className=\"larger middle aligned icon user\" />\n                Local Sign In\n                </button>\n            );\n        }\n    }\n\n    render() {\n        return <React.Fragment>{this.renderAuthButton()}</React.Fragment>;\n    }\n}\n\nexport default LocalAuth;\n",["894","895"],"/Users/js/Dev/my-first-reactor/src/apis/streams.js",[],"/Users/js/Dev/my-first-reactor/src/components/weather/Weekday.js",[],"/Users/js/Dev/my-first-reactor/src/components/weather/GetDirection.js",[],"/Users/js/Dev/my-first-reactor/src/components/weather/GetDirectionIcon.js",[],"/Users/js/Dev/my-first-reactor/src/apis/jsonPlaceholder.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/AirTemp.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/WaterTemp.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GetSurface.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GetWindMPH.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/WaveHeights.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GetWindOrientation.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GetWaveHeight.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/GetNotes.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/VideoItem.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/Menu.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/NavClasses.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/TextColorizer.js",[],"/Users/js/Dev/my-first-reactor/src/actions/index.js",[],"/Users/js/Dev/my-first-reactor/src/components/site/NavItems.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/useCurrentTime.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/LongPressButton.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRates.js",["896","897","898","899","900","901"],"import React, { useState, useEffect } from 'react';\n\nconst ExchangeRates = () => {\n\n  // set endpoint and your access key\n  //const endpoint = 'latest'\n  //const endpoint = '2000-01-17'\n  const endpoint = 'convert'\n  const access_key = '58e53558ca998da70c28b76dba516368';\n  const from = 'USD';\n  const to = 'EUR';\n  const amount = 25;\n\n  const templateData = {\n    success: true,\n    timestamp: 1519296206,\n    base: \"EUR\",\n    date: \"2021-03-17\",\n    rates: {\n          AUD: 1.566015,\n          CAD: 1.560132,\n          CHF: 1.154727,\n          CNY: 7.827874,\n          GBP: 0.882047,\n          JPY: 132.360679,\n          USD: 1.23396\n    }\n  }\n\n  //const [rates, setRates] = useState(null);\n  const [data, setData] = useState(templateData);\n\n  useEffect(() => {\n    const fetchRates = async () => {\n      try {\n        //const response = await fetch('https://api.exchangeratesapi.io/v1/' + endpoint + '?access_key=' + access_key + '&from=' + from + '&to=' + to + '&amount=' + amount);\n        const response = await fetch('http://localhost:3002/currency');\n        const data = await response.json();\n        //alert(JSON.stringify(data.error.code, null, 2));\n        console.log(`templateData: ${JSON.stringify(templateData, null, 2)}`);\n        console.log(`data: ${JSON.stringify(data, null, 2)}`);\n        setData(data);\n        //setData(templateData);\n      } catch (error) {\n        //console.error('Error fetching exchange rates:', error);\n        setData(templateData);\n      }\n    };\n\n    fetchRates();\n  }, []);\n\n  if (!data) {\n    return <div>Loading...</div>;\n  }\n  \n  const rates = data.rates || templateData.rates;\n  /*\n  return (\n    <div>\n      <h2>Exchange Rates</h2>\n      <ul>\n        {Object.entries(data.rates).map(([currency, rate]) => (\n          <li key={currency}>\n            {currency}: {rate}\n          </li>\n        ))}\n      </ul>\n      Error code: {data.error?.code}\n      <br/>\n      Error message: {data.error?.message}\n    </div>\n  );\n  */\n return JSON.stringify(rates,null,2);\n};\n\nexport default ExchangeRates;","/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeConverter.js",["902"],"import React, { useState, useEffect } from 'react';\nimport ExchangeRatesConfig from './ExchangeRatesConfig';\n\nconst ExchangeConverter = () => {\n\n    const currencies = {\n        MXN: `Pesos`,   // Mexican Peso\n        NIO: `Córdoba`,   // Nicaraguan Cordovas\n        CRC: `Colones`,    // Costa Rican Colones\n        IDR: `Rupiah`,  // Indonesian Rupiah\n        AUD: `AUD`,    // Australian Dollar\n    };\n\n    const [exchangeRates, setExchangeRates] = useState({});\n\n    const [usdAmount, setUsdAmount] = useState('');\n    const [selectedCurrency, setSelectedCurrency] = useState('MXN');\n    const [convertedAmount, setConvertedAmount] = useState('');\n    const [isToUsd, setIsToUsd] = useState(true);\n\n    const handleInputChange = (event) => {\n        setUsdAmount(event.target.value);\n    };\n\n    const handleCurrencyChange = (event) => {\n        setSelectedCurrency(event.target.value);\n    };\n\n    const handleConversion = () => {\n        if (isToUsd) {\n            const rate = exchangeRates[selectedCurrency];\n            const convertedValue = usdAmount / rate;\n            setConvertedAmount(convertedValue.toFixed(2));\n        } else {\n            const rate = exchangeRates[selectedCurrency];\n            const convertedValue = usdAmount * rate;\n            setConvertedAmount(convertedValue.toFixed(2));\n        }\n    };\n\n    const handleConversionDirection = () => {\n        setIsToUsd(!isToUsd);\n        setUsdAmount('');\n        setConvertedAmount('');\n    };\n\n    const currencyConverting = () => {\n        return currencies[selectedCurrency]\n    }\n    const formatNumber = (amount) => {\n        const formattedNumber = Number(amount).toLocaleString();\n        return formattedNumber\n    }\n\n    return (\n        <div>\n            <ExchangeRatesConfig onExchangeRatesChange={setExchangeRates}></ExchangeRatesConfig>\n            <div className='bg-yellow size20 timerBox m-20 p-30 bold color-black' onClick={handleConversionDirection}>\n                {isToUsd ? 'Convert to USD' : 'Convert from USD'}\n            </div>\n            <div className='bg-darker r-10 p-10 ml-20 mr-20 mb-1 bold'>\n                <div className='size20 color-lite mb-20 mt-10'>\n                    <label>\n                        {!isToUsd ? 'Convert to:' : 'Convert from:'}\n                        <select className='dualVideoPlayer color-black p-10 r-5' value={selectedCurrency} onChange={handleCurrencyChange}>\n                            <option value=\"MXN\">Mexican Peso ({exchangeRates.MXN})</option>\n                            <option value=\"NIO\">Nicaraguan Córdoba ({exchangeRates.NIO})</option>\n                            <option value=\"CRC\">Costa Rican Colone ({exchangeRates.CRC})</option>\n                            <option value=\"IDR\">Indonesian Rupiah ({exchangeRates.IDR})</option>\n                            <option value=\"AUD\">Australian Dollar ({exchangeRates.AUD})</option>\n                        </select>\n                    </label>\n                </div>\n            </div>\n            <div className='bg-darker r-10 p-10 mr-20 ml-20 bold'>\n                <div className='size20 m-20 color-lite'>\n                    <label>\n                        {isToUsd ? `${currencyConverting()}: $` : 'US Dollars: $'}\n                        <input className='dualVideoPlayer p-10 r-5 color-black m-5' type='number' value={usdAmount} onChange={handleInputChange} />\n                    </label>\n                </div>\n            </div>\n            <div className='bg-orange size20 timerBox m-20 color-black bold p-30' onClick={handleConversion}>Convert</div>\n            {convertedAmount && (\n                <div className='size20 color-lite bold p-30 bold m-20 r-10 bg-green'>\n                    {isToUsd\n                        ? `Converted Amount: ${convertedAmount} USD`\n                        : `Converted Amount: ${formatNumber(convertedAmount)} ${selectedCurrency}`}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ExchangeConverter;","/Users/js/Dev/my-first-reactor/src/components/utils/DualVideoPlayer.js",["903"],"import React, { useState, useRef, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport VideoPlayer from './VideoPlayer';\nimport VideoNavigation from './VideoNavigation';\n\nconst DualVideoPlayer = forwardRef(({ src1, src2 }, ref) => {\n\n  const [status, setStatus] = useState({\n    startTime1: 0,\n    startTime2: 0,\n    videoPlayer1Ref: useRef(null),\n    videoPlayer2Ref: useRef(null),\n    isPlaying: false,\n    isSlow: false,\n    isSlowRewind: false,\n    isMediumRewind: false,\n    isMedium: false,\n    isFast: false\n  });\n\n  useEffect(() => {\n    const speed = (status.isMediumRewind) ? 250 : 80;\n    const interval = (status.isSlowRewind) ? 300 : speed;\n    console.log(`status startTime1: ${(status.startTime1) ? status.endTime1 : '??'}`);\n    console.log(`status startTime2: ${(status.endTime2) ? status.endTime2 : '??'}`);\n    console.log(`status endTime1: ${(status.endTime1) ? status.endTime1 : '??'}`);\n    console.log(`status endTime2: ${(status.endTime2) ? status.endTime2 : '??'}`);\n    const intervalId = setInterval(() => {\n      const time1 = status.videoPlayer1Ref.current.currentTime - 0.05;\n      const time2 = status.videoPlayer2Ref.current.currentTime - 0.05;\n      if ((status.isSlowRewind || status.isMediumRewind || status.isRewind) && status.isPlaying && ((status.videoPlayer1Ref.current.currentTime > status.startTime1) || (status.videoPlayer2Ref.current.currentTime > status.startTime2))) {\n        console.log(`SLOOOOW REEEEEEwind!!! status.videoPlayer1Ref.current.currentTime: ${status.videoPlayer1Ref.current.currentTime} startTime1: ${status.startTime1} status.videoPlayer2Ref.current.currentTime: ${status.videoPlayer2Ref.current.currentTime}  startTime2: ${status.startTime2}`)\n        if (status.videoPlayer1Ref.current.currentTime > (status.startTime1)) status.videoPlayer1Ref.current.currentTime = time1;\n        if (status.videoPlayer2Ref.current.currentTime > (status.startTime2)) status.videoPlayer2Ref.current.currentTime = time2;\n      } else if ((status.isSlowRewind || status.isMediumRewind || status.isRewind) && status.isPlaying && ((status.videoPlayer1Ref.current.currentTime <= status.startTime1) && (status.videoPlayer2Ref.current.currentTime <= status.startTime2))) {\n        console.log(`STOOOOP SLOOOOW REEEEEEwind!!! status.videoPlayer1Ref.current.currentTime: ${status.videoPlayer1Ref.current.currentTime} startTime1: ${status.startTime1} status.videoPlayer2Ref.current.currentTime: ${status.videoPlayer2Ref.current.currentTime}  startTime2: ${status.startTime2}`)\n        clearInterval(intervalId);\n        setStatus(prevState => ({\n          ...prevState,\n          isPlaying: false\n        }));\n      } else if (!status.isPlaying) {\n        console.log(`STOOOOP REEEEEEwind!!!`)\n        clearInterval(intervalId);\n      }\n    }, interval);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n\n  }, [status.isPlaying, status.isSlowRewind, status.isMediumRewind, status.isRewind, status.startTime1, status.startTime2, status.videoRef]);\n\n  const handleTimeUpdate1 = time => {\n    /*\n    setStatus(prevState => ({\n      ...prevState,\n      currentTime1: time\n    }));\n    */\n  };\n\n  const handleTimeUpdate2 = time => {\n    /*\n    setStatus(prevState => ({\n      ...prevState,\n      currentTime2: time\n    }));\n    */\n  };\n  const handleStartTimeUpdate1 = time => {\n    console.log(\"handleStartTimeUpdate1\", time);\n    setStatus(prevState => ({\n      ...prevState,\n      startTime1: time\n    }));\n  };\n  const handleStartTimeUpdate2 = time => {\n    console.log(\"handleStartTimeUpdate2\", time);\n    setStatus(prevState => ({\n      ...prevState,\n      startTime2: time\n    }));\n  };\n  const handleEndTimeUpdate1 = time => {\n    console.log(\"handleEndTimeUpdate1\", time);\n    setStatus(prevState => ({\n      ...prevState,\n      endTime1: time\n    }));\n  };\n  const handleEndTimeUpdate2 = time => {\n    console.log(\"handleEndTimeUpdate2\", time);\n    setStatus(prevState => ({\n      ...prevState,\n      endTime2: time\n    }));\n  };\n\n  useImperativeHandle(ref, () => ({\n    setStatus,\n  }));\n\n  const handlePlayPause = (id) => {\n    console.log(`handlePlayPause id: ${id}`);\n    if (status.isPlaying) {\n      console.log(`handlePlayPause => pause id: ${id}`);\n\n      if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n        status.videoPlayer1Ref.current.pause();\n      };\n      if ((id === '1' || id === 'both') && status.videoPlayer2Ref.current) {\n        status.videoPlayer2Ref.current.pause();\n      }\n\n      setStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    } else {\n      console.log(`handlePlayPause => play id: ${id}`);\n\n      if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n        status.videoPlayer1Ref.current.playbackRate = 1;\n        status.videoPlayer1Ref.current.play();\n      }\n      if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n        status.videoPlayer2Ref.current.playbackRate = 1;\n        status.videoPlayer2Ref.current.play();\n      }\n\n      setStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false,\n      }));\n    }\n  };\n\n  const handleRewind = (id) => {\n\n    if (status.videoPlayer1Ref.current) {\n      console.log(`handleRewind id: ${id}`);\n      if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n        status.videoPlayer1Ref.current.pause();\n      };\n      if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n        status.videoPlayer2Ref.current.pause();\n      };\n      setStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: true,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n  const handleJumpToStart = (id) => {\n    //console.log(`handleJumpToStart id: ${id} startTime1: ${status.startTime1} startTime2: ${status.startTime2}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      //alert(`handleJumpToStart id: ${id} startTime1: ${status.startTime1}`);\n      //status.videoPlayer1Ref.current.pause();\n      status.videoPlayer1Ref.current.currentTime = status.startTime1 || 0;\n    };\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      //alert(`handleJumpToStart id: ${id} startTime2: ${status.startTime2}`);\n      //status.videoPlayer2Ref.current.pause();\n      status.videoPlayer2Ref.current.currentTime = status.startTime2 || 0;\n    };\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: false,\n      isRewind: false,\n      isFast: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false\n    }));\n  };\n  const handleJumpToEnd = (id) => {\n    console.log(`handleJumpToEnd id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      //alert(`handleJumpToEnd id: ${id} endTime1: ${status.endTime1}`);\n      status.videoPlayer1Ref.current.pause();\n      status.videoPlayer1Ref.current.currentTime = status.endTime1;\n    };\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      //alert(`handleJumpToEnd id: ${id} endTime1: ${status.endTime2}`);\n      status.videoPlayer2Ref.current.pause();\n      status.videoPlayer2Ref.current.currentTime = status.endTime2;\n    };\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: false,\n      isRewind: false,\n      isFast: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false\n    }));\n  };\n  const handleMinusOne = (id) => {\n    console.log(`handleMinusOne id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      status.videoPlayer1Ref.current.pause();\n      status.videoPlayer1Ref.current.currentTime -= 0.05;\n    };\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      status.videoPlayer2Ref.current.pause();\n      status.videoPlayer2Ref.current.currentTime -= 0.05;\n    };\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: false,\n      isRewind: false,\n      isFast: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false\n    }));\n  };\n  const handleAddOne = (id) => {\n    console.log(`handlePlusOne: id(${id})`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      status.videoPlayer1Ref.current.pause();\n      status.videoPlayer1Ref.current.currentTime += 0.05;\n    }\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      status.videoPlayer2Ref.current.pause();\n      status.videoPlayer2Ref.current.currentTime += 0.05;\n    }\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: false,\n      isRewind: false,\n      isFast: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false\n    }));\n  };\n\n  const handleSlowRewind = (id) => {\n    console.log(`handleSlowMotionRewind id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) status.videoPlayer1Ref.current.pause();\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) status.videoPlayer2Ref.current.pause();\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: true,\n      isRewind: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: true,\n      isMediumRewind: false,\n      isFast: false\n    }));\n  };\n\n  const handleMediumRewind = (id) => {\n    console.log(`handleMediumMotionRewind id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) status.videoPlayer1Ref.current.pause();\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) status.videoPlayer2Ref.current.pause();\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: true,\n      isRewind: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: true,\n      isFast: false\n    }));\n  };\n\n  const handleSlowMotion = (id) => {\n    console.log(`handleSlowMotion id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      status.videoPlayer1Ref.current.playbackRate = .2;\n      status.videoPlayer1Ref.current.play();\n    }\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      status.videoPlayer2Ref.current.playbackRate = .2;\n      status.videoPlayer2Ref.current.play();\n    }\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: true,\n      isRewind: false,\n      isSlow: true,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false,\n      isFast: false\n    }));\n  };\n  const handleMediumMotion = (id) => {\n    console.log(`handleMediumMotion id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      status.videoPlayer1Ref.current.playbackRate = .5;\n      status.videoPlayer1Ref.current.play();\n    }\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      status.videoPlayer2Ref.current.playbackRate = .5;\n      status.videoPlayer2Ref.current.play();\n    }\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: true,\n      isSlow: false,\n      isMedium: true,\n      isSlowRewind: false,\n      isMediumRewind: false,\n      isRewind: false,\n      isFast: false,\n      playbackRate: 0.5\n    }));\n  };\n\n  const handleFastForward = (id) => {\n    console.log(`handleFastMotion id: ${id}`);\n    if ((id === '1' || id === 'both') && status.videoPlayer1Ref.current) {\n      status.videoPlayer1Ref.current.playbackRate = 2;\n      status.videoPlayer1Ref.current.play();\n    };\n    if ((id === '2' || id === 'both') && status.videoPlayer2Ref.current) {\n      status.videoPlayer2Ref.current.playbackRate = 2;\n      status.videoPlayer2Ref.current.play();\n    };\n    setStatus(prevState => ({\n      ...prevState,\n      isPlaying: true,\n      isFast: true,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false,\n      isRewind: false,\n      playbackRate: 0.5\n    }));\n  };\n\n  return (\n    <div>\n      <div>\n        <div className='dualVideoPlayer'>\n          <VideoPlayer\n            id='1'\n            src={src1}\n            onTimeUpdate={handleTimeUpdate1}\n            onStartTimeUpdate={handleStartTimeUpdate1}\n            onEndTimeUpdate={handleEndTimeUpdate1}\n            handleJumpToStart={handleJumpToStart}\n            handleMinusOne={handleMinusOne}\n            handleRewind={handleRewind}\n            handleMediumRewind={handleMediumRewind}\n            handleSlowRewind={handleSlowRewind}\n            handlePlayPause={handlePlayPause}\n            handleSlowMotion={handleSlowMotion}\n            handleMediumMotion={handleMediumMotion}\n            handleFastForward={handleFastForward}\n            handleAddOne={handleAddOne}\n            handleJumpToEnd={handleJumpToEnd}\n            startTime={status.startTime1}\n            endTime={status.endTime1}\n            playStatus={true}\n            ref={status.videoPlayer1Ref}\n          />\n        </div>\n        <div className='dualVideoPlayer'>\n          <VideoPlayer\n            id='2'\n            src={src2}\n            onTimeUpdate={handleTimeUpdate2}\n            onStartTimeUpdate={handleStartTimeUpdate2}\n            onEndTimeUpdate={handleEndTimeUpdate2}\n            handleMinusOne={handleMinusOne}\n            handleRewind={handleRewind}\n            handleMediumRewind={handleMediumRewind}\n            handleSlowRewind={handleSlowRewind}\n            handlePlayPause={handlePlayPause}\n            handleSlowMotion={handleSlowMotion}\n            handleMediumMotion={handleMediumMotion}\n            handleFastForward={handleFastForward}\n            handleAddOne={handleAddOne}\n            ref={status.videoPlayer2Ref}\n            playStatus={true}\n            startTime={status.startTime2}\n            endTime={status.endTime2}\n          />\n        </div>\n      </div>\n      <VideoNavigation\n        handleJumpToStart={() => handleJumpToStart('both')}\n        handleMinusOne={() => handleMinusOne('both')}\n        handleRewind={() => handleRewind('both')}\n        handleMediumRewind={() => handleMediumRewind('both')}\n        handleSlowRewind={() => handleSlowRewind('both')}\n        handlePlayPause={() => handlePlayPause('both')}\n        handleSlowMotion={() => handleSlowMotion('both')}\n        handleMediumMotion={() => handleMediumMotion('both')}\n        handleFastForward={() => handleFastForward('both')}\n        handleAddOne={() => handleAddOne('both')}\n        handleJumpToEnd={() => handleJumpToEnd('both')}\n        playerStatus={status}\n      />\n    </div>\n  );\n});\n\nexport default DualVideoPlayer;","/Users/js/Dev/my-first-reactor/src/components/utils/ExpenseTracker.js",["904","905","906","907","908","909","910","911","912","913","914","915"],"import React, { useState, useEffect } from 'react';\nimport ExchangeRatesConfig from './ExchangeRatesConfig';\nimport initData from './ExpenseTrackerInitData.js';\n\nconst ExpenseTracker = () => {\n\n  const countries = {\n    USD: {\n      country: `US`,\n      dollar: `Dollar`\n    },\n    MXN: {\n      country: `Mexico`,\n      dollar: `Pesos`,\n    },\n    NIO: {\n      country: `Nicaragua`,\n      dollar: `Córdoba`,\n    },\n    CRC: {\n      country: `Costa Rica`,\n      dollar: `Colones`,\n    },\n    IDR: {\n      country: `Indonesia`,\n      dollar: `Rupiah`,\n    },\n    AUD: {\n      country: `Australia`,\n      dollar: `AUD`,\n    }\n  }\n\n  const currencyCode = [\n    'USD',\n    'MXN',\n    'NIO',\n    'CRC',\n    'IDR',\n    'AUD',\n  ];\n  const currencyOptions = {\n    US: 'USD',\n    Mexico: 'MXN',\n    Nicaragua: 'NIO',\n    'Costa Rica': 'CRC',\n    Indonesia: 'IDR',\n    Australia: 'AUD',\n  };\n\n  const currencies = {\n    USD: 'Dollar',\n    MXN: `Pesos`,   // Mexican Peso\n    NIO: `Córdoba`,   // Nicaraguan Cordovas\n    CRC: `Colones`,    // Costa Rican Colones\n    IDR: `Rupiah`,  // Indonesian Rupiah\n    AUD: `AUD`,    // Australian Dollar\n  };\n\n  const defaultExchangeRates = {\n    'USD': 1,\n    'MXN': 17.16,   // Mexican Peso\n    'NIO': 36.55,   // Nicaraguan Cordovas\n    'CRC': 541.23,    // Costa Rican Colones\n    'IDR': 15000,  // Indonesian Rupiah\n    'AUD': 1.5,    // Australian Dollar\n  };\n\n  const [exchangeRates, setExchangeRates] = useState(defaultExchangeRates);\n  const [usdAmount, setUsdAmount] = useState('');\n  const [selectedCurrency, setSelectedCurrency] = useState('MXN');\n  const [convertedAmount, setConvertedAmount] = useState('');\n  const [settings, setSettings] = useState(false)\n  const [totalExpenses, setTotalExpenses] = useState();\n  const [expenses, setExpenses] = useState([]);\n  const [expenseData, setExpenseData] = useState({\n    date: '',\n    time: '',\n    expense: '',\n    location: '',\n    cost: '',\n    currency: '',\n    countryCode: ''\n  });\n\n  useEffect(() => {\n    const grandTotal = getTotalExpenses();\n    localStorage.setItem('totalExpenses', grandTotal);\n    setTotalExpenses(grandTotal);\n    console.log(`Total Expense: ${grandTotal}`)\n  }, []);\n\n  useEffect(() => {\n    const savedExchangeRates = localStorage.getItem('exchangeRates');\n    if (savedExchangeRates !== '{}') {\n      setExchangeRates(JSON.parse(savedExchangeRates));\n    } else {\n      setExchangeRates(defaultExchangeRates);\n    }\n    console.log(`IDR: ${exchangeRates.IDR}`);\n  }, []);\n\n  useEffect(() => {\n    const savedExpenses = localStorage.getItem('expenses');\n    if (savedExpenses) {\n      setExpenses(JSON.parse(savedExpenses));\n    } else {\n      setExpenses(initData);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('expenses', JSON.stringify(expenses));\n    const grandTotal = getTotalExpenses();\n    localStorage.setItem('totalExpenses', grandTotal);\n    setTotalExpenses(grandTotal);\n    console.log(`Total Expense: ${grandTotal}`)\n  }, [expenses]);\n  \n  useEffect(() => {\n    console.log(`exchangeRates changed: ${exchangeRates}`)\n    localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n  }, [exchangeRates]);\n\n  const handleInputRateChange = (event) => {\n    const { name, value } = event.target;\n    setExpenseData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleAddExpense = () => {\n    const newExpense = { ...expenseData };\n    newExpense.date = getCurrentDate();\n    newExpense.time = getCurrentTime();\n    setExpenses((prevExpenses) => [...prevExpenses, newExpense]);\n    setExpenseData({\n      date: '',\n      time: '',\n      expense: '',\n      location: '',\n      cost: '',\n      currency: '',\n      countryCode: ''\n    });\n  };\n  const removeExpense = (index) => {\n    const savedExpenses = localStorage.getItem('expenses');\n    const expenseUpdate = JSON.parse(savedExpenses);\n    expenseUpdate.splice(index, 1);\n    setExpenses(expenseUpdate);\n  }\n\n  const getCurrentDate = () => {\n    const currentDate = new Date();\n    return currentDate.toDateString();\n  };\n\n  const getCurrentTime = () => {\n    const currentTime = new Date();\n    return currentTime.toLocaleTimeString();\n  };\n\n  const handleExpenseInputChange = (event) => {\n    setUsdAmount(event.target.value);\n    console.log(`${selectedCurrency}: ${event.target.value} - `)\n  };\n  const handleCurrencyInputChange = (event) => {\n    //console.log(event.target.value)\n    //alert(`USD: ${event.target.value}`)\n    //setCountryCode(event.target.value);\n    setSelectedCurrency(event.target.value);\n  };\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    if (name === 'cost') {\n      handleExpenseInputChange(event);\n    }\n    if (name === 'currency') {\n      handleCurrencyInputChange(event);\n      setExpenseData((prevData) => ({\n        ...prevData,\n        [name]: value,\n        countryCode: value,\n      }));\n    } else {\n      setExpenseData((prevData) => ({\n        ...prevData,\n        [name]: value,\n      }));\n    }\n      \n  };\n\n  const handleCurrencyChange = (currency) => {\n    setSelectedCurrency(currency);\n  };\n\n  const getTotalExpenses = () => {\n    const total = expenses.reduce((acc, expense) => {\n      const itemTotal = convertToUS(expense.cost, expense.countryCode);\n      return acc + itemTotal;\n    }, 0);\n    return \"$\" + total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n  };  \n\n  const reversedExpenses = [...expenses].reverse().map((item) => {\n    // Perform your mapping logic here\n    return item * 2;\n  });\n  const formatNumber = (amount) => {\n    const formattedNumber = Number(amount).toLocaleString();\n    return formattedNumber\n  }\n  const convertToUS = (amount, countryCode) => {\n    console.log(`convertToUS(${amount}) selectedCurrency: ${countryCode}`)\n    const rate = exchangeRates[countryCode];\n    console.log(`convertToUS(${amount}) rate(${rate})`)\n    const convertedValue = amount / rate;\n    const converted = convertedValue.toFixed(2);\n    console.log(`convertToUS:(${amount}) rate:(${rate}) converted:(${converted})`)\n    //setConvertedAmount(converted);\n    return Number(converted);\n};\n\n  return (\n    <div>\n      <ExchangeRatesConfig onExchangeRatesChange={setExchangeRates}></ExchangeRatesConfig>\n      <div className='bg-darker r-10 p-10 ml-20 mr-20 mb-1'>\n        <label>\n          Expense:\n          <input\n            type=\"text\"\n            name=\"expense\"\n            value={expenseData.expense}\n            onChange={handleInputChange}\n            className='r-10 p-10 mr-20 ml-20'\n          />\n        </label>\n      </div>\n      <br />\n      <div className='bg-darker r-10 p-10 ml-20 mr-20 mb-1'>\n        <label>\n          Location:\n          <select\n            name=\"location\"\n            value={expenseData.location}\n            onChange={handleInputChange}\n            className='r-10 p-10 mr-20 ml-20'\n          >\n            <option value=\"\">Select Location</option>\n            {Object.keys(currencyOptions).map((location) => (\n              <option key={location} value={location}>\n                {location}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <br />\n      <div className='bg-darker r-10 p-10 ml-20 mr-20 mb-1'>\n        <label>\n          Currency:\n          <select\n            name=\"currency\"\n            value={expenseData.currency}\n            onChange={handleInputChange}\n            className='r-10 p-10 mr-20 ml-20'\n          >\n            <option value=\"\">Select Currency</option>\n            {currencyCode.map((currency) => (\n              <option key={currency} value={currency}>\n                {currencies[currency]}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n      <br />\n      <div className='bg-darker r-10 p-10 ml-20 mr-20 mb-1'>\n        <label>\n          Cost:\n          <input\n            type=\"number\"\n            name=\"cost\"\n            value={expenseData.cost}\n            onChange={handleInputChange}\n            className='r-10 p-10 mr-20 ml-20'\n          />\n        </label>\n      </div>\n      <br />\n      <div>\n        <div className='bg-orange greet timerBox m-20 color-black' onClick={handleAddExpense}>Add Expense</div>\n      </div>\n      <br />\n      <br />\n      <div className='color-yellow mb-20 size20 bold'>Grand Total: {totalExpenses}</div>\n      <div className='bg-darker r-10 p-10 ml-20 mr-20 mb-1'>\n        {expenses.length === 0 ? (\n          <p>No expenses recorded.</p>\n        ) : (\n          <div>\n            {[...expenses].reverse().map((expense, index) => (\n              <div className='p-10 ml-20 mr-20 mb-1 lowerBorder size20' key={index}>\n                <div className='bold'>{expense.expense}: ${formatNumber(convertToUS(expense.cost,expense.countryCode))} {/*exchangeRates[expense.currency]'USD'*/} {/*expense.currency*/}</div>\n                <div className='description'>\n                {expense.location} : {expense.date} - {expense.time}<br/>\n                  ${formatNumber(expense.cost)} {expense.currency}s\n                </div>\n                <div \n                  className='description color-red brdr-red button p-10 r-5 b-1 m-5'\n                  onClick={() => removeExpense(index-1)}\n                >\n                  delete\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseTracker;","/Users/js/Dev/my-first-reactor/src/components/utils/Fireworks.js",["916"],"import React from 'react';\n\nconst Fireworks = ({ display, quantity }) => {\n  console.log(`Fireworks => display: ${display}, count: ${quantity}`);\n  \n  const renderFirework = () => {\n    const fireworks = [];\n    const half = (number) => Math.floor(number / 2);\n    const getStyle = (quantity, i) => {\n      return {\n        '--x': `${(60 * Math.random())-30}vmin`,\n        '--speed': `${(10 * Math.random())}s`,\n        '--verticalDistance': `${((-50 * Math.random())) * Math.random()}vmin`,\n        '--finalSize': `${((150 * Math.random())) * Math.random()}vmin`,\n        '--particleSize': `${(i * (5 * Math.random() + 1))}vmin`\n      };\n    };\n    for (let i = 0; i < quantity; i++) {\n      fireworks.push(\n        <div className=\"firework\" key={i} style={getStyle(quantity, i)}></div>\n      );\n    }\n    return fireworks;\n  };\n\n  if (display === 'true') {\n    return <div>{renderFirework()}</div>;\n  }\n  return <div></div>;\n};\n\nexport default Fireworks;","/Users/js/Dev/my-first-reactor/src/components/utils/TaskTracker.js",["917","918","919","920"],"import React, { useState, useEffect } from 'react';\nimport DropDown from '../forms/DropDown.js';\nimport thumbsUp from '../../assets/images/ThumbsUp.png';\nimport thumbsDown from '../../assets/images/ThumbsDown.png';\n\nconst ProjectTaskTracker = () => {\n\n    const [projects, setProjects] = useState(JSON.parse(localStorage.getItem('projects')) || []);\n    const [tracking, setTracking] = useState(localStorage.getItem('tracking') || 'tasks');\n    const [isCollapsed, setIsCollapsed] = useState(false);\n    const [newProjectDescription, setNewProjectDescription] = useState((tracking === 'sets') ? 'WAVES' : (tracking === 'solar/battery') ? 'Solar / Battery Log' : '');\n    const [newTaskDescription, setNewTaskDescription] = useState('');\n    const [activeProjectIndex, setActiveProjectIndex] = useState(-1);\n\n    const trackables = ['tasks', 'sets', 'events', 'solar/battery'];\n\n    useEffect(() => {\n        const storedProjects = localStorage.getItem('projects');\n        if (storedProjects) {\n            setProjects(JSON.parse(storedProjects));\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('projects', JSON.stringify(projects));\n    }, [projects]);\n    /*\n        useEffect(() => {\n            localStorage.setItem('tracking', tracking);\n            console.log(`tracking: ${JSON.stringify(tracking,null,2)}`)\n            if (tracking === 'sets') {\n                setNewProjectDescription('WAVES');\n                return (projects.length<1) ? handleAddProject(): null;\n            }\n        }, [tracking]);\n    */\n    useEffect(() => {\n        localStorage.setItem('tracking', tracking);\n        if (tracking === 'sets') {\n            setNewProjectDescription('WAVES');\n            const storedProjects = localStorage.getItem('projects');\n            if (storedProjects) {\n                const currentProjects = JSON.parse(storedProjects);\n                if (currentProjects.length < 1) {\n                    handleAddProject();\n                }\n            }\n        }\n        if (tracking === 'solar/battery') {\n            setNewProjectDescription('Solar / Battery Log');\n            const storedProjects = localStorage.getItem('projects');\n            if (storedProjects) {\n                const currentProjects = JSON.parse(storedProjects);\n                if (currentProjects.length < 1) {\n                    handleAddProject();\n                }\n            }\n        }\n    }, [tracking]);\n\n    const handleDropdownChange = (event) => {\n        setTracking(event.target.value);\n    };\n\n    const handleAddProject = () => {\n        const project = {\n            description: newProjectDescription,\n            createdDate: new Date().toLocaleString(),\n            startTime: new Date().getTime(),\n            tasks: []\n        };\n        setProjects(prevProjects => [project, ...prevProjects]);\n    };\n\n    const addTask = (projectIndex) => {\n        const taskDescription = (tracking !== 'solar/battery') \n            ? prompt('Enter task description:') \n            : null;\n        const batteryDescription = (tracking === 'solar/battery') \n            ? prompt('Battery Type:') \n            : null;\n        const batteryLevel = (tracking === 'solar/battery') \n            ? prompt('Battery Level:') \n            : null;\n        const solarDescription = (tracking === 'solar/battery') \n            ? prompt('Solar Type:') \n            : null;\n        const solarLogDescription = `${batteryDescription} + ${solarDescription}: ${batteryLevel}-100%`\n        if (taskDescription || batteryDescription) {\n            const session = {\n                startDate: new Date().toLocaleString(),\n                startTime: new Date().getTime(),\n                endTime: '',\n                endDate: '',\n                totalTime: '',\n                runningTime: '0s'\n            }\n            const sessions = [];\n            sessions.push(session);\n            const task = {\n                startTime: new Date().getTime(),\n                endTime: '',\n                description: (tracking === 'tasks') ? taskDescription : solarLogDescription,\n                sessions: sessions,\n                isRunning: true,\n                runningTime: '0s'\n            };\n            const updatedProjects = [...projects];\n            updatedProjects[projectIndex].tasks.unshift(task);\n            updatedProjects[projectIndex].isCollapsed = false;\n            setProjects(updatedProjects);\n        }\n    };\n\n    const addSet = (projectIndex) => {\n        const updatedProjects = [...projects];\n        const taskDescription = `Set ${updatedProjects[projectIndex].tasks.length + 1}`;\n        if (taskDescription) {\n            const session = {\n                startDate: new Date().toLocaleString(),\n                startTime: new Date().getTime(),\n                endTime: '',\n                endDate: '',\n                totalTime: '',\n                runningTime: '0s'\n            }\n            const sessions = [];\n            sessions.push(session);\n            const task = {\n                startTime: new Date().getTime(),\n                endTime: '',\n                description: taskDescription,\n                sessions: sessions,\n                isRunning: true,\n                runningTime: '0s'\n            };\n            updatedProjects[projectIndex].tasks.unshift(task);\n            updatedProjects[projectIndex].isCollapsed = false;\n            setProjects(updatedProjects);\n        }\n    };\n\n    const handleAddTask = (projectIndex) => {\n        const task = {\n            description: newTaskDescription,\n            startDate: new Date().toLocaleString(),\n            startTime: new Date().getTime(),\n            endTime: '',\n            endDate: '',\n            totalTime: '',\n            runningTime: '0s',\n            isRunning: true\n        };\n        const updatedProjects = [...projects];\n        updatedProjects[activeProjectIndex].tasks.unshift(task);\n        setProjects(updatedProjects);\n        setNewTaskDescription('');\n        setActiveProjectIndex(projectIndex)\n    };\n\n    const handleDeleteProject = (index) => {\n        const updatedProjects = [...projects];\n        updatedProjects.splice(index, 1);\n        setProjects(updatedProjects);\n    };\n\n    const handleDeleteTask = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        updatedProjects[projectIndex].tasks.splice(taskIndex, 1);\n        setProjects(updatedProjects);\n    };\n\n    const handleStartTask = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        task.sessions = task.sessions || [];\n        task.isRunning = true;\n        //task.startDate = new Date().toLocaleString();\n        const session = {\n            startDate: new Date().toLocaleString(),\n            startTime: new Date().getTime(),\n            endTime: ''\n        }\n        task.sessions.push(session)\n        setProjects(updatedProjects);\n        startTimer(projectIndex, taskIndex);\n    };\n    const addWave = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        task.sessions = task.sessions || [];\n        task.isRunning = false;\n        //task.startDate = new Date().toLocaleString();\n        const session = {\n            startDate: new Date().toLocaleString(),\n            startTime: new Date().getTime(),\n            endTime: new Date().getTime(),\n        }\n        task.sessions.push(session)\n        setProjects(updatedProjects);\n    };\n    const subtractWave = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        task.sessions = task.sessions || [];\n        task.isRunning = false;\n        task.sessions.pop();\n        setProjects(updatedProjects);\n    };\n    const getTotalTime = (totalTimeMilliseconds) => {\n        let hours = Math.floor(totalTimeMilliseconds / 3600000);\n        hours = (hours < 10) ? `0${hours}` : hours;\n        let minutes = Math.floor((totalTimeMilliseconds % 3600000) / 60000);\n        minutes = (minutes < 10) ? `0${minutes}` : minutes;\n        let seconds = Math.floor((totalTimeMilliseconds % 60000) / 1000);\n        seconds = (seconds < 10) ? `0${seconds}` : seconds;\n        const totalTime = `${hours}:${minutes}:${seconds}`;\n        return totalTime\n    }\n    const handleStopTask = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        task.sessions = task.sessions || [];\n        task.isRunning = false;\n        const startTime = task.sessions[task.sessions.length - 1].startTime;\n        const startDate = task.sessions[task.sessions.length - 1].startDate;\n        const endTime = new Date().getTime();\n        const endDate = new Date().toLocaleString();\n        const totalTimeMilliseconds = Math.round(endTime - startTime);\n        const totalTime = getTotalTime(totalTimeMilliseconds);\n        let runningTime = task.sessions[task.sessions.length - 1].runningTime;\n        runningTime = (runningTime === undefined) ? task.sessions[task.sessions.length - 2].runningTime : runningTime;\n        //alert(`runningTime: ${runningTime}`)\n        runningTime = (runningTime === '0s') ? totalTimeMilliseconds : (runningTime + totalTimeMilliseconds);\n        const runningTimeDisplay = getTotalTime(runningTime);\n        const session = {\n            startDate: startDate,\n            startTime: startTime,\n            endDate: endDate,\n            endTime: endTime,\n            totalTime: totalTime,\n            runningTime: runningTime,\n            runningTimeDisplay: runningTimeDisplay\n        }\n        //alert(JSON.stringify(session,null,2))\n        task.runningTime = runningTime;\n        task.runningTimeDisplay = runningTimeDisplay;\n        task.sessions.push(session)\n        setProjects(updatedProjects);\n        stopTimer(projectIndex, taskIndex);\n    };\n\n    const startTimer = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        const startTime = new Date().getTime();\n        const session = task.sessions[task.sessions.length - 1]\n\n        task.timerId = setInterval(() => {\n            const currentTime = new Date().getTime();\n            const elapsedTime = currentTime - startTime;\n            const seconds = Math.floor(elapsedTime / 1000);\n            const minutes = Math.floor(seconds / 60);\n            const hours = Math.floor(minutes / 60);\n            const timeString = `${(hours < 10) ? `0${hours}` : hours}:${((minutes % 60) < 10) ? `0${(minutes % 60)}` : (minutes % 60)}:${((seconds % 60) < 10) ? `0${(seconds % 60)}` : (seconds % 60)}`;\n            //task.runningTime = timeString;\n            //task.runningTimeDisplay = timeString;\n            //session.runningTime = timeString;\n            //session.runningTimeDisplay = timeString;\n            setProjects(updatedProjects);\n        }, 1000);\n    };\n\n    const stopTimer = (projectIndex, taskIndex) => {\n        const updatedProjects = [...projects];\n        const task = updatedProjects[projectIndex].tasks[taskIndex];\n        const session = task.sessions[task.sessions.length - 1]\n        clearInterval(task.timerId);\n        task.sessions.splice((task.sessions.length - 2), 1);\n        task.totalTime = task.totalTime + session.runningTime;\n        setProjects(updatedProjects);\n    };\n\n    const handleToggleCollapse = () => {\n        setIsCollapsed(!isCollapsed);\n    };\n    const handleProjectToggle = (projectIndex) => {\n        //setIsCollapsed(!isCollapsed);\n        const updatedProjects = [...projects];\n        const project = updatedProjects[projectIndex];\n        project.isCollapsed = !project.isCollapsed;\n\n        setProjects(updatedProjects);\n        return (!project.isCollapsed) ? setIsCollapsed(false) : null;\n    };\n\n    const getProjectTime = (project) => {\n        let projectTotal = 0;\n        project.tasks.forEach((task) => {\n            console.log(`${project.description} task: ${getTotalTime(task.runningTime)}`)\n            projectTotal += task.runningTime;\n        });\n        project.totalTime = projectTotal;\n        console.log(`getProjectTime => ${project.description}: ${getTotalTime(projectTotal)}`)\n        return projectTotal;\n    };\n\n\n    return (\n        <div>\n            <div >\n                <DropDown\n                    value={tracking}\n                    options={trackables}\n                    onChange={handleDropdownChange}\n                />\n            </div>\n            <button className='p-10 r-5 m-5' onClick={handleToggleCollapse}>{isCollapsed ? 'Expand All' : 'Collapse All'}</button>\n            <br />\n            <br />\n            {(tracking === 'tasks') ?\n                <React.Fragment>\n                    <div>\n                        <input\n                            className='p-10 r-5 m-5'\n                            type=\"text\"\n                            value={newProjectDescription}\n                            onChange={(e) => setNewProjectDescription(e.target.value)}\n                            onKeyDown={(e) => {\n                                if (e.key === 'Enter') {\n                                    e.preventDefault();\n                                    handleAddProject();\n                                }\n                            }}\n                        />\n\n                        <button onClick={handleAddProject}>Add Tracking</button>\n                    </div>\n                    <br />\n                    <div>\n                        {projects.map((project, projectIndex) => (\n                            <div key={projectIndex} className='r-10 bg-darker m-5 p-10'>\n                                <div className='r-10 bg-black m-5 p-10'>\n                                    <div className='bold color-neogreen'>{project.description}</div>\n                                    <div className='description color-lite'>{project.createdDate} Time: {getTotalTime(getProjectTime(project))}</div>\n                                    <button onClick={() => addTask(projectIndex)}>\n                                        Add Task\n                                    </button>\n                                    <button onClick={() => handleDeleteProject(projectIndex)}>\n                                        Delete Project\n                                    </button>\n                                    <button onClick={() => handleProjectToggle(projectIndex)}>\n                                        {project.isCollapsed ? 'Expand' : 'Collapse'}\n                                    </button>\n                                </div>\n                                <div className='color-neogreen bold'>{(isCollapsed || project.isCollapsed) ? '' : `${project.description} Task List:`}</div>\n                                <div>\n                                    {(isCollapsed || project.isCollapsed) ? null : project.tasks.map((task, taskIndex) => (\n                                        <div key={taskIndex} className='bg-black m-5 p-10 lowerBorder'>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                <div className='bold color-yellow'>{task.description}</div>\n                                                <div>{task.sessions.length} Total: {task.runningTimeDisplay} </div>\n                                            </div>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                {task.sessions.map((session, sessionIndex) => (\n                                                    <div className='description color-lite'>{session.startDate} - {String(session.endDate).split(', ')[1]} {session.totalTime}\n                                                    </div>\n                                                ))}\n                                            </div>\n                                            {task.isRunning ? (\n                                                <button onClick={() => handleStopTask(projectIndex, taskIndex)}>\n                                                    Stop\n                                                </button>\n                                            ) : (\n                                                <button onClick={() => handleStartTask(projectIndex, taskIndex)}>\n                                                    Start\n                                                </button>\n                                            )}\n                                            <button onClick={() => handleDeleteTask(projectIndex, taskIndex)}>\n                                                Delete Task\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </React.Fragment>\n                : <React.Fragment></React.Fragment>}\n            \n            {(tracking === 'solar/battery') ?\n                <React.Fragment>\n                    <div>\n                        <h3>Solar/Battery Log</h3>\n                        <input\n                            className='p-10 r-5 m-5'\n                            type=\"text\"\n                            value={newProjectDescription}\n                            onChange={(e) => setNewProjectDescription(e.target.value)}\n                            onKeyDown={(e) => {\n                                if (e.key === 'Enter') {\n                                    e.preventDefault();\n                                    handleAddProject();\n                                }\n                            }}\n                        />\n\n                        <button className='p-10 r-5 m-5' onClick={handleAddProject}>Add Project</button>\n                    </div>\n                    <br />\n                    <div>\n                        {projects.map((project, projectIndex) => (\n                            <div key={projectIndex} className='r-10 bg-darker m-5 p-10'>\n                                <div className='r-10 bg-black m-5 p-10'>\n                                    <div className='greet bold color-neogreen'>{project.description}</div>\n                                    <div className='description color-lite'>{project.createdDate} Time: {getTotalTime(getProjectTime(project))}</div>\n                                    <button className='p-10 r-5 m-5' onClick={() => addTask(projectIndex)}>\n                                        Add Task\n                                    </button>\n                                    <button className='p-10 r-5 m-5' onClick={() => handleDeleteProject(projectIndex)}>\n                                        Delete Project\n                                    </button>\n                                    <button className='p-10 r-5 m-5' onClick={() => handleProjectToggle(projectIndex)}>\n                                        {project.isCollapsed ? 'Expand' : 'Collapse'}\n                                    </button>\n                                </div>\n                                <div>\n                                    {(isCollapsed || project.isCollapsed) ? null : project.tasks.map((task, taskIndex) => (\n                                        <div key={taskIndex} className='bg-black m-5 p-10 lowerBorder'>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                <div className='bold color-yellow'>{task.description}</div>\n                                                <div>{task.sessions.length} Total: {task.runningTimeDisplay} </div>\n                                            </div>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                {task.sessions.map((session, sessionIndex) => (\n                                                    <div className='description color-lite'>{session.startDate} - {String(session.endDate).split(', ')[1]} {session.totalTime}\n                                                    </div>\n                                                ))}\n                                            </div>\n                                            {task.isRunning ? (\n                                                <button className='p-10 r-5 m-5' onClick={() => handleStopTask(projectIndex, taskIndex)}>\n                                                    Stop\n                                                </button>\n                                            ) : (\n                                                <button className='p-10 r-5 m-5' onClick={() => handleStartTask(projectIndex, taskIndex)}>\n                                                    Start\n                                                </button>\n                                            )}\n                                            <button className='p-10 r-5 m-5' onClick={() => handleDeleteTask(projectIndex, taskIndex)}>\n                                                Delete Task\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </React.Fragment>\n                : <React.Fragment></React.Fragment>\n            }\n\n            {(tracking === 'sets') ?\n                <React.Fragment>\n                    <div>\n                        <h3>Track Sets</h3>\n                    </div>\n                    <br />\n                    <div>\n                        {projects.map((project, projectIndex) => (\n                            <div key={projectIndex} className='r-10 bg-darker m-5 p-10'>\n                                <div className='r-10 bg-black m-5 p-10'>\n                                    <div className='greet bold color-neogreen'>{project.description}</div>\n                                    <div className='description color-lite'>{project.createdDate} Time: {getTotalTime(getProjectTime(project))}</div>\n                                    <button className='p-10 r-5 m-5' onClick={() => addSet(projectIndex)}>\n                                        Add Set\n                                    </button>\n                                    <button className='p-10 r-5 m-5' onClick={() => handleDeleteProject(projectIndex)}>\n                                        Delete Log\n                                    </button>\n                                </div>\n                                <div className='color-neogreen bold'>{(isCollapsed || project.isCollapsed) ? '' : `${project.description} Task List:`}</div>\n                                <div>\n                                    {(isCollapsed || project.isCollapsed) ? null : project.tasks.map((task, taskIndex) => (\n                                        <div key={taskIndex} className='bg-black m-5 p-10 lowerBorder'>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                <div className='bold color-yellow'>{task.description}</div>\n                                                <div>Waves: {task.sessions.length}</div>\n                                            </div>\n                                            <React.Fragment>\n                                                <button className='p-10 r-5 m-5' onClick={() => addWave(projectIndex, taskIndex)}>\n                                                    Wave +\n                                                </button>\n                                                <button className='p-10 r-5 m-5' onClick={() => subtractWave(projectIndex, taskIndex)}>\n                                                    Wave -\n                                                </button>\n                                            </React.Fragment>\n                                            <button className='p-10 r-5 m-5' onClick={() => handleDeleteTask(projectIndex, taskIndex)}>\n                                                Delete Set\n                                            </button>\n                                            <div className='p-10 r-10 m-10 bg-dark'>\n                                                {task.sessions.map((session, sessionIndex) => (\n                                                    <div className='description color-lite p-10'>\n                                                        <div className=\"button\" onClick={() => task.sessions[sessionIndex].isLiked = !task.sessions[sessionIndex].isLiked}>\n                                                            <span className='mr-5'>{String(session.startDate).split(', ')[1]}  - Wave {sessionIndex + 1}</span>\n                                                            <img src={(task.sessions[sessionIndex].isLiked) ? thumbsUp : thumbsDown} alt='like' className='shaka mb--10' />\n                                                        </div>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </React.Fragment>\n                : <React.Fragment></React.Fragment>}\n        </div>\n    );\n};\n\nexport default ProjectTaskTracker;\n","/Users/js/Dev/my-first-reactor/src/components/utils/VideoPlayer.js",["921","922","923","924","925"],"import React, { useState, useRef, useEffect } from 'react';\nimport videoFile from '../../assets/1.MP4';\nimport VideoNavigation from './VideoNavigation';\nimport { TextField } from '@material-ui/core';\n//const VideoPlayer = ({ src, startTime, endTime, onTimeUpdate }) => {\nconst VideoPlayer = React.forwardRef((props, ref) => {\n  const [currentTime, setCurrentTime] = useState(0);\n  const [playerStatus, setPlayerStatus] = useState({\n    videoRef: ref,\n    isPlaying: false,\n    isSlow: false,\n    isMedium: false,\n    isSlowRewind: false,\n    isMediumRewind: false,\n    playbackRate: 1\n  });\n  //const videoRef = useRef(playerStatus.videoRef);\n  let time = (playerStatus.videoRef.current !== null) ? playerStatus.videoRef.current.currentTime : '00:00:00';\n  console.log('props: ', props)\n\n  useEffect(() => {\n    const updateCurrentTime = () => {\n      if (playerStatus.videoRef.current.currentTime >= playerStatus.endTime) {\n        setPlayerStatus(prevState => ({\n          ...prevState,\n          isPlaying: false,\n          isRewind: false,\n          isFast: false,\n          isSlow: false,\n          isMedium: false,\n          isSlowRewind: false,\n          isMediumRewind: false\n        }));\n      }\n      /*\n      if (playerStatus.endTime > playerStatus.videoRef.current.duration) {\n        alert(`playerStatus.endTime(${playerStatus.endTime}) > playerStatus.videoRef.current.duration (${playerStatus.videoRef.current.duration})`)\n        endChange(playerStatus.videoRef.current.duration)\n        setPlayerStatus(prevState => ({\n          ...prevState,\n          endTime: playerStatus.videoRef.current.duration\n        }));\n      }\n      */\n      setCurrentTime(playerStatus.videoRef.current.currentTime);\n    };\n    // Attach the time update event listener\n    playerStatus.videoRef.current.addEventListener('timeupdate', updateCurrentTime);\n    // Clean up the event listener on component unmount\n    return () => {\n      playerStatus.videoRef.current.removeEventListener('timeupdate', updateCurrentTime);\n    };\n  }, []);\n\n  useEffect(() => {\n    const speed = (playerStatus.isMediumRewind) ? 250 : 80;\n    const interval = (playerStatus.isSlowRewind) ? 300 : speed;\n    const intervalId = setInterval(() => {\n      const currentTime = playerStatus.videoRef.current.currentTime;\n      const time = currentTime - 0.05;\n      if ((playerStatus.isSlowRewind || playerStatus.isMediumRewind || playerStatus.isRewind) && playerStatus.isPlaying && (time > (playerStatus.startTime))) {\n        playerStatus.videoRef.current.currentTime = time;\n      } else {\n        clearInterval(intervalId);\n      }\n    }, interval);\n\n    return () => {\n      clearInterval(intervalId);\n    }\n  }, [\n    playerStatus.isPlaying,\n    playerStatus.isSlowRewind,\n    playerStatus.isMediumRewind,\n    playerStatus.isRewind,\n    playerStatus.startTime,\n    playerStatus.videoRef\n  ]);\n\n  const handleJumpToStart = () => {\n    //console.log(`handleJumpToStart startTime: ${playerStatus.startTime}`);\n    //alert(`handleJumpToStart startTime1: ${playerStatus.startTime}`);\n    playerStatus.videoRef.current.currentTime = playerStatus.startTime || 0;\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      isPlaying: false,\n      isRewind: false,\n      isFast: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false\n    }));\n  };\n  const handleJumpToEnd = () => {\n    //console.log(`handleJumpToEnd id: ${id}`);\n    //alert(`handleJumpToEnd id: ${id} endTime1: ${status.endTime1}`);\n    playerStatus.videoRef.current.currentTime = playerStatus.endTime;\n\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      isPlaying: false,\n      isRewind: false,\n      isFast: false,\n      isSlow: false,\n      isMedium: false,\n      isSlowRewind: false,\n      isMediumRewind: false\n    }));\n  };\n  const handlePlayPause = () => {\n    console.log(\"handlePlayPause\");\n    if (playerStatus.isPlaying) {\n      console.log(\"handlePlayPause => pause\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    } else {\n      console.log(\"handlePlayPause => play\");\n      playerStatus.videoRef.current.playbackRate = 1;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false\n      }));\n    }\n  };\n\n  const handleRewind = () => {\n    if (playerStatus.videoRef.current && playerStatus.isRewind === false) {\n      console.log(\"handleRewind\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: true,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n  const handleMinusOne = () => {\n    if (playerStatus.videoRef.current) {\n      console.log(\"handleMinusOne\");\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime -= 0.05;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n  const handleAddOne = () => {\n    if (playerStatus.videoRef.current) {\n      console.log(\"handlePlusOne\");\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime += 0.05;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false\n      }));\n    }\n  };\n\n  const handleSlowRewind = () => {\n    if (playerStatus.videoRef.current && playerStatus.isSlowRewind === false) {\n      console.log(\"handleSlowMotionRewind\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: true,\n        isMediumRewind: false,\n        isFast: false\n      }));\n    }\n  };\n\n  const handleMediumRewind = () => {\n    if (playerStatus.videoRef.current && playerStatus.isMediumRewind === false) {\n      console.log(\"handleMediumMotionRewind\");\n      playerStatus.videoRef.current.pause();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isRewind: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: true,\n        isFast: false\n      }));\n    }\n  };\n\n  const handleSlowMotion = () => {\n    if (playerStatus.videoRef.current && playerStatus.isSlow === false) {\n      console.log(\"handleSlowMotion\");\n      playerStatus.videoRef.current.playbackRate = .2;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: true,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false,\n        playbackRate: 0.2\n      }));\n    }\n  };\n  const handleMediumMotion = () => {\n    if (playerStatus.videoRef.current && playerStatus.isMedium === false) {\n      console.log(\"handleMediumMotion\");\n      playerStatus.videoRef.current.playbackRate = .5;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isSlow: false,\n        isMedium: true,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        isFast: false,\n        playbackRate: 0.5\n      }));\n    }\n  };\n\n  const handleFastForward = () => {\n    if (playerStatus.videoRef.current && playerStatus.isFast === false) {\n      console.log(\"handleFastMotion\");\n      playerStatus.videoRef.current.playbackRate = 2;\n      playerStatus.videoRef.current.play();\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: true,\n        isFast: true,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        isRewind: false,\n        playbackRate: 0.5\n      }));\n    }\n  };\n  const handleTimeUpdate = () => {\n    props.onTimeUpdate(time);\n    if (time >= playerStatus.endTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.endTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false\n      }));\n    } else if (time <= playerStatus.startTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.startTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false\n      }));\n    }\n  };\n\n  const handleScrub = e => {\n    const x = e.nativeEvent.offsetX;\n    const width = e.currentTarget.offsetWidth;\n    const duration = playerStatus.videoRef.current.duration;\n    const scrubTime = (x / width) * duration;\n    playerStatus.videoRef.current.currentTime = scrubTime;\n  };\n  const startChange = (value) => {\n    props.onStartTimeUpdate(value);\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      startTime: value,\n      currentTime: playerStatus.videoRef.current.currentTime\n    }));\n  }\n  const endChange = (value) => {\n    props.onEndTimeUpdate(value);\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      endTime: value,\n      currentTime: playerStatus.videoRef.current.currentTime\n    }));\n  }\n\n  const handleStartChange = (event) => {\n    const { value } = event.target;\n    props.onStartTimeUpdate(value);\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      startTime: value,\n      currentTime: playerStatus.videoRef.current.currentTime\n    }));\n  }\n\n  function handleEndChange(event) {\n    const { value } = event.target;\n    props.onEndTimeUpdate(value);\n    setPlayerStatus(prevState => ({\n      ...prevState,\n      endTime: value,\n      currentTime: playerStatus.videoRef.current.currentTime\n    }));\n  }\n  const timeDisplay = () => {\n    console.log(`timeDisplay: ${time} of ${playerStatus.videoRef.current.duration}`)\n    return <div className='timerBox'>\n      {playerStatus.videoRef.current.currentTime} of {playerStatus.videoRef.current.duration}\n    </div>\n  }\n  const handleVideoUpdate = (event) => {\n    const { currentTime } = event.target;\n    if (currentTime > playerStatus.endTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.endTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        currentTime: currentTime\n      }));\n    } else if (currentTime <= playerStatus.startTime) {\n      playerStatus.videoRef.current.pause();\n      playerStatus.videoRef.current.currentTime = playerStatus.startTime;\n      setPlayerStatus(prevState => ({\n        ...prevState,\n        isPlaying: false,\n        isRewind: false,\n        isFast: false,\n        isSlow: false,\n        isMedium: false,\n        isSlowRewind: false,\n        isMediumRewind: false,\n        currentTime: playerStatus.videoRef.current.currentTime\n      }));\n    }\n  };\n\n  return (\n    <div>\n      <video\n        ref={playerStatus.videoRef}\n        //src={props.src}\n        src={videoFile}\n        onTimeUpdate={handleVideoUpdate}\n        style={{\n          width: `100%`,\n          height: `auto`,\n        }}\n\n        onLoadedMetadata={() => {\n          if (time !== null) {\n            time = props.startTime;\n            playerStatus.videoRef.current.playbackRate = 1;\n          }\n        }}\n      />\n      <div className='videoNavigation'>\n          <VideoNavigation \n            handleJumpToStart={() => handleJumpToStart()}\n            handleMinusOne={() => handleMinusOne()}\n            handleRewind={() => handleRewind()}\n            handleMediumRewind={() => handleMediumRewind()}\n            handleSlowRewind={() => handleSlowRewind()}\n            handlePlayPause={() => handlePlayPause()}\n            handleSlowMotion={() => handleSlowMotion()}\n            handleMediumMotion={() => handleMediumMotion()}\n            handleFastForward={() => handleFastForward()}\n            handleAddOne={() => handleAddOne()}\n            handleJumpToEnd={() => handleJumpToEnd()}\n            playerStatus={playerStatus}\n          />\n      </div>\n      <div>\n        <div><span className='p-20'>{playerStatus.startTime}</span><span className='p-20'>{currentTime}</span><span className='p-20'>{playerStatus.endTime}</span></div>\n      </div>\n      <button onClick={() => startChange(currentTime)}>Start Mark</button><input type=\"text\" value={playerStatus.startTime} onChange={handleStartChange} />\n      <button onClick={() => endChange(currentTime)}>End Mark</button><input type=\"text\" value={playerStatus.endTime} onChange={handleEndChange} />\n      <div style={{ position: 'relative' }}>\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            //width: `${((playerStatus.videoRef.current?.currentTime || 0) / playerStatus.videoRef.current?.duration) * 100}%`,\n            width: '100px',\n            backgroundColor: 'blue',\n            opacity: 0.5,\n          }}\n        />\n        <div\n          style={{\n            position: 'absolute',\n            backgroundColor: '00FF00',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: '100%',\n            zIndex: 1,\n          }}\n          onClick={handleScrub}\n        />\n      </div>\n    </div>\n  );\n});\n\nexport default VideoPlayer;","/Users/js/Dev/my-first-reactor/src/components/forms/DropDown.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/VideoNavigation.js",["926"],"import React, { useState } from 'react';\nconst VideoNavigation = React.forwardRef((props, ref) => {\n    console.log(`VideoNavigation props.playerStatus.isPlaying: ${props.playerStatus.isPlaying}`);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [slider, setSlider] = useState(0);\n    \n    const handleScrub = (event) => {\n        //const scrubTime = (100/props.playerStatus.videoRef.current.duration)/event.target.value;\n        //props.playerStatus.videoRef.current.currentTime = scrubTime;\n        //console.log(`scrubTime: ${scrubTime} value: ${event.target.value}`);\n        const sliderValue = event.target.value;\n        const videoDuration = (props.playerStatus.videoRef) ? props.playerStatus.videoRef.current.duration : null;\n        const videoDuration1 = (props.playerStatus.videoPlayer1Ref) ? props.playerStatus.videoPlayer1Ref.current.duration : null;\n        const videoDuration2 = (props.playerStatus.videoPlayer2Ref) ? props.playerStatus.videoPlayer2Ref.current.duration : null;\n        const currentTime = (sliderValue / 100) * videoDuration;\n        const currentTime1 = (videoDuration1!=null) ? ((sliderValue / 100) * videoDuration1) : 0;\n        const currentTime2 = (videoDuration2!=null) ? ((sliderValue / 100) * videoDuration2) : 0;\n        console.log(`scrubTime => currentTime: ${currentTime.toFixed(5)} value: ${event.target.value}`);\n        if (!!props.playerStatus.videoRef) props.playerStatus.videoRef.current.currentTime = currentTime.toFixed(5);\n        if (!!props.playerStatus.videoPlayer1Ref) props.playerStatus.videoPlayer1Ref.current.currentTime = currentTime1.toFixed(5);\n        if (!!props.playerStatus.videoPlayer2Ref) props.playerStatus.videoPlayer2Ref.current.currentTime = currentTime2.toFixed(5);\n        if (!!props.playerStatus.videoRef) setCurrentTime(currentTime.toFixed(5));\n        if (!!props.playerStatus.videoPlayer1Ref) setCurrentTime(currentTime1.toFixed(5));\n        if (!!props.playerStatus.videoPlayer2Ref) setCurrentTime(currentTime2.toFixed(5));\n        //alert(`videoRef: ${!!props.playerStatus.videoRef}`)\n        //alert(`videoPlayer1Ref: ${!!props.playerStatus.videoPlayer1Ref}`)\n        //alert(`videoPlayer2Ref: ${!!props.playerStatus.videoPlayer2Ref}`)\n        \n        setSlider(sliderValue);\n    };\n\n    return (\n        <React.Fragment>\n            <div>\n                <input type=\"range\" min=\"0\" max=\"100\" value={slider} onChange={handleScrub} />\n            </div>\n            <button className='navButton p-10' onClick={props.handleJumpToStart}>|&lt;=</button>\n            <button className='navButton p-10' onClick={props.handleMinusOne}>-1</button>\n            {\n                /*\n                <button className='navButton p-10' onClick={props.handleRewind}>&lt;&lt;&lt;</button>\n                <button className='navButton p-10' onClick={props.handleMediumRewind}>&lt;&lt;</button>\n                */\n            }\n            <button className='navButton p-10' onClick={props.handleSlowRewind}>&lt;</button>\n            <button className='navButton p-10' onClick={props.handlePlayPause}>{props.playerStatus.isPlaying ? 'Pause' : 'Play'}</button>\n            <button className='navButton p-10' onClick={props.handleSlowMotion}>&gt;</button>\n            <button className='navButton p-10' onClick={props.handleMediumMotion}>&gt;&gt;</button>\n            <button className='navButton p-10' onClick={props.handleFastForward}>&gt;&gt;&gt;</button>\n            <button className='navButton p-10' onClick={props.handleAddOne}>+1</button>\n            <button className='navButton p-10' onClick={props.handleJumpToEnd}>=&gt;|</button>\n        </React.Fragment>\n    );\n});\n\nexport default VideoNavigation;","/Users/js/Dev/my-first-reactor/src/components/utils/PlayerNavigation.js",[],["927","928"],"/Users/js/Dev/my-first-reactor/src/components/utils/ExchangeRatesConfig.js",["929","930"],"import React, { useState, useEffect } from 'react';\nimport menu from '../../assets/images/menuYellow.png';\n\nconst ExchangeRatesConfig = ({ onExchangeRatesChange }) => {\n\n    const defaultRates = {\n        USD: 1,\n        MXN: 17.16,   // Mexican Peso\n        NIO: 36.55,   // Nicaraguan Cordovas\n        CRC: 541.23,    // Costa Rican Colones\n        IDR: 15045.30,  // Indonesian Rupiah\n        AUD: 1.50,    // Australian Dollar\n    }\n\n    const [exchangeRates, setExchangeRates] = useState(defaultRates);\n    const [settings, setSettings] = useState(false);\n\n    useEffect(() => {\n\n        const savedExchangeRates = JSON.parse(localStorage.getItem('exchangeRates')) || {};\n\n        const fetchRates = async () => {\n            try {\n                //const response = await fetch('https://api.exchangeratesapi.io/v1/' + endpoint + '?access_key=' + access_key + '&from=' + from + '&to=' + to + '&amount=' + amount);\n                const response = await fetch('http://localhost:3002/currency');\n                const data = await response.json();\n\n                console.log(`data: ${JSON.stringify(data.date, null, 2)}`);\n                console.log(`data: ${JSON.stringify(data.timestamp, null, 2)}`);\n                console.log(`data: ${JSON.stringify(data.rates, null, 2)}`);\n\n                setExchangeRates(data.rates);\n                onExchangeRatesChange(exchangeRates)\n            } catch (error) {\n                //console.error('Error fetching exchange rates:', error);\n                setExchangeRates(defaultRates);\n                onExchangeRatesChange(exchangeRates)\n            }\n        };\n        const isObjectEmpty = (obj) => Object.keys(obj).length === 0 && obj.constructor === Object;\n        const currentExchangeRates = (!isObjectEmpty(savedExchangeRates)) ? savedExchangeRates : fetchRates();\n        \n        if (!isObjectEmpty(currentExchangeRates) && (currentExchangeRates === savedExchangeRates)) {\n            setExchangeRates(currentExchangeRates);\n            onExchangeRatesChange(exchangeRates);\n        }\n\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n        onExchangeRatesChange(exchangeRates);\n    }, [exchangeRates]);\n\n    useEffect(() => {\n        localStorage.setItem('exchangeRates', JSON.stringify(exchangeRates));\n        onExchangeRatesChange(exchangeRates); // Invoke the callback when rates change\n    }, [exchangeRates, onExchangeRatesChange]);\n\n    const toggleSettings = () => {\n        setSettings(!settings)\n    }\n\n    const handleRateChange = (rate, value) => {\n        console.log(`handleRateChange 1 - value: ${value} rate: ${rate}`);\n        setExchangeRates(prevState => ({\n            ...prevState,\n            [rate]: value\n        }));\n        onExchangeRatesChange(exchangeRates);\n    }\n    const handleRateEnter = (e) => {\n        console.log(`handleRateEnter:1 - key: ${e.key}`);\n        if (e.key === 'Enter') {\n            console.log(`handleRateEnter:2 - key: ${e.key}`);\n            toggleSettings();\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <img className='color-yellow button' src={menu} alt=\"open menu\" onClick={() => toggleSettings()} />\n            </div>\n            {settings ? (\n                Object.keys(exchangeRates).map(rate => (\n                    <div key={rate}>\n                        <label\n                            className='p-20 m-5 color-lite bold'\n                            htmlFor={rate}\n                        >\n                            {rate}\n                        </label>\n                        <input\n                            className='p-20 m-5 color-lite bold bg-black'\n                            type=\"number\"\n                            id={rate}\n                            value={exchangeRates[rate]}\n                            onChange={e => handleRateChange(rate, e.target.value)}\n                            onKeyDown={e => handleRateEnter(e)}\n                        />\n                    </div>\n                ))\n            ) : (\n                <div></div>\n            )}\n        </div>\n    );\n\n};\n\nexport default ExchangeRatesConfig;","/Users/js/Dev/my-first-reactor/src/components/utils/SurfScores.js",["931","932","933","934"],"import React, { useState, useEffect } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport { newDate } from './Dates.js';\nimport { losePriority } from './SurfPriority.js';\nimport getAthleteScore from './GetAthleteScore.js';\nimport getPriorityColor from './GetPriorityColor.js';\nimport Sounds from './Sounds.js';\n\nconst SurfScores = ({ players, setPlayers, heatLength, isWinner, editPlayer, deletePlayer, setStartTime}) => {\n    console.log(`SurfScores => heatLength: ${heatLength}`)\n    console.log(`SurfScores => surfWinner: ${localStorage.getItem('surfWinner')}`)\n    const [timerOn, setTimerOn] = useState(false);\n    const [timesUp, setTimesUp] = useState(false);\n    const [time, setTime] = useState((Number(localStorage.getItem('surfWinner')) || heatLength) * 60); // Initial time in seconds (e.g., 1 hour)\n   \n    useEffect(() => {\n        let intervalId;\n        if (timerOn) {\n            intervalId = setInterval(() => {\n                setTime((prevTime) => {\n                    const newTime = prevTime - 1;\n                    if (newTime <= 10 && newTime > 0 ) {\n                        Sounds.playSound(0, newTime);\n                    }\n                    if (newTime <= 0) {\n                        Sounds.playSound(0, newTime);\n                        clearInterval(intervalId);\n                        setTimesUp(true);\n                        return 0;\n                    }\n                    return newTime;\n                });\n            }, 1000);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [timerOn]);\n\n    useEffect(() => {\n        console.log(`SurfScores => time: ${time}`)\n        if (time == 0) {\n            //getAthleteScore();\n        }\n    }, [time]);\n\n    useEffect(() => {\n        if (timesUp) {\n            setTimerOn(false);\n            //setTime(heatLength);\n            console.log(`heatLength: ${heatLength}`)\n            setTimesUp(true);\n        }\n    }, [timesUp]);\n\n    const toggleTimer = () => {\n        if (timerOn) {\n            setTimerOn(false)\n        } else {\n            console.log(`time: ${time}`)\n            if (time === 0) {\n                setTime(heatLength*60);\n            }\n            setTimerOn(true)\n            setStartTime();\n        }\n    }\n    const restartTimer = () => {\n        setTime(heatLength*60);\n        setTimerOn(true);\n    }\n\n    const surfClass = (playerIndex) => 'flex3Column p-20 size25 bold' + ((isWinner(playerIndex)) ? ' color-neogreen shakingShaka mt-20' : '');\n    const getTimerButtonClasses = () => {\n        const timerButtonClasses = timerOn ? 'bg-lite' : 'bg-tinted';\n        return timerButtonClasses;\n    }\n    const getTimerClasses = () => {\n        const timerClasses = (time < 120) ? 'blinking-fade' : '';\n        return timerClasses;\n    }\n    const formatTime = (timeInSeconds) => {\n        const hours = Math.floor(timeInSeconds / 3600);\n        const minutes = Math.floor((timeInSeconds % 3600) / 60);\n        const seconds = timeInSeconds % 60;\n        const formattedHours = hours.toString().padStart(2, '0');\n        const formattedMinutes = minutes.toString().padStart(2, '0');\n        const formattedSeconds = seconds.toString().padStart(2, '0');\n        return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\n    };\n\n    const jerseyColors = ['white', 'yellow', 'neogreen', 'black', 'blue', 'orange', 'pink', 'red'];\n    const getPriorityItem = (index) => {\n            return <div className={`button flex${players.length}Column r-10 m-5 w-75 size40 pt-20 pb-20 bg-${getPriorityColor(players, index)}`} key={getKey(`priorityFlag`)} onClick={() => losePriority(players, setPlayers, index)}>\n                        {index}\n                    </div>\n    }\n       \n    const getPriorityDisplay = () => {\n        return <div>\n            <div className='centeredContent bold size25 p-10 bg-tinted r-10 ml-10 mr-10 mt-10 mb-5'>\n                <div>Priority</div>\n                <div className='flexContainer ml-5 mt-10 mr-5 bg-darker p-10 width-100-percent r-10 color-dark text-outline-light' >\n                    {players.map((player, index) => getPriorityItem(index+1))}\n                </div>\n            </div>\n        </div>\n    }\n        \n    const getScoreDisplay = () => {\n        return <div>\n            <div className='bold size25 p-10 bg-tinted color-lite r-10 ml-10 mr-10 mt-10 mb-15'>\n                <div className='color-lite m-10'>Scoreboard - {newDate()}</div>\n                <div className='flexContainer ml-5 mr-5 width-100-percent' >\n                    {players.map((player, index) => getAthleteScore(players, index))}\n                </div>\n            </div>\n        </div>\n    }\n\n    return <React.Fragment>\n        {getScoreDisplay()}\n        {getPriorityDisplay()}\n        <div className='flexContainer p-5 bg-tinted r-10 m-10'>\n            <div className={`flex3Column m-5 r-10 bold size20 p-20 color-lite ${getTimerButtonClasses()}`} onClick={() => toggleTimer()}>\n                {(timerOn) ? 'STOP' : 'START'}\n            </div>\n            <div className='flex3Column m-5 r-10 bg-tinted bold size25 p-20 color-lite'>\n                <span className={getTimerClasses()}>\n                    {formatTime(time)}\n                </span>\n            </div>\n            <div className={`flex3Column m-5 r-10 bold size20 p-20 color-lite ${getTimerButtonClasses()}`} onClick={() => restartTimer()}>\n                RESTART\n            </div>\n        </div>\n    </React.Fragment>\n\n}\n\nexport default SurfScores;","/Users/js/Dev/my-first-reactor/src/components/utils/ExpenseTrackerInitData.js",[],"/Users/js/Dev/my-first-reactor/src/components/waves/BuoyData.js",["935","936","937","938","939"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst BuoyData = () => {\n\n  const fetch = require('node-fetch');  // If you're running this in Node.js\n  const [swellHeight, setSwellHeight] = useState(null);\n  const [data, setData] = useState(null);\n  const buoyId = '46224';  // Buoy ID for Oceanside, California\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3002/buoy');\n        setData(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  function countSpaces(str) {\n    let count = 0;\n  \n    for (let i = 0; i < str.length; i++) {\n      if (str[i] === ' ') {\n        count++;\n      }\n    }\n  \n    return count;\n  }\n  \n  useEffect(() => {\n    if (typeof(data) == 'string') {\n      const recordsHeader = data.split('2023')[0];\n      const firstRecord = data.split('2023')[1];\n      const firstRecordArray = firstRecord.split(' ');\n      const waveHeight = firstRecord;\n      const keys = typeof(data);\n      const spaces = countSpaces(waveHeight);\n      console.log(`DATA[1]: ${waveHeight}`);\n      console.log(`DATA Keys: ${keys}`);\n      console.log(`DATA header: ${recordsHeader}`)\n      console.log(`DATA record: ${firstRecord}`)\n      console.log(`DATA FirstRecord Array: ${firstRecordArray}`)\n    }\n  \n  }, [data]);\n\n  return (\n    <div>\n      {data ? (\n        <div>\n          <h1>Data from API:</h1>\n          <pre>{\n            //JSON.stringify(data, null, 2)\n            JSON.stringify(data).split('2023')[1]\n          }</pre>\n        </div>\n      ) : (\n        <div>Loading data...</div>\n      )}\n    </div>\n  );\n\n\n};\n\nexport default BuoyData;","/Users/js/Dev/my-first-reactor/src/components/utils/Sounds.js",["940","941","942","943","944","945","946","947"],"var audioContext = new AudioContext(),\noscillator;\n\nconst playSound = (winner, score) => {\n\n    // Create an oscillator node\n    oscillator = audioContext.createOscillator();\n\n    // Connect the oscillator to the audio context's destination (your speakers)\n    oscillator.connect(audioContext.destination);\n\n    const treeScores = [5, 10, 55, 60, 105, 110, 155, 160];\n    const treeTotals = [50, 100, 150, 200];\n    const treeClosed = () => treeTotals.includes(score);\n    const isTree = () => treeScores.includes(score);\n    const isTree1 = () => (score > 0 && score < 55);\n    const isTree2 = () => (score > 50 && score < 105);\n    const isTree3 = () => (score > 100 && score < 155);\n    const isTree4 = () => (score > 150);\n    const isTreeComplete = () => (score > 150);\n    // Set the oscillator type to 'sine' (you can experiment with other types like 'square', 'sawtooth', 'triangle')\n\n    const getType = () => (score === winner || treeClosed()) ? 'sawtooth' : 'triangle';\n    oscillator.type = getType();\n\n    //const note = (treeClosed()) ? 1000 : (440 + (score * 2));\n    const note = (treeClosed()) ? 1000 : 440;\n    // Set the frequency (Hz) - in this case, 440 Hz is an 'A' note\n    oscillator.frequency.setValueAtTime(note, audioContext.currentTime);\n\n    // Start the oscillator\n    oscillator.start();\n\n    const soundLength = (score == winner) ? 1 : 0.05;\n    console.log(`soundLength: ${soundLength} score: ${score} winner: ${winner}`)\n    // Stop the oscillator after 0.5 seconds (you can adjust this time)\n    oscillator.stop(audioContext.currentTime + soundLength);\n}\n\nvar audioContext = new AudioContext(),\noscillator1;\n\nconst playSiren = () => {\n\n    let highPitch = false;\n\n    const getHighPitch = () => {\n        highPitch = !highPitch;\n        return highPitch;\n    }\n\n    //const AudioContext = window.AudioContext || window.webkitAudioContext;\n    //const audioContext = new AudioContext();\n\n    oscillator1 = audioContext.createOscillator();\n    oscillator1.type = 'sine'; // First oscillator is a sine wave\n    oscillator1.frequency.setValueAtTime(400, audioContext.currentTime);\n\n    const oscillator2 = audioContext.createOscillator();\n    oscillator2.type = 'sine'; // Second oscillator is a square wave\n    oscillator2.frequency.setValueAtTime(400, audioContext.currentTime);\n\n    // Gain nodes to control volume\n    const gainNode1 = audioContext.createGain();\n    const gainNode2 = audioContext.createGain();\n\n    oscillator1.connect(gainNode1);\n    oscillator2.connect(gainNode2);\n\n    gainNode1.connect(audioContext.destination);\n    gainNode2.connect(audioContext.destination);\n\n    oscillator1.start();\n    oscillator2.start();\n\n    const sirenInterval = setInterval(() => {\n        const frequency = (getHighPitch()) ? 1200 : 400; // Random frequency between 400 and 1200 Hz\n        oscillator1.frequency.setValueAtTime(frequency, audioContext.currentTime);\n        oscillator2.frequency.setValueAtTime(frequency, audioContext.currentTime);\n    }, 100); // Change frequency every 10th of a second\n\n    // Stop the siren after 10 seconds\n    setTimeout(() => {\n        clearInterval(sirenInterval);\n        oscillator1.stop();\n        oscillator2.stop();\n    }, 1000);\n\n}\n\nconst Sounds = {\n    playSound,\n    playSiren\n};\n\nexport default Sounds;\n","/Users/js/Dev/my-first-reactor/src/components/utils/GallonsCalculator.js",["948","949"],"import React, { useState, useEffect } from 'react';\n\nconst GallonsCalculator = () => {\n  const [exchangeRate, setExchangeRate] = useState(0);\n  const [pricePerLiter, setPricePerLiter] = useState(0);\n  const [pricePerLiterUSD, setPricePerLiterUSD] = useState(0);\n  const [litersPurchased, setLitersPurchased] = useState(0);\n  const [gallons, setGallons] = useState(0);\n  const [usdPerGallon, setUsdPerGallon] = useState(0);\n  const [totalUSD, setTotalUSD] = useState(0);\n  const [totalPesos, setTotalPesos] = useState(0);\n\n  useEffect(() => {\n    const newTotalUSD = (gallons * usdPerGallon);\n    setTotalUSD(newTotalUSD.toFixed(2));\n  }, [gallons, usdPerGallon]);\n\n  const calculate = () => {\n    // Convert pricePerLiter from foreign currency to USD\n    const pricePerLiterUSD = pricePerLiter / exchangeRate;\n\n    // Calculate gallons\n    const newGallons = litersPurchased * 0.264172;\n    setGallons(newGallons.toFixed(2));\n\n    // Calculate USD per gallon\n    const newUsdPerGallon = pricePerLiterUSD * 3.78541;\n    setUsdPerGallon(newUsdPerGallon.toFixed(2));\n\n  };\n\n  const handleCalculate = () => {\n    calculate();\n\n    const newTotalPesos = (litersPurchased * pricePerLiter);\n    setTotalPesos(newTotalPesos.toFixed(2));\n  };\n\n  return (\n    <div>\n      <h1 className='color-soft'>Gas Price Converter</h1>\n      <label className=\"flexContainer bg-veryLite r-10 m-5\">\n        <div className=\"columnRightAlign width-50-percent\">\n          <span className='bg-tinted r-5 w-200 p-10 bold color-soft'>Exchange Rate:</span>\n        </div>\n        <div className=\"p-10 columnLeftAlign width-50-percent\">\n          <input className='r-5 p-10 w-200 bg-darker color-soft'\n            type=\"number\"\n            value={exchangeRate}\n            onChange={(e) => setExchangeRate(e.target.value)}\n          />\n        </div>\n      </label>\n      <label className=\"flexContainer bg-veryLite r-10 m-5\">\n        <div className=\"columnRightAlign width-50-percent\">\n          <span className='bg-tinted r-5 w-200 p-10 bold color-soft'>Pesos per Liter:</span>\n        </div>\n        <div className=\"p-10 columnLeftAlign width-50-percent\">\n          <input className='r-5 p-10 w-200 bg-darker color-soft'\n            type=\"number\"\n            value={pricePerLiter}\n            onChange={(e) => setPricePerLiter(e.target.value)}\n          />\n        </div>\n      </label>\n      <label className=\"flexContainer bg-veryLite r-10 m-5\">\n        <div className=\"columnRightAlign width-50-percent\">\n          <span className='bg-tinted r-5 w-200 p-10 bold color-soft'>Total Liters:</span>\n        </div>\n        <div className=\"p-10 columnLeftAlign width-50-percent\">\n          <input className='r-5 p-10 w-200 bg-darker color-soft'\n            type=\"number\"\n            value={litersPurchased}\n            onChange={(e) => setLitersPurchased(e.target.value)}\n          />\n        </div>\n      </label>\n      <button className='myButton mt-20' onClick={handleCalculate}>Calculate</button>\n      <div className='mt-20 color-soft'>\n        <div className=\"flexContainer bg-tinted r-5 m-5\">\n          <div className=\"columnRightAlign width-50-percent p-5 bold\">{gallons}</div>\n          <div className=\"columnLeftAlign width-50-percent p-5\">gallons</div>\n        </div>\n        <div className=\"flexContainer bg-tinted r-5 m-5\">\n          <div className=\"columnRightAlign width-50-percent p-5 bold\">${usdPerGallon}</div>\n          <div className=\"columnLeftAlign width-50-percent p-5\">per gallon</div>\n        </div>\n        <div className=\"flexContainer bg-tinted r-5 m-5\">\n          <div className=\"columnRightAlign width-50-percent p-5 bold\">${totalUSD}</div>\n          <div className=\"columnLeftAlign width-50-percent p-5\">dollars</div>\n        </div>\n        <div className=\"flexContainer bg-tinted r-5 m-5\">\n          <div className=\"columnRightAlign width-50-percent p-5 bold\">${totalPesos}</div>\n          <div className=\"columnLeftAlign width-50-percent p-5\">pesos</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GallonsCalculator;","/Users/js/Dev/my-first-reactor/src/components/utils/TripFuelTracker.js",["950","951","952","953","954","955","956","957"],"import React, { useState, useEffect } from 'react';\nimport getKey from './KeyGenerator.js';\nimport Geolocator from \"./Geolocator.js\";\n\nconst TripFuelTracker = () => {\n\n    const tempData = [{location:\"Home\",odometer:\"79084\",guageStart:\"\",guageEnd:\"\",time:\"10/26/2023, 3:57:44 AM\",latitude:32.7483392,longitude:-117.1259392,distance:0,gallons:0,usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Calexico\",odometer:\"79215\",guageStart:\"25\",guageEnd:\"110\",time:\"10/26/2023, 6:07:37 AM\",latitude:32.7483392,longitude:-117.1259392,distance:131,gallons:\"14\",usdPerGallon:\"5.09\",totalUSD:\"71.26\"},{location:\"San Felipe\",odometer:\"79335\",guageStart:\"45\",guageEnd:\"110\",time:\"10/26/2023, 8:17:23 AM\",latitude:32.7483392,longitude:-117.1259392,distance:120,gallons:\"10\",usdPerGallon:\"5.07\",totalUSD:\"50.70\"},{location:\"Jesus Maria\",odometer:\"79540\",guageStart:\"5\",guageEnd:\"110\",time:\"10/26/2023, 11:50:07 AM\",latitude:32.7483392,longitude:-117.1259392,distance:205,gallons:\"16.1\",usdPerGallon:\"5.23\",totalUSD:\"84.20\"},{location:\"Abreojos Campo\",odometer:\"79679\",guageStart:\"40\",guageEnd:\"40\",time:\"10/26/2023, 2:49:01 PM\",latitude:32.7483392,longitude:-117.1259392,distance:139,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Campo\",odometer:\"79679\",guageStart:\"40\",guageEnd:\"40\",time:\"10/27/2023, 3:28:53 PM\",latitude:32.7483392,longitude:-117.1259392,distance:0,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Tienda\",odometer:\"79682\",guageStart:\"40\",guageEnd:\"40\",time:\"10/27/2023, 3:30:56 PM\",latitude:32.7483392,longitude:-117.1259392,distance:3,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Campo\",odometer:\"79685\",guageStart:\"40\",guageEnd:\"40\",time:\"10/27/2023, 3:32:13 PM\",latitude:32.7483392,longitude:-117.1259392,distance:3,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Campo\",odometer:\"79685\",guageStart:\"40\",guageEnd:\"40\",time:\"10/28/2023, 3:33:02 PM\",latitude:32.7483392,longitude:-117.1259392,distance:0,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Tienda\",odometer:\"79688\",guageStart:\"40\",guageEnd:\"40\",time:\"10/28/2023, 3:33:43 PM\",latitude:32.7483392,longitude:-117.1259392,distance:3,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Campo\",odometer:\"79691\",guageStart:\"40\",guageEnd:\"40\",time:\"10/28/2023, 3:34:15 PM\",latitude:32.7483392,longitude:-117.1259392,distance:3,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Campo\",odometer:\"79691\",guageStart:\"40\",guageEnd:\"40\",time:\"10/29/2023, 3:34:48 PM\",latitude:32.7483392,longitude:-117.1259392,distance:0,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Tienda\",odometer:\"79694\",guageStart:\"40\",guageEnd:\"40\",time:\"10/29/2023, 3:35:09 PM\",latitude:32.7483392,longitude:-117.1259392,distance:3,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Campo\",odometer:\"79697\",guageStart:\"40\",guageEnd:\"40\",time:\"10/29/2023, 3:35:11 PM\",latitude:32.7483392,longitude:-117.1259392,distance:3,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Campo\",odometer:\"79697\",guageStart:\"40\",guageEnd:\"40\",time:\"10/30/2023, 3:35:33 PM\",latitude:32.7483392,longitude:-117.1259392,distance:0,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Tienda\",odometer:\"79700\",guageStart:\"40\",guageEnd:\"40\",time:\"10/30/2023, 3:35:34 PM\",latitude:32.7483392,longitude:-117.1259392,distance:3,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Campo\",odometer:\"79703\",guageStart:\"40\",guageEnd:\"40\",time:\"10/30/2023, 3:35:34 PM\",latitude:32.7483392,longitude:-117.1259392,distance:3,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Campo\",odometer:\"79703\",guageStart:\"40\",guageEnd:\"40\",time:\"10/31/2023, 3:36:05 PM\",latitude:32.7483392,longitude:-117.1259392,distance:0,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Tienda\",odometer:\"79706\",guageStart:\"40\",guageEnd:\"40\",time:\"10/31/2023, 3:36:06 PM\",latitude:32.7483392,longitude:-117.1259392,distance:3,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Campo\",odometer:\"79709\",guageStart:\"40\",guageEnd:\"40\",time:\"10/31/2023, 3:36:07 PM\",latitude:32.7483392,longitude:-117.1259392,distance:3,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Campo\",odometer:\"79709\",guageStart:\"40\",guageEnd:\"40\",time:\"11/1/2023, 7:09:00 AM\",latitude:32.7483392,longitude:-117.1259392,distance:0,gallons:\"\",usdPerGallon:\"0.00\",totalUSD:\"0.00\"},{location:\"Abreojos Pemex\",odometer:\"79717\",guageStart:\"70\",guageEnd:\"110\",time:\"11/1/2023, 7:19:49 AM\",latitude:32.7483392,longitude:-117.1259392,distance:8,gallons:\"14.3\",usdPerGallon:\"5.87\",totalUSD:\"83.94\"},{location:\"Jesus Maria\",odometer:\"79856\",guageStart:\"25\",guageEnd:\"110\",time:\"11/1/2023, 9:39:10 AM\",latitude:32.7483392,longitude:-117.1259392,distance:139,gallons:\"11.9\",usdPerGallon:\"5.56\",totalUSD:\"66.16\"},{location:\"Gonzaga\",odometer:\"79970\",guageStart:\"45\",guageEnd:\"110\",time:\"11/1/2023, 11:51:41 AM\",latitude:32.7483392,longitude:-117.1259392,distance:114,gallons:\"8.8\",usdPerGallon:\"5.89\",totalUSD:\"51.83\"},{location:\"San Felipe\",odometer:\"80061\",guageStart:\"50\",guageEnd:\"110\",time:\"11/1/2023, 1:40:45 PM\",latitude:32.7483392,longitude:-117.1259392,distance:91,gallons:\"8.6\",usdPerGallon:\"5.37\",totalUSD:\"46.18\"},{location:\"Pine Valley\",odometer:\"80252\",guageStart:\"0\",guageEnd:\"95\",time:\"11/1/2023, 6:11:35 PM\",latitude:32.7483392,longitude:-117.1259392,distance:191,gallons:\"15.8\",usdPerGallon:\"6.29\",totalUSD:\"99.38\"},{location:\"Home\",odometer:\"80314\",guageStart:\"0\",guageEnd:\"95\",time:\"11/1/2023, 7:40:42 PM\",latitude:32.7483392,longitude:-117.1259392,distance:62,gallons:\"0\",usdPerGallon:\"0\",totalUSD:\"0.00\"}];\n\n    const [location, setLocation] = useState('');\n    const [odometer, setOdometer] = useState('');\n    const [exchangeRate, setExchangeRate] = useState(0);\n    const [pricePerLiter, setPricePerLiter] = useState(0);\n    const [pricePerGallon, setPricePerGallon] = useState(0);\n    const [gallonsPurchased, setGallonsPurchased] = useState(0);\n    const [litersPurchased, setLitersPurchased] = useState(0);\n    const [trips, setTrips] = useState(JSON.parse(localStorage.getItem('TripFuelTracker')) || []);\n    const [currency, setCurrency] = useState('USD');\n    const [longitude, setLongitude] = useState(localStorage.getItem('longitude') || []);\n    const [latitude, setLatitude] = useState(localStorage.getItem('latitude') || []);\n    const [distance, setDistance] = useState(localStorage.getItem('distance') || []);\n    const [guageStart, setGuageStart] = useState('');\n    const [guageEnd, setGuageEnd] = useState('');\n\n    const currencyCode = [\n        'USD',\n        'MXN',\n        'NIO',\n        'CRC',\n        'IDR',\n        'AUD',\n    ];\n\n    const currencies = {\n        USD: 'Dollar',\n        MXN: `Pesos`,   // Mexican Peso\n        NIO: `Córdoba`,   // Nicaraguan Cordovas\n        CRC: `Colones`,    // Costa Rican Colones\n        IDR: `Rupiah`,  // Indonesian Rupiah\n        AUD: `AUD`,    // Australian Dollar\n    };\n\n    const fuelGuageReadings = [\n        '110',\n        '105',\n        '100',\n        '95',\n        '90',\n        '85',\n        '80',\n        '75',\n        '70',\n        '65',\n        '60',\n        '55',\n        '50',\n        '45',\n        '40',\n        '35',\n        '30',\n        '25',\n        '20',\n        '15',\n        '10',\n        '5',\n        '0',\n        '-5',\n        '-10'\n    ];\n\n    useEffect(() => {\n        localStorage.setItem('TripFuelTracker', JSON.stringify(trips));\n        setDistance(localStorage.getItem('distance'));\n    }, [trips]);\n    useEffect(() => {\n        localStorage.setItem('latitude', latitude);\n    }, [latitude]);\n    useEffect(() => {\n        localStorage.setItem('longitude', longitude);\n    }, [longitude]);\n    useEffect(() => {\n        localStorage.setItem('distance', distance);\n    }, [distance]);\n\n    const clearRecord = () => {\n        setTrips([]);\n    }\n    const recalculateDistances = (tripData) => {\n        for (let i = 1; i < tripData.length; i++) {\n            const currentDate = new Date(tripData[i].time);\n            const previousDate = new Date(tripData[i - 1].time);\n            if (currentDate.toDateString() === previousDate.toDateString()) {\n                tripData[i].distance = tripData[i].odometer - tripData[i - 1].odometer;\n            } else {\n                tripData[i].distance = 0;\n            }\n        }\n        return tripData;\n    }\n    const deleteLocation = (index) => {\n        const newTrips = [...trips];\n        const deleteConfirmed = window.confirm(`Do you want to delete ${newTrips[index].location}?`);\n\n        if (deleteConfirmed && index >= 0 && index < newTrips.length) {\n            newTrips.splice(index, 1);\n        } else {\n            console.log(\"Invalid index to remove\");\n        }\n        const tripsUpdate = recalculateDistances(newTrips);\n        setTrips(tripsUpdate);\n    }\n    const editLocation = (index, location) => {\n        const newTrips = [...trips];\n        newTrips[index].location = prompt('Edit location:', location) || location;\n        setTrips(newTrips);\n    }\n    const editOdometer = (index, odometer) => {\n        const newTrips = [...trips];\n        newTrips[index].odometer = prompt('Edit odometer:', odometer) || odometer;\n        /*\n        newTrips[index].distance = newTrips[index].odometer - newTrips[index - 1].odometer;\n        if (newTrips[index + 1].distance) {\n            newTrips[index + 1].distance = newTrips[index + 1].odometer - newTrips[index].odometer;\n        }\n        setTrips(newTrips);\n        */\n        const tripsUpdate = recalculateDistances(newTrips);\n        setTrips(tripsUpdate);\n    }\n    const editGuageStart = (index, guageStart) => {\n        const newTrips = [...trips];\n        newTrips[index].guadeStart = prompt('Edit guage start:', guageStart) || guageStart;\n        setTrips(newTrips);\n    }\n    const editGuageEnd = (index, guageEnd) => {\n        const newTrips = [...trips];\n        newTrips[index].guadeEnd = prompt('Edit guage end:', guageEnd) || guageEnd;\n        setTrips(newTrips);\n    }\n    const editLongitude = (index, longitude) => {\n        const newTrips = [...trips];\n        newTrips[index].longitude = prompt('Edit longitiude:', longitude) || longitude;\n        setTrips(newTrips);\n    }\n    const editLatitude = (index, latitude) => {\n        const newTrips = [...trips];\n        newTrips[index].latitude = prompt('Edit latitude:', latitude) || latitude;\n        setTrips(newTrips);\n    }\n    const editDistance = (index, distance) => {\n        const newTrips = [...trips];\n        newTrips[index].distance = prompt('Edit distance:', distance) || distance;\n        setTrips(newTrips);\n    }\n    const editGallons = (index, gallons) => {\n        const newTrips = [...trips];\n        newTrips[index].gallons = prompt('Edit gallons:', gallons) || gallons;\n        const newTotalUSD = newTrips[index].usdPerGallon * newTrips[index].gallons;\n        newTrips[index].totalUSD = newTotalUSD.toFixed(2);\n        setTrips(newTrips);\n    }\n    const editTime = (index) => {\n        const newTrips = [...trips];\n        const date = newTrips[index].time.split(', ')[0];\n        const time = newTrips[index].time.split(', ')[1];\n        const newTime = prompt('Edit time:', time) || time;\n        const newTripTime = `${date}, ${newTime}`;\n        newTrips[index].time = newTripTime;\n        setTrips(newTrips);\n    }\n    const editDate = (index) => {\n        const newTrips = [...trips];\n        //trip.time.split(', ')[0].split('/')[0]}/${trip.time.split(', ')[0].split('/')[1]}\n        const date = newTrips[index].time.split(', ')[0];\n        const month = date.split(', ')[0].split('/')[0];\n        const day = date.split(', ')[0].split('/')[1];\n        const year = date.split(', ')[0].split('/')[2];\n        const shortDate = `${month}/${day}`;\n        const time = newTrips[index].time.split(', ')[1];\n        const newDate = prompt('Edit date:', shortDate) || shortDate;\n        const newTripDate = `${newDate}/${year}`;\n        const newTripTime = `${newTripDate}, ${time}`;\n        newTrips[index].time = newTripTime;\n        const tripsUpdate = recalculateDistances(newTrips);\n        setTrips(tripsUpdate);\n    }\n    const editUSDGallons = (index, usdPerGallon) => {\n        const newTrips = [...trips];\n        newTrips[index].usdPerGallon = prompt('Edit USD per gallon', usdPerGallon) || usdPerGallon;\n        const newTotalUSD = newTrips[index].usdPerGallon * newTrips[index].gallons;\n        newTrips[index].totalUSD = newTotalUSD.toFixed(2);\n        setTrips(newTrips);\n    }\n    const editTotalUSD = (index, totalUSD) => {\n        const newTrips = [...trips];\n        newTrips[index].totalUSD = prompt('Edit total USD:', totalUSD) || totalUSD;\n        setTrips(newTrips);\n    }\n\n    const getDate = (index) => (trips[index] !== undefined) ? `${trips[index].time.split(', ')[0].split('/')[0]}/${trips[index].time.split(', ')[0].split('/')[1]}` : null;\n    const getSameDayStartIndex = (targetDate) => {\n        let startIndex = -1;\n        for (let i = 0; i < trips.length; i++) {\n            if (getDate(i) === targetDate) {\n                startIndex = i;\n                break;\n            }\n        }\n        return startIndex;\n    }\n    const getSameDayEndIndex = (targetDate) => {\n        let endIndex = -1;\n        for (let i = trips.length - 1; i >= 0; i--) {\n            if (getDate(i) === targetDate) {\n                endIndex = i;\n                break;\n            }\n        }\n        return endIndex;\n    }\n    const calculateAndRecord = () => {\n\n        const lastIndex = (trips.length - 1);\n        const lastDate = getDate(lastIndex);\n        const pricePerLiterUSD = pricePerLiter / exchangeRate;\n        const gallons = litersPurchased * 0.264172;\n        const newGallons = (currency === 'USD') ? gallonsPurchased : gallons.toFixed(1);\n\n        const usdPerGallon = (currency === 'USD') ? Number(pricePerGallon) : Number(pricePerLiterUSD * 3.78541);\n        const newUsdPerGallon = usdPerGallon.toFixed(2) || 0;\n        const totalUSD = (currency === 'USD') ? (gallonsPurchased * pricePerGallon) : (gallons * usdPerGallon);\n        const newTotalUSD = totalUSD.toFixed(2);\n        const time = new Date().toLocaleString();\n        const newDate = `${time.split(', ')[0].split('/')[0]}/${time.split(', ')[0].split('/')[1]}`;\n        const lastOdometer = Number(localStorage.getItem('odometer'));\n        const newDistance = (lastDate == newDate) ? (Number(odometer) - lastOdometer) : 0;\n        localStorage.setItem('distance', newDistance);\n        localStorage.setItem('odometer', odometer);\n\n        const newTrip = {\n            location: location,\n            odometer: odometer,\n            guageStart: guageStart,\n            guageEnd: guageEnd,\n            time: time,\n            latitude: latitude,\n            longitude: longitude,\n            distance: newDistance,\n            gallons: newGallons,\n            usdPerGallon: newUsdPerGallon,\n            totalUSD: newTotalUSD\n        }\n        const newTrips = [...trips, newTrip]\n        setTrips(newTrips);\n\n    };\n    const getTotalHours = (index) => {\n        //const totalTime = trips.reduce((accumulator, trip) => accumulator + parseFloat(trip.time), 0);\n        const targetDate = new Date(trips[index].time);\n        if (isNaN(targetDate)) return null;\n        const dates = trips.map((trip) => new Date(trip.time));\n        const tripsForDate = dates.filter((date) => date.toDateString() === targetDate.toDateString());\n        const firstDate = tripsForDate[0];\n        const lastDate = tripsForDate[tripsForDate.length - 1];\n        if (isNaN(firstDate) || isNaN(lastDate)) return null;\n        const timeDifference = lastDate - firstDate;\n        const totalTime = timeDifference / (1000 * 60 * 60);\n        const nearestHours = Math.floor(totalTime);\n        const remainingMinutes = Math.round((totalTime - nearestHours) * 60);\n\n        return `${nearestHours}h${remainingMinutes}m`;\n    }\n    const getTotalMiles = (index) => {\n        //const totalMiles = trips.reduce((accumulator, trip) => accumulator + parseFloat(trip.distance), 0);\n        const targetDate = getDate(index);\n        if (!targetDate) return null;\n        const startIndex = getSameDayStartIndex(targetDate);\n        const endIndex = getSameDayEndIndex(targetDate);\n        const totalMilesInRange = trips\n            .slice(startIndex, endIndex + 1)\n            .reduce((accumulator, trip) => accumulator + parseFloat(trip.distance), 0);\n\n        return totalMilesInRange.toFixed(1);\n    }\n    const getTotalGallons = (index) => {\n        //const totalGallons = trips.reduce((accumulator, trip) => accumulator + parseFloat(Number(trip.gallons)), 0);\n        const targetDate = getDate(index);\n        if (!targetDate) return null;\n        const startIndex = getSameDayStartIndex(targetDate);\n        const endIndex = getSameDayEndIndex(targetDate);\n        const totalGallons = trips\n            .slice(startIndex, endIndex + 1)\n            .reduce((accumulator, trip) => accumulator + parseFloat(Number(trip.gallons)), 0);\n\n        return totalGallons.toFixed(1);\n    }\n    const getTotalStops = (index) => {\n        const targetDate = getDate(index);\n        if (!targetDate) return null;\n        const startIndex = getSameDayStartIndex(targetDate);\n        const endIndex = getSameDayEndIndex(targetDate);\n        const totalStops = endIndex - startIndex;\n        return totalStops;\n    }\n    const getTotalUSD = (index) => {\n        //const totalUSD = trips.reduce((accumulator, trip) => accumulator + parseFloat(trip.totalUSD), 0);\n        const targetDate = getDate(index);\n        if (!targetDate) return null;\n        const startIndex = getSameDayStartIndex(targetDate);\n        const endIndex = getSameDayEndIndex(targetDate);\n        const totalUSD = trips\n            .slice(startIndex, endIndex + 1)\n            .reduce((accumulator, trip) => accumulator + parseFloat(trip.totalUSD), 0);\n\n        return totalUSD.toFixed(2);\n    };\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setCurrency(value);\n    };\n    const handleGuageStartChange = (event) => {\n        const { name, value } = event.target;\n        setGuageStart(value);\n    };\n    const handleGuageEndChange = (event) => {\n        const { name, value } = event.target;\n        setGuageEnd(value);\n    };\n    const getUSInputs = () => {\n        if (currencies[currency] === 'Dollar') {\n            return <div>\n                <label className='flexContainer bg-veryLite r-10 m-5'>\n                    <div className='columnRightAlign width-50-percent'>\n                        <span className='size20 r-5 w-200 p-10 bold color-soft'>\n                            {currencies[currency]} per Gallon:\n                        </span>\n                    </div>\n                    <div className='size20 p-10 columnLeftAlign width-50-percent'>\n                        <input className='r-5 p-10 w-150 bg-darker color-soft'\n                            type='number'\n                            value={pricePerGallon}\n                            onChange={(e) => setPricePerGallon(e.target.value)}\n                        />\n                    </div>\n                </label>\n                <label className='flexContainer bg-veryLite r-10 m-5'>\n                    <div className='columnRightAlign width-50-percent'>\n                        <span className='size20 r-5 w-200 p-10 bold color-soft'>\n                            Total Gallons:\n                        </span>\n                    </div>\n                    <div className='size20 p-10 columnLeftAlign width-50-percent'>\n                        <input className='r-5 p-10 w-150 bg-darker color-soft'\n                            type='number'\n                            value={gallonsPurchased}\n                            onChange={(e) => setGallonsPurchased(e.target.value)}\n                        />\n                    </div>\n                </label>\n            </div>\n        }\n    }\n    const getInternationalInputs = () => {\n        if (currencies[currency] !== 'Dollar') {\n            return <div>\n                <label className='flexContainer bg-veryLite r-10 m-5'>\n                    <div className='columnRightAlign width-50-percent'>\n                        <span className='size20 r-5 w-200 p-10 bold color-soft'>\n                            Exchange Rate:\n                        </span>\n                    </div>\n                    <div className='size20 p-10 columnLeftAlign width-50-percent'>\n                        <input className='r-5 p-10 w-150 bg-darker color-soft'\n                            type='number'\n                            value={exchangeRate}\n                            onChange={(e) => setExchangeRate(e.target.value)}\n                        />\n                    </div>\n                </label>\n                <label className='flexContainer bg-veryLite r-10 m-5'>\n                    <div className='columnRightAlign width-50-percent'>\n                        <span className='size20 r-5 w-200 p-10 bold color-soft'>\n                            {currencies[currency]} per Liter:\n                        </span>\n                    </div>\n                    <div className='size20 p-10 columnLeftAlign width-50-percent'>\n                        <input className='r-5 p-10 w-150 bg-darker color-soft'\n                            type='number'\n                            value={pricePerLiter}\n                            onChange={(e) => setPricePerLiter(e.target.value)}\n                        />\n                    </div>\n                </label>\n                <label className='flexContainer bg-veryLite r-10 m-5'>\n                    <div className='columnRightAlign width-50-percent'>\n                        <span className='size20 r-5 w-200 p-10 bold color-soft'>\n                            Total Liters:\n                        </span>\n                    </div>\n                    <div className='size20 p-10 columnLeftAlign width-50-percent'>\n                        <input className='r-5 p-10 w-150 bg-darker color-soft'\n                            type='number'\n                            value={litersPurchased}\n                            onChange={(e) => setLitersPurchased(e.target.value)}\n                        />\n                    </div>\n                </label>\n            </div>\n        }\n    }\n    const updateCurrentLocation = (longitude, latitude) => {\n        console.log(\n            `UPDATING CURRENT POSITION ======> longitude: ${longitude} latitude: ${latitude}`\n        );\n        setLongitude(longitude);\n        setLatitude(latitude);\n        //setDistance(calculateDistance());\n    };\n    const getDailyTotalsDisplay = (index) => {\n        const date = getDate(index);\n        const previousDate = getDate(index - 1) || null;\n        const nextDate = getDate(index + 1) || null;\n        if (date == nextDate) {\n            return\n        }\n        return <div className='flexContainer bg-veryLite color-yellow mt-20 r-5 m-5 p-5 size20'>\n            <div className='flex4Column'>\n                <div className='p-5'>distance</div>\n                <div className='p-5 bold bg-darker m-1 r-5 mt-5 mb-5'>{getTotalMiles(index)}</div>\n            </div>\n            <div className='flex4Column'>\n                <div className='p-5'>time</div>\n                <div className='p-5 bold bg-darker m-1 r-5 mt-5 mb-5'>{getTotalHours(index)}</div>\n            </div>\n            <div className='flex4Column'>\n                <div className='p-5'>stops</div>\n                <div className='p-5 bold bg-darker m-1 r-5 mt-5 mb-5'>{getTotalStops(index)}</div>\n            </div>\n            <div className='flex4Column'>\n                <div className='p-5'>gallons</div>\n                <div className='p-5 bold bg-darker m-1 r-5 mt-5 mb-5'>{getTotalGallons(index)}</div>\n            </div>\n            <div className='flex4Column'>\n                <div className='p-5'>USD</div>\n                <div className='p-5 bold bg-darker m-1 r-5 mt-5 mb-5'>${getTotalUSD(index)}</div>\n            </div>\n        </div>\n    }\n    return (\n        <div className='mt--20'>\n            <div className='bg-tinted r-10 p-10 m-5'>\n                <Geolocator\n                    currentPositionExists=\"false\"\n                    returnCurrentPosition={updateCurrentLocation}\n                />\n                <label className='flexContainer bg-veryLite r-10 m-5'>\n                    <div className='columnRightAlign width-50-percent'>\n                        <span className='size20 r-5 w-200 p-10 bold color-soft'>\n                            Location:\n                        </span>\n                    </div>\n                    <div className='size20 p-10 columnLeftAlign width-50-percent'>\n                        <input className='r-5 p-10 w-150 bg-darker color-soft'\n                            type='string'\n                            value={location}\n                            onChange={(e) => setLocation(e.target.value)}\n                        />\n                    </div>\n                </label>\n                <label className='flexContainer bg-veryLite r-10 m-5'>\n                    <div className='columnRightAlign width-50-percent'>\n                        <span className='size20 r-5 w-200 p-10 bold color-soft'>\n                            Odometer:\n                        </span>\n                    </div>\n                    <div className='size20 p-10 columnLeftAlign width-50-percent'>\n                        <input className='r-5 p-10 w-150 bg-darker color-soft'\n                            type='number'\n                            value={odometer}\n                            onChange={(e) => setOdometer(e.target.value)}\n                        />\n                    </div>\n                </label>\n                <label className='flexContainer bg-veryLite r-10 m-5'>\n                    <div className='columnRightAlign width-50-percent'>\n                        <span className='size20 r-5 w-200 p-10 bold color-soft'>\n                            Currency:\n                        </span>\n                    </div>\n                    <div className='size20 p-10 columnLeftAlign width-50-percent'>\n                        <select\n                            name=\"currency\"\n                            value={currency}\n                            onChange={handleInputChange}\n                            className='mt--2 w-150 bg-darker color-soft r-5 p-10'\n                        >\n                            <option value=\"\">Select Currency</option>\n                            {currencyCode.map((currency) => (\n                                <option key={currency} value={currency}>\n                                    {currencies[currency]}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                </label>\n                <label className='flexContainer bg-veryLite r-10 m-5'>\n                    <div className='size20 p-10 columnRightAlign width-50-percent'>\n                        <select\n                            name=\"guageStart\"\n                            value={guageStart}\n                            onChange={handleGuageStartChange}\n                            className='mt--2 bg-darker color-soft r-5 p-10'\n                        >\n                            <option value=\"\">Tank Start</option>\n                            {fuelGuageReadings.map((readingValue) => (\n                                <option key={readingValue} value={readingValue}>\n                                    {`${readingValue}%`}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className='size20 p-10 columnLeftAlign width-50-percent'>\n                        <select\n                            name=\"guageEnd\"\n                            value={guageEnd}\n                            onChange={handleGuageEndChange}\n                            className='mt--2 w-150 bg-darker color-soft r-5 p-10'\n                        >\n                            <option value=\"\">Tank End</option>\n                            {fuelGuageReadings.map((readingValue) => (\n                                <option key={readingValue} value={readingValue}>\n                                    {`${readingValue}%`}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                </label>\n                {getInternationalInputs()}\n                {getUSInputs()}\n            </div>\n            <div>\n                <div className='flexContainer'>\n                    <div className='flex2Column contentCenter'>\n                        <button className='myButton mt-20 p-20 w-150' onClick={calculateAndRecord}>Add</button>\n                    </div>\n                    <div className='flex2Column contentCenter'>\n                        <button className='myButton mt-20 p-20 w-150' onClick={clearRecord}>Clear</button>\n                    </div>\n                </div>\n                <div className='scrollHeight250 r-10 m-5 mt-20'>\n                    {\n                        trips.map((trip, index) => <div className='mt-1 r-10 color-soft bg-darker pb-10' key={getKey(`trip${index}`)}>\n                            <div className=\"p-10 w-100-percent flexContainer\">\n                                <div className=\"bold size30 color-yellow flexOneFifthColumn contentLeft\" onClick={() => editLocation(index, trip.location)}>{index + 1}. {trip.location}</div>\n                                <div className=\"rt-25 t-0 mt-5 r-5 size15 bg-lite bold color-yellow button pr-20 pl-20 pt-10 pb-10 contentRight\" onClick={() => deleteLocation(index)}>X</div>\n                            </div>\n                            <div className='ml-40 w-auto'>\n                                <div className='p-5 r-5 bg-darker mt-5 width-100-percent flexContainer'>\n                                    <span onClick={() => editLatitude(index, trip.latitude)}>{trip.latitude}</span>, <span onClick={() => editLongitude(index, trip.longitude)}>{trip.longitude}</span>\n                                    <span className=\"ml-10\">\n                                        <a className=\"p-5 bg-green r-5 mt-35 color-lite\" href={`https://www.google.com/maps?q=${trip.latitude},${trip.longitude}`} target=\"_blank\">Map</a>\n                                    </span>\n                                </div>\n                            </div>\n                            <div className='flexContainer r-5 pb-5 bg-veryLite m-10'>\n                                <div className='m-auto w-auto'>\n                                    <div className='p-5' onClick={() => editTime(index)}>{`${trip.time.split(', ')[1]}`}</div>\n                                    <div className='p-10 bold bg-darker r-5 size25' onClick={() => editDate(index)}>{`${trip.time.split(', ')[0].split('/')[0]}/${trip.time.split(', ')[0].split('/')[1]}`}</div>\n                                </div>\n                                <div className='m-auto'>\n                                    <div className='p-5'>Gallons</div>\n                                    <div className='p-10 bold bg-darker r-5 size25' onClick={() => editGallons(index, trip.gallons)}>{trip.gallons}</div>\n                                </div>\n                                <div className='m-auto'>\n                                    <div className='p-5'>$/Gallons</div>\n                                    <div className='p-10 bold bg-darker r-5 size25' onClick={() => editUSDGallons(index, trip.usdPerGallon)}>${trip.usdPerGallon}</div>\n                                </div>\n                                <div className='m-auto'>\n                                    <div className='p-5'>USD</div>\n                                    <div className='p-10 bold bg-darker r-5 size25' onClick={() => editTotalUSD(index, trip.totalUSD)}>${trip.totalUSD}</div>\n                                </div>\n                            </div>\n                            <div className='ml-10 mt--5 mr-10 mb-5 r-5 greet color-lite bg-veryLite flexContainer'>\n                                <div className='m-auto w-auto p-5' onClick={() => editOdometer(index, trip.odometer)}>\n                                    <div className='bold'>odometer:</div>\n                                    <div className='p-5 r-5 bg-darker mt-5'>{trip.odometer}</div>\n                                </div>\n                                <div className='m-auto w-auto p-5'>\n                                    <div className='bold'>tank:</div>\n                                    <div className='p-5 r-5 bg-darker mt-5' onClick={() => editGuageStart(index, trip.guageStart)}>{trip.guageStart}% to <span onClick={() => editGuageEnd(index, trip.guageEnd)}>{trip.guageEnd}</span>%</div>\n                                </div>\n                                <div className='m-auto w-auto p-5' onClick={() => editDistance(index, trip.distance)}>\n                                    <div className='bold'>\n                                        distance:\n                                    </div>\n                                    <div className='p-5 r-5 bg-darker mt-5'>\n                                        {trip.distance} miles\n                                    </div>\n                                </div>\n                            </div>\n                            {getDailyTotalsDisplay(index)}\n                        </div>\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TripFuelTracker;","/Users/js/Dev/my-first-reactor/src/components/utils/SurfingScores.js",["958","959","960","961","962","963","964","965","966"],"import React, { useState, useEffect } from 'react';\nimport getKey from '../utils/KeyGenerator.js';\nimport jerseyColors from './JerseyColors.js';\nimport SurfScoringLogic from './SurfScoringLogic.js';\nimport { findTwoHighestIndices } from './HighScores.js';\n\nconst SurfingScores = (players, index, surfScoring, setPlayers, editPlayer, deletePlayer) => {\n\n    console.log(`SurfingScores => players: ${JSON.stringify(players)} index: ${index}`)\n\n    const[state, setState] = useState({\n        editIndex: null,\n        showButtons: false\n    });\n    const [timer, setTimer] = useState(null);\n    const [showButtons, setShowButtons] = useState(false);\n    const handleTouchStart = () => {\n        console.log(`handleTouchStart`)\n        setTimer(setTimeout(() => setShowButtons(true), 1000));\n    };\n    useEffect(() => {\n        alert(`SurfingScores => timer: ${timer}`);\n    }, [timer]);\n\n    const handleTouchEnd = () => {\n        clearTimeout(timer);\n        //setShowButtons(false);\n    };\n    const rank = ['st', 'nd', 'rd', 'th'];\n\n    const getTwoHighestScores = () => {\n        const player = players[index];\n        const scores = player.surfScores;\n        const [highestIndex, secondHighestIndex] = findTwoHighestIndices(scores);\n        //console.log(`getTwoHighestScores => playerIndex: ${index} player: ${JSON.stringify(player,null,2)} name: ${(player.player || player.name)}: Highest score at index ${highestIndex}, Second highest score at index ${secondHighestIndex}`);\n        return {\n            highScoreIndex: highestIndex,\n            secondHighScoreIndex: secondHighestIndex\n        };\n    };\n    const getScoreTotal = (index) => {\n        const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n        const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n        const score = (highestScore + secondHighestScore);\n        console.log(`getScoreTotal => player: ${index} score: ${score}`);\n        return score;\n    }\n    const highestScore = (playersArray) => {\n        //console.log(`highestScore = (index: ${index}, playersArray: ${JSON.stringify(playersArray, null, 2)})`)\n        return playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n    }\n    const secondHighestScore = (playersArray) => playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n    const scoreTotal = (index, playersArray) => Number(highestScore(playersArray) + secondHighestScore(playersArray)).toFixed(2);\n\n    const setSurfScore = (playerId, index, score) => {\n\n        const newScore = prompt(`Enter ${players[playerId].player || players[playerId].name}'s score for wave ${index + 1}: `, Number(score || ''));\n        const newPlayers = [...players];\n        const currentScore = newPlayers[playerId].surfScores[index];\n        const edit = (currentScore !== '' && currentScore !== 0) ? false : true;\n        newPlayers[playerId].surfScores[index] = Number(newScore);\n        newPlayers[playerId].surfScore = scoreTotal(playerId, newPlayers);\n        if ((newPlayers[playerId].surfPriority === 1 || newPlayers[playerId].surfPriority === 0) && edit) {\n            newPlayers.map((player, index) => {\n                if (index === playerId) {\n                    player.surfPriority = players.length;\n                } else if (player.surfPriority != 0) {\n                    player.surfPriority = player.surfPriority - 1;\n                }\n            });\n        }\n        const sortedPlayers = [...newPlayers];\n        sortedPlayers.sort((a, b) => b.surfScore - a.surfScore);\n\n        console.log('setSurfScore => sortedPlayers: ', sortedPlayers)\n\n        localStorage.setItem('players', JSON.stringify(sortedPlayers, null, 2));\n        setPlayers(sortedPlayers);\n    }\n    const get2ndHighestScore = (playerId) => {\n        const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n        const secondHighestId = highestScores[1];\n        return players[playerId].surfScores[secondHighestId];\n    }\n    const getWave = (playerId, index, score) => {\n        const player = players[playerId];\n        const theScore = player.surfScores[index];\n        const highestScores = findTwoHighestIndices(players[playerId].surfScores);\n        const highestId = highestScores[0];\n        const secondHighestId = highestScores[1];\n        const firstScore = (index === highestId) ? true : false;\n        const secondScore = (index === secondHighestId) ? true : false;\n        const getClasses = (firstScore || secondScore) ? 'size30 bold color-neogreen p-10' : 'size30 white p-10';\n        const wave = <div className=\"column r-10\" onClick={() => setSurfScore(playerId, index, score)} key={getKey(`wave${playerId}${index}${score}`)}>\n            <div className='size30 bold color-yellow bg-dkYellow w-100 p-10'>{index + 1}</div>\n            <div className={`ht-40 ${getClasses}`}>{score}</div>\n        </div>\n        return wave\n    }\n    const selectJersey = (index) => {\n        const newPlayers = [...players];\n        newPlayers[index].surfJerseyColor = Number(newPlayers[index].surfJerseyColor) + 1;\n        newPlayers[index].surfJerseyColor = (newPlayers[index].surfJerseyColor > (jerseyColors.length - 1)) ? 0 : newPlayers[index].surfJerseyColor;\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(newPlayers);\n    }\n    const isTieScore = (index) => {\n        const score = scoreTotal(index, players);\n        if (index !== 0) {\n            if (score === scoreTotal(index - 1, players)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    const editSurfer = (index) => <div>\n        <button onClick={alert(`Subtract ${index}`)}>-</button>\n        <button onClick={alert(`Add ${index}`)}>+</button>\n    </div>\n    const getSurfTotal = (player) => {\n        let total = 0;\n        const score = (index) => player.surfScores[index];\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n            //console.log(`getSurfTotal => player: ${player.name} index: ${index} score: ${score(index)}`)\n            addToTotal(Number(score(index)))\n        }\n        );\n        return total;\n    }\n\n    const surferScores = () => <div key={getKey(`${index}${(players[index].player || players[index].name)}`)}>\n        {/*<div className={`flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[Number(players[index].surfJerseyColor)] || jerseyColors[0]}`} key={getKey(`${index}${(player.player || player.name)}`)}  onTouchStart={() => handleTouchStart(index)} onTouchEnd={handleTouchEnd}>*/}\n        <div className={`flexContainer r-10 ml-10 mr-10 mb--10 color-dark text-outline-light bg-${jerseyColors[0] || jerseyColors[0]}`} key={getKey(`${index}${(players[index].player || players[index].name)}`)} onTouchStart={() => handleTouchStart(index)} onTouchEnd={handleTouchEnd}>\n            <div className={`flex2Column contentLeft r-10-lft m-0 w-75 p-10`} onClick={() => selectJersey(index)}>\n                <div>\n                    <span className='size25 mt--10'>\n                        {(isTieScore(index) && (index !== 0)) ? index : (index + 1)}\n                    </span>\n                    <span className='size15 mt--10'>\n                        {rank[(isTieScore(index) && (index !== 0)) ? index : (index > 2) ? 3 : (index)]}\n                    </span>\n                </div>\n                <div className='size30 mt-5 mb-5'>\n                    {(players[index].player || players[index].name).split(' ')[0]}\n                </div>\n                <div className='size20'>\n                    {(players[index].player || players[index].name).split(' ')[1]}\n                </div>\n            </div>\n            <div className={`r-10-rt flex2Column contentRight m-0 mr-10 pb-10 pl-10 pr-10 pt-15`}>\n                <div className='size40 bold'>{getSurfTotal(players[index])}</div>\n                <div className='mt-10 bold'>\n                    {/*\n                        <SurfScoringLogic\n                            index={index}\n                            completed={false}\n                            players={players}\n                            //setPlayers={setPlayers}\n                            //editPlayer={editPlayer}\n                            //deleteAthlete={deletePlayer}\n                        />\n                    */}\n                    Index: {index}\n                    Players: {players}\n                </div>\n            </div>\n        </div>\n        <div>\n            {showButtons && (\n                editSurfer(index)\n            )}\n        </div>\n        <div>\n            <div>\n                <div className='h-scroll color-white copyright ml-10 mr-10 mt-5'>\n                    <div className=\"container mt-10\">\n                        {players[index].surfScores.map((score, wave) => getWave(index, wave, players[index].surfScores[wave]))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    return surferScores()\n}\nexport default SurfingScores;","/Users/js/Dev/my-first-reactor/src/components/utils/JerseyColors.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/SurfScoring.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/InitPlayers.js",[],["967","968"],"/Users/js/Dev/my-first-reactor/src/components/utils/InitNewPlayer.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/SurfScoringLogic.js",["969","970","971","972","973","974","975","976","977"],"import React, { useState, useEffect } from 'react';\nimport surfScoring from './SurfScoring.js'\nimport jerseyColors from './JerseyColors.js';\nimport { findTwoHighestIndices, getTwoHighestScores } from './HighScores.js';\n\nconst SurfScoringLogic = (index, completed, players, /*setPlayers, editPlayer, deleteAthlete*/) => {\n\n    const getSurfTotal = (player) => {\n        let total = 0;\n        const score = (index) => player.surfScores[index];\n        const addToTotal = (value) => total = total + value;\n        surfScoring.map((target, index) => {\n                addToTotal(Number(score(index)))\n            }\n        );\n        return total;\n    }\n    const getScore = () => window.location.pathname = '/reactor/ScoreKeeper';\n    /*\n    const resetSurfersScores = (playerId) => {\n        const newPlayers = [...players];\n        newPlayers[playerId].surfScore = 0;\n        newPlayers[playerId].surfScores = surfScoring;\n        setPlayers(newPlayers);\n        getScore();\n    }\n    */\n   /*\n    const selectJersey = (playerId, selection) => {\n        const newPlayers = [...players];\n        newPlayers[playerId].surfJerseyColor = (selection);\n        localStorage.setItem('players', JSON.stringify(newPlayers));\n        setPlayers(newPlayers);\n    }\n    */\n    //const getJerseyColorSelector = (playerId, color, index) => <button className={`bg-${color} ht-45 width50px button r-10`} onClick={() => selectJersey(playerId, index)}></button>;\n   /*\n   const editSurfer = (playerId) => <div className='m-10 p-10 r-10 bg-darker'>\n            <div className='size30 p-10'>Name:</div>\n            <button className={`bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10`} onClick={() => editPlayer(playerId)}>{players[playerId].name}</button>\n            <div className='size30 p-10'>Jersey color:</div>\n            <div>\n                {jerseyColors.map((color,index) => \n                    index === Math.ceil(jerseyColors.length / 2) ? (\n                        <React.Fragment key={index}>\n                            <br />\n                            {getJerseyColorSelector(playerId, color, index)}\n                        </React.Fragment>\n                    ) : (\n                        getJerseyColorSelector(playerId, color, index)\n                    )\n                )}\n            </div>\n            <div>\n                <button className='bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10 m-5' onClick={() => resetSurfersScores(playerId)}>\n                    Reset Scores\n                </button>\n                <button className='bg-lite size30 color-lite width-100-percent pb-10 pt-10 button r-10 m-5' onClick={() => deleteAthlete(playerId)}>\n                    Delete Athlete\n                </button>\n            </div>\n        </div>\n    */\n    const scoreTotal = (index, playersArray) => Number(highestScore(index, playersArray) + secondHighestScore(index, playersArray)).toFixed(2);\n    \n    const isTieScore = (index) => {\n        const score = scoreTotal(index, players);\n        if (index !== 0) {\n            if (score === scoreTotal(index - 1, players)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    const place = (index) => (isTieScore(index) && (index !== 0)) ? index : (index + 1);\n    const placeSuffix = (index) => rank[(isTieScore(index) && (index !== 0)) ? (index-1) : (index > 2) ? 3 : (index)];\n    const position = (index) => `${place} ${placeSuffix}`;\n    const rank = ['st', 'nd', 'rd', 'th'];\n    const highestScore = (index, playersArray) => {\n        return playersArray[index].surfScores[getTwoHighestScores(index).highScoreIndex];\n    }\n    const secondHighestScore = (index, playersArray) => playersArray[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex];\n    \n    const getScoreTotal = (index) => {\n        const highestScore = players[index].surfScores[getTwoHighestScores(index).highScoreIndex]\n        const secondHighestScore = players[index].surfScores[getTwoHighestScores(index).secondHighScoreIndex]\n        const score = (highestScore + secondHighestScore);\n        return score;\n    }\n    \n    const playerId = index.index;\n    //console.log(`SurfScoringLogic => index: ${index.index}`);\n    //console.log(`SurfScoringLogic => players: ${JSON.stringify(index.players,null,2)}`);\n    //console.log(`SurfScoringLogic => surfScores: ${index.players[playerId].surfScores}`);\n    const scoreDifference = Number(index.players[(playerId === 0) ? 0 : (playerId - 1)].surfScore - index.players[(playerId === 0) ? 1 : (playerId)].surfScore);\n    const difference = (scoreDifference < 0) ? (-1 * scoreDifference) : scoreDifference;\n    const winningScore = Number(index.players[(playerId === 0) ? 0 : ((playerId < 3) ? (playerId - 1) : 1)].surfScore);\n    const highestScoresIndices = findTwoHighestIndices(index.players[playerId].surfScores);\n    //console.log(`SurfScoringLogic => index: ${index}`)\n    //console.log(`SurfScoringLogic => players: ${players}`)\n    const losersHeighestScore = index.players[playerId].surfScores[highestScoresIndices[0]];\n    const need = (winningScore - losersHeighestScore) + .01;\n    const winsBy = `${(completed)?'Won':'Wins'} by ${difference.toFixed(2)}`;\n    const needs = `${(completed)?'Needed':'Needs'} ${need.toFixed(2)}`;\n    if (playerId === 0) {\n        return winsBy\n    }\n    return needs\n\n}\nexport default SurfScoringLogic;","/Users/js/Dev/my-first-reactor/src/components/utils/SurfPriority.js",["978","979","980","981","982"],"export const getSurferIndexWithPriority = (players, priorityIndex) => {\n    for (let i = 0; i < players.length; i++) {\n        if (Number(players[i].surfPriority) === priorityIndex) {\n            return i;\n        }\n    }\n    return null;\n}\nexport const losePriority = (players, setPlayers, selectedPriority) => {\n    const newPlayers = [...players];\n    newPlayers.map((player, index) => {\n        if (player.surfPriority == selectedPriority) {\n            player.surfPriority = newPlayers.length;\n        } else if (player.surfPriority != 1 && selectedPriority != newPlayers.length) {\n            const shift = player.surfPriority - 1;\n            player.surfPriority = (shift > 0) ? shift : newPlayers.length;\n        }\n    });\n    localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n    setPlayers(newPlayers);\n}\nexport const shiftPriority = (players, setPlayers, priorityIndex) => {\n    const newPlayers = [...players];\n    newPlayers.map((player, index) => {\n        if (player.surfPriority === (priorityIndex - 1)) {\n            player.surfPriority = priorityIndex;\n        } else if (player.surfPriority === priorityIndex) {\n            player.surfPriority = (priorityIndex - 1);\n        }\n    });\n    localStorage.setItem('players', JSON.stringify(newPlayers, null, 2));\n    setPlayers(newPlayers);\n}","/Users/js/Dev/my-first-reactor/src/components/utils/Dates.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/GetAthleteScore.js",["983"],"\nimport getKey from '../utils/KeyGenerator.js';\nimport SurfScoringLogic from './SurfScoringLogic.js';\nimport getPriorityColor from './GetPriorityColor.js';\nimport jerseyColors from './JerseyColors.js';\n\nconst getAthleteScore = (players, index) => {\n    console.log(`getAthleteScore => index: ${index} players: ${players.length}`)\n    return <div className={`flex${players.length}Column r-10 m-5 size20 bg-darker p-10`} key={getKey(`athleteScore`)}>\n                <div className={`p-5 size30`}>{index+1}</div>\n                <div className={`m-10 ht-5 bg-${jerseyColors[players[index].surfJerseyColor]}`}></div>\n                <div className='p-5 ht-75 centeredContent'>{players[index].name}</div>\n                <div className='p-5 bg-lite r-10 m-10'>{players[index].surfScore}</div>\n                <div className='greet'>\n                    <SurfScoringLogic\n                        index={index} \n                        completed={true}\n                        players={players}\n                        //setPlayers={setPlayers}\n                        //editPlayer={editPlayer}\n                        //deleteAthlete={deletePlayer}\n                        />\n                </div>\n            </div>\n}\nexport default getAthleteScore;","/Users/js/Dev/my-first-reactor/src/components/utils/GetPriorityColor.js",["984"],"import { getSurferIndexWithPriority, losePriority } from './SurfPriority.js';\nimport jerseyColors from './JerseyColors.js';\n\nconst getPriorityColor = (players, priorityIndex) => {\n    const getJerseyColor = (surferIndex) => {\n        if (players[surferIndex].surfJerseyColor === undefined) {\n            const newPlayers = [...players];\n            newPlayers[surferIndex].surfJerseyColor = surferIndex;\n            localStorage.setItem('players', JSON.stringify(newPlayers))\n            return 0;\n        }\n        return players[surferIndex].surfJerseyColor;\n    }\n    const surferIndex = getSurferIndexWithPriority(players, priorityIndex);\n    const jerseyColorIndex = (surferIndex === null) ? null : getJerseyColor(surferIndex);\n    const color = (jerseyColorIndex === null) ? 'white' : jerseyColors[jerseyColorIndex];\n    return color;\n}\nexport default getPriorityColor;","/Users/js/Dev/my-first-reactor/src/components/utils/HighScores.js",[],"/Users/js/Dev/my-first-reactor/src/redux/store.js",[],"/Users/js/Dev/my-first-reactor/src/reducers/reducers.js",[],"/Users/js/Dev/my-first-reactor/src/components/utils/CounterButton.js",[],"/Users/js/Dev/my-first-reactor/src/redux/selectors.js",[],"/Users/js/Dev/my-first-reactor/src/redux/actions.js",[],{"ruleId":"985","replacedBy":"986"},{"ruleId":"987","replacedBy":"988"},{"ruleId":"989","severity":1,"message":"990","line":7,"column":27,"nodeType":"991","messageId":"992","endLine":7,"endColumn":33},{"ruleId":"989","severity":1,"message":"993","line":44,"column":19,"nodeType":"991","messageId":"992","endLine":44,"endColumn":26},{"ruleId":"989","severity":1,"message":"994","line":45,"column":19,"nodeType":"991","messageId":"992","endLine":45,"endColumn":32},{"ruleId":"995","severity":1,"message":"996","line":94,"column":234,"nodeType":"997","endLine":94,"endColumn":417},{"ruleId":"998","severity":1,"message":"999","line":94,"column":502,"nodeType":"997","endLine":94,"endColumn":578},{"ruleId":"1000","severity":1,"message":"1001","line":57,"column":8,"nodeType":"1002","endLine":57,"endColumn":10,"suggestions":"1003"},{"ruleId":"989","severity":1,"message":"1004","line":3,"column":10,"nodeType":"991","messageId":"992","endLine":3,"endColumn":17},{"ruleId":"1000","severity":1,"message":"1005","line":104,"column":7,"nodeType":"1002","endLine":104,"endColumn":9,"suggestions":"1006"},{"ruleId":"989","severity":1,"message":"1007","line":356,"column":17,"nodeType":"991","messageId":"992","endLine":356,"endColumn":23},{"ruleId":"989","severity":1,"message":"1008","line":481,"column":11,"nodeType":"991","messageId":"992","endLine":481,"endColumn":27},{"ruleId":"989","severity":1,"message":"1009","line":493,"column":11,"nodeType":"991","messageId":"992","endLine":493,"endColumn":27},{"ruleId":"989","severity":1,"message":"1010","line":529,"column":15,"nodeType":"991","messageId":"992","endLine":529,"endColumn":30},{"ruleId":"989","severity":1,"message":"1011","line":540,"column":11,"nodeType":"991","messageId":"992","endLine":540,"endColumn":28},{"ruleId":"989","severity":1,"message":"1012","line":552,"column":11,"nodeType":"991","messageId":"992","endLine":552,"endColumn":21},{"ruleId":"989","severity":1,"message":"1013","line":560,"column":11,"nodeType":"991","messageId":"992","endLine":560,"endColumn":21},{"ruleId":"989","severity":1,"message":"1014","line":568,"column":11,"nodeType":"991","messageId":"992","endLine":568,"endColumn":23},{"ruleId":"989","severity":1,"message":"1015","line":576,"column":11,"nodeType":"991","messageId":"992","endLine":576,"endColumn":23},{"ruleId":"1000","severity":1,"message":"1016","line":97,"column":7,"nodeType":"1002","endLine":97,"endColumn":15,"suggestions":"1017"},{"ruleId":"989","severity":1,"message":"1018","line":142,"column":11,"nodeType":"991","messageId":"992","endLine":142,"endColumn":23},{"ruleId":"989","severity":1,"message":"1019","line":143,"column":11,"nodeType":"991","messageId":"992","endLine":143,"endColumn":26},{"ruleId":"989","severity":1,"message":"1020","line":3,"column":8,"nodeType":"991","messageId":"992","endLine":3,"endColumn":20},{"ruleId":"985","replacedBy":"1021"},{"ruleId":"987","replacedBy":"1022"},{"ruleId":"989","severity":1,"message":"1023","line":4,"column":10,"nodeType":"991","messageId":"992","endLine":4,"endColumn":38},{"ruleId":"1000","severity":1,"message":"1024","line":48,"column":8,"nodeType":"1002","endLine":48,"endColumn":15,"suggestions":"1025"},{"ruleId":"1026","severity":1,"message":"1027","line":55,"column":37,"nodeType":"1028","messageId":"1029","endLine":55,"endColumn":39},{"ruleId":"1030","severity":1,"message":"1031","line":57,"column":39,"nodeType":"1032","messageId":"1033","endLine":57,"endColumn":41},{"ruleId":"1030","severity":1,"message":"1031","line":59,"column":50,"nodeType":"1032","messageId":"1033","endLine":59,"endColumn":52},{"ruleId":"1030","severity":1,"message":"1031","line":65,"column":46,"nodeType":"1032","messageId":"1033","endLine":65,"endColumn":48},{"ruleId":"1000","severity":1,"message":"1034","line":75,"column":8,"nodeType":"1002","endLine":75,"endColumn":17,"suggestions":"1035"},{"ruleId":"989","severity":1,"message":"1036","line":158,"column":14,"nodeType":"991","messageId":"992","endLine":158,"endColumn":22},{"ruleId":"1026","severity":1,"message":"1027","line":185,"column":39,"nodeType":"1028","messageId":"1029","endLine":185,"endColumn":41},{"ruleId":"1026","severity":1,"message":"1027","line":189,"column":40,"nodeType":"1028","messageId":"1029","endLine":189,"endColumn":42},{"ruleId":"1026","severity":1,"message":"1027","line":200,"column":29,"nodeType":"1028","messageId":"1029","endLine":200,"endColumn":31},{"ruleId":"1030","severity":1,"message":"1031","line":236,"column":49,"nodeType":"1032","messageId":"1033","endLine":236,"endColumn":51},{"ruleId":"1030","severity":1,"message":"1031","line":236,"column":73,"nodeType":"1032","messageId":"1033","endLine":236,"endColumn":75},{"ruleId":"989","severity":1,"message":"1037","line":6,"column":8,"nodeType":"991","messageId":"992","endLine":6,"endColumn":21},{"ruleId":"1038","severity":1,"message":"1039","line":32,"column":28,"nodeType":"1002","messageId":"1040","endLine":32,"endColumn":41},{"ruleId":"1038","severity":1,"message":"1039","line":38,"column":28,"nodeType":"1002","messageId":"1040","endLine":38,"endColumn":40},{"ruleId":"1038","severity":1,"message":"1039","line":44,"column":28,"nodeType":"1002","messageId":"1040","endLine":44,"endColumn":40},{"ruleId":"989","severity":1,"message":"1041","line":103,"column":11,"nodeType":"991","messageId":"992","endLine":103,"endColumn":21},{"ruleId":"989","severity":1,"message":"1042","line":106,"column":12,"nodeType":"991","messageId":"992","endLine":106,"endColumn":21},{"ruleId":"989","severity":1,"message":"1043","line":106,"column":23,"nodeType":"991","messageId":"992","endLine":106,"endColumn":35},{"ruleId":"989","severity":1,"message":"1044","line":107,"column":12,"nodeType":"991","messageId":"992","endLine":107,"endColumn":25},{"ruleId":"989","severity":1,"message":"1045","line":107,"column":27,"nodeType":"991","messageId":"992","endLine":107,"endColumn":43},{"ruleId":"989","severity":1,"message":"1046","line":120,"column":12,"nodeType":"991","messageId":"992","endLine":120,"endColumn":22},{"ruleId":"1030","severity":1,"message":"1031","line":141,"column":22,"nodeType":"1032","messageId":"1033","endLine":141,"endColumn":24},{"ruleId":"1030","severity":1,"message":"1031","line":143,"column":29,"nodeType":"1032","messageId":"1033","endLine":143,"endColumn":31},{"ruleId":"1030","severity":1,"message":"1031","line":145,"column":29,"nodeType":"1032","messageId":"1033","endLine":145,"endColumn":31},{"ruleId":"1030","severity":1,"message":"1031","line":147,"column":29,"nodeType":"1032","messageId":"1033","endLine":147,"endColumn":31},{"ruleId":"1030","severity":1,"message":"1031","line":154,"column":18,"nodeType":"1032","messageId":"1033","endLine":154,"endColumn":20},{"ruleId":"1030","severity":1,"message":"1031","line":159,"column":18,"nodeType":"1032","messageId":"1033","endLine":159,"endColumn":20},{"ruleId":"1000","severity":1,"message":"1047","line":162,"column":8,"nodeType":"1002","endLine":162,"endColumn":14,"suggestions":"1048"},{"ruleId":"1030","severity":1,"message":"1031","line":165,"column":18,"nodeType":"1032","messageId":"1033","endLine":165,"endColumn":20},{"ruleId":"1000","severity":1,"message":"1049","line":168,"column":8,"nodeType":"1002","endLine":168,"endColumn":16,"suggestions":"1050"},{"ruleId":"1000","severity":1,"message":"1051","line":213,"column":8,"nodeType":"1002","endLine":213,"endColumn":10,"suggestions":"1052"},{"ruleId":"989","severity":1,"message":"1053","line":225,"column":11,"nodeType":"991","messageId":"992","endLine":225,"endColumn":23},{"ruleId":"989","severity":1,"message":"1054","line":248,"column":11,"nodeType":"991","messageId":"992","endLine":248,"endColumn":23},{"ruleId":"1026","severity":1,"message":"1027","line":253,"column":33,"nodeType":"1028","messageId":"1029","endLine":253,"endColumn":35},{"ruleId":"989","severity":1,"message":"1055","line":348,"column":15,"nodeType":"991","messageId":"992","endLine":348,"endColumn":17},{"ruleId":"1026","severity":1,"message":"1027","line":363,"column":37,"nodeType":"1028","messageId":"1029","endLine":363,"endColumn":39},{"ruleId":"1026","severity":1,"message":"1027","line":368,"column":37,"nodeType":"1028","messageId":"1029","endLine":368,"endColumn":39},{"ruleId":"1026","severity":1,"message":"1027","line":380,"column":44,"nodeType":"1028","messageId":"1029","endLine":380,"endColumn":46},{"ruleId":"1026","severity":1,"message":"1027","line":507,"column":41,"nodeType":"1028","messageId":"1029","endLine":507,"endColumn":43},{"ruleId":"989","severity":1,"message":"1056","line":522,"column":11,"nodeType":"991","messageId":"992","endLine":522,"endColumn":24},{"ruleId":"989","severity":1,"message":"1057","line":531,"column":15,"nodeType":"991","messageId":"992","endLine":531,"endColumn":20},{"ruleId":"1026","severity":1,"message":"1027","line":636,"column":48,"nodeType":"1028","messageId":"1029","endLine":636,"endColumn":50},{"ruleId":"1030","severity":1,"message":"1058","line":639,"column":52,"nodeType":"1032","messageId":"1033","endLine":639,"endColumn":54},{"ruleId":"989","severity":1,"message":"1059","line":652,"column":15,"nodeType":"991","messageId":"992","endLine":652,"endColumn":33},{"ruleId":"989","severity":1,"message":"1060","line":657,"column":15,"nodeType":"991","messageId":"992","endLine":657,"endColumn":27},{"ruleId":"989","severity":1,"message":"1061","line":668,"column":19,"nodeType":"991","messageId":"992","endLine":668,"endColumn":27},{"ruleId":"989","severity":1,"message":"1062","line":753,"column":15,"nodeType":"991","messageId":"992","endLine":753,"endColumn":26},{"ruleId":"1000","severity":1,"message":"1063","line":347,"column":7,"nodeType":"1002","endLine":347,"endColumn":21,"suggestions":"1064"},{"ruleId":"1000","severity":1,"message":"1065","line":351,"column":7,"nodeType":"1002","endLine":351,"endColumn":9,"suggestions":"1066"},{"ruleId":"1000","severity":1,"message":"1067","line":354,"column":7,"nodeType":"1002","endLine":354,"endColumn":19,"suggestions":"1068"},{"ruleId":"989","severity":1,"message":"1069","line":614,"column":11,"nodeType":"991","messageId":"992","endLine":614,"endColumn":29},{"ruleId":"989","severity":1,"message":"1070","line":1,"column":10,"nodeType":"991","messageId":"992","endLine":1,"endColumn":16},{"ruleId":"1026","severity":1,"message":"1071","line":12,"column":56,"nodeType":"1028","messageId":"1072","endLine":12,"endColumn":58},{"ruleId":"989","severity":1,"message":"1073","line":7,"column":8,"nodeType":"991","messageId":"992","endLine":7,"endColumn":16},{"ruleId":"989","severity":1,"message":"1074","line":15,"column":20,"nodeType":"991","messageId":"992","endLine":15,"endColumn":29},{"ruleId":"1030","severity":1,"message":"1031","line":61,"column":57,"nodeType":"1032","messageId":"1033","endLine":61,"endColumn":59},{"ruleId":"1000","severity":1,"message":"1075","line":49,"column":6,"nodeType":"1002","endLine":49,"endColumn":8,"suggestions":"1076"},{"ruleId":"989","severity":1,"message":"1077","line":34,"column":11,"nodeType":"991","messageId":"992","endLine":34,"endColumn":22},{"ruleId":"1078","severity":1,"message":"1079","line":46,"column":55,"nodeType":"1080","messageId":"1081","endLine":46,"endColumn":89},{"ruleId":"1078","severity":1,"message":"1079","line":48,"column":56,"nodeType":"1080","messageId":"1081","endLine":48,"endColumn":90},{"ruleId":"1078","severity":1,"message":"1079","line":50,"column":55,"nodeType":"1080","messageId":"1081","endLine":50,"endColumn":89},{"ruleId":"1078","severity":1,"message":"1079","line":52,"column":56,"nodeType":"1080","messageId":"1081","endLine":52,"endColumn":90},{"ruleId":"1078","severity":1,"message":"1079","line":54,"column":55,"nodeType":"1080","messageId":"1081","endLine":54,"endColumn":89},{"ruleId":"1078","severity":1,"message":"1079","line":56,"column":56,"nodeType":"1080","messageId":"1081","endLine":56,"endColumn":90},{"ruleId":"1078","severity":1,"message":"1079","line":58,"column":55,"nodeType":"1080","messageId":"1081","endLine":58,"endColumn":89},{"ruleId":"989","severity":1,"message":"990","line":4,"column":27,"nodeType":"991","messageId":"992","endLine":4,"endColumn":33},{"ruleId":"989","severity":1,"message":"1082","line":7,"column":8,"nodeType":"991","messageId":"992","endLine":7,"endColumn":17},{"ruleId":"989","severity":1,"message":"1007","line":11,"column":182,"nodeType":"991","messageId":"992","endLine":11,"endColumn":188},{"ruleId":"989","severity":1,"message":"1083","line":2,"column":8,"nodeType":"991","messageId":"992","endLine":2,"endColumn":14},{"ruleId":"989","severity":1,"message":"990","line":7,"column":27,"nodeType":"991","messageId":"992","endLine":7,"endColumn":33},{"ruleId":"989","severity":1,"message":"1084","line":18,"column":12,"nodeType":"991","messageId":"992","endLine":18,"endColumn":26},{"ruleId":"989","severity":1,"message":"1085","line":19,"column":18,"nodeType":"991","messageId":"992","endLine":19,"endColumn":25},{"ruleId":"989","severity":1,"message":"1086","line":21,"column":11,"nodeType":"991","messageId":"992","endLine":21,"endColumn":23},{"ruleId":"1087","severity":1,"message":"1088","line":35,"column":8,"nodeType":"1089","messageId":"1090","endLine":35,"endColumn":47},{"ruleId":"1026","severity":1,"message":"1027","line":45,"column":37,"nodeType":"1028","messageId":"1029","endLine":45,"endColumn":39},{"ruleId":"989","severity":1,"message":"1091","line":76,"column":11,"nodeType":"991","messageId":"992","endLine":76,"endColumn":21},{"ruleId":"989","severity":1,"message":"1092","line":108,"column":15,"nodeType":"991","messageId":"992","endLine":108,"endColumn":26},{"ruleId":"989","severity":1,"message":"1093","line":1,"column":27,"nodeType":"991","messageId":"992","endLine":1,"endColumn":36},{"ruleId":"989","severity":1,"message":"1094","line":2,"column":8,"nodeType":"991","messageId":"992","endLine":2,"endColumn":23},{"ruleId":"989","severity":1,"message":"1095","line":8,"column":11,"nodeType":"991","messageId":"992","endLine":8,"endColumn":21},{"ruleId":"989","severity":1,"message":"1096","line":24,"column":29,"nodeType":"991","messageId":"992","endLine":24,"endColumn":42},{"ruleId":"1030","severity":1,"message":"1031","line":91,"column":30,"nodeType":"1032","messageId":"1033","endLine":91,"endColumn":32},{"ruleId":"989","severity":1,"message":"1093","line":1,"column":27,"nodeType":"991","messageId":"992","endLine":1,"endColumn":36},{"ruleId":"989","severity":1,"message":"1097","line":6,"column":21,"nodeType":"991","messageId":"992","endLine":6,"endColumn":31},{"ruleId":"989","severity":1,"message":"1098","line":9,"column":11,"nodeType":"991","messageId":"992","endLine":9,"endColumn":21},{"ruleId":"1026","severity":1,"message":"1027","line":46,"column":41,"nodeType":"1028","messageId":"1029","endLine":46,"endColumn":43},{"ruleId":"1030","severity":1,"message":"1058","line":129,"column":56,"nodeType":"1032","messageId":"1033","endLine":129,"endColumn":58},{"ruleId":"1030","severity":1,"message":"1058","line":140,"column":57,"nodeType":"1032","messageId":"1033","endLine":140,"endColumn":59},{"ruleId":"1030","severity":1,"message":"1058","line":158,"column":16,"nodeType":"1032","messageId":"1033","endLine":158,"endColumn":18},{"ruleId":"1030","severity":1,"message":"1058","line":172,"column":17,"nodeType":"1032","messageId":"1033","endLine":172,"endColumn":19},{"ruleId":"989","severity":1,"message":"1099","line":12,"column":7,"nodeType":"991","messageId":"992","endLine":12,"endColumn":20},{"ruleId":"989","severity":1,"message":"1100","line":11,"column":12,"nodeType":"991","messageId":"992","endLine":11,"endColumn":24},{"ruleId":"989","severity":1,"message":"1101","line":11,"column":26,"nodeType":"991","messageId":"992","endLine":11,"endColumn":41},{"ruleId":"989","severity":1,"message":"1004","line":2,"column":10,"nodeType":"991","messageId":"992","endLine":2,"endColumn":17},{"ruleId":"989","severity":1,"message":"1102","line":3,"column":10,"nodeType":"991","messageId":"992","endLine":3,"endColumn":16},{"ruleId":"989","severity":1,"message":"1103","line":3,"column":18,"nodeType":"991","messageId":"992","endLine":3,"endColumn":25},{"ruleId":"985","replacedBy":"1104"},{"ruleId":"987","replacedBy":"1105"},{"ruleId":"989","severity":1,"message":"1106","line":8,"column":9,"nodeType":"991","messageId":"992","endLine":8,"endColumn":17},{"ruleId":"989","severity":1,"message":"1107","line":9,"column":9,"nodeType":"991","messageId":"992","endLine":9,"endColumn":19},{"ruleId":"989","severity":1,"message":"1108","line":10,"column":9,"nodeType":"991","messageId":"992","endLine":10,"endColumn":13},{"ruleId":"989","severity":1,"message":"1109","line":11,"column":9,"nodeType":"991","messageId":"992","endLine":11,"endColumn":11},{"ruleId":"989","severity":1,"message":"1110","line":12,"column":9,"nodeType":"991","messageId":"992","endLine":12,"endColumn":15},{"ruleId":"1000","severity":1,"message":"1111","line":51,"column":6,"nodeType":"1002","endLine":51,"endColumn":8,"suggestions":"1112"},{"ruleId":"989","severity":1,"message":"1093","line":1,"column":27,"nodeType":"991","messageId":"992","endLine":1,"endColumn":36},{"ruleId":"1000","severity":1,"message":"1113","line":51,"column":6,"nodeType":"1002","endLine":51,"endColumn":140,"suggestions":"1114"},{"ruleId":"989","severity":1,"message":"1115","line":7,"column":9,"nodeType":"991","messageId":"992","endLine":7,"endColumn":18},{"ruleId":"989","severity":1,"message":"1116","line":70,"column":10,"nodeType":"991","messageId":"992","endLine":70,"endColumn":19},{"ruleId":"989","severity":1,"message":"1117","line":72,"column":10,"nodeType":"991","messageId":"992","endLine":72,"endColumn":25},{"ruleId":"989","severity":1,"message":"1118","line":72,"column":27,"nodeType":"991","messageId":"992","endLine":72,"endColumn":45},{"ruleId":"989","severity":1,"message":"1119","line":73,"column":10,"nodeType":"991","messageId":"992","endLine":73,"endColumn":18},{"ruleId":"989","severity":1,"message":"1120","line":73,"column":20,"nodeType":"991","messageId":"992","endLine":73,"endColumn":31},{"ruleId":"1000","severity":1,"message":"1121","line":91,"column":6,"nodeType":"1002","endLine":91,"endColumn":8,"suggestions":"1122"},{"ruleId":"1000","severity":1,"message":"1123","line":101,"column":6,"nodeType":"1002","endLine":101,"endColumn":8,"suggestions":"1124"},{"ruleId":"1000","severity":1,"message":"1121","line":118,"column":6,"nodeType":"1002","endLine":118,"endColumn":16,"suggestions":"1125"},{"ruleId":"989","severity":1,"message":"1126","line":125,"column":9,"nodeType":"991","messageId":"992","endLine":125,"endColumn":30},{"ruleId":"989","severity":1,"message":"1127","line":196,"column":9,"nodeType":"991","messageId":"992","endLine":196,"endColumn":29},{"ruleId":"989","severity":1,"message":"1128","line":208,"column":9,"nodeType":"991","messageId":"992","endLine":208,"endColumn":25},{"ruleId":"989","severity":1,"message":"1129","line":8,"column":11,"nodeType":"991","messageId":"992","endLine":8,"endColumn":15},{"ruleId":"1000","severity":1,"message":"1130","line":59,"column":8,"nodeType":"1002","endLine":59,"endColumn":18,"suggestions":"1131"},{"ruleId":"989","severity":1,"message":"1132","line":143,"column":11,"nodeType":"991","messageId":"992","endLine":143,"endColumn":24},{"ruleId":"989","severity":1,"message":"1133","line":257,"column":15,"nodeType":"991","messageId":"992","endLine":257,"endColumn":22},{"ruleId":"989","severity":1,"message":"1134","line":265,"column":19,"nodeType":"991","messageId":"992","endLine":265,"endColumn":29},{"ruleId":"989","severity":1,"message":"1135","line":1,"column":27,"nodeType":"991","messageId":"992","endLine":1,"endColumn":33},{"ruleId":"989","severity":1,"message":"1136","line":4,"column":10,"nodeType":"991","messageId":"992","endLine":4,"endColumn":19},{"ruleId":"1000","severity":1,"message":"1137","line":53,"column":6,"nodeType":"1002","endLine":53,"endColumn":8,"suggestions":"1138"},{"ruleId":"989","severity":1,"message":"1139","line":283,"column":9,"nodeType":"991","messageId":"992","endLine":283,"endColumn":25},{"ruleId":"989","severity":1,"message":"1140","line":345,"column":9,"nodeType":"991","messageId":"992","endLine":345,"endColumn":20},{"ruleId":"989","severity":1,"message":"1141","line":4,"column":12,"nodeType":"991","messageId":"992","endLine":4,"endColumn":23},{"ruleId":"985","replacedBy":"1142"},{"ruleId":"987","replacedBy":"1143"},{"ruleId":"1000","severity":1,"message":"1144","line":48,"column":8,"nodeType":"1002","endLine":48,"endColumn":10,"suggestions":"1145"},{"ruleId":"1000","severity":1,"message":"1146","line":53,"column":8,"nodeType":"1002","endLine":53,"endColumn":23,"suggestions":"1147"},{"ruleId":"1030","severity":1,"message":"1031","line":41,"column":18,"nodeType":"1032","messageId":"1033","endLine":41,"endColumn":20},{"ruleId":"1000","severity":1,"message":"1148","line":53,"column":8,"nodeType":"1002","endLine":53,"endColumn":17,"suggestions":"1149"},{"ruleId":"989","severity":1,"message":"1150","line":72,"column":11,"nodeType":"991","messageId":"992","endLine":72,"endColumn":20},{"ruleId":"989","severity":1,"message":"1151","line":91,"column":11,"nodeType":"991","messageId":"992","endLine":91,"endColumn":23},{"ruleId":"989","severity":1,"message":"1152","line":6,"column":9,"nodeType":"991","messageId":"992","endLine":6,"endColumn":14},{"ruleId":"989","severity":1,"message":"1153","line":7,"column":10,"nodeType":"991","messageId":"992","endLine":7,"endColumn":21},{"ruleId":"989","severity":1,"message":"1154","line":7,"column":23,"nodeType":"991","messageId":"992","endLine":7,"endColumn":37},{"ruleId":"989","severity":1,"message":"1155","line":9,"column":9,"nodeType":"991","messageId":"992","endLine":9,"endColumn":15},{"ruleId":"989","severity":1,"message":"1156","line":43,"column":13,"nodeType":"991","messageId":"992","endLine":43,"endColumn":19},{"ruleId":"989","severity":1,"message":"1157","line":15,"column":11,"nodeType":"991","messageId":"992","endLine":15,"endColumn":17},{"ruleId":"989","severity":1,"message":"1158","line":16,"column":11,"nodeType":"991","messageId":"992","endLine":16,"endColumn":18},{"ruleId":"989","severity":1,"message":"1159","line":17,"column":11,"nodeType":"991","messageId":"992","endLine":17,"endColumn":18},{"ruleId":"989","severity":1,"message":"1160","line":18,"column":11,"nodeType":"991","messageId":"992","endLine":18,"endColumn":18},{"ruleId":"989","severity":1,"message":"1161","line":19,"column":11,"nodeType":"991","messageId":"992","endLine":19,"endColumn":18},{"ruleId":"989","severity":1,"message":"1162","line":20,"column":11,"nodeType":"991","messageId":"992","endLine":20,"endColumn":25},{"ruleId":"1030","severity":1,"message":"1031","line":34,"column":32,"nodeType":"1032","messageId":"1033","endLine":34,"endColumn":34},{"ruleId":"1163","severity":1,"message":"1164","line":40,"column":5,"nodeType":"991","messageId":"1165","endLine":40,"endColumn":17},{"ruleId":"989","severity":1,"message":"1166","line":6,"column":10,"nodeType":"991","messageId":"992","endLine":6,"endColumn":26},{"ruleId":"989","severity":1,"message":"1167","line":6,"column":28,"nodeType":"991","messageId":"992","endLine":6,"endColumn":47},{"ruleId":"989","severity":1,"message":"1168","line":7,"column":11,"nodeType":"991","messageId":"992","endLine":7,"endColumn":19},{"ruleId":"1030","severity":1,"message":"1031","line":235,"column":39,"nodeType":"1032","messageId":"1033","endLine":235,"endColumn":41},{"ruleId":"989","severity":1,"message":"1169","line":317,"column":17,"nodeType":"991","messageId":"992","endLine":317,"endColumn":21},{"ruleId":"989","severity":1,"message":"1169","line":321,"column":17,"nodeType":"991","messageId":"992","endLine":321,"endColumn":21},{"ruleId":"989","severity":1,"message":"1169","line":325,"column":17,"nodeType":"991","messageId":"992","endLine":325,"endColumn":21},{"ruleId":"989","severity":1,"message":"1170","line":420,"column":15,"nodeType":"991","messageId":"992","endLine":420,"endColumn":27},{"ruleId":"1030","severity":1,"message":"1031","line":422,"column":18,"nodeType":"1032","messageId":"1033","endLine":422,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1172","line":560,"column":41,"nodeType":"997","messageId":"1173","endLine":560,"endColumn":180,"fix":"1174"},{"ruleId":"989","severity":1,"message":"1175","line":4,"column":8,"nodeType":"991","messageId":"992","endLine":4,"endColumn":24},{"ruleId":"989","severity":1,"message":"1176","line":11,"column":11,"nodeType":"991","messageId":"992","endLine":11,"endColumn":16},{"ruleId":"989","severity":1,"message":"1177","line":11,"column":18,"nodeType":"991","messageId":"992","endLine":11,"endColumn":26},{"ruleId":"989","severity":1,"message":"1178","line":41,"column":11,"nodeType":"991","messageId":"992","endLine":41,"endColumn":24},{"ruleId":"1026","severity":1,"message":"1027","line":64,"column":44,"nodeType":"1028","messageId":"1029","endLine":64,"endColumn":46},{"ruleId":"1030","severity":1,"message":"1058","line":67,"column":48,"nodeType":"1032","messageId":"1033","endLine":67,"endColumn":50},{"ruleId":"989","severity":1,"message":"1059","line":80,"column":11,"nodeType":"991","messageId":"992","endLine":80,"endColumn":29},{"ruleId":"989","severity":1,"message":"1061","line":87,"column":15,"nodeType":"991","messageId":"992","endLine":87,"endColumn":23},{"ruleId":"1026","severity":1,"message":"1027","line":124,"column":41,"nodeType":"1028","messageId":"1029","endLine":124,"endColumn":43},{"ruleId":"985","replacedBy":"1179"},{"ruleId":"987","replacedBy":"1180"},{"ruleId":"989","severity":1,"message":"1181","line":1,"column":8,"nodeType":"991","messageId":"992","endLine":1,"endColumn":13},{"ruleId":"989","severity":1,"message":"1182","line":1,"column":17,"nodeType":"991","messageId":"992","endLine":1,"endColumn":25},{"ruleId":"989","severity":1,"message":"1093","line":1,"column":27,"nodeType":"991","messageId":"992","endLine":1,"endColumn":36},{"ruleId":"989","severity":1,"message":"1183","line":3,"column":8,"nodeType":"991","messageId":"992","endLine":3,"endColumn":20},{"ruleId":"989","severity":1,"message":"1184","line":8,"column":11,"nodeType":"991","messageId":"992","endLine":8,"endColumn":23},{"ruleId":"1026","severity":1,"message":"1027","line":12,"column":41,"nodeType":"1028","messageId":"1029","endLine":12,"endColumn":43},{"ruleId":"989","severity":1,"message":"1185","line":18,"column":11,"nodeType":"991","messageId":"992","endLine":18,"endColumn":19},{"ruleId":"989","severity":1,"message":"1186","line":77,"column":11,"nodeType":"991","messageId":"992","endLine":77,"endColumn":19},{"ruleId":"989","severity":1,"message":"1178","line":84,"column":11,"nodeType":"991","messageId":"992","endLine":84,"endColumn":24},{"ruleId":"1026","severity":1,"message":"1027","line":11,"column":36,"nodeType":"1028","messageId":"1029","endLine":11,"endColumn":38},{"ruleId":"1030","severity":1,"message":"1031","line":12,"column":33,"nodeType":"1032","messageId":"1033","endLine":12,"endColumn":35},{"ruleId":"1030","severity":1,"message":"1058","line":14,"column":40,"nodeType":"1032","messageId":"1033","endLine":14,"endColumn":42},{"ruleId":"1030","severity":1,"message":"1058","line":14,"column":65,"nodeType":"1032","messageId":"1033","endLine":14,"endColumn":67},{"ruleId":"1026","severity":1,"message":"1027","line":24,"column":36,"nodeType":"1028","messageId":"1029","endLine":24,"endColumn":38},{"ruleId":"989","severity":1,"message":"1187","line":4,"column":8,"nodeType":"991","messageId":"992","endLine":4,"endColumn":24},{"ruleId":"989","severity":1,"message":"1188","line":1,"column":38,"nodeType":"991","messageId":"992","endLine":1,"endColumn":50},"no-native-reassign",["1189"],"no-negated-in-lhs",["1190"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","'buttonClasses' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location' and 'status.log'. Either include them or remove the dependency array.","ArrayExpression",["1191"],"'connect' is defined but never used.","React Hook useEffect has a missing dependency: 'tick'. Either include it or remove the dependency array.",["1192"],"'height' is assigned a value but never used.","'sortedNorthSpots' is assigned a value but never used.","'sortedSouthSpots' is assigned a value but never used.","'sortedLocations' is assigned a value but never used.","'matchingLocations' is assigned a value but never used.","'tideButton' is assigned a value but never used.","'windButton' is assigned a value but never used.","'swell1Button' is assigned a value but never used.","'swell2Button' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getDaysInLastMonth', 'getDaysInMonth', 'time.date', 'time.hours', 'time.monthLong', and 'time.monthNextLong'. Either include them or remove the dependency array.",["1193"],"'displayDebug' is assigned a value but never used.","'displayDayDebug' is assigned a value but never used.","'LoginControl' is defined but never used.",["1189"],["1190"],"'SettingsApplicationsOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'storeIt'. Either include it or remove the dependency array.",["1194"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'todos'. Either include it or remove the dependency array.",["1195"],"'makeMenu' is defined but never used.","'SurfingScores' is defined but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'initScores' is assigned a value but never used.","'waveCount' is assigned a value but never used.","'setWaveCount' is assigned a value but never used.","'surfersScores' is assigned a value but never used.","'setSurfersScores' is assigned a value but never used.","'gameStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'winner'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setHeatLength' needs the current value of 'winner'.",["1196"],"React Hook useEffect has a missing dependency: 'game'. Either include it or remove the dependency array.",["1197"],"React Hook useEffect has missing dependencies: 'golfScoring', 'heatLog', 'initHeatLog', 'newPlayer', and 'players'. Either include them or remove the dependency array.",["1198"],"'playerScores' is assigned a value but never used.","'getGolfTotal' is assigned a value but never used.","'id' is assigned a value but never used.","'getHeatTotals' is assigned a value but never used.","'score' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'get2ndHighestScore' is assigned a value but never used.","'getSurfScore' is assigned a value but never used.","'theScore' is assigned a value but never used.","'editGolfPar' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getItems' and 'getTotal'. Either include them or remove the dependency array.",["1199"],"React Hook useEffect has a missing dependency: 'updateAisles'. Either include it or remove the dependency array.",["1200"],"React Hook useEffect has a missing dependency: 'getTotal'. Either include it or remove the dependency array.",["1201"],"'toggleProductEntry' is assigned a value but never used.","'render' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'BuoyData' is defined but never used.","'setStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getOceanData' and 'status.oceanData'. Either include them or remove the dependency array.",["1202"],"'getTideIcon' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'createLog' is defined but never used.","'Dialog' is defined but never used.","'debouncedPrice' is assigned a value but never used.","'setItem' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'setDisplay' is assigned a value but never used.","'setThePrice' is assigned a value but never used.","'useEffect' is defined but never used.","'LongPressButton' is defined but never used.","'indexArray' is assigned a value but never used.","'setScoreTotal' is assigned a value but never used.","'setPlayers' is assigned a value but never used.","'cricketKey' is assigned a value but never used.","'selectorColor' is assigned a value but never used.","'filterByWind' is assigned a value but never used.","'setFilterByWind' is assigned a value but never used.","'signIn' is defined but never used.","'signOut' is defined but never used.",["1189"],["1190"],"'endpoint' is assigned a value but never used.","'access_key' is assigned a value but never used.","'from' is assigned a value but never used.","'to' is assigned a value but never used.","'amount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'templateData'. Either include it or remove the dependency array.",["1203"],"React Hook useEffect has missing dependencies: 'status.endTime1', 'status.endTime2', 'status.videoPlayer1Ref', and 'status.videoPlayer2Ref'. Either include them or remove the dependency array.",["1204"],"'countries' is assigned a value but never used.","'usdAmount' is assigned a value but never used.","'convertedAmount' is assigned a value but never used.","'setConvertedAmount' is assigned a value but never used.","'settings' is assigned a value but never used.","'setSettings' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTotalExpenses'. Either include it or remove the dependency array.",["1205"],"React Hook useEffect has missing dependencies: 'defaultExchangeRates' and 'exchangeRates.IDR'. Either include them or remove the dependency array.",["1206"],["1207"],"'handleInputRateChange' is assigned a value but never used.","'handleCurrencyChange' is assigned a value but never used.","'reversedExpenses' is assigned a value but never used.","'half' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleAddProject'. Either include it or remove the dependency array.",["1208"],"'handleAddTask' is assigned a value but never used.","'session' is assigned a value but never used.","'timeString' is assigned a value but never used.","'useRef' is defined but never used.","'TextField' is defined but never used.","React Hook useEffect has missing dependencies: 'playerStatus.endTime' and 'playerStatus.videoRef'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentTime' needs the current value of 'playerStatus.videoRef'.",["1209"],"'handleTimeUpdate' is assigned a value but never used.","'timeDisplay' is assigned a value but never used.","'currentTime' is assigned a value but never used.",["1189"],["1190"],"React Hook useEffect has missing dependencies: 'defaultRates', 'exchangeRates', and 'onExchangeRatesChange'. Either include them or remove the dependency array. If 'onExchangeRatesChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1210"],"React Hook useEffect has a missing dependency: 'onExchangeRatesChange'. Either include it or remove the dependency array. If 'onExchangeRatesChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1211"],"React Hook useEffect has a missing dependency: 'heatLength'. Either include it or remove the dependency array.",["1212"],"'surfClass' is assigned a value but never used.","'jerseyColors' is assigned a value but never used.","'fetch' is assigned a value but never used.","'swellHeight' is assigned a value but never used.","'setSwellHeight' is assigned a value but never used.","'buoyId' is assigned a value but never used.","'spaces' is assigned a value but never used.","'isTree' is assigned a value but never used.","'isTree1' is assigned a value but never used.","'isTree2' is assigned a value but never used.","'isTree3' is assigned a value but never used.","'isTree4' is assigned a value but never used.","'isTreeComplete' is assigned a value but never used.","no-redeclare","'audioContext' is already defined.","redeclared","'pricePerLiterUSD' is assigned a value but never used.","'setPricePerLiterUSD' is assigned a value but never used.","'tempData' is assigned a value but never used.","'name' is assigned a value but never used.","'previousDate' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"1213","text":"1214"},"'SurfScoringLogic' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'getScoreTotal' is assigned a value but never used.",["1189"],["1190"],"'React' is defined but never used.","'useState' is defined but never used.","'jerseyColors' is defined but never used.","'getSurfTotal' is assigned a value but never used.","'getScore' is assigned a value but never used.","'position' is assigned a value but never used.","'getPriorityColor' is defined but never used.","'losePriority' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1215","fix":"1216"},{"desc":"1217","fix":"1218"},{"desc":"1219","fix":"1220"},{"desc":"1221","fix":"1222"},{"desc":"1223","fix":"1224"},{"desc":"1225","fix":"1226"},{"desc":"1225","fix":"1227"},{"desc":"1228","fix":"1229"},{"desc":"1230","fix":"1231"},{"desc":"1232","fix":"1233"},{"desc":"1234","fix":"1235"},{"desc":"1236","fix":"1237"},{"desc":"1238","fix":"1239"},{"desc":"1240","fix":"1241"},{"desc":"1242","fix":"1243"},{"desc":"1244","fix":"1245"},{"desc":"1246","fix":"1247"},{"desc":"1248","fix":"1249"},{"desc":"1250","fix":"1251"},{"desc":"1252","fix":"1253"},{"desc":"1254","fix":"1255"},{"desc":"1256","fix":"1257"},[30606,30606]," rel=\"noreferrer\"","Update the dependencies array to be: [location, status.log]",{"range":"1258","text":"1259"},"Update the dependencies array to be: [tick]",{"range":"1260","text":"1261"},"Update the dependencies array to be: [getDaysInLastMonth, getDaysInMonth, status, time.date, time.hours, time.monthLong, time.monthNextLong]",{"range":"1262","text":"1263"},"Update the dependencies array to be: [storeIt, todos]",{"range":"1264","text":"1265"},"Update the dependencies array to be: [timerOn, todos]",{"range":"1266","text":"1267"},"Update the dependencies array to be: [game, winner]",{"range":"1268","text":"1269"},{"range":"1270","text":"1269"},"Update the dependencies array to be: [golfScoring, heatLog, initHeatLog, newPlayer, players]",{"range":"1271","text":"1272"},"Update the dependencies array to be: [getItems, getTotal, status.todos]",{"range":"1273","text":"1274"},"Update the dependencies array to be: [updateAisles]",{"range":"1275","text":"1276"},"Update the dependencies array to be: [getTotal, status.tax]",{"range":"1277","text":"1278"},"Update the dependencies array to be: [getOceanData, status.oceanData]",{"range":"1279","text":"1280"},"Update the dependencies array to be: [templateData]",{"range":"1281","text":"1282"},"Update the dependencies array to be: [status.isPlaying, status.isSlowRewind, status.isMediumRewind, status.isRewind, status.startTime1, status.startTime2, status.videoRef, status.endTime1, status.endTime2, status.videoPlayer1Ref, status.videoPlayer2Ref]",{"range":"1283","text":"1284"},"Update the dependencies array to be: [getTotalExpenses]",{"range":"1285","text":"1286"},"Update the dependencies array to be: [defaultExchangeRates, exchangeRates.IDR]",{"range":"1287","text":"1288"},"Update the dependencies array to be: [expenses, getTotalExpenses]",{"range":"1289","text":"1290"},"Update the dependencies array to be: [handleAddProject, tracking]",{"range":"1291","text":"1292"},"Update the dependencies array to be: [playerStatus.endTime, playerStatus.videoRef]",{"range":"1293","text":"1294"},"Update the dependencies array to be: [defaultRates, exchangeRates, onExchangeRatesChange]",{"range":"1295","text":"1296"},"Update the dependencies array to be: [exchangeRates, onExchangeRatesChange]",{"range":"1297","text":"1298"},"Update the dependencies array to be: [heatLength, timesUp]",{"range":"1299","text":"1300"},[2559,2561],"[location, status.log]",[4852,4854],"[tick]",[4998,5006],"[getDaysInLastMonth, getDaysInMonth, status, time.date, time.hours, time.monthLong, time.monthNextLong]",[1736,1743],"[storeIt, todos]",[2804,2813],"[timerOn, todos]",[7435,7441],"[game, winner]",[7603,7611],[9623,9625],"[golfScoring, heatLog, initHeatLog, newPlayer, players]",[15354,15368],"[getItems, getTotal, status.todos]",[15428,15430],"[updateAisles]",[15481,15493],"[getTotal, status.tax]",[1964,1966],"[getOceanData, status.oceanData]",[1520,1522],"[templateData]",[2871,3005],"[status.isPlaying, status.isSlowRewind, status.isMediumRewind, status.isRewind, status.startTime1, status.startTime2, status.videoRef, status.endTime1, status.endTime2, status.videoPlayer1Ref, status.videoPlayer2Ref]",[2183,2185],"[getTotalExpenses]",[2490,2492],"[defaultExchangeRates, exchangeRates.IDR]",[2975,2985],"[expenses, getTotalExpenses]",[2422,2432],"[handleAddProject, tracking]",[2026,2028],"[playerStatus.endTime, playerStatus.videoRef]",[2057,2059],"[defaultRates, exchangeRates, onExchangeRatesChange]",[2216,2231],"[exchangeRates, onExchangeRatesChange]",[1938,1947],"[heatLength, timesUp]"]